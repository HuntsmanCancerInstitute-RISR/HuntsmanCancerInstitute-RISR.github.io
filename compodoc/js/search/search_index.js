var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.1.6","fields":["title","body"],"fieldVectors":[["title/dependencies.html",[0,2.2,1,2.183]],["body/dependencies.html",[1,2.712,2,3.408,3,3.926,4,3.408,5,0.031,6,4.713,7,4.713,8,4.713,9,0.029,10,0.029]],["title/index.html",[11,1.693,12,1.91,13,0.427]],["body/index.html",[0,0.75,1,0.518,2,1.541,5,0.029,9,0.008,10,0.008,11,0.577,14,0.901,15,0.901,16,3.835,17,0.901,18,2.131,19,1.589,20,0.901,21,0.901,22,0.901,23,2.131,24,2.444,25,2.933,26,0.901,27,0.901,28,0.901,29,3.329,30,0.901,31,0.651,32,0.651,33,2.807,34,0.75,35,2.131,36,0.901,37,1.589,38,0.901,39,0.901,40,0.488,41,0.518,42,0.901,43,0.901,44,1.323,45,0.901,46,0.901,47,0.901,48,0.901,49,0.901,50,0.75,51,0.901,52,2.913,53,0.901,54,2.131,55,2.697,56,0.901,57,0.901,58,1.589,59,0.901,60,0.901,61,0.901,62,2.933,63,0.75,64,1.149,65,2.351,66,0.901,67,3.404,68,2.351,69,0.75,70,1.589,71,1.589,72,3.915,73,0.901,74,2.131,75,1.589,76,0.901,77,1.589,78,0.901,79,3.219,80,3.497,81,0.901,82,0.901,83,2.913,84,2.142,85,0.901,86,1.589,87,0.067,88,2.076,89,2.955,90,0.75,91,1.589,92,0.901,93,1.323,94,0.901,95,0.901,96,0.901,97,0.901,98,2.131,99,1.226,100,0.901,101,0.577,102,2.571,103,1.589,104,1.018,105,0.923,106,1.776,107,2.571,108,0.901,109,0.901,110,0.901,111,0.75,112,0.117,113,1.11,114,0.901,115,0.901,116,0.901,117,0.901,118,0.901,119,0.901,120,0.901,121,0.901,122,0.742,123,1.776,124,2.207,125,2.444,126,1.589,127,0.901,128,0.901,129,0.901,130,2.933,131,0.901,132,2.131,133,1.323,134,0.75,135,0.901,136,0.901,137,0.901,138,2.142,139,0.334,140,0.901,141,0.57,142,0.901,143,0.901,144,1.273,145,2.121,146,0.901,147,1.776,148,0.577,149,0.75,150,0.901,151,1.589,152,1.589,153,2.131,154,0.901,155,2.131,156,1.589,157,0.901,158,0.75,159,0.901,160,1.589,161,0.901,162,0.901,163,0.901,164,1.541,165,1.323,166,0.901,167,0.901,168,0.901,169,0.901,170,0.901,171,3.1,172,0.901,173,0.901,174,0.75,175,1.589,176,0.901,177,0.901,178,0.901,179,0.901,180,2.128,181,0.901,182,1.589,183,0.901,184,1.589,185,0.901,186,0.901,187,0.901,188,0.901,189,1.149,190,0.901,191,1.323,192,1.323,193,0.901,194,0.901,195,3.497,196,0.901,197,0.901,198,0.75,199,0.901,200,0.901,201,0.901,202,1.589,203,0.901,204,0.901,205,0.651,206,0.901,207,2.697,208,0.901,209,0.901,210,1.589,211,0.901,212,0.901,213,0.901,214,1.776,215,0.901,216,0.901,217,1.589,218,1.776,219,2.697,220,0.901,221,1.589,222,1.589,223,0.901,224,0.901,225,1.114,226,0.901,227,0.901,228,0.901,229,1.589,230,0.901,231,0.901,232,1.018,233,0.901,234,2.571,235,0.901,236,0.901,237,0.901,238,0.901,239,0.75,240,0.901,241,0.901,242,0.901,243,0.901,244,0.901,245,0.901,246,2.51,247,1.479,248,0.901,249,0.901,250,0.901,251,0.901,252,0.75,253,0.901,254,0.901,255,1.323,256,0.901,257,0.131,258,0.75,259,0.079,260,0.161,261,0.651,262,0.75,263,0.75,264,0.901,265,1.323,266,0.901,267,0.901,268,1.589,269,0.901,270,1.589,271,0.901,272,0.901,273,0.901,274,0.901,275,0.901,276,0.651,277,1.589,278,0.901,279,0.901,280,0.901,281,2.571,282,0.901,283,0.651,284,0.901,285,1.323,286,0.901,287,0.901,288,0.901,289,1.589,290,0.651,291,0.651,292,1.589,293,0.651,294,0.901,295,1.589,296,1.323,297,1.589,298,0.651,299,0.901,300,0.901,301,0.901,302,0.75,303,0.901,304,0.901,305,0.901,306,0.75]],["title/overview.html",[307,3.581]],["body/overview.html",[1,1.499,4,1.883,5,0.032,9,0.019,10,0.019,41,3.697,104,1.67,106,2.17,189,1.883,257,0.161,259,0.227,283,3.186,290,3.186,291,3.186,293,3.186,298,3.186,307,2.17,308,2.17,309,2.17,310,2.161,311,0.193,312,2.17,313,2.17,314,2.17,315,2.17,316,4.999,317,3.67,318,2.824,319,2.824,320,2.824,321,2.824,322,3.67,323,3.67,324,3.67,325,3.67,326,3.67,327,3.67,328,2.824,329,3.129,330,2.17,331,1.883,332,3.756,333,3.756,334,1.883,335,1.034,336,2.605]],["title/changelog.html",[11,1.693,12,1.91,337,2.641]],["body/changelog.html",[5,0.025,9,0.025,10,0.025,16,3.999,24,3.107,29,2.697,32,2.697,52,3.107,63,3.107,69,3.107,79,3.077,83,3.107,84,3.107,89,3.471,90,3.107,101,2.39,111,3.107,134,3.107,138,3.107,147,3.107,164,3.471,246,3.077,247,2.146,276,2.697,285,3.107,338,3.729,339,3.729,340,3.729,341,3.729,342,3.729,343,3.729,344,3.107,345,3.729,346,3.729,347,3.729,348,3.729,349,3.729,350,3.729,351,4.8,352,3.729,353,3.729,354,3.729,355,3.729,356,3.107,357,3.107,358,3.729,359,3.729,360,3.729,361,3.729,362,3.729]],["title/license.html",[11,1.693,12,1.91,344,2.2]],["body/license.html",[5,0.022,9,0.022,10,0.022,44,2.601,50,4.351,55,3.554,88,1.352,93,2.601,104,2.001,149,2.601,158,2.601,191,3.554,265,2.601,306,2.601,331,2.257,356,2.601,363,4.048,364,2.601,365,3.122,366,2.601,367,2.601,368,2.601,369,2.601,370,2.601,371,4.266,372,3.122,373,3.122,374,3.122,375,3.122,376,4.266,377,3.122,378,5.966,379,3.122,380,3.122,381,0.232,382,4.266,383,4.048,384,3.122,385,4.859,386,3.122,387,3.122,388,3.122,389,3.122,390,3.122,391,3.122,392,3.122,393,2.601,394,3.122,395,4.266,396,4.266,397,3.122,398,3.122,399,4.266,400,3.122,401,3.122,402,3.122,403,3.122,404,3.122,405,3.122,406,3.122,407,3.122,408,3.122,409,2.601,410,3.122,411,3.122,412,3.122,413,3.122,414,3.122,415,3.122,416,3.122,417,3.122,418,3.122]],["title/modules.html",[310,2.473]],["body/modules.html",[5,0.029,9,0.029,10,0.029,32,3.471,41,2.762,310,2.762,419,4.799,420,4.799,421,4.799]],["title/modules/GridModule.html",[41,1.816,310,1.816]],["body/modules/GridModule.html",[1,0.929,2,1.168,3,1.345,4,1.884,5,0.032,9,0.013,10,0.013,40,1.797,41,3.561,67,2.727,79,1.035,87,0.12,104,2.098,112,0.21,257,0.1,283,3.487,290,3.487,291,3.487,293,3.487,298,3.487,308,1.345,309,2.727,310,1.499,311,0.279,312,1.345,313,1.345,314,1.345,315,1.345,316,4.769,317,3.67,318,2.824,319,2.824,320,2.824,321,2.824,322,4.017,323,4.017,324,3.67,325,3.67,326,2.727,327,2.727,328,2.098,329,2.17,330,1.345,331,1.168,363,1.345,364,1.345,366,1.345,367,1.345,368,1.345,369,1.345,370,1.345,381,0.12,422,0.141,423,1.615,424,2.605,425,1.615,426,1.615,427,1.615,428,2.605,429,3.274,430,0.588,431,2.605,432,1.615,433,2.605,434,1.615,435,1.615,436,1.615,437,0.929,438,1.615,439,3.756,440,2.605,441,1.615,442,1.615,443,1.615,444,3.274,445,4.405,446,1.615,447,1.615,448,1.615,449,1.615,450,1.615,451,1.615,452,1.615,453,2.605,454,1.615,455,2.605,456,1.615,457,1.615,458,1.615,459,1.615,460,1.615,461,1.345,462,1.615,463,3.274,464,1.615]],["title/injectables/GridMessageService.html",[328,2.023,334,2.283]],["body/injectables/GridMessageService.html",[5,0.033,9,0.019,10,0.019,13,0.408,33,2.252,40,1.127,68,3.03,87,0.187,112,0.562,113,1.911,122,0.656,139,0.477,141,0.534,180,2.252,214,3.056,225,1.873,239,3.956,257,0.155,260,0.657,311,0.187,328,2.351,334,3.127,357,4.204,381,0.187,393,4.387,422,0.22,430,0.918,465,4.528,466,2.521,467,1.739,468,4.106,469,4.749,470,4.749,471,4.749,472,3.668,473,3.668,474,4.324,475,3.668,476,0.684,477,2.521,478,0.594,479,2.351,480,3.668,481,2.521,482,3.056,483,2.521,484,2.521,485,3.668,486,2.521,487,2.521,488,2.521,489,2.521,490,2.521,491,2.521,492,2.521]],["title/pipes/IsFixedPipe.html",[320,2.023,335,1.253]],["body/pipes/IsFixedPipe.html",[5,0.033,9,0.023,10,0.023,40,1.378,65,2.581,87,0.249,99,2.904,105,1.456,112,0.656,122,0.437,124,1.751,125,4.204,139,0.437,141,0.734,144,1.838,145,2.431,164,3.893,255,2.801,257,0.207,260,0.602,311,0.249,320,2.875,335,2.003,381,0.249,422,0.293,430,1.224,437,1.935,476,0.437,478,0.544,493,2.875,494,3.362,495,1.935,496,4.485,497,2.155,498,2.875,499,3.362,500,2.875,501,2.155,502,3.362]],["title/pipes/IsGroupPipe.html",[319,2.023,335,1.253]],["body/pipes/IsGroupPipe.html",[5,0.033,9,0.024,10,0.024,40,1.422,65,2.664,87,0.262,99,2.974,105,1.528,112,0.672,124,1.838,139,0.458,141,0.752,257,0.217,260,0.632,311,0.262,319,2.968,335,2.051,381,0.262,422,0.308,430,1.285,437,2.03,476,0.458,478,0.571,493,2.968,495,2.03,497,2.262,498,2.968,500,2.968,501,2.262,503,3.528,504,4.63,505,3.528,506,3.528,507,3.528]],["title/pipes/IsRowVisiblePipe.html",[321,2.023,335,1.253]],["body/pipes/IsRowVisiblePipe.html",[5,0.033,9,0.024,10,0.024,40,1.422,79,3.517,87,0.262,99,2.974,105,1.528,112,0.672,124,1.838,139,0.458,141,0.752,257,0.217,260,0.632,311,0.262,321,2.968,335,2.051,381,0.262,422,0.308,430,1.285,476,0.458,478,0.571,493,2.968,495,2.03,497,2.262,498,2.968,500,2.968,501,2.262,508,2.939,509,4.63,510,2.939,511,3.528,512,2.939]],["title/pipes/IsVisiblePipe.html",[318,2.023,335,1.253]],["body/pipes/IsVisiblePipe.html",[5,0.033,9,0.024,10,0.024,40,1.431,65,2.68,87,0.264,99,2.987,105,1.542,112,0.675,124,1.854,139,0.463,141,0.755,257,0.219,260,0.637,311,0.264,318,2.986,335,2.06,381,0.264,422,0.311,430,1.296,437,2.049,476,0.463,478,0.576,493,2.986,495,2.049,497,2.282,498,2.986,500,2.986,501,2.282,508,2.966,510,2.966,512,2.966,513,4.658]],["title/classes/Cell.html",[247,1.816,257,0.195]],["body/classes/Cell.html",[5,0.032,9,0.023,10,0.023,13,0.542,29,3.234,33,1.744,87,0.248,122,0.698,123,4.195,139,0.435,141,0.487,144,1.834,145,3.234,180,2.623,198,4.477,207,4.477,225,2.426,246,2.146,247,2.573,257,0.276,311,0.248,381,0.248,409,2.789,422,0.292,467,2.12,476,0.698,478,0.542,495,1.926,514,3.348,515,1.926,516,3.348,517,3.348,518,3.348,519,2.146,520,4.472,521,4.472,522,4.472,523,3.348,524,3.348,525,3.348]],["title/classes/CellTextView.html",[257,0.195,526,2.63]],["body/classes/CellTextView.html",[5,0.032,9,0.019,10,0.019,13,0.426,40,1.361,65,3.393,87,0.195,105,1.639,112,0.63,122,0.576,139,0.576,141,0.645,165,2.192,174,2.192,180,2.783,218,3.691,225,1.919,232,1.686,246,1.686,247,1.514,257,0.233,258,3.691,260,0.677,261,2.736,262,3.152,263,4.036,276,1.902,311,0.195,381,0.195,422,0.23,430,0.958,437,1.514,476,0.576,478,0.717,479,2.425,526,3.152,527,4.844,528,5.506,529,2.631,530,3.783,531,3.152,532,3.783,533,2.631,534,3.152,535,2.631,536,3.783,537,2.631,538,2.631,539,3.783,540,2.631,541,5.132,542,2.631,543,2.631,544,3.783,545,2.631,546,3.783,547,2.631,548,3.783,549,2.631,550,2.631,551,2.631,552,2.631]],["title/classes/EmptyFactory.html",[257,0.195,553,2.283]],["body/classes/EmptyFactory.html",[5,0.032,9,0.024,10,0.024,13,0.584,87,0.268,112,0.611,113,2.448,122,0.679,139,0.469,141,0.525,148,2.314,257,0.29,259,0.315,260,0.841,311,0.349,381,0.268,422,0.315,476,0.611,478,0.584,515,2.077,519,3.012,553,3.398,554,3.007,555,2.61,556,2.61,557,2.61,558,3.548,559,3.609,560,4.255,561,3.609,562,3.609,563,3.349,564,2.314,565,3.007]],["title/classes/FormatterParser.html",[257,0.195,566,2.63]],["body/classes/FormatterParser.html",[5,0.033,9,0.021,10,0.021,13,0.463,33,1.49,34,2.383,87,0.212,112,0.748,122,0.654,124,2.091,139,0.603,141,0.675,225,2.494,232,3.521,257,0.247,260,0.719,261,2.903,311,0.212,381,0.212,383,2.383,422,0.25,467,1.904,476,0.654,478,0.751,479,1.834,515,1.646,531,3.345,566,3.345,567,5.298,568,2.861,569,2.861,570,2.861,571,2.861,572,4.015,573,4.015,574,4.015,575,2.861,576,4.015,577,2.861,578,2.861,579,2.861,580,2.861]],["title/classes/HtmlUtil.html",[257,0.195,581,2.63]],["body/classes/HtmlUtil.html",[5,0.033,9,0.018,10,0.018,13,0.391,40,0.741,68,2.853,87,0.179,112,0.715,122,0.548,133,4.466,139,0.548,141,0.614,252,2.959,257,0.287,260,0.636,302,2.959,311,0.179,381,0.179,422,0.211,461,4.678,476,0.548,478,0.682,515,1.388,534,4.824,581,2.959,582,4.651,583,2.413,584,3.552,585,3.552,586,3.552,587,3.552,588,3.552,589,3.552,590,3.552,591,3.552,592,2.413,593,5.501,594,2.413,595,3.552,596,2.413,597,3.552,598,2.413,599,4.651,600,4.216,601,2.413,602,4.651,603,2.01,604,2.413]],["title/classes/InjectableFactory.html",[257,0.195,605,2.283]],["body/classes/InjectableFactory.html",[5,0.032,9,0.022,10,0.022,13,0.513,31,3.119,40,0.974,87,0.235,101,2.764,105,1.868,112,0.56,113,1.652,122,0.715,139,0.412,141,0.462,148,2.764,257,0.266,259,0.277,260,0.772,311,0.32,381,0.235,422,0.277,430,1.155,468,2.294,476,0.56,478,0.513,515,1.825,519,2.033,555,3.119,556,3.119,557,3.119,558,3.37,563,3.141,564,2.033,605,3.119,606,2.643,607,5.043,608,3.593,609,3.172,610,3.802,611,3.172,612,3.593,613,3.172,614,2.643,615,2.643]],["title/classes/RowChange.html",[257,0.195,616,2.63]],["body/classes/RowChange.html",[5,0.032,9,0.024,10,0.024,13,0.563,87,0.258,122,0.667,139,0.452,141,0.507,180,3.253,257,0.283,311,0.258,381,0.258,422,0.304,467,2.176,476,0.667,478,0.563,519,2.232,616,3.823,617,5.458,618,3.481,619,6.029,620,5.826,621,4.59,622,4.59,623,3.481,624,3.481,625,3.481]],["title/classes/SortInfo.html",[257,0.195,626,2.63]],["body/classes/SortInfo.html",[5,0.033,9,0.02,10,0.02,13,0.432,33,1.99,68,3.254,87,0.198,112,0.698,122,0.633,139,0.496,141,0.556,144,2.059,171,3.182,219,4.472,225,1.655,257,0.235,260,0.684,311,0.198,381,0.198,422,0.233,467,1.811,476,0.698,478,0.618,479,2.449,603,3.182,626,3.182,627,5.528,628,2.666,629,5.368,630,5.368,631,4.874,632,4.874,633,3.82,634,3.82,635,2.666,636,2.666,637,3.82,638,2.666,639,3.82,640,2.666,641,2.666,642,2.666,643,3.82,644,3.82]],["title/interfaces/ClickListener.html",[259,0.275,645,2.63]],["body/interfaces/ClickListener.html",[5,0.031,9,0.026,10,0.026,13,0.667,64,3.697,87,0.306,88,1.785,112,0.535,122,0.535,139,0.535,141,0.6,144,1.861,259,0.446,260,0.915,311,0.306,381,0.306,422,0.36,476,0.535,478,0.667,645,4.259,646,4.12,647,5.112,648,2.895,649,4.12]],["title/interfaces/DblClickListener.html",[259,0.275,650,2.63]],["body/interfaces/DblClickListener.html",[5,0.031,9,0.026,10,0.026,13,0.66,87,0.303,88,1.766,112,0.53,122,0.53,139,0.53,141,0.593,144,1.849,259,0.443,260,0.909,311,0.303,381,0.303,422,0.356,476,0.53,478,0.66,648,2.881,650,4.231,651,5.079,652,4.077,653,5.079,654,5.079,655,4.077]],["title/interfaces/Dictionary.html",[259,0.275,656,2.63]],["body/interfaces/Dictionary.html",[5,0.031,9,0.026,10,0.026,13,0.657,68,3.49,87,0.301,122,0.658,225,2.504,259,0.442,296,4.815,311,0.301,381,0.301,422,0.354,467,2.4,476,0.658,656,4.217,657,4.056,658,4.056,659,4.056]],["title/interfaces/EmptyConstructor.html",[259,0.275,560,2.283]],["body/interfaces/EmptyConstructor.html",[5,0.032,9,0.027,10,0.027,87,0.312,112,0.547,113,2.698,257,0.259,259,0.452,311,0.384,381,0.312,422,0.367,553,3.043,554,3.506,558,2.698,560,4.234,563,3.32,564,2.698,565,3.506]],["title/interfaces/EventListenerArg.html",[205,2.283,259,0.275]],["body/interfaces/EventListenerArg.html",[5,0.031,9,0.025,10,0.025,13,0.631,40,1.197,87,0.289,89,3.917,122,0.816,139,0.641,205,3.569,232,3.651,259,0.431,311,0.289,381,0.289,422,0.34,430,1.418,467,2.34,476,0.641,660,5.417,661,3.895,662,3.895,663,3.895]],["title/interfaces/InjectableConstructor.html",[259,0.275,610,2.283]],["body/interfaces/InjectableConstructor.html",[5,0.033,9,0.025,10,0.025,31,2.722,40,1.156,87,0.279,101,2.413,105,1.631,112,0.489,113,1.961,122,0.628,148,2.413,257,0.232,259,0.421,311,0.358,381,0.279,422,0.329,430,1.371,468,2.722,555,2.722,556,2.722,557,2.722,558,2.413,563,3.096,564,2.413,605,2.722,606,3.136,607,4.845,608,3.136,610,3.855,612,3.136,614,3.136,615,3.136]],["title/interfaces/MouseDownListener.html",[259,0.275,664,2.63]],["body/interfaces/MouseDownListener.html",[5,0.031,9,0.026,10,0.026,13,0.66,87,0.303,88,1.766,112,0.53,122,0.53,139,0.53,141,0.593,144,1.849,259,0.443,260,0.909,311,0.303,381,0.303,422,0.356,476,0.53,478,0.66,648,2.881,664,4.231,665,3.256,666,4.077,667,5.079,668,5.079,669,4.077]],["title/interfaces/MouseDragListener.html",[259,0.275,670,2.63]],["body/interfaces/MouseDragListener.html",[5,0.031,9,0.026,10,0.026,13,0.66,87,0.303,88,1.766,112,0.53,122,0.53,139,0.53,141,0.593,144,1.849,259,0.443,260,0.909,311,0.303,381,0.303,422,0.356,476,0.53,478,0.66,648,2.881,665,3.256,670,4.231,671,4.077,672,5.079,673,5.079,674,4.077]],["title/interfaces/MouseOverListener.html",[259,0.275,675,2.63]],["body/interfaces/MouseOverListener.html",[5,0.031,9,0.026,10,0.026,13,0.66,87,0.303,88,1.766,112,0.53,122,0.53,139,0.53,141,0.593,144,1.849,259,0.443,260,0.909,311,0.303,381,0.303,422,0.356,476,0.53,478,0.66,648,2.881,665,3.256,675,4.231,676,4.077,677,5.079,678,5.079,679,4.077]],["title/interfaces/MouseUpListener.html",[259,0.275,680,2.63]],["body/interfaces/MouseUpListener.html",[5,0.031,9,0.026,10,0.026,13,0.66,87,0.303,88,1.766,112,0.53,122,0.53,139,0.53,141,0.593,144,1.849,259,0.443,260,0.909,311,0.303,381,0.303,422,0.356,476,0.53,478,0.66,648,2.881,665,3.256,680,4.231,681,4.077,682,5.079,683,5.079,684,4.077]],["title/miscellaneous/variables.html",[685,2.2,686,3.161]],["body/miscellaneous/variables.html",[5,0.032,9,0.023,10,0.023,13,0.554,33,3.019,64,3.681,122,0.753,180,3.245,189,3.681,192,4.24,225,2.511,465,2.85,482,2.85,685,2.85,686,2.85,687,5.09,688,5.09,689,5.09,690,5.09,691,3.421,692,4.537,693,3.421]]],"invertedIndex":[["",{"_index":5,"title":{},"body":{"dependencies.html":{},"index.html":{},"overview.html":{},"changelog.html":{},"license.html":{},"modules.html":{},"modules/GridModule.html":{},"injectables/GridMessageService.html":{},"pipes/IsFixedPipe.html":{},"pipes/IsGroupPipe.html":{},"pipes/IsRowVisiblePipe.html":{},"pipes/IsVisiblePipe.html":{},"classes/Cell.html":{},"classes/CellTextView.html":{},"classes/EmptyFactory.html":{},"classes/FormatterParser.html":{},"classes/HtmlUtil.html":{},"classes/InjectableFactory.html":{},"classes/RowChange.html":{},"classes/SortInfo.html":{},"interfaces/ClickListener.html":{},"interfaces/DblClickListener.html":{},"interfaces/Dictionary.html":{},"interfaces/EmptyConstructor.html":{},"interfaces/EventListenerArg.html":{},"interfaces/InjectableConstructor.html":{},"interfaces/MouseDownListener.html":{},"interfaces/MouseDragListener.html":{},"interfaces/MouseOverListener.html":{},"interfaces/MouseUpListener.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":692,"title":{},"body":{"miscellaneous/variables.html":{}}}],["1",{"_index":189,"title":{},"body":{"index.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["1.1.x",{"_index":6,"title":{},"body":{"dependencies.html":{}}}],["10",{"_index":184,"title":{},"body":{"index.html":{}}}],["100",{"_index":190,"title":{},"body":{"index.html":{}}}],["1000",{"_index":120,"title":{},"body":{"index.html":{}}}],["11",{"_index":332,"title":{},"body":{"overview.html":{}}}],["15",{"_index":272,"title":{},"body":{"index.html":{}}}],["2",{"_index":482,"title":{},"body":{"injectables/GridMessageService.html":{},"miscellaneous/variables.html":{}}}],["2.0.2",{"_index":339,"title":{},"body":{"changelog.html":{}}}],["2.0.x",{"_index":39,"title":{},"body":{"index.html":{}}}],["2.15.0",{"_index":8,"title":{},"body":{"dependencies.html":{}}}],["2016",{"_index":425,"title":{},"body":{"modules/GridModule.html":{}}}],["2018",{"_index":365,"title":{},"body":{"license.html":{}}}],["25",{"_index":185,"title":{},"body":{"index.html":{}}}],["33",{"_index":336,"title":{},"body":{"overview.html":{}}}],["4",{"_index":333,"title":{},"body":{"overview.html":{}}}],["50",{"_index":186,"title":{},"body":{"index.html":{}}}],["85",{"_index":274,"title":{},"body":{"index.html":{}}}],["8px",{"_index":543,"title":{},"body":{"classes/CellTextView.html":{}}}],["_level",{"_index":469,"title":{},"body":{"injectables/GridMessageService.html":{}}}],["_messag",{"_index":470,"title":{},"body":{"injectables/GridMessageService.html":{}}}],["_messageobserv",{"_index":471,"title":{},"body":{"injectables/GridMessageService.html":{}}}],["abov",{"_index":158,"title":{},"body":{"index.html":{},"license.html":{}}}],["accessor",{"_index":473,"title":{},"body":{"injectables/GridMessageService.html":{}}}],["action",{"_index":93,"title":{},"body":{"index.html":{},"license.html":{}}}],["ad",{"_index":90,"title":{},"body":{"index.html":{},"changelog.html":{}}}],["add",{"_index":341,"title":{},"body":{"changelog.html":{}}}],["allow",{"_index":148,"title":{},"body":{"index.html":{},"classes/EmptyFactory.html":{},"classes/InjectableFactory.html":{},"interfaces/InjectableConstructor.html":{}}}],["and/or",{"_index":389,"title":{},"body":{"license.html":{}}}],["angular",{"_index":15,"title":{},"body":{"index.html":{}}}],["angular/common",{"_index":432,"title":{},"body":{"modules/GridModule.html":{}}}],["angular/cor",{"_index":430,"title":{},"body":{"modules/GridModule.html":{},"injectables/GridMessageService.html":{},"pipes/IsFixedPipe.html":{},"pipes/IsGroupPipe.html":{},"pipes/IsRowVisiblePipe.html":{},"pipes/IsVisiblePipe.html":{},"classes/CellTextView.html":{},"classes/InjectableFactory.html":{},"interfaces/EventListenerArg.html":{},"interfaces/InjectableConstructor.html":{}}}],["angular/form",{"_index":434,"title":{},"body":{"modules/GridModule.html":{}}}],["anyth",{"_index":27,"title":{},"body":{"index.html":{}}}],["anything.advanc",{"_index":245,"title":{},"body":{"index.html":{}}}],["arg.interface.t",{"_index":661,"title":{},"body":{"interfaces/EventListenerArg.html":{}}}],["arg.interface.ts:4",{"_index":663,"title":{},"body":{"interfaces/EventListenerArg.html":{}}}],["arg.interface.ts:5",{"_index":662,"title":{},"body":{"interfaces/EventListenerArg.html":{}}}],["argument",{"_index":557,"title":{},"body":{"classes/EmptyFactory.html":{},"classes/InjectableFactory.html":{},"interfaces/InjectableConstructor.html":{}}}],["aris",{"_index":418,"title":{},"body":{"license.html":{}}}],["array",{"_index":125,"title":{},"body":{"index.html":{},"pipes/IsFixedPipe.html":{}}}],["arrow",{"_index":687,"title":{},"body":{"miscellaneous/variables.html":{}}}],["artifact.2.0.0",{"_index":345,"title":{},"body":{"changelog.html":{}}}],["asc",{"_index":630,"title":{},"body":{"classes/SortInfo.html":{}}}],["associ",{"_index":379,"title":{},"body":{"license.html":{}}}],["author",{"_index":408,"title":{},"body":{"license.html":{}}}],["auto",{"_index":546,"title":{},"body":{"classes/CellTextView.html":{}}}],["bar",{"_index":157,"title":{},"body":{"index.html":{}}}],["base",{"_index":280,"title":{},"body":{"index.html":{}}}],["basic",{"_index":35,"title":{},"body":{"index.html":{}}}],["becom",{"_index":36,"title":{},"body":{"index.html":{}}}],["big).titl",{"_index":154,"title":{},"body":{"index.html":{}}}],["bigtextpopup",{"_index":323,"title":{},"body":{"overview.html":{},"modules/GridModule.html":{}}}],["bind",{"_index":128,"title":{},"body":{"index.html":{}}}],["birth",{"_index":286,"title":{},"body":{"index.html":{}}}],["boolean",{"_index":144,"title":{},"body":{"index.html":{},"pipes/IsFixedPipe.html":{},"classes/Cell.html":{},"classes/SortInfo.html":{},"interfaces/ClickListener.html":{},"interfaces/DblClickListener.html":{},"interfaces/MouseDownListener.html":{},"interfaces/MouseDragListener.html":{},"interfaces/MouseOverListener.html":{},"interfaces/MouseUpListener.html":{}}}],["bootstrap",{"_index":4,"title":{},"body":{"dependencies.html":{},"overview.html":{},"modules/GridModule.html":{}}}],["bootstrap/ng",{"_index":3,"title":{},"body":{"dependencies.html":{},"modules/GridModule.html":{}}}],["bottom",{"_index":547,"title":{},"body":{"classes/CellTextView.html":{}}}],["break",{"_index":302,"title":{},"body":{"index.html":{},"classes/HtmlUtil.html":{}}}],["brows",{"_index":421,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":419,"title":{},"body":{"modules.html":{}}}],["built",{"_index":277,"title":{},"body":{"index.html":{}}}],["busi",{"_index":349,"title":{},"body":{"changelog.html":{}}}],["c",{"_index":364,"title":{},"body":{"license.html":{},"modules/GridModule.html":{}}}],["call",{"_index":84,"title":{},"body":{"index.html":{},"changelog.html":{}}}],["call.externalpag",{"_index":178,"title":{},"body":{"index.html":{}}}],["call.externalsort",{"_index":177,"title":{},"body":{"index.html":{}}}],["call.pages",{"_index":179,"title":{},"body":{"index.html":{}}}],["callback",{"_index":85,"title":{},"body":{"index.html":{}}}],["cancer",{"_index":367,"title":{},"body":{"license.html":{},"modules/GridModule.html":{}}}],["cell",{"_index":247,"title":{"classes/Cell.html":{}},"body":{"index.html":{},"changelog.html":{},"classes/Cell.html":{},"classes/CellTextView.html":{}}}],["cell'",{"_index":516,"title":{},"body":{"classes/Cell.html":{}}}],["cell.onrowsav",{"_index":226,"title":{},"body":{"index.html":{}}}],["cell/editrenderers/choic",{"_index":448,"title":{},"body":{"modules/GridModule.html":{}}}],["cell/editrenderers/d",{"_index":449,"title":{},"body":{"modules/GridModule.html":{}}}],["cell/editrenderers/text",{"_index":443,"title":{},"body":{"modules/GridModule.html":{}}}],["cell/viewpopuprenderer/bigtext",{"_index":451,"title":{},"body":{"modules/GridModule.html":{}}}],["cellnumberrangeview",{"_index":269,"title":{},"body":{"index.html":{}}}],["celltextview",{"_index":526,"title":{"classes/CellTextView.html":{}},"body":{"classes/CellTextView.html":{}}}],["cellviewrender",{"_index":258,"title":{},"body":{"index.html":{},"classes/CellTextView.html":{}}}],["chang",{"_index":63,"title":{},"body":{"index.html":{},"changelog.html":{}}}],["change.t",{"_index":618,"title":{},"body":{"classes/RowChange.html":{}}}],["change.ts:3",{"_index":623,"title":{},"body":{"classes/RowChange.html":{}}}],["change.ts:4",{"_index":622,"title":{},"body":{"classes/RowChange.html":{}}}],["changelog",{"_index":337,"title":{"changelog.html":{}},"body":{}}],["charg",{"_index":375,"title":{},"body":{"license.html":{}}}],["choic",{"_index":294,"title":{},"body":{"index.html":{}}}],["choice.compon",{"_index":459,"title":{},"body":{"modules/GridModule.html":{}}}],["choiceeditrender",{"_index":293,"title":{},"body":{"index.html":{},"overview.html":{},"modules/GridModule.html":{}}}],["choos",{"_index":187,"title":{},"body":{"index.html":{}}}],["claim",{"_index":411,"title":{},"body":{"license.html":{}}}],["class",{"_index":257,"title":{"classes/Cell.html":{},"classes/CellTextView.html":{},"classes/EmptyFactory.html":{},"classes/FormatterParser.html":{},"classes/HtmlUtil.html":{},"classes/InjectableFactory.html":{},"classes/RowChange.html":{},"classes/SortInfo.html":{}},"body":{"index.html":{},"overview.html":{},"modules/GridModule.html":{},"injectables/GridMessageService.html":{},"pipes/IsFixedPipe.html":{},"pipes/IsGroupPipe.html":{},"pipes/IsRowVisiblePipe.html":{},"pipes/IsVisiblePipe.html":{},"classes/Cell.html":{},"classes/CellTextView.html":{},"classes/EmptyFactory.html":{},"classes/FormatterParser.html":{},"classes/HtmlUtil.html":{},"classes/InjectableFactory.html":{},"classes/RowChange.html":{},"classes/SortInfo.html":{},"interfaces/EmptyConstructor.html":{},"interfaces/InjectableConstructor.html":{}}}],["click",{"_index":64,"title":{},"body":{"index.html":{},"interfaces/ClickListener.html":{},"miscellaneous/variables.html":{}}}],["click(ev",{"_index":647,"title":{},"body":{"interfaces/ClickListener.html":{}}}],["click.interface.t",{"_index":652,"title":{},"body":{"interfaces/DblClickListener.html":{}}}],["click.interface.ts:3",{"_index":655,"title":{},"body":{"interfaces/DblClickListener.html":{}}}],["clicklisten",{"_index":645,"title":{"interfaces/ClickListener.html":{}},"body":{"interfaces/ClickListener.html":{}}}],["cluster_gridmodul",{"_index":312,"title":{},"body":{"overview.html":{},"modules/GridModule.html":{}}}],["cluster_gridmodule_declar",{"_index":313,"title":{},"body":{"overview.html":{},"modules/GridModule.html":{}}}],["cluster_gridmodule_export",{"_index":315,"title":{},"body":{"overview.html":{},"modules/GridModule.html":{}}}],["cluster_gridmodule_gridcomponent_provid",{"_index":314,"title":{},"body":{"overview.html":{},"modules/GridModule.html":{}}}],["code",{"_index":46,"title":{},"body":{"index.html":{}}}],["colum",{"_index":152,"title":{},"body":{"index.html":{}}}],["column",{"_index":65,"title":{},"body":{"index.html":{},"pipes/IsFixedPipe.html":{},"pipes/IsGroupPipe.html":{},"pipes/IsVisiblePipe.html":{},"classes/CellTextView.html":{}}}],["column/column",{"_index":437,"title":{},"body":{"modules/GridModule.html":{},"pipes/IsFixedPipe.html":{},"pipes/IsGroupPipe.html":{},"pipes/IsVisiblePipe.html":{},"classes/CellTextView.html":{}}}],["column/filterrenderers/compar",{"_index":447,"title":{},"body":{"modules/GridModule.html":{}}}],["column/filterrenderers/select",{"_index":450,"title":{},"body":{"modules/GridModule.html":{}}}],["column/filterrenderers/text",{"_index":446,"title":{},"body":{"modules/GridModule.html":{}}}],["columnheadercompon",{"_index":317,"title":{},"body":{"overview.html":{},"modules/GridModule.html":{}}}],["columns[j].field",{"_index":220,"title":{},"body":{"index.html":{}}}],["command",{"_index":53,"title":{},"body":{"index.html":{}}}],["commonmodul",{"_index":431,"title":{},"body":{"modules/GridModule.html":{}}}],["comparefilterrender",{"_index":291,"title":{},"body":{"index.html":{},"overview.html":{},"modules/GridModule.html":{}}}],["compil",{"_index":45,"title":{},"body":{"index.html":{}}}],["complex",{"_index":28,"title":{},"body":{"index.html":{}}}],["compon",{"_index":106,"title":{},"body":{"index.html":{},"overview.html":{}}}],["condit",{"_index":394,"title":{},"body":{"license.html":{}}}],["confidenti",{"_index":426,"title":{},"body":{"modules/GridModule.html":{}}}],["config",{"_index":232,"title":{},"body":{"index.html":{},"classes/CellTextView.html":{},"classes/FormatterParser.html":{},"interfaces/EventListenerArg.html":{}}}],["config/config",{"_index":453,"title":{},"body":{"modules/GridModule.html":{}}}],["configmenucompon",{"_index":324,"title":{},"body":{"overview.html":{},"modules/GridModule.html":{}}}],["configmultichoicecompon",{"_index":325,"title":{},"body":{"overview.html":{},"modules/GridModule.html":{}}}],["configur",{"_index":138,"title":{},"body":{"index.html":{},"changelog.html":{}}}],["configuration.instal",{"_index":38,"title":{},"body":{"index.html":{}}}],["connect",{"_index":356,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["console.output",{"_index":215,"title":{},"body":{"index.html":{}}}],["constructor",{"_index":519,"title":{},"body":{"classes/Cell.html":{},"classes/EmptyFactory.html":{},"classes/InjectableFactory.html":{},"classes/RowChange.html":{}}}],["constructor(",{"_index":609,"title":{},"body":{"classes/InjectableFactory.html":{}}}],["constructor(emptyconstructor",{"_index":559,"title":{},"body":{"classes/EmptyFactory.html":{}}}],["constructor(o",{"_index":520,"title":{},"body":{"classes/Cell.html":{}}}],["constructor(oldrownum",{"_index":621,"title":{},"body":{"classes/RowChange.html":{}}}],["constructor(priv",{"_index":564,"title":{},"body":{"classes/EmptyFactory.html":{},"classes/InjectableFactory.html":{},"interfaces/EmptyConstructor.html":{},"interfaces/InjectableConstructor.html":{}}}],["contain",{"_index":137,"title":{},"body":{"index.html":{}}}],["contract",{"_index":415,"title":{},"body":{"license.html":{}}}],["conveni",{"_index":584,"title":{},"body":{"classes/HtmlUtil.html":{}}}],["copi",{"_index":50,"title":{},"body":{"index.html":{},"license.html":{}}}],["copyright",{"_index":363,"title":{},"body":{"license.html":{},"modules/GridModule.html":{}}}],["creat",{"_index":210,"title":{},"body":{"index.html":{}}}],["createel",{"_index":530,"title":{},"body":{"classes/CellTextView.html":{}}}],["createelement(render",{"_index":262,"title":{},"body":{"index.html":{},"classes/CellTextView.html":{}}}],["current",{"_index":98,"title":{},"body":{"index.html":{}}}],["custom",{"_index":52,"title":{},"body":{"index.html":{},"changelog.html":{}}}],["damag",{"_index":412,"title":{},"body":{"license.html":{}}}],["data",{"_index":29,"title":{},"body":{"index.html":{},"changelog.html":{},"classes/Cell.html":{}}}],["data.celldblclick",{"_index":235,"title":{},"body":{"index.html":{}}}],["data.datacal",{"_index":129,"title":{},"body":{"index.html":{}}}],["data.rowclick",{"_index":236,"title":{},"body":{"index.html":{}}}],["data.rowdblclick",{"_index":237,"title":{},"body":{"index.html":{}}}],["data.warn",{"_index":238,"title":{},"body":{"index.html":{}}}],["data/config/ev",{"_index":347,"title":{},"body":{"changelog.html":{}}}],["datarequest(externalinfo",{"_index":109,"title":{},"body":{"index.html":{}}}],["datatyp",{"_index":287,"title":{},"body":{"index.html":{}}}],["date",{"_index":285,"title":{},"body":{"index.html":{},"changelog.html":{}}}],["dateeditrender",{"_index":290,"title":{},"body":{"index.html":{},"overview.html":{},"modules/GridModule.html":{}}}],["dblclick",{"_index":653,"title":{},"body":{"interfaces/DblClickListener.html":{}}}],["dblclick(ev",{"_index":654,"title":{},"body":{"interfaces/DblClickListener.html":{}}}],["dblclicklisten",{"_index":650,"title":{"interfaces/DblClickListener.html":{}},"body":{"interfaces/DblClickListener.html":{}}}],["deal",{"_index":382,"title":{},"body":{"license.html":{}}}],["declar",{"_index":309,"title":{},"body":{"overview.html":{},"modules/GridModule.html":{}}}],["default",{"_index":33,"title":{},"body":{"index.html":{},"injectables/GridMessageService.html":{},"classes/Cell.html":{},"classes/FormatterParser.html":{},"classes/SortInfo.html":{},"miscellaneous/variables.html":{}}}],["default.externalfilt",{"_index":176,"title":{},"body":{"index.html":{}}}],["defin",{"_index":476,"title":{},"body":{"injectables/GridMessageService.html":{},"pipes/IsFixedPipe.html":{},"pipes/IsGroupPipe.html":{},"pipes/IsRowVisiblePipe.html":{},"pipes/IsVisiblePipe.html":{},"classes/Cell.html":{},"classes/CellTextView.html":{},"classes/EmptyFactory.html":{},"classes/FormatterParser.html":{},"classes/HtmlUtil.html":{},"classes/InjectableFactory.html":{},"classes/RowChange.html":{},"classes/SortInfo.html":{},"interfaces/ClickListener.html":{},"interfaces/DblClickListener.html":{},"interfaces/Dictionary.html":{},"interfaces/EventListenerArg.html":{},"interfaces/MouseDownListener.html":{},"interfaces/MouseDragListener.html":{},"interfaces/MouseOverListener.html":{},"interfaces/MouseUpListener.html":{}}}],["demo",{"_index":19,"title":{},"body":{"index.html":{}}}],["depend",{"_index":1,"title":{"dependencies.html":{}},"body":{"dependencies.html":{},"index.html":{},"overview.html":{},"modules/GridModule.html":{}}}],["descript",{"_index":515,"title":{},"body":{"classes/Cell.html":{},"classes/EmptyFactory.html":{},"classes/FormatterParser.html":{},"classes/HtmlUtil.html":{},"classes/InjectableFactory.html":{}}}],["design",{"_index":22,"title":{},"body":{"index.html":{}}}],["determin",{"_index":234,"title":{},"body":{"index.html":{}}}],["dictionari",{"_index":656,"title":{"interfaces/Dictionary.html":{}},"body":{"interfaces/Dictionary.html":{}}}],["differ",{"_index":278,"title":{},"body":{"index.html":{}}}],["dirti",{"_index":198,"title":{},"body":{"index.html":{},"classes/Cell.html":{}}}],["disabl",{"_index":169,"title":{},"body":{"index.html":{}}}],["display",{"_index":296,"title":{},"body":{"index.html":{},"interfaces/Dictionary.html":{}}}],["dist",{"_index":48,"title":{},"body":{"index.html":{}}}],["distribut",{"_index":387,"title":{},"body":{"license.html":{}}}],["dob",{"_index":284,"title":{},"body":{"index.html":{}}}],["document",{"_index":380,"title":{},"body":{"license.html":{}}}],["don't",{"_index":203,"title":{},"body":{"index.html":{}}}],["down.interface.t",{"_index":666,"title":{},"body":{"interfaces/MouseDownListener.html":{}}}],["down.interface.ts:3",{"_index":669,"title":{},"body":{"interfaces/MouseDownListener.html":{}}}],["drag.interface.t",{"_index":671,"title":{},"body":{"interfaces/MouseDragListener.html":{}}}],["drag.interface.ts:3",{"_index":674,"title":{},"body":{"interfaces/MouseDragListener.html":{}}}],["e",{"_index":593,"title":{},"body":{"classes/HtmlUtil.html":{}}}],["e.g",{"_index":151,"title":{},"body":{"index.html":{}}}],["e.id",{"_index":600,"title":{},"body":{"classes/HtmlUtil.html":{}}}],["e.id.startswith(id",{"_index":601,"title":{},"body":{"classes/HtmlUtil.html":{}}}],["e.parentel",{"_index":602,"title":{},"body":{"classes/HtmlUtil.html":{}}}],["each",{"_index":254,"title":{},"body":{"index.html":{}}}],["edit",{"_index":444,"title":{},"body":{"modules/GridModule.html":{}}}],["editrender",{"_index":289,"title":{},"body":{"index.html":{}}}],["element",{"_index":587,"title":{},"body":{"classes/HtmlUtil.html":{}}}],["ellipsi",{"_index":550,"title":{},"body":{"classes/CellTextView.html":{}}}],["emit",{"_index":195,"title":{},"body":{"index.html":{}}}],["emptyconstructor",{"_index":560,"title":{"interfaces/EmptyConstructor.html":{}},"body":{"classes/EmptyFactory.html":{},"interfaces/EmptyConstructor.html":{}}}],["emptyfactori",{"_index":553,"title":{"classes/EmptyFactory.html":{}},"body":{"classes/EmptyFactory.html":{},"interfaces/EmptyConstructor.html":{}}}],["entrycompon",{"_index":424,"title":{},"body":{"modules/GridModule.html":{}}}],["error",{"_index":472,"title":{},"body":{"injectables/GridMessageService.html":{}}}],["error(messag",{"_index":475,"title":{},"body":{"injectables/GridMessageService.html":{}}}],["especi",{"_index":353,"title":{},"body":{"changelog.html":{}}}],["event",{"_index":88,"title":{},"body":{"index.html":{},"license.html":{},"interfaces/ClickListener.html":{},"interfaces/DblClickListener.html":{},"interfaces/MouseDownListener.html":{},"interfaces/MouseDragListener.html":{},"interfaces/MouseOverListener.html":{},"interfaces/MouseUpListener.html":{}}}],["event.service.t",{"_index":691,"title":{},"body":{"miscellaneous/variables.html":{}}}],["eventlisten",{"_index":608,"title":{},"body":{"classes/InjectableFactory.html":{},"interfaces/InjectableConstructor.html":{}}}],["eventlistenerarg",{"_index":205,"title":{"interfaces/EventListenerArg.html":{}},"body":{"index.html":{},"interfaces/EventListenerArg.html":{}}}],["events.mod",{"_index":208,"title":{},"body":{"index.html":{}}}],["exampl",{"_index":102,"title":{},"body":{"index.html":{}}}],["expect",{"_index":31,"title":{},"body":{"index.html":{},"classes/InjectableFactory.html":{},"interfaces/InjectableConstructor.html":{}}}],["export",{"_index":311,"title":{},"body":{"overview.html":{},"modules/GridModule.html":{},"injectables/GridMessageService.html":{},"pipes/IsFixedPipe.html":{},"pipes/IsGroupPipe.html":{},"pipes/IsRowVisiblePipe.html":{},"pipes/IsVisiblePipe.html":{},"classes/Cell.html":{},"classes/CellTextView.html":{},"classes/EmptyFactory.html":{},"classes/FormatterParser.html":{},"classes/HtmlUtil.html":{},"classes/InjectableFactory.html":{},"classes/RowChange.html":{},"classes/SortInfo.html":{},"interfaces/ClickListener.html":{},"interfaces/DblClickListener.html":{},"interfaces/Dictionary.html":{},"interfaces/EmptyConstructor.html":{},"interfaces/EventListenerArg.html":{},"interfaces/InjectableConstructor.html":{},"interfaces/MouseDownListener.html":{},"interfaces/MouseDragListener.html":{},"interfaces/MouseOverListener.html":{},"interfaces/MouseUpListener.html":{}}}],["express",{"_index":401,"title":{},"body":{"license.html":{}}}],["extend",{"_index":279,"title":{},"body":{"index.html":{}}}],["extern",{"_index":83,"title":{},"body":{"index.html":{},"changelog.html":{}}}],["externaldata",{"_index":117,"title":{},"body":{"index.html":{}}}],["externalinfo",{"_index":110,"title":{},"body":{"index.html":{}}}],["fals",{"_index":145,"title":{},"body":{"index.html":{},"pipes/IsFixedPipe.html":{},"classes/Cell.html":{}}}],["featur",{"_index":24,"title":{},"body":{"index.html":{},"changelog.html":{}}}],["femal",{"_index":295,"title":{},"body":{"index.html":{}}}],["field",{"_index":219,"title":{},"body":{"index.html":{},"classes/SortInfo.html":{}}}],["file",{"_index":381,"title":{},"body":{"license.html":{},"modules/GridModule.html":{},"injectables/GridMessageService.html":{},"pipes/IsFixedPipe.html":{},"pipes/IsGroupPipe.html":{},"pipes/IsRowVisiblePipe.html":{},"pipes/IsVisiblePipe.html":{},"classes/Cell.html":{},"classes/CellTextView.html":{},"classes/EmptyFactory.html":{},"classes/FormatterParser.html":{},"classes/HtmlUtil.html":{},"classes/InjectableFactory.html":{},"classes/RowChange.html":{},"classes/SortInfo.html":{},"interfaces/ClickListener.html":{},"interfaces/DblClickListener.html":{},"interfaces/Dictionary.html":{},"interfaces/EmptyConstructor.html":{},"interfaces/EventListenerArg.html":{},"interfaces/InjectableConstructor.html":{},"interfaces/MouseDownListener.html":{},"interfaces/MouseDragListener.html":{},"interfaces/MouseOverListener.html":{},"interfaces/MouseUpListener.html":{}}}],["filter",{"_index":67,"title":{},"body":{"index.html":{},"modules/GridModule.html":{}}}],["filterrender",{"_index":281,"title":{},"body":{"index.html":{}}}],["first",{"_index":75,"title":{},"body":{"index.html":{}}}],["firstnam",{"_index":282,"title":{},"body":{"index.html":{}}}],["fit",{"_index":404,"title":{},"body":{"license.html":{}}}],["fix",{"_index":164,"title":{},"body":{"index.html":{},"changelog.html":{},"pipes/IsFixedPipe.html":{}}}],["fixed.pip",{"_index":442,"title":{},"body":{"modules/GridModule.html":{}}}],["fixed.pipe.t",{"_index":494,"title":{},"body":{"pipes/IsFixedPipe.html":{}}}],["fixed.pipe.ts:10",{"_index":499,"title":{},"body":{"pipes/IsFixedPipe.html":{}}}],["fixes.1.0.0",{"_index":359,"title":{},"body":{"changelog.html":{}}}],["flag",{"_index":146,"title":{},"body":{"index.html":{}}}],["folder",{"_index":49,"title":{},"body":{"index.html":{}}}],["follow",{"_index":265,"title":{},"body":{"index.html":{},"license.html":{}}}],["format",{"_index":229,"title":{},"body":{"index.html":{}}}],["formatt",{"_index":569,"title":{},"body":{"classes/FormatterParser.html":{}}}],["formatterpars",{"_index":566,"title":{"classes/FormatterParser.html":{}},"body":{"classes/FormatterParser.html":{}}}],["formatting/pars",{"_index":352,"title":{},"body":{"changelog.html":{}}}],["formatvalu",{"_index":572,"title":{},"body":{"classes/FormatterParser.html":{}}}],["formatvalue(valu",{"_index":574,"title":{},"body":{"classes/FormatterParser.html":{}}}],["formsmodul",{"_index":433,"title":{},"body":{"modules/GridModule.html":{}}}],["forroot(globalconfig",{"_index":462,"title":{},"body":{"modules/GridModule.html":{}}}],["free",{"_index":374,"title":{},"body":{"license.html":{}}}],["from.nvisiblerow",{"_index":188,"title":{},"body":{"index.html":{}}}],["full",{"_index":23,"title":{},"body":{"index.html":{}}}],["function",{"_index":107,"title":{},"body":{"index.html":{}}}],["furnish",{"_index":392,"title":{},"body":{"license.html":{}}}],["gender",{"_index":292,"title":{},"body":{"index.html":{}}}],["gener",{"_index":556,"title":{},"body":{"classes/EmptyFactory.html":{},"classes/InjectableFactory.html":{},"interfaces/InjectableConstructor.html":{}}}],["get",{"_index":11,"title":{"index.html":{},"changelog.html":{},"license.html":{}},"body":{"index.html":{}}}],["getasc",{"_index":631,"title":{},"body":{"classes/SortInfo.html":{}}}],["getfield",{"_index":632,"title":{},"body":{"classes/SortInfo.html":{}}}],["getid",{"_index":588,"title":{},"body":{"classes/HtmlUtil.html":{}}}],["getid(",{"_index":591,"title":{},"body":{"classes/HtmlUtil.html":{}}}],["getidel",{"_index":589,"title":{},"body":{"classes/HtmlUtil.html":{}}}],["getidelement(",{"_index":595,"title":{},"body":{"classes/HtmlUtil.html":{}}}],["getinst",{"_index":558,"title":{},"body":{"classes/EmptyFactory.html":{},"classes/InjectableFactory.html":{},"interfaces/EmptyConstructor.html":{},"interfaces/InjectableConstructor.html":{}}}],["getloc",{"_index":590,"title":{},"body":{"classes/HtmlUtil.html":{}}}],["getlocation(",{"_index":597,"title":{},"body":{"classes/HtmlUtil.html":{}}}],["getmessageobserv",{"_index":487,"title":{},"body":{"injectables/GridMessageService.html":{}}}],["github",{"_index":20,"title":{},"body":{"index.html":{}}}],["global",{"_index":134,"title":{},"body":{"index.html":{},"changelog.html":{}}}],["global.servic",{"_index":457,"title":{},"body":{"modules/GridModule.html":{}}}],["globalconfig",{"_index":463,"title":{},"body":{"modules/GridModule.html":{}}}],["grant",{"_index":373,"title":{},"body":{"license.html":{}}}],["grid",{"_index":16,"title":{},"body":{"index.html":{},"changelog.html":{}}}],["grid\";@ngmodul",{"_index":42,"title":{},"body":{"index.html":{}}}],["grid'",{"_index":150,"title":{},"body":{"index.html":{}}}],["grid.cellclick",{"_index":233,"title":{},"body":{"index.html":{}}}],["grid.compon",{"_index":436,"title":{},"body":{"modules/GridModule.html":{}}}],["grid.groupbi",{"_index":167,"title":{},"body":{"index.html":{}}}],["grid.linkedgroup",{"_index":140,"title":{},"body":{"index.html":{}}}],["grid.them",{"_index":159,"title":{},"body":{"index.html":{}}}],["gridcompon",{"_index":316,"title":{},"body":{"overview.html":{},"modules/GridModule.html":{}}}],["grideventservic",{"_index":327,"title":{},"body":{"overview.html":{},"modules/GridModule.html":{}}}],["gridglobalservic",{"_index":455,"title":{},"body":{"modules/GridModule.html":{}}}],["gridmessageservic",{"_index":328,"title":{"injectables/GridMessageService.html":{}},"body":{"overview.html":{},"modules/GridModule.html":{},"injectables/GridMessageService.html":{}}}],["gridmodul",{"_index":41,"title":{"modules/GridModule.html":{}},"body":{"index.html":{},"overview.html":{},"modules.html":{},"modules/GridModule.html":{}}}],["gridmodule.forroot",{"_index":43,"title":{},"body":{"index.html":{}}}],["gridservic",{"_index":326,"title":{},"body":{"overview.html":{},"modules/GridModule.html":{}}}],["group",{"_index":80,"title":{},"body":{"index.html":{}}}],["group.pip",{"_index":441,"title":{},"body":{"modules/GridModule.html":{}}}],["group.pipe.t",{"_index":503,"title":{},"body":{"pipes/IsGroupPipe.html":{}}}],["group.pipe.ts:9",{"_index":505,"title":{},"body":{"pipes/IsGroupPipe.html":{}}}],["groupbycollaps",{"_index":170,"title":{},"body":{"index.html":{}}}],["handl",{"_index":25,"title":{},"body":{"index.html":{}}}],["hci",{"_index":18,"title":{},"body":{"index.html":{}}}],["hci'",{"_index":14,"title":{},"body":{"index.html":{}}}],["header",{"_index":66,"title":{},"body":{"index.html":{}}}],["header.compon",{"_index":438,"title":{},"body":{"modules/GridModule.html":{}}}],["here",{"_index":100,"title":{},"body":{"index.html":{}}}],["herebi",{"_index":372,"title":{},"body":{"license.html":{}}}],["hidden",{"_index":174,"title":{},"body":{"index.html":{},"classes/CellTextView.html":{}}}],["high",{"_index":273,"title":{},"body":{"index.html":{}}}],["holder",{"_index":409,"title":{},"body":{"license.html":{},"classes/Cell.html":{}}}],["html",{"_index":132,"title":{},"body":{"index.html":{}}}],["htmlelement",{"_index":534,"title":{},"body":{"classes/CellTextView.html":{},"classes/HtmlUtil.html":{}}}],["htmlelement;a",{"_index":264,"title":{},"body":{"index.html":{}}}],["htmlutil",{"_index":581,"title":{"classes/HtmlUtil.html":{}},"body":{"classes/HtmlUtil.html":{}}}],["huntsman",{"_index":366,"title":{},"body":{"license.html":{},"modules/GridModule.html":{}}}],["ic",{"_index":612,"title":{},"body":{"classes/InjectableFactory.html":{},"interfaces/InjectableConstructor.html":{}}}],["id",{"_index":133,"title":{},"body":{"index.html":{},"classes/HtmlUtil.html":{}}}],["implement",{"_index":105,"title":{},"body":{"index.html":{},"pipes/IsFixedPipe.html":{},"pipes/IsGroupPipe.html":{},"pipes/IsRowVisiblePipe.html":{},"pipes/IsVisiblePipe.html":{},"classes/CellTextView.html":{},"classes/InjectableFactory.html":{},"interfaces/InjectableConstructor.html":{}}}],["impli",{"_index":402,"title":{},"body":{"license.html":{}}}],["import",{"_index":40,"title":{},"body":{"index.html":{},"modules/GridModule.html":{},"injectables/GridMessageService.html":{},"pipes/IsFixedPipe.html":{},"pipes/IsGroupPipe.html":{},"pipes/IsRowVisiblePipe.html":{},"pipes/IsVisiblePipe.html":{},"classes/CellTextView.html":{},"classes/HtmlUtil.html":{},"classes/InjectableFactory.html":{},"interfaces/EventListenerArg.html":{},"interfaces/InjectableConstructor.html":{}}}],["improv",{"_index":351,"title":{},"body":{"changelog.html":{}}}],["in.onconfigchang",{"_index":231,"title":{},"body":{"index.html":{}}}],["includ",{"_index":385,"title":{},"body":{"license.html":{}}}],["index",{"_index":13,"title":{"index.html":{}},"body":{"injectables/GridMessageService.html":{},"classes/Cell.html":{},"classes/CellTextView.html":{},"classes/EmptyFactory.html":{},"classes/FormatterParser.html":{},"classes/HtmlUtil.html":{},"classes/InjectableFactory.html":{},"classes/RowChange.html":{},"classes/SortInfo.html":{},"interfaces/ClickListener.html":{},"interfaces/DblClickListener.html":{},"interfaces/Dictionary.html":{},"interfaces/EventListenerArg.html":{},"interfaces/MouseDownListener.html":{},"interfaces/MouseDragListener.html":{},"interfaces/MouseOverListener.html":{},"interfaces/MouseUpListener.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":422,"title":{},"body":{"modules/GridModule.html":{},"injectables/GridMessageService.html":{},"pipes/IsFixedPipe.html":{},"pipes/IsGroupPipe.html":{},"pipes/IsRowVisiblePipe.html":{},"pipes/IsVisiblePipe.html":{},"classes/Cell.html":{},"classes/CellTextView.html":{},"classes/EmptyFactory.html":{},"classes/FormatterParser.html":{},"classes/HtmlUtil.html":{},"classes/InjectableFactory.html":{},"classes/RowChange.html":{},"classes/SortInfo.html":{},"interfaces/ClickListener.html":{},"interfaces/DblClickListener.html":{},"interfaces/Dictionary.html":{},"interfaces/EmptyConstructor.html":{},"interfaces/EventListenerArg.html":{},"interfaces/InjectableConstructor.html":{},"interfaces/MouseDownListener.html":{},"interfaces/MouseDragListener.html":{},"interfaces/MouseOverListener.html":{},"interfaces/MouseUpListener.html":{}}}],["info.id",{"_index":131,"title":{},"body":{"index.html":{}}}],["info.t",{"_index":628,"title":{},"body":{"classes/SortInfo.html":{}}}],["info.ts:13",{"_index":636,"title":{},"body":{"classes/SortInfo.html":{}}}],["info.ts:17",{"_index":640,"title":{},"body":{"classes/SortInfo.html":{}}}],["info.ts:2",{"_index":641,"title":{},"body":{"classes/SortInfo.html":{}}}],["info.ts:3",{"_index":642,"title":{},"body":{"classes/SortInfo.html":{}}}],["info.ts:5",{"_index":635,"title":{},"body":{"classes/SortInfo.html":{}}}],["info.ts:9",{"_index":638,"title":{},"body":{"classes/SortInfo.html":{}}}],["initi",{"_index":360,"title":{},"body":{"changelog.html":{}}}],["inject",{"_index":334,"title":{"injectables/GridMessageService.html":{}},"body":{"overview.html":{},"injectables/GridMessageService.html":{}}}],["injectableconstructor",{"_index":610,"title":{"interfaces/InjectableConstructor.html":{}},"body":{"classes/InjectableFactory.html":{},"interfaces/InjectableConstructor.html":{}}}],["injectablefactori",{"_index":605,"title":{"classes/InjectableFactory.html":{}},"body":{"classes/InjectableFactory.html":{},"interfaces/InjectableConstructor.html":{}}}],["injector",{"_index":607,"title":{},"body":{"classes/InjectableFactory.html":{},"interfaces/InjectableConstructor.html":{}}}],["input",{"_index":121,"title":{},"body":{"index.html":{}}}],["instanti",{"_index":555,"title":{},"body":{"classes/EmptyFactory.html":{},"classes/InjectableFactory.html":{},"interfaces/InjectableConstructor.html":{}}}],["instead",{"_index":58,"title":{},"body":{"index.html":{}}}],["institut",{"_index":368,"title":{},"body":{"license.html":{},"modules/GridModule.html":{}}}],["interfac",{"_index":259,"title":{"interfaces/ClickListener.html":{},"interfaces/DblClickListener.html":{},"interfaces/Dictionary.html":{},"interfaces/EmptyConstructor.html":{},"interfaces/EventListenerArg.html":{},"interfaces/InjectableConstructor.html":{},"interfaces/MouseDownListener.html":{},"interfaces/MouseDragListener.html":{},"interfaces/MouseOverListener.html":{},"interfaces/MouseUpListener.html":{}},"body":{"index.html":{},"overview.html":{},"classes/EmptyFactory.html":{},"classes/InjectableFactory.html":{},"interfaces/ClickListener.html":{},"interfaces/DblClickListener.html":{},"interfaces/Dictionary.html":{},"interfaces/EmptyConstructor.html":{},"interfaces/EventListenerArg.html":{},"interfaces/InjectableConstructor.html":{},"interfaces/MouseDownListener.html":{},"interfaces/MouseDragListener.html":{},"interfaces/MouseOverListener.html":{},"interfaces/MouseUpListener.html":{}}}],["intro",{"_index":21,"title":{},"body":{"index.html":{}}}],["introduc",{"_index":303,"title":{},"body":{"index.html":{}}}],["isfix",{"_index":496,"title":{},"body":{"pipes/IsFixedPipe.html":{}}}],["isfixedpip",{"_index":320,"title":{"pipes/IsFixedPipe.html":{}},"body":{"overview.html":{},"modules/GridModule.html":{},"pipes/IsFixedPipe.html":{}}}],["isgroup",{"_index":504,"title":{},"body":{"pipes/IsGroupPipe.html":{}}}],["isgrouppip",{"_index":319,"title":{"pipes/IsGroupPipe.html":{}},"body":{"overview.html":{},"modules/GridModule.html":{},"pipes/IsGroupPipe.html":{}}}],["isrowvis",{"_index":509,"title":{},"body":{"pipes/IsRowVisiblePipe.html":{}}}],["isrowvisiblepip",{"_index":321,"title":{"pipes/IsRowVisiblePipe.html":{}},"body":{"overview.html":{},"modules/GridModule.html":{},"pipes/IsRowVisiblePipe.html":{}}}],["issu",{"_index":300,"title":{},"body":{"index.html":{}}}],["isvis",{"_index":513,"title":{},"body":{"pipes/IsVisiblePipe.html":{}}}],["isvisiblepip",{"_index":318,"title":{"pipes/IsVisiblePipe.html":{}},"body":{"overview.html":{},"modules/GridModule.html":{},"pipes/IsVisiblePipe.html":{}}}],["j",{"_index":218,"title":{},"body":{"index.html":{},"classes/CellTextView.html":{}}}],["json",{"_index":136,"title":{},"body":{"index.html":{}}}],["key",{"_index":207,"title":{},"body":{"index.html":{},"classes/Cell.html":{}}}],["key1",{"_index":243,"title":{},"body":{"index.html":{}}}],["key2",{"_index":244,"title":{},"body":{"index.html":{}}}],["keyword",{"_index":340,"title":{},"body":{"changelog.html":{}}}],["kind",{"_index":400,"title":{},"body":{"license.html":{}}}],["known",{"_index":299,"title":{},"body":{"index.html":{}}}],["lab",{"_index":267,"title":{},"body":{"index.html":{}}}],["last",{"_index":76,"title":{},"body":{"index.html":{}}}],["left",{"_index":165,"title":{},"body":{"index.html":{},"classes/CellTextView.html":{}}}],["legend",{"_index":308,"title":{},"body":{"overview.html":{},"modules/GridModule.html":{}}}],["liabil",{"_index":413,"title":{},"body":{"license.html":{}}}],["liabl",{"_index":410,"title":{},"body":{"license.html":{}}}],["librari",{"_index":17,"title":{},"body":{"index.html":{}}}],["licens",{"_index":344,"title":{"license.html":{}},"body":{"changelog.html":{}}}],["limit",{"_index":191,"title":{},"body":{"index.html":{},"license.html":{}}}],["link",{"_index":142,"title":{},"body":{"index.html":{}}}],["list",{"_index":99,"title":{},"body":{"index.html":{},"pipes/IsFixedPipe.html":{},"pipes/IsGroupPipe.html":{},"pipes/IsRowVisiblePipe.html":{},"pipes/IsVisiblePipe.html":{}}}],["list.filter((o",{"_index":501,"title":{},"body":{"pipes/IsFixedPipe.html":{},"pipes/IsGroupPipe.html":{},"pipes/IsRowVisiblePipe.html":{},"pipes/IsVisiblePipe.html":{}}}],["listen",{"_index":89,"title":{},"body":{"index.html":{},"changelog.html":{},"interfaces/EventListenerArg.html":{}}}],["load",{"_index":202,"title":{},"body":{"index.html":{}}}],["locat",{"_index":223,"title":{},"body":{"index.html":{}}}],["log",{"_index":338,"title":{},"body":{"changelog.html":{}}}],["low",{"_index":271,"title":{},"body":{"index.html":{}}}],["male",{"_index":297,"title":{},"body":{"index.html":{}}}],["manag",{"_index":518,"title":{},"body":{"classes/Cell.html":{}}}],["mani",{"_index":97,"title":{},"body":{"index.html":{}}}],["margin",{"_index":544,"title":{},"body":{"classes/CellTextView.html":{}}}],["match",{"_index":10,"title":{},"body":{"dependencies.html":{},"index.html":{},"overview.html":{},"changelog.html":{},"license.html":{},"modules.html":{},"modules/GridModule.html":{},"injectables/GridMessageService.html":{},"pipes/IsFixedPipe.html":{},"pipes/IsGroupPipe.html":{},"pipes/IsRowVisiblePipe.html":{},"pipes/IsVisiblePipe.html":{},"classes/Cell.html":{},"classes/CellTextView.html":{},"classes/EmptyFactory.html":{},"classes/FormatterParser.html":{},"classes/HtmlUtil.html":{},"classes/InjectableFactory.html":{},"classes/RowChange.html":{},"classes/SortInfo.html":{},"interfaces/ClickListener.html":{},"interfaces/DblClickListener.html":{},"interfaces/Dictionary.html":{},"interfaces/EmptyConstructor.html":{},"interfaces/EventListenerArg.html":{},"interfaces/InjectableConstructor.html":{},"interfaces/MouseDownListener.html":{},"interfaces/MouseDragListener.html":{},"interfaces/MouseOverListener.html":{},"interfaces/MouseUpListener.html":{},"miscellaneous/variables.html":{}}}],["menu.compon",{"_index":454,"title":{},"body":{"modules/GridModule.html":{}}}],["merchant",{"_index":403,"title":{},"body":{"license.html":{}}}],["merg",{"_index":386,"title":{},"body":{"license.html":{}}}],["messag",{"_index":239,"title":{},"body":{"index.html":{},"injectables/GridMessageService.html":{}}}],["message.service.t",{"_index":466,"title":{},"body":{"injectables/GridMessageService.html":{}}}],["message.service.ts:10",{"_index":483,"title":{},"body":{"injectables/GridMessageService.html":{}}}],["message.service.ts:12",{"_index":477,"title":{},"body":{"injectables/GridMessageService.html":{}}}],["message.service.ts:16",{"_index":481,"title":{},"body":{"injectables/GridMessageService.html":{}}}],["message.service.ts:20",{"_index":488,"title":{},"body":{"injectables/GridMessageService.html":{}}}],["message.service.ts:8",{"_index":484,"title":{},"body":{"injectables/GridMessageService.html":{}}}],["message.service.ts:9",{"_index":486,"title":{},"body":{"injectables/GridMessageService.html":{}}}],["messageobserv",{"_index":474,"title":{},"body":{"injectables/GridMessageService.html":{}}}],["metadata",{"_index":495,"title":{},"body":{"pipes/IsFixedPipe.html":{},"pipes/IsGroupPipe.html":{},"pipes/IsRowVisiblePipe.html":{},"pipes/IsVisiblePipe.html":{},"classes/Cell.html":{}}}],["method",{"_index":260,"title":{},"body":{"index.html":{},"injectables/GridMessageService.html":{},"pipes/IsFixedPipe.html":{},"pipes/IsGroupPipe.html":{},"pipes/IsRowVisiblePipe.html":{},"pipes/IsVisiblePipe.html":{},"classes/CellTextView.html":{},"classes/EmptyFactory.html":{},"classes/FormatterParser.html":{},"classes/HtmlUtil.html":{},"classes/InjectableFactory.html":{},"classes/SortInfo.html":{},"interfaces/ClickListener.html":{},"interfaces/DblClickListener.html":{},"interfaces/MouseDownListener.html":{},"interfaces/MouseDragListener.html":{},"interfaces/MouseOverListener.html":{},"interfaces/MouseUpListener.html":{}}}],["miscellan",{"_index":685,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["mm/dd/yyyi",{"_index":288,"title":{},"body":{"index.html":{}}}],["mock",{"_index":108,"title":{},"body":{"index.html":{}}}],["mode",{"_index":211,"title":{},"body":{"index.html":{}}}],["modif",{"_index":571,"title":{},"body":{"classes/FormatterParser.html":{}}}],["modifi",{"_index":149,"title":{},"body":{"index.html":{},"license.html":{}}}],["modul",{"_index":310,"title":{"modules.html":{},"modules/GridModule.html":{}},"body":{"overview.html":{},"modules.html":{},"modules/GridModule.html":{}}}],["modulewithprovid",{"_index":428,"title":{},"body":{"modules/GridModule.html":{}}}],["moment",{"_index":7,"title":{},"body":{"dependencies.html":{}}}],["more",{"_index":82,"title":{},"body":{"index.html":{}}}],["mousedown",{"_index":667,"title":{},"body":{"interfaces/MouseDownListener.html":{}}}],["mousedown(ev",{"_index":668,"title":{},"body":{"interfaces/MouseDownListener.html":{}}}],["mousedownlisten",{"_index":664,"title":{"interfaces/MouseDownListener.html":{}},"body":{"interfaces/MouseDownListener.html":{}}}],["mousedrag",{"_index":672,"title":{},"body":{"interfaces/MouseDragListener.html":{}}}],["mousedrag(ev",{"_index":673,"title":{},"body":{"interfaces/MouseDragListener.html":{}}}],["mousedraglisten",{"_index":670,"title":{"interfaces/MouseDragListener.html":{}},"body":{"interfaces/MouseDragListener.html":{}}}],["mouseev",{"_index":648,"title":{},"body":{"interfaces/ClickListener.html":{},"interfaces/DblClickListener.html":{},"interfaces/MouseDownListener.html":{},"interfaces/MouseDragListener.html":{},"interfaces/MouseOverListener.html":{},"interfaces/MouseUpListener.html":{}}}],["mouseov",{"_index":677,"title":{},"body":{"interfaces/MouseOverListener.html":{}}}],["mouseover(ev",{"_index":678,"title":{},"body":{"interfaces/MouseOverListener.html":{}}}],["mouseoverlisten",{"_index":675,"title":{"interfaces/MouseOverListener.html":{}},"body":{"interfaces/MouseOverListener.html":{}}}],["mouseup",{"_index":682,"title":{},"body":{"interfaces/MouseUpListener.html":{}}}],["mouseup(ev",{"_index":683,"title":{},"body":{"interfaces/MouseUpListener.html":{}}}],["mouseuplisten",{"_index":680,"title":{"interfaces/MouseUpListener.html":{}},"body":{"interfaces/MouseUpListener.html":{}}}],["move",{"_index":47,"title":{},"body":{"index.html":{}}}],["multi",{"_index":458,"title":{},"body":{"modules/GridModule.html":{}}}],["name",{"_index":141,"title":{},"body":{"index.html":{},"injectables/GridMessageService.html":{},"pipes/IsFixedPipe.html":{},"pipes/IsGroupPipe.html":{},"pipes/IsRowVisiblePipe.html":{},"pipes/IsVisiblePipe.html":{},"classes/Cell.html":{},"classes/CellTextView.html":{},"classes/EmptyFactory.html":{},"classes/FormatterParser.html":{},"classes/HtmlUtil.html":{},"classes/InjectableFactory.html":{},"classes/RowChange.html":{},"classes/SortInfo.html":{},"interfaces/ClickListener.html":{},"interfaces/DblClickListener.html":{},"interfaces/MouseDownListener.html":{},"interfaces/MouseDragListener.html":{},"interfaces/MouseOverListener.html":{},"interfaces/MouseUpListener.html":{}}}],["navig",{"_index":197,"title":{},"body":{"index.html":{}}}],["nearli",{"_index":26,"title":{},"body":{"index.html":{}}}],["need",{"_index":517,"title":{},"body":{"classes/Cell.html":{}}}],["new",{"_index":113,"title":{},"body":{"index.html":{},"injectables/GridMessageService.html":{},"classes/EmptyFactory.html":{},"classes/InjectableFactory.html":{},"interfaces/EmptyConstructor.html":{},"interfaces/InjectableConstructor.html":{}}}],["new(injector",{"_index":615,"title":{},"body":{"classes/InjectableFactory.html":{},"interfaces/InjectableConstructor.html":{}}}],["newrownum",{"_index":619,"title":{},"body":{"classes/RowChange.html":{}}}],["newvalu",{"_index":222,"title":{},"body":{"index.html":{}}}],["next",{"_index":78,"title":{},"body":{"index.html":{}}}],["ng",{"_index":2,"title":{},"body":{"dependencies.html":{},"index.html":{},"modules/GridModule.html":{}}}],["ngbmodul",{"_index":435,"title":{},"body":{"modules/GridModule.html":{}}}],["ngbmodule.forroot",{"_index":460,"title":{},"body":{"modules/GridModule.html":{}}}],["ngmodul",{"_index":429,"title":{},"body":{"modules/GridModule.html":{}}}],["nlab",{"_index":266,"title":{},"body":{"index.html":{}}}],["no_ev",{"_index":688,"title":{},"body":{"miscellaneous/variables.html":{}}}],["noninfring",{"_index":407,"title":{},"body":{"license.html":{}}}],["note",{"_index":96,"title":{},"body":{"index.html":{}}}],["notic",{"_index":395,"title":{},"body":{"license.html":{}}}],["npmignore.2.0.1",{"_index":342,"title":{},"body":{"changelog.html":{}}}],["npmpack",{"_index":56,"title":{},"body":{"index.html":{}}}],["npmpublish",{"_index":57,"title":{},"body":{"index.html":{}}}],["null",{"_index":603,"title":{},"body":{"classes/HtmlUtil.html":{},"classes/SortInfo.html":{}}}],["number",{"_index":180,"title":{},"body":{"index.html":{},"injectables/GridMessageService.html":{},"classes/Cell.html":{},"classes/CellTextView.html":{},"classes/RowChange.html":{},"miscellaneous/variables.html":{}}}],["numer",{"_index":358,"title":{},"body":{"changelog.html":{}}}],["o",{"_index":522,"title":{},"body":{"classes/Cell.html":{}}}],["o.isfix",{"_index":502,"title":{},"body":{"pipes/IsFixedPipe.html":{}}}],["o.isgroup",{"_index":506,"title":{},"body":{"pipes/IsGroupPipe.html":{}}}],["o.isutil",{"_index":507,"title":{},"body":{"pipes/IsGroupPipe.html":{}}}],["o.vis",{"_index":512,"title":{},"body":{"pipes/IsRowVisiblePipe.html":{},"pipes/IsVisiblePipe.html":{}}}],["object",{"_index":123,"title":{},"body":{"index.html":{},"classes/Cell.html":{}}}],["object.assign(thi",{"_index":525,"title":{},"body":{"classes/Cell.html":{}}}],["objects.fixedcolumn",{"_index":163,"title":{},"body":{"index.html":{}}}],["observ",{"_index":357,"title":{},"body":{"changelog.html":{},"injectables/GridMessageService.html":{}}}],["obtain",{"_index":377,"title":{},"body":{"license.html":{}}}],["old",{"_index":224,"title":{},"body":{"index.html":{}}}],["oldrownum",{"_index":620,"title":{},"body":{"classes/RowChange.html":{}}}],["oldvalu",{"_index":221,"title":{},"body":{"index.html":{}}}],["on",{"_index":81,"title":{},"body":{"index.html":{}}}],["oncellsav",{"_index":216,"title":{},"body":{"index.html":{}}}],["onrowsav",{"_index":196,"title":{},"body":{"index.html":{}}}],["option",{"_index":139,"title":{},"body":{"index.html":{},"injectables/GridMessageService.html":{},"pipes/IsFixedPipe.html":{},"pipes/IsGroupPipe.html":{},"pipes/IsRowVisiblePipe.html":{},"pipes/IsVisiblePipe.html":{},"classes/Cell.html":{},"classes/CellTextView.html":{},"classes/EmptyFactory.html":{},"classes/FormatterParser.html":{},"classes/HtmlUtil.html":{},"classes/InjectableFactory.html":{},"classes/RowChange.html":{},"classes/SortInfo.html":{},"interfaces/ClickListener.html":{},"interfaces/DblClickListener.html":{},"interfaces/EventListenerArg.html":{},"interfaces/MouseDownListener.html":{},"interfaces/MouseDragListener.html":{},"interfaces/MouseOverListener.html":{},"interfaces/MouseUpListener.html":{}}}],["origin",{"_index":230,"title":{},"body":{"index.html":{}}}],["originalrowdata",{"_index":228,"title":{},"body":{"index.html":{}}}],["otherwis",{"_index":417,"title":{},"body":{"license.html":{}}}],["out",{"_index":331,"title":{},"body":{"overview.html":{},"license.html":{},"modules/GridModule.html":{}}}],["over.interface.t",{"_index":676,"title":{},"body":{"interfaces/MouseOverListener.html":{}}}],["over.interface.ts:3",{"_index":679,"title":{},"body":{"interfaces/MouseOverListener.html":{}}}],["overflow",{"_index":548,"title":{},"body":{"classes/CellTextView.html":{}}}],["overview",{"_index":307,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["pack",{"_index":60,"title":{},"body":{"index.html":{}}}],["packag",{"_index":0,"title":{"dependencies.html":{}},"body":{"index.html":{}}}],["package.json",{"_index":51,"title":{},"body":{"index.html":{}}}],["pad",{"_index":542,"title":{},"body":{"classes/CellTextView.html":{}}}],["page",{"_index":72,"title":{},"body":{"index.html":{}}}],["paramet",{"_index":478,"title":{},"body":{"injectables/GridMessageService.html":{},"pipes/IsFixedPipe.html":{},"pipes/IsGroupPipe.html":{},"pipes/IsRowVisiblePipe.html":{},"pipes/IsVisiblePipe.html":{},"classes/Cell.html":{},"classes/CellTextView.html":{},"classes/EmptyFactory.html":{},"classes/FormatterParser.html":{},"classes/HtmlUtil.html":{},"classes/InjectableFactory.html":{},"classes/RowChange.html":{},"classes/SortInfo.html":{},"interfaces/ClickListener.html":{},"interfaces/DblClickListener.html":{},"interfaces/MouseDownListener.html":{},"interfaces/MouseDragListener.html":{},"interfaces/MouseOverListener.html":{},"interfaces/MouseUpListener.html":{}}}],["parser",{"_index":570,"title":{},"body":{"classes/FormatterParser.html":{}}}],["parser.t",{"_index":568,"title":{},"body":{"classes/FormatterParser.html":{}}}],["parser.ts:12",{"_index":575,"title":{},"body":{"classes/FormatterParser.html":{}}}],["parser.ts:20",{"_index":577,"title":{},"body":{"classes/FormatterParser.html":{}}}],["parser.ts:6",{"_index":579,"title":{},"body":{"classes/FormatterParser.html":{}}}],["parser.ts:8",{"_index":578,"title":{},"body":{"classes/FormatterParser.html":{}}}],["parsevalu",{"_index":573,"title":{},"body":{"classes/FormatterParser.html":{}}}],["parsevalue(valu",{"_index":576,"title":{},"body":{"classes/FormatterParser.html":{}}}],["particular",{"_index":405,"title":{},"body":{"license.html":{}}}],["pass",{"_index":130,"title":{},"body":{"index.html":{}}}],["per",{"_index":181,"title":{},"body":{"index.html":{}}}],["perform",{"_index":206,"title":{},"body":{"index.html":{}}}],["permiss",{"_index":371,"title":{},"body":{"license.html":{}}}],["permit",{"_index":391,"title":{},"body":{"license.html":{}}}],["person",{"_index":376,"title":{},"body":{"license.html":{}}}],["pipe",{"_index":335,"title":{"pipes/IsFixedPipe.html":{},"pipes/IsGroupPipe.html":{},"pipes/IsRowVisiblePipe.html":{},"pipes/IsVisiblePipe.html":{}},"body":{"overview.html":{},"pipes/IsFixedPipe.html":{},"pipes/IsGroupPipe.html":{},"pipes/IsRowVisiblePipe.html":{},"pipes/IsVisiblePipe.html":{}}}],["pipetransform",{"_index":500,"title":{},"body":{"pipes/IsFixedPipe.html":{},"pipes/IsGroupPipe.html":{},"pipes/IsRowVisiblePipe.html":{},"pipes/IsVisiblePipe.html":{}}}],["point",{"_index":599,"title":{},"body":{"classes/HtmlUtil.html":{}}}],["point.getpoint(this.getid(",{"_index":604,"title":{},"body":{"classes/HtmlUtil.html":{}}}],["popup).selectedrow",{"_index":242,"title":{},"body":{"index.html":{}}}],["popup.compon",{"_index":452,"title":{},"body":{"modules/GridModule.html":{}}}],["portion",{"_index":398,"title":{},"body":{"license.html":{}}}],["possibl",{"_index":71,"title":{},"body":{"index.html":{}}}],["previou",{"_index":77,"title":{},"body":{"index.html":{}}}],["privat",{"_index":468,"title":{},"body":{"injectables/GridMessageService.html":{},"classes/InjectableFactory.html":{},"interfaces/InjectableConstructor.html":{}}}],["promis",{"_index":111,"title":{},"body":{"index.html":{},"changelog.html":{}}}],["promise((resolv",{"_index":114,"title":{},"body":{"index.html":{}}}],["properti",{"_index":467,"title":{},"body":{"injectables/GridMessageService.html":{},"classes/Cell.html":{},"classes/FormatterParser.html":{},"classes/RowChange.html":{},"classes/SortInfo.html":{},"interfaces/Dictionary.html":{},"interfaces/EventListenerArg.html":{}}}],["proprietari",{"_index":427,"title":{},"body":{"modules/GridModule.html":{}}}],["provid",{"_index":104,"title":{},"body":{"index.html":{},"overview.html":{},"license.html":{},"modules/GridModule.html":{}}}],["public",{"_index":629,"title":{},"body":{"classes/SortInfo.html":{}}}],["publish",{"_index":44,"title":{},"body":{"index.html":{},"license.html":{}}}],["publish.bas",{"_index":61,"title":{},"body":{"index.html":{}}}],["pull",{"_index":585,"title":{},"body":{"classes/HtmlUtil.html":{}}}],["pure",{"_index":255,"title":{},"body":{"index.html":{},"pipes/IsFixedPipe.html":{}}}],["purpos",{"_index":406,"title":{},"body":{"license.html":{}}}],["rang",{"_index":70,"title":{},"body":{"index.html":{}}}],["re",{"_index":250,"title":{},"body":{"index.html":{}}}],["readm",{"_index":343,"title":{},"body":{"changelog.html":{}}}],["readme.md",{"_index":362,"title":{},"body":{"changelog.html":{}}}],["refactor",{"_index":346,"title":{},"body":{"changelog.html":{}}}],["referenc",{"_index":355,"title":{},"body":{"changelog.html":{}}}],["refresh",{"_index":248,"title":{},"body":{"index.html":{}}}],["reject",{"_index":115,"title":{},"body":{"index.html":{}}}],["releas",{"_index":361,"title":{},"body":{"changelog.html":{}}}],["render",{"_index":246,"title":{},"body":{"index.html":{},"changelog.html":{},"classes/Cell.html":{},"classes/CellTextView.html":{}}}],["renderer.appendchild(span",{"_index":552,"title":{},"body":{"classes/CellTextView.html":{}}}],["renderer.compon",{"_index":445,"title":{},"body":{"modules/GridModule.html":{}}}],["renderer.createelement(\"span",{"_index":540,"title":{},"body":{"classes/CellTextView.html":{}}}],["renderer.createtext(column.formatvalue(valu",{"_index":551,"title":{},"body":{"classes/CellTextView.html":{}}}],["renderer.interfac",{"_index":538,"title":{},"body":{"classes/CellTextView.html":{}}}],["renderer.setstyle(span",{"_index":541,"title":{},"body":{"classes/CellTextView.html":{}}}],["renderer2",{"_index":263,"title":{},"body":{"index.html":{},"classes/CellTextView.html":{}}}],["report",{"_index":161,"title":{},"body":{"index.html":{}}}],["request",{"_index":305,"title":{},"body":{"index.html":{}}}],["requir",{"_index":54,"title":{},"body":{"index.html":{}}}],["reset",{"_index":330,"title":{},"body":{"overview.html":{},"modules/GridModule.html":{}}}],["resiz",{"_index":689,"title":{},"body":{"miscellaneous/variables.html":{}}}],["resolve(externaldata",{"_index":119,"title":{},"body":{"index.html":{}}}],["restrict",{"_index":384,"title":{},"body":{"license.html":{}}}],["result",{"_index":9,"title":{},"body":{"dependencies.html":{},"index.html":{},"overview.html":{},"changelog.html":{},"license.html":{},"modules.html":{},"modules/GridModule.html":{},"injectables/GridMessageService.html":{},"pipes/IsFixedPipe.html":{},"pipes/IsGroupPipe.html":{},"pipes/IsRowVisiblePipe.html":{},"pipes/IsVisiblePipe.html":{},"classes/Cell.html":{},"classes/CellTextView.html":{},"classes/EmptyFactory.html":{},"classes/FormatterParser.html":{},"classes/HtmlUtil.html":{},"classes/InjectableFactory.html":{},"classes/RowChange.html":{},"classes/SortInfo.html":{},"interfaces/ClickListener.html":{},"interfaces/DblClickListener.html":{},"interfaces/Dictionary.html":{},"interfaces/EmptyConstructor.html":{},"interfaces/EventListenerArg.html":{},"interfaces/InjectableConstructor.html":{},"interfaces/MouseDownListener.html":{},"interfaces/MouseDragListener.html":{},"interfaces/MouseOverListener.html":{},"interfaces/MouseUpListener.html":{},"miscellaneous/variables.html":{}}}],["retriev",{"_index":86,"title":{},"body":{"index.html":{}}}],["return",{"_index":112,"title":{},"body":{"index.html":{},"modules/GridModule.html":{},"injectables/GridMessageService.html":{},"pipes/IsFixedPipe.html":{},"pipes/IsGroupPipe.html":{},"pipes/IsRowVisiblePipe.html":{},"pipes/IsVisiblePipe.html":{},"classes/CellTextView.html":{},"classes/EmptyFactory.html":{},"classes/FormatterParser.html":{},"classes/HtmlUtil.html":{},"classes/InjectableFactory.html":{},"classes/SortInfo.html":{},"interfaces/ClickListener.html":{},"interfaces/DblClickListener.html":{},"interfaces/EmptyConstructor.html":{},"interfaces/InjectableConstructor.html":{},"interfaces/MouseDownListener.html":{},"interfaces/MouseDragListener.html":{},"interfaces/MouseOverListener.html":{},"interfaces/MouseUpListener.html":{}}}],["right",{"_index":306,"title":{},"body":{"index.html":{},"license.html":{}}}],["row",{"_index":79,"title":{},"body":{"index.html":{},"changelog.html":{},"modules/GridModule.html":{},"pipes/IsRowVisiblePipe.html":{}}}],["row/row",{"_index":511,"title":{},"body":{"pipes/IsRowVisiblePipe.html":{}}}],["rowchang",{"_index":616,"title":{"classes/RowChange.html":{}},"body":{"classes/RowChange.html":{}}}],["rownum",{"_index":227,"title":{},"body":{"index.html":{}}}],["rows[i].key",{"_index":217,"title":{},"body":{"index.html":{}}}],["rxjs/rx",{"_index":489,"title":{},"body":{"injectables/GridMessageService.html":{}}}],["same",{"_index":193,"title":{},"body":{"index.html":{}}}],["save",{"_index":348,"title":{},"body":{"changelog.html":{}}}],["scroll",{"_index":192,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["see",{"_index":101,"title":{},"body":{"index.html":{},"changelog.html":{},"classes/InjectableFactory.html":{},"interfaces/InjectableConstructor.html":{}}}],["select",{"_index":69,"title":{},"body":{"index.html":{},"changelog.html":{}}}],["selectfilterrender",{"_index":298,"title":{},"body":{"index.html":{},"overview.html":{},"modules/GridModule.html":{}}}],["sell",{"_index":390,"title":{},"body":{"license.html":{}}}],["servic",{"_index":354,"title":{},"body":{"changelog.html":{}}}],["service.config",{"_index":135,"title":{},"body":{"index.html":{}}}],["services/grid",{"_index":456,"title":{},"body":{"modules/GridModule.html":{}}}],["setasc",{"_index":633,"title":{},"body":{"classes/SortInfo.html":{}}}],["setasc(asc",{"_index":637,"title":{},"body":{"classes/SortInfo.html":{}}}],["setconfig",{"_index":531,"title":{},"body":{"classes/CellTextView.html":{},"classes/FormatterParser.html":{}}}],["setconfig(config",{"_index":261,"title":{},"body":{"index.html":{},"classes/CellTextView.html":{},"classes/FormatterParser.html":{}}}],["setfield",{"_index":634,"title":{},"body":{"classes/SortInfo.html":{}}}],["setfield(field",{"_index":639,"title":{},"body":{"classes/SortInfo.html":{}}}],["settimeout",{"_index":118,"title":{},"body":{"index.html":{}}}],["sever",{"_index":256,"title":{},"body":{"index.html":{}}}],["shall",{"_index":396,"title":{},"body":{"license.html":{}}}],["shortcut",{"_index":209,"title":{},"body":{"index.html":{}}}],["show",{"_index":155,"title":{},"body":{"index.html":{}}}],["showicon",{"_index":275,"title":{},"body":{"index.html":{}}}],["shown",{"_index":175,"title":{},"body":{"index.html":{}}}],["side",{"_index":166,"title":{},"body":{"index.html":{}}}],["simpl",{"_index":34,"title":{},"body":{"index.html":{},"classes/FormatterParser.html":{}}}],["size",{"_index":74,"title":{},"body":{"index.html":{}}}],["size.saveondirtyrowchang",{"_index":194,"title":{},"body":{"index.html":{}}}],["softwar",{"_index":378,"title":{},"body":{"license.html":{}}}],["sort",{"_index":62,"title":{},"body":{"index.html":{}}}],["sortinfo",{"_index":626,"title":{"classes/SortInfo.html":{}},"body":{"classes/SortInfo.html":{}}}],["sourc",{"_index":87,"title":{},"body":{"index.html":{},"modules/GridModule.html":{},"injectables/GridMessageService.html":{},"pipes/IsFixedPipe.html":{},"pipes/IsGroupPipe.html":{},"pipes/IsRowVisiblePipe.html":{},"pipes/IsVisiblePipe.html":{},"classes/Cell.html":{},"classes/CellTextView.html":{},"classes/EmptyFactory.html":{},"classes/FormatterParser.html":{},"classes/HtmlUtil.html":{},"classes/InjectableFactory.html":{},"classes/RowChange.html":{},"classes/SortInfo.html":{},"interfaces/ClickListener.html":{},"interfaces/DblClickListener.html":{},"interfaces/Dictionary.html":{},"interfaces/EmptyConstructor.html":{},"interfaces/EventListenerArg.html":{},"interfaces/InjectableConstructor.html":{},"interfaces/MouseDownListener.html":{},"interfaces/MouseDragListener.html":{},"interfaces/MouseOverListener.html":{},"interfaces/MouseUpListener.html":{}}}],["span",{"_index":539,"title":{},"body":{"classes/CellTextView.html":{}}}],["specif",{"_index":92,"title":{},"body":{"index.html":{}}}],["specifi",{"_index":182,"title":{},"body":{"index.html":{}}}],["speed",{"_index":251,"title":{},"body":{"index.html":{}}}],["spinner.eventlisten",{"_index":204,"title":{},"body":{"index.html":{}}}],["spreadsheet",{"_index":160,"title":{},"body":{"index.html":{}}}],["src/grid/cell/cell.t",{"_index":514,"title":{},"body":{"classes/Cell.html":{}}}],["src/grid/cell/cell.ts:5",{"_index":524,"title":{},"body":{"classes/Cell.html":{}}}],["src/grid/cell/cell.ts:6",{"_index":523,"title":{},"body":{"classes/Cell.html":{}}}],["src/grid/cell/cell.ts:7",{"_index":521,"title":{},"body":{"classes/Cell.html":{}}}],["src/grid/cell/viewrenderers/cel",{"_index":527,"title":{},"body":{"classes/CellTextView.html":{}}}],["src/grid/column/formatters/formatt",{"_index":567,"title":{},"body":{"classes/FormatterParser.html":{}}}],["src/grid/event/click.interface.t",{"_index":646,"title":{},"body":{"interfaces/ClickListener.html":{}}}],["src/grid/event/click.interface.ts:3",{"_index":649,"title":{},"body":{"interfaces/ClickListener.html":{}}}],["src/grid/event/dbl",{"_index":651,"title":{},"body":{"interfaces/DblClickListener.html":{}}}],["src/grid/event/ev",{"_index":660,"title":{},"body":{"interfaces/EventListenerArg.html":{}}}],["src/grid/event/mous",{"_index":665,"title":{},"body":{"interfaces/MouseDownListener.html":{},"interfaces/MouseDragListener.html":{},"interfaces/MouseOverListener.html":{},"interfaces/MouseUpListener.html":{}}}],["src/grid/grid.component.t",{"_index":693,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/grid/grid.module.t",{"_index":423,"title":{},"body":{"modules/GridModule.html":{}}}],["src/grid/model/dictionary.interface.t",{"_index":657,"title":{},"body":{"interfaces/Dictionary.html":{}}}],["src/grid/model/dictionary.interface.ts:2",{"_index":659,"title":{},"body":{"interfaces/Dictionary.html":{}}}],["src/grid/model/dictionary.interface.ts:3",{"_index":658,"title":{},"body":{"interfaces/Dictionary.html":{}}}],["src/grid/services/grid",{"_index":465,"title":{},"body":{"injectables/GridMessageService.html":{},"miscellaneous/variables.html":{}}}],["src/grid/utils/empty.factory.t",{"_index":554,"title":{},"body":{"classes/EmptyFactory.html":{},"interfaces/EmptyConstructor.html":{}}}],["src/grid/utils/empty.factory.ts:4",{"_index":561,"title":{},"body":{"classes/EmptyFactory.html":{}}}],["src/grid/utils/empty.factory.ts:7",{"_index":562,"title":{},"body":{"classes/EmptyFactory.html":{}}}],["src/grid/utils/html",{"_index":582,"title":{},"body":{"classes/HtmlUtil.html":{}}}],["src/grid/utils/i",{"_index":493,"title":{},"body":{"pipes/IsFixedPipe.html":{},"pipes/IsGroupPipe.html":{},"pipes/IsRowVisiblePipe.html":{},"pipes/IsVisiblePipe.html":{}}}],["src/grid/utils/injectable.factory.t",{"_index":606,"title":{},"body":{"classes/InjectableFactory.html":{},"interfaces/InjectableConstructor.html":{}}}],["src/grid/utils/injectable.factory.ts:10",{"_index":613,"title":{},"body":{"classes/InjectableFactory.html":{}}}],["src/grid/utils/injectable.factory.ts:7",{"_index":611,"title":{},"body":{"classes/InjectableFactory.html":{}}}],["src/grid/utils/row",{"_index":617,"title":{},"body":{"classes/RowChange.html":{}}}],["src/grid/utils/sort",{"_index":627,"title":{},"body":{"classes/SortInfo.html":{}}}],["start",{"_index":12,"title":{"index.html":{},"changelog.html":{},"license.html":{}},"body":{}}],["state",{"_index":172,"title":{},"body":{"index.html":{}}}],["static",{"_index":461,"title":{},"body":{"modules/GridModule.html":{},"classes/HtmlUtil.html":{}}}],["string",{"_index":68,"title":{},"body":{"index.html":{},"injectables/GridMessageService.html":{},"classes/HtmlUtil.html":{},"classes/SortInfo.html":{},"interfaces/Dictionary.html":{}}}],["subject",{"_index":393,"title":{},"body":{"license.html":{},"injectables/GridMessageService.html":{}}}],["sublicens",{"_index":388,"title":{},"body":{"license.html":{}}}],["substanti",{"_index":397,"title":{},"body":{"license.html":{}}}],["such",{"_index":586,"title":{},"body":{"classes/HtmlUtil.html":{}}}],["support",{"_index":32,"title":{},"body":{"index.html":{},"changelog.html":{},"modules.html":{}}}],["svg",{"_index":420,"title":{},"body":{"modules.html":{}}}],["syntax",{"_index":103,"title":{},"body":{"index.html":{}}}],["t",{"_index":563,"title":{},"body":{"classes/EmptyFactory.html":{},"classes/InjectableFactory.html":{},"interfaces/EmptyConstructor.html":{},"interfaces/InjectableConstructor.html":{}}}],["tab",{"_index":690,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tabl",{"_index":30,"title":{},"body":{"index.html":{}}}],["taken",{"_index":94,"title":{},"body":{"index.html":{}}}],["templat",{"_index":201,"title":{},"body":{"index.html":{}}}],["templateref",{"_index":200,"title":{},"body":{"index.html":{}}}],["text",{"_index":528,"title":{},"body":{"classes/CellTextView.html":{}}}],["texteditrender",{"_index":322,"title":{},"body":{"overview.html":{},"modules/GridModule.html":{}}}],["textfilterrender",{"_index":283,"title":{},"body":{"index.html":{},"overview.html":{},"modules/GridModule.html":{}}}],["them.pages",{"_index":183,"title":{},"body":{"index.html":{}}}],["theme",{"_index":162,"title":{},"body":{"index.html":{}}}],["thing",{"_index":252,"title":{},"body":{"index.html":{},"classes/HtmlUtil.html":{}}}],["this._message.asobserv",{"_index":485,"title":{},"body":{"injectables/GridMessageService.html":{}}}],["this._message.next(\"error",{"_index":490,"title":{},"body":{"injectables/GridMessageService.html":{}}}],["this._message.next(\"warn",{"_index":491,"title":{},"body":{"injectables/GridMessageService.html":{}}}],["this._messageobserv",{"_index":492,"title":{},"body":{"injectables/GridMessageService.html":{}}}],["this.asc",{"_index":643,"title":{},"body":{"classes/SortInfo.html":{}}}],["this.config",{"_index":580,"title":{},"body":{"classes/FormatterParser.html":{}}}],["this.datageneratorservice.getexternaldata1(externalinfo).subscribe((externaldata",{"_index":116,"title":{},"body":{"index.html":{}}}],["this.emptyconstructor",{"_index":565,"title":{},"body":{"classes/EmptyFactory.html":{},"interfaces/EmptyConstructor.html":{}}}],["this.field",{"_index":644,"title":{},"body":{"classes/SortInfo.html":{}}}],["this.ic(this.injector",{"_index":614,"title":{},"body":{"classes/InjectableFactory.html":{},"interfaces/InjectableConstructor.html":{}}}],["this.newrownum",{"_index":625,"title":{},"body":{"classes/RowChange.html":{}}}],["this.oldrownum",{"_index":624,"title":{},"body":{"classes/RowChange.html":{}}}],["those",{"_index":173,"title":{},"body":{"index.html":{}}}],["through",{"_index":37,"title":{},"body":{"index.html":{}}}],["titl",{"_index":156,"title":{},"body":{"index.html":{}}}],["to.configur",{"_index":143,"title":{},"body":{"index.html":{}}}],["toast",{"_index":241,"title":{},"body":{"index.html":{}}}],["todo",{"_index":304,"title":{},"body":{"index.html":{}}}],["togeth",{"_index":168,"title":{},"body":{"index.html":{}}}],["top",{"_index":545,"title":{},"body":{"classes/CellTextView.html":{}}}],["tort",{"_index":416,"title":{},"body":{"license.html":{}}}],["transform",{"_index":497,"title":{},"body":{"pipes/IsFixedPipe.html":{},"pipes/IsGroupPipe.html":{},"pipes/IsRowVisiblePipe.html":{},"pipes/IsVisiblePipe.html":{}}}],["transform(list",{"_index":498,"title":{},"body":{"pipes/IsFixedPipe.html":{},"pipes/IsGroupPipe.html":{},"pipes/IsRowVisiblePipe.html":{},"pipes/IsVisiblePipe.html":{}}}],["true",{"_index":171,"title":{},"body":{"index.html":{},"classes/SortInfo.html":{}}}],["two",{"_index":126,"title":{},"body":{"index.html":{}}}],["type",{"_index":122,"title":{},"body":{"index.html":{},"injectables/GridMessageService.html":{},"pipes/IsFixedPipe.html":{},"classes/Cell.html":{},"classes/CellTextView.html":{},"classes/EmptyFactory.html":{},"classes/FormatterParser.html":{},"classes/HtmlUtil.html":{},"classes/InjectableFactory.html":{},"classes/RowChange.html":{},"classes/SortInfo.html":{},"interfaces/ClickListener.html":{},"interfaces/DblClickListener.html":{},"interfaces/Dictionary.html":{},"interfaces/EventListenerArg.html":{},"interfaces/InjectableConstructor.html":{},"interfaces/MouseDownListener.html":{},"interfaces/MouseDragListener.html":{},"interfaces/MouseOverListener.html":{},"interfaces/MouseUpListener.html":{},"miscellaneous/variables.html":{}}}],["undefin",{"_index":124,"title":{},"body":{"index.html":{},"pipes/IsFixedPipe.html":{},"pipes/IsGroupPipe.html":{},"pipes/IsRowVisiblePipe.html":{},"pipes/IsVisiblePipe.html":{},"classes/FormatterParser.html":{}}}],["univers",{"_index":369,"title":{},"body":{"license.html":{},"modules/GridModule.html":{}}}],["up",{"_index":253,"title":{},"body":{"index.html":{}}}],["up.interface.t",{"_index":681,"title":{},"body":{"interfaces/MouseUpListener.html":{}}}],["up.interface.ts:3",{"_index":684,"title":{},"body":{"interfaces/MouseUpListener.html":{}}}],["updatecolumn",{"_index":532,"title":{},"body":{"classes/CellTextView.html":{}}}],["updatecolumn(column",{"_index":536,"title":{},"body":{"classes/CellTextView.html":{}}}],["upon",{"_index":301,"title":{},"body":{"index.html":{}}}],["us",{"_index":55,"title":{},"body":{"index.html":{},"license.html":{}}}],["usag",{"_index":95,"title":{},"body":{"index.html":{}}}],["user",{"_index":147,"title":{},"body":{"index.html":{},"changelog.html":{}}}],["usevalu",{"_index":464,"title":{},"body":{"modules/GridModule.html":{}}}],["usual",{"_index":59,"title":{},"body":{"index.html":{}}}],["utah",{"_index":370,"title":{},"body":{"license.html":{},"modules/GridModule.html":{}}}],["util.t",{"_index":583,"title":{},"body":{"classes/HtmlUtil.html":{}}}],["util.ts:23",{"_index":596,"title":{},"body":{"classes/HtmlUtil.html":{}}}],["util.ts:38",{"_index":598,"title":{},"body":{"classes/HtmlUtil.html":{}}}],["util.ts:8",{"_index":592,"title":{},"body":{"classes/HtmlUtil.html":{}}}],["utils/i",{"_index":439,"title":{},"body":{"modules/GridModule.html":{}}}],["valid",{"_index":350,"title":{},"body":{"changelog.html":{}}}],["valu",{"_index":225,"title":{},"body":{"index.html":{},"injectables/GridMessageService.html":{},"classes/Cell.html":{},"classes/CellTextView.html":{},"classes/FormatterParser.html":{},"classes/SortInfo.html":{},"interfaces/Dictionary.html":{},"miscellaneous/variables.html":{}}}],["values.busytempl",{"_index":199,"title":{},"body":{"index.html":{}}}],["variabl",{"_index":686,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["variou",{"_index":73,"title":{},"body":{"index.html":{}}}],["vertic",{"_index":249,"title":{},"body":{"index.html":{}}}],["view",{"_index":276,"title":{},"body":{"index.html":{},"changelog.html":{},"classes/CellTextView.html":{}}}],["view.t",{"_index":529,"title":{},"body":{"classes/CellTextView.html":{}}}],["view.ts:10",{"_index":535,"title":{},"body":{"classes/CellTextView.html":{}}}],["view.ts:12",{"_index":533,"title":{},"body":{"classes/CellTextView.html":{}}}],["view.ts:8",{"_index":537,"title":{},"body":{"classes/CellTextView.html":{}}}],["viewconfig",{"_index":270,"title":{},"body":{"index.html":{}}}],["viewrender",{"_index":268,"title":{},"body":{"index.html":{}}}],["visibl",{"_index":153,"title":{},"body":{"index.html":{}}}],["visible.pip",{"_index":440,"title":{},"body":{"modules/GridModule.html":{}}}],["visible.pipe.t",{"_index":508,"title":{},"body":{"pipes/IsRowVisiblePipe.html":{},"pipes/IsVisiblePipe.html":{}}}],["visible.pipe.ts:9",{"_index":510,"title":{},"body":{"pipes/IsRowVisiblePipe.html":{},"pipes/IsVisiblePipe.html":{}}}],["void",{"_index":479,"title":{},"body":{"injectables/GridMessageService.html":{},"classes/CellTextView.html":{},"classes/FormatterParser.html":{},"classes/SortInfo.html":{}}}],["want",{"_index":213,"title":{},"body":{"index.html":{}}}],["warn",{"_index":214,"title":{},"body":{"index.html":{},"injectables/GridMessageService.html":{}}}],["warn(messag",{"_index":480,"title":{},"body":{"injectables/GridMessageService.html":{}}}],["warranti",{"_index":399,"title":{},"body":{"license.html":{}}}],["way",{"_index":127,"title":{},"body":{"index.html":{}}}],["whether",{"_index":414,"title":{},"body":{"license.html":{}}}],["wish",{"_index":240,"title":{},"body":{"index.html":{}}}],["without",{"_index":383,"title":{},"body":{"license.html":{},"classes/FormatterParser.html":{}}}],["work",{"_index":91,"title":{},"body":{"index.html":{}}}],["x",{"_index":549,"title":{},"body":{"classes/CellTextView.html":{}}}],["ye",{"_index":594,"title":{},"body":{"classes/HtmlUtil.html":{}}}],["you.logwarn",{"_index":212,"title":{},"body":{"index.html":{}}}],["zoom",{"_index":329,"title":{},"body":{"overview.html":{},"modules/GridModule.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n    Dependencies\n\n\n    \n        @ng-bootstrap/ng-bootstrap : 1.1.x\n    \n        moment : ^2.15.0\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nHCI's Angular Grid Library\nhci-ng-grid Demo on Github\nIntro\nThis grid is designed to be a full featured grid that can handle nearly anything that complex data tables may\nbe expected to support.  By default, the grid is simple and basic, but becomes full featured through\nconfiguration.Install\n\"dependencies\": {\n    \"hci-ng-grid\": \"2.0.x\"\n}import {GridModule} from \"hci-ng-grid\";@NgModule({\n    imports: [\n        GridModule.forRoot()\n    ]\n})Publishing\nCompiled code gets moved to the dist folder with a copy of the package.json.  Custom commands are required for\npackaging and publishing.  Use npmPack and npmPublish instead of the usual pack and publish.Basic Features\n\nSorting: Change sorting by clicking on column header.\nFiltering: String, select, range filtering with the possibility for custom filters.\nPaging: Paging with various page sizes, first, last, previous and next.\nRow Grouping: Rows can be grouped by one or more columns.\nExternal Data Call: Callback to retrieve data from external source.\nCustom Events: Listeners can be added to work for specific events and custom actions can be taken.\n\nUsage\nNote, there are so many features to this grid that not all are currently listed here.  See the demo for full examples.\nThe basic syntax for data provided by the implementing component.\n\nThe basic syntax for an external data call.\n\nAnd a function using mocked external data call.\ndataRequest(externalInfo: ExternalInfo): Promise {\n  return new Promise((resolve, reject) => {\n    this.dataGeneratorService.getExternalData1(externalInfo).subscribe((externalData: ExternalData) => {\n      setTimeout(() =>\n        resolve(externalData), 1000\n      );\n    });\n  });\n}Inputs\ndata\ntype: Object[]\ndefault: undefined\nProvide the grid with an array of rows as objects.  Two way binding to this data.dataCall\ntype: Function\ndefault: undefined\nA function that is called to retrieve data.  The function is passed filtering, sorting and paging info.id\ntype: string\ndefault: undefined\nThe html id for the grid and the id that can be used to get the grid from the global grid service.config\ntype: any\ndefault: {}\nA json object that contains configuration options for the grid.linkedGroups\ntype: string[]\ndefault: undefined\nThe group names that this grid should be linked to.configurable\ntype: boolean\ndefault: false\nFlag if the user should be allowed to modify the grid's configuration (e.g. what colums are visible and how big).title\ntype: string\ndefault: undefined\nShows this title in a title bar above the grid.theme\ntype: string\ndefault: \"spreadsheet\"\noptions: \"spreadsheet\", \"report\", or your own\nThe name of the theme to use.  columns\ntype: Column[]\ndefault: undefined\nAn array of column configuration objects.fixedColumns\ntype: string[]\ndefault: undefined\nA list of column names that should be fixed to the left side of the grid.groupBy\ntype: string[]\ndefault: undefined\nA list of column names that should be used to group rows together.* Currently disabled *\ngroupByCollapsed\ntype: boolean\ndefault: true\nThe state for grouped rows if those rows in a group should be hidden or shown by default.externalFiltering\ntype: boolean\ndefault: false\nTrue if filtering should be handled by the external data call.externalSorting\ntype: boolean\ndefault: false\nTrue if sorting should be handled by the external data call.externalPaging\ntype: boolean\ndefault: false\nTrue if paging should be handled by the external data call.pageSize\ntype: number\ndefault: undefined\nThe number of rows per page.  If not specified it will show all of them.pageSizes\ntype: number[]\ndefault: [10, 25, 50]\nAn array of possible page sizes that the user can choose from.nVisibleRows\ntype: number\ndefault: -1\nThe number of visible rows.  A page might have 100 rows, but you can limit the size of the grid to 10 rows which would be scrolling for the user.  The default is -1 which is the same as the page size.saveOnDirtyRowChange\ntype: boolean\ndefault: false\nIf true, will emit a (onRowSave) event if you navigate to a new row and the previous row has dirty values.busyTemplate\ntype: TemplateRef\ndefault: undefined\nA custom template shown when data is loaded.  If you don't like the default spinner.eventListeners\ntype: EventListenerArg[]\ndefault: []\nAn array of listeners that can perform actions on any sort of click or key events.mode\ntype: string\ndefault: undefined\nA shortcut for creating listeners.  Rather than passing in your own listeners, specify a mode and the required listeners will be created for you.logWarnings\ntype: boolean\ndefault: true\nTrue if you want warnings to show in the console.Outputs\nonCellSave\ntype: any\n$event: { key: rows[i].key,\n          i: i,\n          j: j,\n          field: columns[j].field,\n          oldValue: oldValue,\n          newValue: newValue }\nThe row key, location, field, old and new value of the cell.onRowSave\ntype: any\n$event: { key: rows[i].key,\n          rowNum: i,\n          row: originalRowData }\nEmits the key, row number and the data for the row in the format originally passed in.onConfigChange\ntype: any\n$event: config\nEmits the current configuration for the grid.cellClick\ntype: any\n$event: any\nDetermined by the event listener which can emit any type of data.cellDblClick\ntype: any\n$event: any\nDetermined by the event listener which can emit any type of data.rowClick\ntype: any\n$event: any\nDetermined by the event listener which can emit any type of data.rowDblClick\ntype: any\n$event: any\nDetermined by the event listener which can emit any type of data.warning\ntype: string\n$event: warning message as a string\nListen to this to handle warnings from the grid as you wish (e.g. as a toast popup).selectedRows\ntype: any[]\n$event: [key1, key2, ...]\nThis is an array of any instead of number because the row key could be anything.Advanced Features\nRendering Cells\nEvery refresh of data and every vertical scroll will re-render the visible rows and cells.  To speed things\nup, each cell is limited to rendering pure HTML.  However, there are several options of how to render and\nthe option of custom rendering.\nEvery cell is rendering with a class that implements the CellViewRenderer interface.  The two methods\nrequired to implement are\nsetConfig(config: any);\n\ncreateElement(renderer: Renderer2, column: Column, value: any, i: number, j: number): HTMLElement;As an example, the following is an example of a number range renderer.\n{\n    field: \"nLabs\",\n    name: \"# Labs\",\n    viewRenderer: CellNumberRangeView,\n    viewConfig: { low: 15, high: 85, showIcon: true }\n}The class is passed in as the viewRenderer and any config is passed in through the viewConfig.\nFiltering\nLike view rendering, built in and custom components can be used to render the filter.  The difference\nis rather than pure HTML, a filter is a component that extends a base class FilterRenderer.  The\nfollowing are examples of built in filters.\n{\n    field: \"firstName\",\n    name: \"First Name\",\n    filterRenderer: TextFilterRenderer\n},\n{\n    field: \"dob\",\n    name: \"Date of Birth\",\n    dataType: \"date\",\n    format: \"MM/DD/YYYY\",\n    editRenderer: DateEditRenderer,\n    filterRenderer: CompareFilterRenderer\n},\n{\n    field: \"gender\",\n    name: \"Gender\",\n    editRenderer: ChoiceEditRenderer,\n    choices: [ {value: \"Female\", display: \"Female\"}, {value: \"Male\", display: \"Male\"} ],\n    filterRenderer: SelectFilterRenderer\n}Known Issues\n\nRow Groups works upon load, but breaks when filtering is introduced.\n\nTODOs\n\nThere are only left fixed colums, but some have requested right fixed columns.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n            \n                \n                    \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_GridModule\n\n\n\ncluster_GridModule_declarations\n\n\n\ncluster_GridModule_GridComponent_providers\n\n\n\ncluster_GridModule_exports\n\n\n\n\nGridComponent\n\nGridComponent\n\n\n\nGridModule\n\nGridModule\n\nGridModule -->\n\nGridComponent->GridModule\n\n\n\n\n\nColumnHeaderComponent\n\nColumnHeaderComponent\n\nGridModule -->\n\nColumnHeaderComponent->GridModule\n\n\n\n\n\nIsVisiblePipe\n\nIsVisiblePipe\n\nGridModule -->\n\nIsVisiblePipe->GridModule\n\n\n\n\n\nIsGroupPipe\n\nIsGroupPipe\n\nGridModule -->\n\nIsGroupPipe->GridModule\n\n\n\n\n\nIsFixedPipe\n\nIsFixedPipe\n\nGridModule -->\n\nIsFixedPipe->GridModule\n\n\n\n\n\nIsRowVisiblePipe\n\nIsRowVisiblePipe\n\nGridModule -->\n\nIsRowVisiblePipe->GridModule\n\n\n\n\n\nTextEditRenderer\n\nTextEditRenderer\n\nGridModule -->\n\nTextEditRenderer->GridModule\n\n\n\n\n\nDateEditRenderer\n\nDateEditRenderer\n\nGridModule -->\n\nDateEditRenderer->GridModule\n\n\n\n\n\nChoiceEditRenderer\n\nChoiceEditRenderer\n\nGridModule -->\n\nChoiceEditRenderer->GridModule\n\n\n\n\n\nTextFilterRenderer\n\nTextFilterRenderer\n\nGridModule -->\n\nTextFilterRenderer->GridModule\n\n\n\n\n\nSelectFilterRenderer\n\nSelectFilterRenderer\n\nGridModule -->\n\nSelectFilterRenderer->GridModule\n\n\n\n\n\nCompareFilterRenderer\n\nCompareFilterRenderer\n\nGridModule -->\n\nCompareFilterRenderer->GridModule\n\n\n\n\n\nBigTextPopup\n\nBigTextPopup\n\nGridModule -->\n\nBigTextPopup->GridModule\n\n\n\n\n\nConfigMenuComponent\n\nConfigMenuComponent\n\nGridModule -->\n\nConfigMenuComponent->GridModule\n\n\n\n\n\nConfigMultiChoiceComponent\n\nConfigMultiChoiceComponent\n\nGridModule -->\n\nConfigMultiChoiceComponent->GridModule\n\n\n\n\n\nGridComponent \n\nGridComponent \n\nGridComponent  -->\n\nGridModule->GridComponent \n\n\n\n\n\nGridService\n\nGridService\n\nGridComponent -->\n\nGridService->GridComponent\n\n\n\n\n\nGridEventService\n\nGridEventService\n\nGridComponent -->\n\nGridEventService->GridComponent\n\n\n\n\n\nGridMessageService\n\nGridMessageService\n\nGridComponent -->\n\nGridMessageService->GridComponent\n\n\n\n\n\n\n                \n                \n                \n                    Zoom in\n                    Reset\n                    Zoom out\n                \n            \n\n    \n            \n                \n                    \n                        \n                        \n                            1 module\n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                        11 components\n                    \n                \n            \n            \n                \n                    \n                        \n                        4 injectables\n                    \n                \n            \n            \n                \n                    \n                        \n                        4 pipes\n                    \n                \n            \n            \n                \n                    \n                        \n                        33 classes\n                    \n                \n            \n            \n                \n                    \n                        \n                        11 interfaces\n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"changelog.html":{"url":"changelog.html","title":"getting-started - changelog","body":"\n                   \n\nChange Log\n2.0.2\n- Fix keywords and add .npmignore.2.0.1\n- Fix readme and license in artifact.2.0.0\n- Refactor of rendering and how data/config/events are listened to.\n- Listeners for saving cells and rows.\n- Customization of busy, and view renderers.\n- Validation support and improved formatting/parsing especially for dates.\n- User configuration added.\n- Global grid service for referencing and connecting grids.\n- Row selection improved.\n- External data calls from Promise to Observable.\n- Numerous fixes.1.0.0\n- Initial Release.  See README.md for features.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nCopyright (c) 2018 Huntsman Cancer Institute at the University of Utah\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        GridModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/GridModule.html":{"url":"modules/GridModule.html","title":"module - GridModule","body":"\n                   \n\n\n\n\n  Modules\n  GridModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_GridModule\n\n\n\ncluster_GridModule_declarations\n\n\n\ncluster_GridModule_GridComponent_providers\n\n\n\ncluster_GridModule_exports\n\n\n\n\nGridComponent\n\nGridComponent\n\n\n\nGridModule\n\nGridModule\n\nGridModule -->\n\nGridComponent->GridModule\n\n\n\n\n\nColumnHeaderComponent\n\nColumnHeaderComponent\n\nGridModule -->\n\nColumnHeaderComponent->GridModule\n\n\n\n\n\nIsVisiblePipe\n\nIsVisiblePipe\n\nGridModule -->\n\nIsVisiblePipe->GridModule\n\n\n\n\n\nIsGroupPipe\n\nIsGroupPipe\n\nGridModule -->\n\nIsGroupPipe->GridModule\n\n\n\n\n\nIsFixedPipe\n\nIsFixedPipe\n\nGridModule -->\n\nIsFixedPipe->GridModule\n\n\n\n\n\nIsRowVisiblePipe\n\nIsRowVisiblePipe\n\nGridModule -->\n\nIsRowVisiblePipe->GridModule\n\n\n\n\n\nTextEditRenderer\n\nTextEditRenderer\n\nGridModule -->\n\nTextEditRenderer->GridModule\n\n\n\n\n\nDateEditRenderer\n\nDateEditRenderer\n\nGridModule -->\n\nDateEditRenderer->GridModule\n\n\n\n\n\nChoiceEditRenderer\n\nChoiceEditRenderer\n\nGridModule -->\n\nChoiceEditRenderer->GridModule\n\n\n\n\n\nTextFilterRenderer\n\nTextFilterRenderer\n\nGridModule -->\n\nTextFilterRenderer->GridModule\n\n\n\n\n\nSelectFilterRenderer\n\nSelectFilterRenderer\n\nGridModule -->\n\nSelectFilterRenderer->GridModule\n\n\n\n\n\nCompareFilterRenderer\n\nCompareFilterRenderer\n\nGridModule -->\n\nCompareFilterRenderer->GridModule\n\n\n\n\n\nBigTextPopup\n\nBigTextPopup\n\nGridModule -->\n\nBigTextPopup->GridModule\n\n\n\n\n\nConfigMenuComponent\n\nConfigMenuComponent\n\nGridModule -->\n\nConfigMenuComponent->GridModule\n\n\n\n\n\nConfigMultiChoiceComponent\n\nConfigMultiChoiceComponent\n\nGridModule -->\n\nConfigMultiChoiceComponent->GridModule\n\n\n\n\n\nGridComponent \n\nGridComponent \n\nGridComponent  -->\n\nGridModule->GridComponent \n\n\n\n\n\nGridService\n\nGridService\n\nGridComponent -->\n\nGridService->GridComponent\n\n\n\n\n\nGridEventService\n\nGridEventService\n\nGridComponent -->\n\nGridEventService->GridComponent\n\n\n\n\n\nGridMessageService\n\nGridMessageService\n\nGridComponent -->\n\nGridMessageService->GridComponent\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/grid/grid.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                GridComponent\n                            \n                            \n                                ColumnHeaderComponent\n                            \n                            \n                                IsVisiblePipe\n                            \n                            \n                                IsGroupPipe\n                            \n                            \n                                IsFixedPipe\n                            \n                            \n                                IsRowVisiblePipe\n                            \n                            \n                                TextEditRenderer\n                            \n                            \n                                DateEditRenderer\n                            \n                            \n                                ChoiceEditRenderer\n                            \n                            \n                                TextFilterRenderer\n                            \n                            \n                                SelectFilterRenderer\n                            \n                            \n                                CompareFilterRenderer\n                            \n                            \n                                BigTextPopup\n                            \n                            \n                                ConfigMenuComponent\n                            \n                            \n                                ConfigMultiChoiceComponent\n                            \n                    \n                \n                \n                    EntryComponents\n                    \n                            \n                                TextEditRenderer\n                            \n                            \n                                DateEditRenderer\n                            \n                            \n                                ChoiceEditRenderer\n                            \n                            \n                                TextFilterRenderer\n                            \n                            \n                                SelectFilterRenderer\n                            \n                            \n                                CompareFilterRenderer\n                            \n                            \n                                BigTextPopup\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    GridComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        /*\n * Copyright (c) 2016 Huntsman Cancer Institute at the University of Utah, Confidential and Proprietary\n */\nimport {ModuleWithProviders, NgModule} from \"@angular/core\";\nimport {CommonModule} from \"@angular/common\";\nimport {FormsModule} from \"@angular/forms\";\n\nimport {NgbModule} from \"@ng-bootstrap/ng-bootstrap\";\n\nimport {GridComponent} from \"./grid.component\";\nimport {ColumnHeaderComponent} from \"./column/column-header.component\";\nimport {IsVisiblePipe} from \"./utils/is-visible.pipe\";\nimport {IsGroupPipe} from \"./utils/is-group.pipe\";\nimport {IsFixedPipe} from \"./utils/is-fixed.pipe\";\nimport {IsRowVisiblePipe} from \"./utils/is-row-visible.pipe\";\nimport {TextEditRenderer} from \"./cell/editRenderers/text-edit-renderer.component\";\nimport {TextFilterRenderer} from \"./column/filterRenderers/text-filter-renderer.component\";\nimport {CompareFilterRenderer} from \"./column/filterRenderers/compare-filter-renderer.component\";\nimport {ChoiceEditRenderer} from \"./cell/editRenderers/choice-edit-renderer.component\";\nimport {DateEditRenderer} from \"./cell/editRenderers/date-edit-renderer.component\";\nimport {SelectFilterRenderer} from \"./column/filterRenderers/select-filter-renderer.component\";\nimport {BigTextPopup} from \"./cell/viewPopupRenderer/bigtext-popup.component\";\nimport {ConfigMenuComponent} from \"./config/config-menu.component\";\nimport {GridGlobalService} from \"./services/grid-global.service\";\nimport {ConfigMultiChoiceComponent} from \"./config/config-multi-choice.component\";\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    NgbModule.forRoot()\n  ],\n  declarations: [\n    GridComponent,\n    ColumnHeaderComponent,\n    IsVisiblePipe,\n    IsGroupPipe,\n    IsFixedPipe,\n    IsRowVisiblePipe,\n    TextEditRenderer,\n    DateEditRenderer,\n    ChoiceEditRenderer,\n    TextFilterRenderer,\n    SelectFilterRenderer,\n    CompareFilterRenderer,\n    BigTextPopup,\n    ConfigMenuComponent,\n    ConfigMultiChoiceComponent\n  ],\n  entryComponents: [\n    TextEditRenderer,\n    DateEditRenderer,\n    ChoiceEditRenderer,\n    TextFilterRenderer,\n    SelectFilterRenderer,\n    CompareFilterRenderer,\n    BigTextPopup\n  ],\n  exports: [\n    GridComponent\n  ]\n})\nexport class GridModule {\n  static forRoot(globalConfig?: any): ModuleWithProviders {\n    return {\n      providers: [\n        GridGlobalService,\n        {provide: \"globalConfig\", useValue: (globalConfig) ? globalConfig : {}}\n      ],\n      ngModule: GridModule\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GridMessageService.html":{"url":"injectables/GridMessageService.html","title":"injectable - GridMessageService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  GridMessageService\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/grid/services/grid-message.service.ts\n        \n\n\n\n            \n                Index\n                \n                    \n                        \n                            \n                                Properties\n                            \n                        \n                        \n                            \n                                \n                                    \n                                            Private\n                                        _level\n                                    \n                                    \n                                            Private\n                                        _message\n                                    \n                                    \n                                            Private\n                                        _messageObservable\n                                    \n                                \n                            \n                        \n                        \n                            \n                                Methods\n                            \n                        \n                        \n                            \n                                \n                                    \n                                        error\n                                    \n                                    \n                                        warn\n                                    \n                                \n                            \n                        \n                        \n                            \n                                Accessors\n                            \n                        \n                        \n                            \n                                \n                                    \n                                        messageObservable\n                                    \n                                \n                            \n                        \n                    \n                \n            \n\n\n            \n                \n                    \n                        Methods\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        error\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            error(message: string)\n                                \n                            \n            \n            \n                                    \n                                        \n                                                Defined in src/grid/services/grid-message.service.ts:12\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                                Type\n                                                            Optional\n                                                        \n                                                    \n                                                    \n                                                            \n                                                                message\n                                                                \n                                                                    \n                                                                                string\n                                                                    \n                                                                \n                                                                \n                                                                        no\n                                                                \n                                                                \n            \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     void\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        warn\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            warn(message: string)\n                                \n                            \n            \n            \n                                    \n                                        \n                                                Defined in src/grid/services/grid-message.service.ts:16\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                                Type\n                                                            Optional\n                                                        \n                                                    \n                                                    \n                                                            \n                                                                message\n                                                                \n                                                                    \n                                                                                string\n                                                                    \n                                                                \n                                                                \n                                                                        no\n                                                                \n                                                                \n            \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     void\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n            \n\n            \n                \n                    \n                        Properties\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                            Private\n                                        _level\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                    _level:     number\n            \n                                \n                            \n                                \n                                    \n                                        Type :     number\n            \n                                    \n                                \n                                \n                                    \n                                        Default value : 2\n                                    \n                                \n                                    \n                                        \n                                                Defined in src/grid/services/grid-message.service.ts:10\n                                        \n                                    \n            \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                            Private\n                                        _message\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                    _message:     Subject\n            \n                                \n                            \n                                \n                                    \n                                        Type :     Subject\n            \n                                    \n                                \n                                \n                                    \n                                        Default value : new Subject()\n                                    \n                                \n                                    \n                                        \n                                                Defined in src/grid/services/grid-message.service.ts:8\n                                        \n                                    \n            \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                            Private\n                                        _messageObservable\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                    _messageObservable:     Observable\n            \n                                \n                            \n                                \n                                    \n                                        Type :     Observable\n            \n                                    \n                                \n                                \n                                    \n                                        Default value : this._message.asObservable()\n                                    \n                                \n                                    \n                                        \n                                                Defined in src/grid/services/grid-message.service.ts:9\n                                        \n                                    \n            \n            \n                        \n                    \n            \n\n            \n                \n                    Accessors\n                \n                    \n                        \n                            \n                                \n                                    \n                                    messageObservable\n                                \n                            \n            \n                            \n                                \n                                    getmessageObservable()\n                                \n                            \n                                        \n                                            \n                                                Defined in src/grid/services/grid-message.service.ts:20\n                                            \n                                        \n            \n                        \n                    \n            \n    \n\n\n    \n        import {Injectable} from \"@angular/core\";\n\nimport {Subject, Observable} from \"rxjs/Rx\";\n\n@Injectable()\nexport class GridMessageService {\n\n  private _message: Subject = new Subject();\n  private _messageObservable: Observable = this._message.asObservable();\n  private _level: number = 2;\n\n  error(message: string) {\n    this._message.next(\"ERROR: \" + message);\n  }\n\n  warn(message: string) {\n    this._message.next(\"WARN: \" + message);\n  }\n\n  get messageObservable(): Observable {\n    return this._messageObservable;\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/IsFixedPipe.html":{"url":"pipes/IsFixedPipe.html","title":"pipe - IsFixedPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Pipes\n  IsFixedPipe\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n\n    \n\n        \n            File\n        \n        \n            src/grid/utils/is-fixed.pipe.ts\n        \n\n\n\n        \n            Metadata\n            \n                \n                    \n                        name\n                        isFixed\n                    \n                \n            \n        \n\n            \n                \n                    \n                        Methods\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        transform\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            transform(list: Array, fixed: boolean)\n                                \n                            \n            \n            \n                                    \n                                        \n                                                Defined in src/grid/utils/is-fixed.pipe.ts:10\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                                Type\n                                                            Optional\n                                                        \n                                                    \n                                                    \n                                                            \n                                                                list\n                                                                \n                                                                    \n                                                                                Array\n                                                                    \n                                                                \n                                                                \n                                                                        no\n                                                                \n                                                                \n            \n                                                            \n                                                            \n                                                                fixed\n                                                                \n                                                                    \n                                                                                boolean\n                                                                    \n                                                                \n                                                                \n                                                                        no\n                                                                \n                                                                \n            \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     any\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n            \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from \"@angular/core\";\n\nimport { Column } from \"../column/column\";\n\n@Pipe({\n  name: \"isFixed\",\n  pure: false\n})\nexport class IsFixedPipe implements PipeTransform {\n  transform(list: Array, fixed: boolean) {\n    if (list === undefined) {\n      return list;\n    } else {\n      return list.filter((o: Column) => o.isFixed === fixed);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/IsGroupPipe.html":{"url":"pipes/IsGroupPipe.html","title":"pipe - IsGroupPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Pipes\n  IsGroupPipe\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n\n    \n\n        \n            File\n        \n        \n            src/grid/utils/is-group.pipe.ts\n        \n\n\n\n        \n            Metadata\n            \n                \n                    \n                        name\n                        isGroup\n                    \n                \n            \n        \n\n            \n                \n                    \n                        Methods\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        transform\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            transform(list: )\n                                \n                            \n            \n            \n                                    \n                                        \n                                                Defined in src/grid/utils/is-group.pipe.ts:9\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Optional\n                                                        \n                                                    \n                                                    \n                                                            \n                                                                list\n                                                                \n                                                                \n                                                                \n                                                                        no\n                                                                \n                                                                \n            \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     any\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n            \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from \"@angular/core\";\n\nimport { Column } from \"../column/column\";\n\n@Pipe({\n  name: \"isGroup\"\n})\nexport class IsGroupPipe implements PipeTransform {\n  transform(list) {\n    if (list === undefined) {\n      return list;\n    } else {\n      return list.filter((o: Column) => o.isGroup || o.isUtility);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/IsRowVisiblePipe.html":{"url":"pipes/IsRowVisiblePipe.html","title":"pipe - IsRowVisiblePipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Pipes\n  IsRowVisiblePipe\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n\n    \n\n        \n            File\n        \n        \n            src/grid/utils/is-row-visible.pipe.ts\n        \n\n\n\n        \n            Metadata\n            \n                \n                    \n                        name\n                        isRowVisible\n                    \n                \n            \n        \n\n            \n                \n                    \n                        Methods\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        transform\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            transform(list: )\n                                \n                            \n            \n            \n                                    \n                                        \n                                                Defined in src/grid/utils/is-row-visible.pipe.ts:9\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Optional\n                                                        \n                                                    \n                                                    \n                                                            \n                                                                list\n                                                                \n                                                                \n                                                                \n                                                                        no\n                                                                \n                                                                \n            \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     any\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n            \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from \"@angular/core\";\n\nimport { Row } from \"../row/row\";\n\n@Pipe({\n  name: \"isRowVisible\"\n})\nexport class IsRowVisiblePipe implements PipeTransform {\n  transform(list) {\n    if (list === undefined) {\n      return list;\n    } else {\n      return list.filter((o: Row) => o.visible);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/IsVisiblePipe.html":{"url":"pipes/IsVisiblePipe.html","title":"pipe - IsVisiblePipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Pipes\n  IsVisiblePipe\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n\n    \n\n        \n            File\n        \n        \n            src/grid/utils/is-visible.pipe.ts\n        \n\n\n\n        \n            Metadata\n            \n                \n                    \n                        name\n                        isVisible\n                    \n                \n            \n        \n\n            \n                \n                    \n                        Methods\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        transform\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            transform(list: )\n                                \n                            \n            \n            \n                                    \n                                        \n                                                Defined in src/grid/utils/is-visible.pipe.ts:9\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Optional\n                                                        \n                                                    \n                                                    \n                                                            \n                                                                list\n                                                                \n                                                                \n                                                                \n                                                                        no\n                                                                \n                                                                \n            \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     any\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n            \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from \"@angular/core\";\n\nimport { Column } from \"../column/column\";\n\n@Pipe({\n  name: \"isVisible\"\n})\nexport class IsVisiblePipe implements PipeTransform {\n  transform(list) {\n    if (list === undefined) {\n      return list;\n    } else {\n      return list.filter((o: Column) => o.visible);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Cell.html":{"url":"classes/Cell.html","title":"class - Cell","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  Cell\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/grid/cell/cell.ts\n        \n\n            \n                Description\n            \n            \n                A holder for the cell's data and other metadata needed for rendering or data management.\n\n            \n\n\n\n\n            \n                Index\n                \n                    \n                        \n                            \n                                Properties\n                            \n                        \n                        \n                            \n                                \n                                    \n                                        dirty\n                                    \n                                    \n                                        key\n                                    \n                                    \n                                        value\n                                    \n                                \n                            \n                        \n                    \n                \n            \n\n            \n                Constructor\n                    \n                        \n                            \n                                \n            constructor(o: Object)\n                                \n                            \n                                    \n                                        \n                                            Defined in src/grid/cell/cell.ts:7\n                                        \n                                    \n            \n                            \n                                \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                                Type\n                                                            Optional\n                                                        \n                                                    \n                                                    \n                                                            \n                                                                o\n                                                              \n                                                                    \n                                                                                Object\n                                                                    \n                                                              \n                                                                \n                                                                        no\n                                                                \n                                                                \n                                                            \n                                                    \n                                                \n                                        \n                                \n                            \n                        \n                    \n            \n\n\n\n            \n                \n                    \n                        Properties\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        dirty\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                    dirty:     boolean\n            \n                                \n                            \n                                \n                                    \n                                        Type :     boolean\n            \n                                    \n                                \n                                \n                                    \n                                        Default value : false\n                                    \n                                \n                                    \n                                        \n                                                Defined in src/grid/cell/cell.ts:7\n                                        \n                                    \n            \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        key\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                    key:     number\n            \n                                \n                            \n                                \n                                    \n                                        Type :     number\n            \n                                    \n                                \n                                    \n                                        \n                                                Defined in src/grid/cell/cell.ts:6\n                                        \n                                    \n            \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        value\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                    value:     any\n            \n                                \n                            \n                                \n                                    \n                                        Type :     any\n            \n                                    \n                                \n                                    \n                                        \n                                                Defined in src/grid/cell/cell.ts:5\n                                        \n                                    \n            \n            \n                        \n                    \n            \n\n    \n\n\n    \n        export class Cell {\n  value: any;\n  key: number;\n  dirty: boolean = false;\n\n  constructor(o: Object) {\n    Object.assign(this, o);\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CellTextView.html":{"url":"classes/CellTextView.html","title":"class - CellTextView","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  CellTextView\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/grid/cell/viewRenderers/cell-text-view.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        CellViewRenderer\n            \n\n\n            \n                Index\n                \n                    \n                        \n                            \n                                Methods\n                            \n                        \n                        \n                            \n                                \n                                    \n                                        createElement\n                                    \n                                    \n                                        setConfig\n                                    \n                                    \n                                        updateColumn\n                                    \n                                \n                            \n                        \n                    \n                \n            \n\n\n            \n                \n                    \n                        Methods\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        createElement\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            createElement(renderer: Renderer2, column: Column, value: any, i: number, j: number)\n                                \n                            \n            \n            \n                                    \n                                        \n                                                Defined in src/grid/cell/viewRenderers/cell-text-view.ts:12\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                                Type\n                                                            Optional\n                                                        \n                                                    \n                                                    \n                                                            \n                                                                renderer\n                                                                \n                                                                    \n                                                                                Renderer2\n                                                                    \n                                                                \n                                                                \n                                                                        no\n                                                                \n                                                                \n            \n                                                            \n                                                            \n                                                                column\n                                                                \n                                                                    \n                                                                                Column\n                                                                    \n                                                                \n                                                                \n                                                                        no\n                                                                \n                                                                \n            \n                                                            \n                                                            \n                                                                value\n                                                                \n                                                                    \n                                                                                any\n                                                                    \n                                                                \n                                                                \n                                                                        no\n                                                                \n                                                                \n            \n                                                            \n                                                            \n                                                                i\n                                                                \n                                                                    \n                                                                                number\n                                                                    \n                                                                \n                                                                \n                                                                        no\n                                                                \n                                                                \n            \n                                                            \n                                                            \n                                                                j\n                                                                \n                                                                    \n                                                                                number\n                                                                    \n                                                                \n                                                                \n                                                                        no\n                                                                \n                                                                \n            \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     HTMLElement\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        setConfig\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            setConfig(config: any)\n                                \n                            \n            \n            \n                                    \n                                        \n                                                Defined in src/grid/cell/viewRenderers/cell-text-view.ts:10\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                                Type\n                                                            Optional\n                                                        \n                                                    \n                                                    \n                                                            \n                                                                config\n                                                                \n                                                                    \n                                                                                any\n                                                                    \n                                                                \n                                                                \n                                                                        no\n                                                                \n                                                                \n            \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     void\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        updateColumn\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            updateColumn(column: Column)\n                                \n                            \n            \n            \n                                    \n                                        \n                                                Defined in src/grid/cell/viewRenderers/cell-text-view.ts:8\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                                Type\n                                                            Optional\n                                                        \n                                                    \n                                                    \n                                                            \n                                                                column\n                                                                \n                                                                    \n                                                                                Column\n                                                                    \n                                                                \n                                                                \n                                                                        no\n                                                                \n                                                                \n            \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     void\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n            \n\n\n\n    \n\n\n    \n        import {Renderer2} from \"@angular/core\";\n\nimport {CellViewRenderer} from \"./cell-view-renderer.interface\";\nimport {Column} from \"../../column/column\";\n\nexport class CellTextView implements CellViewRenderer {\n\n  updateColumn(column: Column) {}\n\n  setConfig(config: any) {}\n\n  createElement(renderer: Renderer2, column: Column, value: any, i: number, j: number): HTMLElement {\n    let span = renderer.createElement(\"span\");\n    renderer.setStyle(span, \"padding-left\", \"8px\");\n    renderer.setStyle(span, \"margin-top\", \"auto\");\n    renderer.setStyle(span, \"margin-bottom\", \"auto\");\n    renderer.setStyle(span, \"overflow-x\", \"hidden\");\n    renderer.setStyle(span, \"text-overflow\", \"ellipsis\");\n\n    let text = renderer.createText(column.formatValue(value));\n    renderer.appendChild(span, text);\n    return span;\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/EmptyFactory.html":{"url":"classes/EmptyFactory.html","title":"class - EmptyFactory","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  EmptyFactory\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/grid/utils/empty.factory.ts\n        \n\n            \n                Description\n            \n            \n                Allows instantiation of any generic type if the type has no constructor arguments.\n\n            \n\n\n\n\n            \n                Index\n                \n                    \n                        \n                            \n                                Methods\n                            \n                        \n                        \n                            \n                                \n                                    \n                                        getInstance\n                                    \n                                \n                            \n                        \n                    \n                \n            \n\n            \n                Constructor\n                    \n                        \n                            \n                                \n            constructor(emptyConstructor: EmptyConstructor)\n                                \n                            \n                                    \n                                        \n                                            Defined in src/grid/utils/empty.factory.ts:4\n                                        \n                                    \n            \n                            \n                                \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                                Type\n                                                            Optional\n                                                        \n                                                    \n                                                    \n                                                            \n                                                                emptyConstructor\n                                                              \n                                                                    \n                                                                                EmptyConstructor\n                                                                    \n                                                              \n                                                                \n                                                                        no\n                                                                \n                                                                \n                                                            \n                                                    \n                                                \n                                        \n                                \n                            \n                        \n                    \n            \n\n            \n                \n                    \n                        Methods\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        getInstance\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            getInstance()\n                                \n                            \n            \n            \n                                    \n                                        \n                                                Defined in src/grid/utils/empty.factory.ts:7\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                            Returns :     T\n            \n                                        \n                                \n                            \n                        \n                    \n            \n\n\n\n    \n\n\n    \n        export class EmptyFactory {\n  constructor(private emptyConstructor: EmptyConstructor) {}\n\n  getInstance(): T {\n    return new this.emptyConstructor();\n  }\n}\n\nexport interface EmptyConstructor {\n  new(): T;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FormatterParser.html":{"url":"classes/FormatterParser.html","title":"class - FormatterParser","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  FormatterParser\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/grid/column/formatters/formatter-parser.ts\n        \n\n            \n                Description\n            \n            \n                Most simple formatter parser which just returns the value without modification.\n\n            \n\n\n\n\n            \n                Index\n                \n                    \n                        \n                            \n                                Properties\n                            \n                        \n                        \n                            \n                                \n                                    \n                                        config\n                                    \n                                \n                            \n                        \n                        \n                            \n                                Methods\n                            \n                        \n                        \n                            \n                                \n                                    \n                                        formatValue\n                                    \n                                    \n                                        parseValue\n                                    \n                                    \n                                        setConfig\n                                    \n                                \n                            \n                        \n                    \n                \n            \n\n\n            \n                \n                    \n                        Methods\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        formatValue\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            formatValue(value: any)\n                                \n                            \n            \n            \n                                    \n                                        \n                                                Defined in src/grid/column/formatters/formatter-parser.ts:12\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                                Type\n                                                            Optional\n                                                        \n                                                    \n                                                    \n                                                            \n                                                                value\n                                                                \n                                                                    \n                                                                                any\n                                                                    \n                                                                \n                                                                \n                                                                        no\n                                                                \n                                                                \n            \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     any\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        parseValue\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            parseValue(value: any)\n                                \n                            \n            \n            \n                                    \n                                        \n                                                Defined in src/grid/column/formatters/formatter-parser.ts:20\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                                Type\n                                                            Optional\n                                                        \n                                                    \n                                                    \n                                                            \n                                                                value\n                                                                \n                                                                    \n                                                                                any\n                                                                    \n                                                                \n                                                                \n                                                                        no\n                                                                \n                                                                \n            \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     any\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        setConfig\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            setConfig(config: any)\n                                \n                            \n            \n            \n                                    \n                                        \n                                                Defined in src/grid/column/formatters/formatter-parser.ts:8\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                                Type\n                                                            Optional\n                                                        \n                                                    \n                                                    \n                                                            \n                                                                config\n                                                                \n                                                                    \n                                                                                any\n                                                                    \n                                                                \n                                                                \n                                                                        no\n                                                                \n                                                                \n            \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     void\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n            \n\n\n            \n                \n                    \n                        Properties\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        config\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                    config:     any\n            \n                                \n                            \n                                \n                                    \n                                        Type :     any\n            \n                                    \n                                \n                                \n                                    \n                                        Default value : {}\n                                    \n                                \n                                    \n                                        \n                                                Defined in src/grid/column/formatters/formatter-parser.ts:6\n                                        \n                                    \n            \n            \n                        \n                    \n            \n\n    \n\n\n    \n        export class FormatterParser {\n\n  config: any = {};\n\n  setConfig(config: any) {\n    this.config = config;\n  }\n\n  formatValue(value: any): any {\n    if (value !== undefined) {\n      return value;\n    } else {\n      return \"\";\n    }\n  }\n\n  parseValue(value: any): any {\n    if (value !== undefined) {\n      return value;\n    } else {\n      return \"\";\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/HtmlUtil.html":{"url":"classes/HtmlUtil.html","title":"class - HtmlUtil","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  HtmlUtil\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/grid/utils/html-util.ts\n        \n\n            \n                Description\n            \n            \n                Convenience class for pulling things such as id from an element.\n\n            \n\n\n\n\n            \n                Index\n                \n                    \n                        \n                            \n                                Methods\n                            \n                        \n                        \n                            \n                                \n                                    \n                                            Static\n                                        getId\n                                    \n                                    \n                                            Static\n                                        getIdElement\n                                    \n                                    \n                                            Static\n                                        getLocation\n                                    \n                                \n                            \n                        \n                    \n                \n            \n\n\n            \n                \n                    \n                        Methods\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                            Static\n                                        getId\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                        \n                                    getId(e: HTMLElement, id?: string)\n                                \n                            \n            \n            \n                                    \n                                        \n                                                Defined in src/grid/utils/html-util.ts:8\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                                Type\n                                                            Optional\n                                                        \n                                                    \n                                                    \n                                                            \n                                                                e\n                                                                \n                                                                    \n                                                                                HTMLElement\n                                                                    \n                                                                \n                                                                \n                                                                        no\n                                                                \n                                                                \n            \n                                                            \n                                                            \n                                                                id\n                                                                \n                                                                    \n                                                                                string\n                                                                    \n                                                                \n                                                                \n                                                                        yes\n                                                                \n                                                                \n            \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     string\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                            Static\n                                        getIdElement\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                        \n                                    getIdElement(e: HTMLElement)\n                                \n                            \n            \n            \n                                    \n                                        \n                                                Defined in src/grid/utils/html-util.ts:23\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                                Type\n                                                            Optional\n                                                        \n                                                    \n                                                    \n                                                            \n                                                                e\n                                                                \n                                                                    \n                                                                                HTMLElement\n                                                                    \n                                                                \n                                                                \n                                                                        no\n                                                                \n                                                                \n            \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     HTMLElement\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                            Static\n                                        getLocation\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                        \n                                    getLocation(e: HTMLElement)\n                                \n                            \n            \n            \n                                    \n                                        \n                                                Defined in src/grid/utils/html-util.ts:38\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                                Type\n                                                            Optional\n                                                        \n                                                    \n                                                    \n                                                            \n                                                                e\n                                                                \n                                                                    \n                                                                                HTMLElement\n                                                                    \n                                                                \n                                                                \n                                                                        no\n                                                                \n                                                                \n            \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     Point\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n            \n\n\n\n    \n\n\n    \n        import {Point} from \"./point\";\n\n/**\n * Convenience class for pulling things such as id from an element.\n */\nexport class HtmlUtil {\n\n  static getId(e: HTMLElement, id?: string): string {\n    if (!e) {\n      return \"\";\n    }\n    while ((!id && e.id === \"\") || (id && !e.id.startsWith(id))) {\n      if (e.parentElement) {\n        e = e.parentElement;\n      } else {\n        break;\n      }\n    }\n\n    return e.id;\n  }\n\n  static getIdElement(e: HTMLElement): HTMLElement {\n    if (!e) {\n      return null;\n    }\n    while (e.id === \"\") {\n      if (e.parentElement) {\n        e = e.parentElement;\n      } else {\n        break;\n      }\n    }\n\n    return e;\n  }\n\n  static getLocation(e: HTMLElement): Point {\n    return Point.getPoint(this.getId(e));\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/InjectableFactory.html":{"url":"classes/InjectableFactory.html","title":"class - InjectableFactory","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  InjectableFactory\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/grid/utils/injectable.factory.ts\n        \n\n            \n                Description\n            \n            \n                Allows instantiation of any generic type if the type expects an injector argument.  See the implementation of\nthe EventListener.\n\n            \n\n\n\n\n            \n                Index\n                \n                    \n                        \n                            \n                                Methods\n                            \n                        \n                        \n                            \n                                \n                                    \n                                        getInstance\n                                    \n                                \n                            \n                        \n                    \n                \n            \n\n            \n                Constructor\n                    \n                        \n                            \n                                \n            constructor(ic: InjectableConstructor, injector: Injector)\n                                \n                            \n                                    \n                                        \n                                            Defined in src/grid/utils/injectable.factory.ts:7\n                                        \n                                    \n            \n                            \n                                \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                                Type\n                                                            Optional\n                                                        \n                                                    \n                                                    \n                                                            \n                                                                ic\n                                                              \n                                                                    \n                                                                                InjectableConstructor\n                                                                    \n                                                              \n                                                                \n                                                                        no\n                                                                \n                                                                \n                                                            \n                                                            \n                                                                injector\n                                                              \n                                                                    \n                                                                                Injector\n                                                                    \n                                                              \n                                                                \n                                                                        no\n                                                                \n                                                                \n                                                            \n                                                    \n                                                \n                                        \n                                \n                            \n                        \n                    \n            \n\n            \n                \n                    \n                        Methods\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        getInstance\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            getInstance()\n                                \n                            \n            \n            \n                                    \n                                        \n                                                Defined in src/grid/utils/injectable.factory.ts:10\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                            Returns :     T\n            \n                                        \n                                \n                            \n                        \n                    \n            \n\n\n\n    \n\n\n    \n        import {Injector} from \"@angular/core\";\n\n/**\n * Allows instantiation of any generic type if the type expects an injector argument.  See the implementation of\n * the EventListener.\n */\nexport class InjectableFactory {\n  constructor(private ic: InjectableConstructor, private injector: Injector) {}\n\n  getInstance(): T {\n    return new this.ic(this.injector);\n  }\n}\n\nexport interface InjectableConstructor {\n  new(injector: Injector): T;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RowChange.html":{"url":"classes/RowChange.html","title":"class - RowChange","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  RowChange\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/grid/utils/row-change.ts\n        \n\n\n\n\n\n            \n                Index\n                \n                    \n                        \n                            \n                                Properties\n                            \n                        \n                        \n                            \n                                \n                                    \n                                        newRowNum\n                                    \n                                    \n                                        oldRowNum\n                                    \n                                \n                            \n                        \n                    \n                \n            \n\n            \n                Constructor\n                    \n                        \n                            \n                                \n            constructor(oldRowNum: number, newRowNum: number)\n                                \n                            \n                                    \n                                        \n                                            Defined in src/grid/utils/row-change.ts:4\n                                        \n                                    \n            \n                            \n                                \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                                Type\n                                                            Optional\n                                                        \n                                                    \n                                                    \n                                                            \n                                                                oldRowNum\n                                                              \n                                                                    \n                                                                                number\n                                                                    \n                                                              \n                                                                \n                                                                        no\n                                                                \n                                                                \n                                                            \n                                                            \n                                                                newRowNum\n                                                              \n                                                                    \n                                                                                number\n                                                                    \n                                                              \n                                                                \n                                                                        no\n                                                                \n                                                                \n                                                            \n                                                    \n                                                \n                                        \n                                \n                            \n                        \n                    \n            \n\n\n\n            \n                \n                    \n                        Properties\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        newRowNum\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                    newRowNum:     number\n            \n                                \n                            \n                                \n                                    \n                                        Type :     number\n            \n                                    \n                                \n                                    \n                                        \n                                                Defined in src/grid/utils/row-change.ts:4\n                                        \n                                    \n            \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        oldRowNum\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                    oldRowNum:     number\n            \n                                \n                            \n                                \n                                    \n                                        Type :     number\n            \n                                    \n                                \n                                    \n                                        \n                                                Defined in src/grid/utils/row-change.ts:3\n                                        \n                                    \n            \n            \n                        \n                    \n            \n\n    \n\n\n    \n        export class RowChange {\n\n  oldRowNum: number;\n  newRowNum: number;\n\n  constructor(oldRowNum: number, newRowNum: number) {\n    this.oldRowNum = oldRowNum;\n    this.newRowNum = newRowNum;\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SortInfo.html":{"url":"classes/SortInfo.html","title":"class - SortInfo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  SortInfo\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/grid/utils/sort-info.ts\n        \n\n\n\n\n\n            \n                Index\n                \n                    \n                        \n                            \n                                Properties\n                            \n                        \n                        \n                            \n                                \n                                    \n                                            Public\n                                        asc\n                                    \n                                    \n                                            Public\n                                        field\n                                    \n                                \n                            \n                        \n                        \n                            \n                                Methods\n                            \n                        \n                        \n                            \n                                \n                                    \n                                        getAsc\n                                    \n                                    \n                                        getField\n                                    \n                                    \n                                        setAsc\n                                    \n                                    \n                                        setField\n                                    \n                                \n                            \n                        \n                    \n                \n            \n\n\n            \n                \n                    \n                        Methods\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        getAsc\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            getAsc()\n                                \n                            \n            \n            \n                                    \n                                        \n                                                Defined in src/grid/utils/sort-info.ts:5\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                            Returns :     boolean\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        getField\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            getField()\n                                \n                            \n            \n            \n                                    \n                                        \n                                                Defined in src/grid/utils/sort-info.ts:13\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                            Returns :     string\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        setAsc\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            setAsc(asc: boolean)\n                                \n                            \n            \n            \n                                    \n                                        \n                                                Defined in src/grid/utils/sort-info.ts:9\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                                Type\n                                                            Optional\n                                                        \n                                                    \n                                                    \n                                                            \n                                                                asc\n                                                                \n                                                                    \n                                                                                boolean\n                                                                    \n                                                                \n                                                                \n                                                                        no\n                                                                \n                                                                \n            \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     void\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        setField\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            setField(field: string)\n                                \n                            \n            \n            \n                                    \n                                        \n                                                Defined in src/grid/utils/sort-info.ts:17\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                                Type\n                                                            Optional\n                                                        \n                                                    \n                                                    \n                                                            \n                                                                field\n                                                                \n                                                                    \n                                                                                string\n                                                                    \n                                                                \n                                                                \n                                                                        no\n                                                                \n                                                                \n            \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     void\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n            \n\n\n            \n                \n                    \n                        Properties\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                            Public\n                                        asc\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                    asc:     boolean\n            \n                                \n                            \n                                \n                                    \n                                        Type :     boolean\n            \n                                    \n                                \n                                \n                                    \n                                        Default value : true\n                                    \n                                \n                                    \n                                        \n                                                Defined in src/grid/utils/sort-info.ts:2\n                                        \n                                    \n            \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                            Public\n                                        field\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                    field:     string\n            \n                                \n                            \n                                \n                                    \n                                        Type :     string\n            \n                                    \n                                \n                                \n                                    \n                                        Default value : null\n                                    \n                                \n                                    \n                                        \n                                                Defined in src/grid/utils/sort-info.ts:3\n                                        \n                                    \n            \n            \n                        \n                    \n            \n\n    \n\n\n    \n        export class SortInfo {\n  public asc: boolean = true;\n  public field: string = null;\n\n  getAsc(): boolean {\n    return this.asc;\n  }\n\n  setAsc(asc: boolean) {\n    this.asc = asc;\n  }\n\n  getField(): string {\n    return this.field;\n  }\n\n  setField(field: string) {\n    this.field = field;\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ClickListener.html":{"url":"interfaces/ClickListener.html","title":"interface - ClickListener","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ClickListener\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/grid/event/click.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    click\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n                \n                    \n                        Methods\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        click\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            click(event: MouseEvent)\n                                \n                            \n            \n            \n                                    \n                                        \n                                                Defined in src/grid/event/click.interface.ts:3\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                                Type\n                                                            Optional\n                                                        \n                                                    \n                                                    \n                                                            \n                                                                event\n                                                                \n                                                                    \n                                                                                MouseEvent\n                                                                    \n                                                                \n                                                                \n                                                                        no\n                                                                \n                                                                \n            \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     boolean\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n            \n\n\n    \n\n\n    \n        export interface ClickListener {\n\n  click(event: MouseEvent): boolean;\n\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DblClickListener.html":{"url":"interfaces/DblClickListener.html","title":"interface - DblClickListener","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  DblClickListener\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/grid/event/dbl-click.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    dblclick\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n                \n                    \n                        Methods\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        dblclick\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            dblclick(event: MouseEvent)\n                                \n                            \n            \n            \n                                    \n                                        \n                                                Defined in src/grid/event/dbl-click.interface.ts:3\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                                Type\n                                                            Optional\n                                                        \n                                                    \n                                                    \n                                                            \n                                                                event\n                                                                \n                                                                    \n                                                                                MouseEvent\n                                                                    \n                                                                \n                                                                \n                                                                        no\n                                                                \n                                                                \n            \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     boolean\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n            \n\n\n    \n\n\n    \n        export interface DblClickListener {\n\n  dblclick(event: MouseEvent): boolean;\n\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Dictionary.html":{"url":"interfaces/Dictionary.html","title":"interface - Dictionary","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Dictionary\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/grid/model/dictionary.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        display\n                                \n                                \n                                        value\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        display\n                                    \n                                \n                                \n                                    \n                                        display:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n                                    \n                                        \n                                            Defined in src/grid/model/dictionary.interface.ts:3\n                                        \n                                    \n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        value\n                                    \n                                \n                                \n                                    \n                                        value:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n                                    \n                                        \n                                            Defined in src/grid/model/dictionary.interface.ts:2\n                                        \n                                    \n\n                        \n                    \n            \n    \n\n\n    \n        export interface Dictionary {\n  value: string;\n  display: string;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/EmptyConstructor.html":{"url":"interfaces/EmptyConstructor.html","title":"interface - EmptyConstructor","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  EmptyConstructor\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/grid/utils/empty.factory.ts\n        \n\n\n\n\n\n\n    \n\n\n    \n        export class EmptyFactory {\n  constructor(private emptyConstructor: EmptyConstructor) {}\n\n  getInstance(): T {\n    return new this.emptyConstructor();\n  }\n}\n\nexport interface EmptyConstructor {\n  new(): T;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/EventListenerArg.html":{"url":"interfaces/EventListenerArg.html","title":"interface - EventListenerArg","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  EventListenerArg\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/grid/event/event-listener-arg.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        config\n                                \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        config\n                                    \n                                \n                                \n                                    \n                                        config:     any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/grid/event/event-listener-arg.interface.ts:5\n                                        \n                                    \n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     Type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Type\n\n                                        \n                                    \n\n\n\n\n                                    \n                                        \n                                            Defined in src/grid/event/event-listener-arg.interface.ts:4\n                                        \n                                    \n\n                        \n                    \n            \n    \n\n\n    \n        import {Type} from \"@angular/core\";\n\nexport interface EventListenerArg {\n  type: Type;\n  config?: any;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/InjectableConstructor.html":{"url":"interfaces/InjectableConstructor.html","title":"interface - InjectableConstructor","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  InjectableConstructor\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/grid/utils/injectable.factory.ts\n        \n\n\n\n\n\n\n    \n\n\n    \n        import {Injector} from \"@angular/core\";\n\n/**\n * Allows instantiation of any generic type if the type expects an injector argument.  See the implementation of\n * the EventListener.\n */\nexport class InjectableFactory {\n  constructor(private ic: InjectableConstructor, private injector: Injector) {}\n\n  getInstance(): T {\n    return new this.ic(this.injector);\n  }\n}\n\nexport interface InjectableConstructor {\n  new(injector: Injector): T;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MouseDownListener.html":{"url":"interfaces/MouseDownListener.html","title":"interface - MouseDownListener","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  MouseDownListener\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/grid/event/mouse-down.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    mouseDown\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n                \n                    \n                        Methods\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        mouseDown\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            mouseDown(event: MouseEvent)\n                                \n                            \n            \n            \n                                    \n                                        \n                                                Defined in src/grid/event/mouse-down.interface.ts:3\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                                Type\n                                                            Optional\n                                                        \n                                                    \n                                                    \n                                                            \n                                                                event\n                                                                \n                                                                    \n                                                                                MouseEvent\n                                                                    \n                                                                \n                                                                \n                                                                        no\n                                                                \n                                                                \n            \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     boolean\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n            \n\n\n    \n\n\n    \n        export interface MouseDownListener {\n\n  mouseDown(event: MouseEvent): boolean;\n\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MouseDragListener.html":{"url":"interfaces/MouseDragListener.html","title":"interface - MouseDragListener","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  MouseDragListener\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/grid/event/mouse-drag.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    mouseDrag\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n                \n                    \n                        Methods\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        mouseDrag\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            mouseDrag(event: MouseEvent)\n                                \n                            \n            \n            \n                                    \n                                        \n                                                Defined in src/grid/event/mouse-drag.interface.ts:3\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                                Type\n                                                            Optional\n                                                        \n                                                    \n                                                    \n                                                            \n                                                                event\n                                                                \n                                                                    \n                                                                                MouseEvent\n                                                                    \n                                                                \n                                                                \n                                                                        no\n                                                                \n                                                                \n            \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     boolean\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n            \n\n\n    \n\n\n    \n        export interface MouseDragListener {\n\n  mouseDrag(event: MouseEvent): boolean;\n\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MouseOverListener.html":{"url":"interfaces/MouseOverListener.html","title":"interface - MouseOverListener","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  MouseOverListener\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/grid/event/mouse-over.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    mouseOver\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n                \n                    \n                        Methods\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        mouseOver\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            mouseOver(event: MouseEvent)\n                                \n                            \n            \n            \n                                    \n                                        \n                                                Defined in src/grid/event/mouse-over.interface.ts:3\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                                Type\n                                                            Optional\n                                                        \n                                                    \n                                                    \n                                                            \n                                                                event\n                                                                \n                                                                    \n                                                                                MouseEvent\n                                                                    \n                                                                \n                                                                \n                                                                        no\n                                                                \n                                                                \n            \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     boolean\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n            \n\n\n    \n\n\n    \n        export interface MouseOverListener {\n\n  mouseOver(event: MouseEvent): boolean;\n\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MouseUpListener.html":{"url":"interfaces/MouseUpListener.html","title":"interface - MouseUpListener","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  MouseUpListener\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/grid/event/mouse-up.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    mouseUp\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n                \n                    \n                        Methods\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        mouseUp\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            mouseUp(event: MouseEvent)\n                                \n                            \n            \n            \n                                    \n                                        \n                                                Defined in src/grid/event/mouse-up.interface.ts:3\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                                Type\n                                                            Optional\n                                                        \n                                                    \n                                                    \n                                                            \n                                                                event\n                                                                \n                                                                    \n                                                                                MouseEvent\n                                                                    \n                                                                \n                                                                \n                                                                        no\n                                                                \n                                                                \n            \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     boolean\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n            \n\n\n    \n\n\n    \n        export interface MouseUpListener {\n\n  mouseUp(event: MouseEvent): boolean;\n\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ARROW\n                        \n                        \n                            CLICK\n                        \n                        \n                            NO_EVENT\n                        \n                        \n                            RESIZE\n                        \n                        \n                            SCROLL\n                        \n                        \n                            TAB\n                        \n                    \n                \n            \n        \n    \n\n\n    src/grid/services/grid-event.service.ts\n    \n                \n                \n                    \n                        \n                            \n                            \n                                \n                                ARROW\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n                            ARROW:     number\n    \n                        \n                    \n                        \n                            \n                                Type :     number\n    \n                            \n                        \n                        \n                            \n                                Default value : 2\n                            \n                        \n    \n    \n                \n            \n            \n                \n                    \n                        \n                            \n                            \n                                \n                                CLICK\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n                            CLICK:     number\n    \n                        \n                    \n                        \n                            \n                                Type :     number\n    \n                            \n                        \n                        \n                            \n                                Default value : 0\n                            \n                        \n    \n    \n                \n            \n            \n                \n                    \n                        \n                            \n                            \n                                \n                                TAB\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n                            TAB:     number\n    \n                        \n                    \n                        \n                            \n                                Type :     number\n    \n                            \n                        \n                        \n                            \n                                Default value : 1\n                            \n                        \n    \n    \n                \n            \n    \n    src/grid/grid.component.ts\n    \n                \n                \n                    \n                        \n                            \n                            \n                                \n                                NO_EVENT\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n                            NO_EVENT:     number\n    \n                        \n                    \n                        \n                            \n                                Type :     number\n    \n                            \n                        \n                        \n                            \n                                Default value : -1\n                            \n                        \n    \n    \n                \n            \n            \n                \n                    \n                        \n                            \n                            \n                                \n                                RESIZE\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n                            RESIZE:     number\n    \n                        \n                    \n                        \n                            \n                                Type :     number\n    \n                            \n                        \n                        \n                            \n                                Default value : 0\n                            \n                        \n    \n    \n                \n            \n            \n                \n                    \n                        \n                            \n                            \n                                \n                                SCROLL\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n                            SCROLL:     number\n    \n                        \n                    \n                        \n                            \n                                Type :     number\n    \n                            \n                        \n                        \n                            \n                                Default value : 1\n                            \n                        \n    \n    \n                \n            \n    \n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
