var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.1.6","fields":["title","body"],"fieldVectors":[["title/dependencies.html",[0,2.159,1,2.382]],["body/dependencies.html",[1,2.971,2,3.357,3,3.875,4,3.357,5,0.032,6,4.662,7,4.662,8,4.662,9,0.029,10,0.029]],["title/index.html",[11,1.87,12,2.159,13,0.398]],["body/index.html",[0,0.751,2,0.651,5,0.03,9,0.009,10,0.009,11,0.651,14,0.903,15,0.903,16,3.716,17,0.903,18,0.903,19,1.591,20,0.903,21,0.903,22,0.903,23,2.132,24,2.435,25,2.929,26,0.903,27,0.903,28,0.903,29,3.297,30,0.903,31,0.651,32,0.651,33,2.76,34,0.751,35,2.132,36,0.903,37,1.591,38,0.903,39,0.903,40,0.903,41,0.903,42,0.903,43,0.903,44,0.903,45,0.903,46,2.899,47,0.903,48,2.132,49,0.903,50,3.23,51,0.903,52,0.903,53,1.591,54,0.903,55,0.903,56,0.903,57,2.929,58,0.751,59,1.146,60,2.323,61,0.903,62,3.382,63,2.323,64,0.751,65,1.591,66,1.591,67,3.9,68,0.903,69,2.132,70,1.591,71,0.903,72,1.591,73,0.903,74,3.179,75,3.487,76,0.903,77,0.903,78,2.899,79,2.135,80,0.903,81,1.591,82,0.058,83,2.232,84,2.93,85,0.751,86,1.591,87,0.903,88,1.591,89,0.903,90,0.903,91,0.903,92,0.903,93,2.132,94,1.217,95,0.903,96,0.576,97,2.569,98,1.591,99,1.146,100,0.911,101,1.772,102,2.569,103,0.903,104,0.903,105,0.903,106,0.751,107,0.109,108,1.1,109,0.903,110,0.903,111,0.903,112,0.903,113,0.903,114,0.903,115,0.903,116,0.903,117,0.684,118,1.772,119,2.176,120,2.435,121,1.591,122,0.903,123,0.903,124,0.903,125,2.929,126,0.903,127,2.132,128,1.323,129,0.751,130,0.903,131,0.903,132,0.903,133,2.135,134,0.31,135,0.903,136,0.533,137,0.903,138,0.903,139,1.246,140,2.109,141,0.903,142,1.772,143,0.576,144,0.903,145,0.903,146,1.591,147,1.591,148,2.132,149,0.903,150,2.132,151,1.591,152,0.903,153,0.903,154,0.903,155,1.591,156,0.903,157,0.903,158,0.903,159,1.772,160,1.323,161,0.903,162,0.903,163,0.903,164,0.903,165,0.903,166,3.082,167,0.903,168,0.903,169,0.751,170,1.591,171,0.903,172,0.903,173,0.903,174,0.903,175,2.099,176,0.903,177,1.591,178,0.903,179,1.591,180,0.903,181,0.903,182,0.903,183,0.903,184,1.146,185,0.903,186,1.591,187,1.323,188,0.903,189,0.903,190,3.487,191,0.903,192,0.903,193,0.751,194,0.903,195,0.903,196,0.903,197,1.591,198,0.903,199,0.903,200,0.651,201,0.903,202,2.685,203,0.903,204,0.903,205,1.591,206,0.903,207,0.903,208,0.903,209,1.772,210,0.903,211,0.903,212,1.591,213,1.772,214,2.685,215,0.903,216,1.591,217,1.591,218,0.903,219,0.903,220,1.097,221,0.903,222,0.903,223,0.903,224,1.591,225,0.903,226,0.903,227,1.014,228,0.903,229,2.569,230,0.903,231,0.903,232,0.903,233,0.903,234,0.751,235,0.903,236,0.903,237,0.903,238,0.903,239,0.903,240,0.903,241,2.485,242,1.467,243,0.903,244,0.903,245,0.903,246,0.903,247,0.751,248,0.903,249,0.903,250,1.323,251,0.903,252,0.11,253,0.751,254,0.07,255,0.154,256,0.651,257,0.751,258,0.751,259,0.903,260,1.591,261,0.903,262,0.903,263,1.591,264,0.903,265,1.591,266,0.903,267,0.903,268,0.903,269,0.903,270,0.903,271,0.651,272,1.591,273,0.903,274,0.903,275,0.903,276,2.569,277,0.903,278,0.651,279,0.903,280,1.323,281,0.903,282,0.903,283,0.903,284,1.591,285,0.651,286,0.651,287,1.591,288,0.651,289,0.903,290,1.591,291,1.323,292,1.591,293,0.651,294,0.903,295,0.903,296,0.903,297,0.751,298,0.903,299,0.903,300,0.903,301,0.903]],["title/overview.html",[302,3.524]],["body/overview.html",[1,1.638,4,1.851,5,0.033,9,0.02,10,0.02,99,1.851,101,2.136,184,1.851,252,0.133,254,0.2,278,3.135,285,3.135,286,3.135,288,3.135,293,3.135,302,2.136,303,2.136,304,2.136,305,2.118,306,0.166,307,2.136,308,2.136,309,2.136,310,2.136,311,4.934,312,4.05,313,3.618,314,2.773,315,2.773,316,2.773,317,2.773,318,3.618,319,3.618,320,3.618,321,3.618,322,3.618,323,3.618,324,2.773,325,3.083,326,2.136,327,2.136,328,3.709,329,3.709,330,1.851,331,1.004,332,2.57]],["title/changelog.html",[11,1.87,12,2.159,333,2.597]],["body/changelog.html",[5,0.026,9,0.026,10,0.026,16,4.044,24,3.184,29,2.759,32,2.759,46,3.184,58,3.184,64,3.184,74,3.1,78,3.184,79,3.184,84,3.503,85,3.184,96,2.441,106,3.184,129,3.184,133,3.184,142,3.184,241,3.1,242,2.187,271,2.759,280,3.184,334,3.83,335,3.83,336,3.83,337,3.83,338,3.83,339,3.83,340,3.83,341,4.864,342,3.83,343,3.83,344,3.83,345,3.83,346,3.83,347,3.184,348,3.83,349,3.83,350,3.83,351,3.83,352,3.83]],["title/modules.html",[305,2.42]],["body/modules.html",[5,0.03,9,0.03,10,0.03,32,3.419,305,2.711,312,3.025,353,4.748,354,4.748,355,4.748]],["title/modules/GridModule.html",[305,1.775,312,1.981]],["body/modules/GridModule.html",[1,1.014,2,1.146,3,1.323,4,1.85,5,0.033,9,0.014,10,0.014,62,2.686,74,1.014,82,0.103,99,2.327,107,0.192,252,0.082,278,3.432,285,3.432,286,3.432,288,3.432,293,3.432,303,1.323,304,2.686,305,1.467,306,0.239,307,1.323,308,1.323,309,1.323,310,1.323,311,4.706,312,3.9,313,3.617,314,2.773,315,2.773,316,2.773,317,2.773,318,3.961,319,3.961,320,3.617,321,3.617,322,2.686,323,2.686,324,2.059,325,2.136,326,1.323,327,1.323,356,0.124,357,0.124,358,1.591,359,2.569,360,1.591,361,1.591,362,1.591,363,1.591,364,1.591,365,1.591,366,1.591,367,1.591,368,1.591,369,1.591,370,1.894,371,2.569,372,3.231,373,0.569,374,2.569,375,1.591,376,2.569,377,1.591,378,1.591,379,1.591,380,0.909,381,1.591,382,3.708,383,2.569,384,1.591,385,1.591,386,1.591,387,3.231,388,4.351,389,1.591,390,1.591,391,1.591,392,1.591,393,1.591,394,1.591,395,1.591,396,2.569,397,1.591,398,2.569,399,1.591,400,1.591,401,1.591,402,1.591,403,1.591,404,1.323,405,1.591,406,3.231,407,1.591]],["title/injectables/GridMessageService.html",[324,1.981,330,2.238]],["body/injectables/GridMessageService.html",[5,0.034,9,0.019,10,0.019,13,0.381,33,2.204,63,2.973,82,0.16,107,0.516,108,1.868,117,0.603,134,0.438,136,0.495,175,2.204,209,3.011,220,1.825,234,3.901,252,0.129,255,0.617,306,0.16,324,2.308,330,3.077,347,4.147,356,0.193,357,0.193,370,1.186,373,0.889,408,4.467,409,2.487,410,1.697,411,4.044,412,4.693,413,4.693,414,4.693,415,3.622,416,3.622,417,4.272,418,3.622,419,0.629,420,2.487,421,0.554,422,2.308,423,3.622,424,2.487,425,3.011,426,2.487,427,5.206,428,2.487,429,3.622,430,2.487,431,2.487,432,2.487,433,2.487,434,2.487,435,2.487,436,2.487]],["title/pipes/IsFixedPipe.html",[316,1.981,331,1.214]],["body/pipes/IsFixedPipe.html",[5,0.034,9,0.024,10,0.024,60,2.531,82,0.214,94,2.848,100,1.419,107,0.603,117,0.401,119,1.713,120,4.147,134,0.401,136,0.681,139,1.783,140,2.391,159,4.425,250,2.76,252,0.172,255,0.566,306,0.214,316,2.824,331,1.948,356,0.258,357,0.258,370,1.451,373,1.187,380,1.896,419,0.401,421,0.508,437,2.824,438,3.32,439,1.896,440,4.432,441,2.116,442,2.824,443,3.32,444,2.824,445,2.116,446,3.32]],["title/pipes/IsGroupPipe.html",[315,1.981,331,1.214]],["body/pipes/IsGroupPipe.html",[5,0.034,9,0.025,10,0.025,60,2.613,82,0.225,94,2.918,100,1.489,107,0.617,119,1.798,134,0.421,136,0.698,252,0.18,255,0.594,306,0.225,315,2.916,331,1.995,356,0.271,357,0.271,370,1.498,373,1.246,380,1.99,419,0.421,421,0.533,437,2.916,439,1.99,441,2.221,442,2.916,444,2.916,445,2.221,447,3.485,448,4.576,449,3.485,450,3.485,451,3.485]],["title/pipes/IsRowVisiblePipe.html",[317,1.981,331,1.214]],["body/pipes/IsRowVisiblePipe.html",[5,0.034,9,0.025,10,0.025,74,3.458,82,0.225,94,2.918,100,1.489,107,0.617,119,1.798,134,0.421,136,0.698,252,0.18,255,0.594,306,0.225,317,2.916,331,1.995,356,0.271,357,0.271,370,1.498,373,1.246,419,0.421,421,0.533,437,2.916,439,1.99,441,2.221,442,2.916,444,2.916,445,2.221,452,2.897,453,4.576,454,2.897,455,3.485,456,2.897]],["title/pipes/IsVisiblePipe.html",[314,1.981,331,1.214]],["body/pipes/IsVisiblePipe.html",[5,0.034,9,0.025,10,0.025,60,2.629,82,0.227,94,2.93,100,1.502,107,0.62,119,1.814,134,0.425,136,0.701,252,0.182,255,0.599,306,0.227,314,2.934,331,2.004,356,0.273,357,0.273,370,1.507,373,1.257,380,2.008,419,0.425,421,0.538,437,2.934,439,2.008,441,2.241,442,2.934,444,2.934,445,2.241,452,2.923,454,2.923,456,2.923,457,4.604]],["title/classes/Cell.html",[242,1.775,252,0.161]],["body/classes/Cell.html",[5,0.033,9,0.024,10,0.024,13,0.506,29,3.183,33,1.705,82,0.213,117,0.642,118,4.138,134,0.399,136,0.451,139,1.78,140,3.183,175,2.568,193,4.418,202,4.418,220,2.366,241,2.107,242,2.523,252,0.229,306,0.213,356,0.257,357,0.257,410,2.071,419,0.642,421,0.506,439,1.888,458,3.306,459,1.888,460,3.306,461,3.306,462,3.306,463,3.306,464,2.107,465,4.419,466,4.419,467,4.419,468,3.306,469,3.306,470,3.306]],["title/classes/CellTextView.html",[252,0.161,471,2.584]],["body/classes/CellTextView.html",[5,0.033,9,0.02,10,0.02,13,0.397,60,3.33,82,0.167,100,1.596,107,0.578,117,0.529,134,0.529,136,0.598,160,2.158,169,2.158,175,2.725,213,3.639,220,1.87,227,1.654,241,1.654,242,1.482,252,0.193,253,3.639,255,0.637,256,2.691,257,3.106,258,3.98,271,1.869,306,0.167,356,0.202,357,0.202,370,1.433,373,0.928,380,1.482,419,0.529,421,0.67,422,2.381,471,3.106,472,4.787,473,5.444,474,2.596,475,3.736,476,3.106,477,3.736,478,2.596,479,3.106,480,2.596,481,3.736,482,2.596,483,2.596,484,3.736,485,2.596,486,5.073,487,2.596,488,2.596,489,3.736,490,2.596,491,3.736,492,2.596,493,3.736,494,2.596,495,2.596,496,2.596,497,2.596]],["title/classes/EmptyFactory.html",[252,0.161,498,2.238]],["body/classes/EmptyFactory.html",[5,0.033,9,0.025,10,0.025,13,0.546,82,0.23,107,0.561,108,2.396,117,0.624,134,0.431,136,0.487,143,2.272,252,0.241,254,0.277,255,0.792,306,0.3,356,0.277,357,0.277,419,0.561,421,0.546,459,2.036,464,2.96,498,3.345,499,2.964,500,2.568,501,2.568,502,2.568,503,3.488,504,3.565,505,4.192,506,3.565,507,3.565,508,3.292,509,2.272,510,2.964]],["title/classes/FormatterParser.html",[252,0.161,511,2.584]],["body/classes/FormatterParser.html",[5,0.034,9,0.021,10,0.021,13,0.432,33,1.456,34,2.347,82,0.182,107,0.688,117,0.601,119,2.046,134,0.554,136,0.626,220,2.433,227,3.461,252,0.205,255,0.676,256,2.856,306,0.182,356,0.219,357,0.219,410,1.858,419,0.601,421,0.702,422,1.799,459,1.612,476,3.297,511,3.297,512,5.238,513,2.823,514,2.823,515,2.823,516,2.823,517,2.823,518,3.966,519,3.966,520,3.966,521,2.823,522,3.966,523,2.823,524,2.823,525,2.823,526,2.823]],["title/classes/HtmlUtil.html",[252,0.161,527,2.584]],["body/classes/HtmlUtil.html",[5,0.034,9,0.019,10,0.019,13,0.364,63,2.797,82,0.153,107,0.657,117,0.503,128,4.406,134,0.503,136,0.569,247,2.916,252,0.238,255,0.598,297,2.916,306,0.153,356,0.185,357,0.185,370,0.779,404,4.616,419,0.503,421,0.637,459,1.359,479,4.76,527,2.916,528,4.595,529,2.38,530,3.507,531,3.507,532,3.507,533,3.507,534,3.507,535,3.507,536,3.507,537,3.507,538,2.38,539,5.439,540,2.38,541,3.507,542,2.38,543,3.507,544,2.38,545,4.595,546,4.165,547,2.38,548,4.595,549,1.979,550,2.38]],["title/classes/InjectableFactory.html",[252,0.161,551,2.238]],["body/classes/InjectableFactory.html",[5,0.033,9,0.023,10,0.023,13,0.479,31,3.069,82,0.202,96,2.715,100,1.82,107,0.515,108,1.616,117,0.657,134,0.378,136,0.428,143,2.715,252,0.221,254,0.243,255,0.726,306,0.275,356,0.243,357,0.243,370,1.026,373,1.12,411,2.256,419,0.515,421,0.479,459,1.788,464,1.996,500,3.069,501,3.069,502,3.069,503,3.312,508,3.086,509,1.996,551,3.069,552,2.604,553,4.978,554,3.542,555,3.132,556,3.744,557,3.132,558,3.542,559,3.132,560,2.604,561,2.604]],["title/classes/RowChange.html",[252,0.161,562,2.584]],["body/classes/RowChange.html",[5,0.033,9,0.024,10,0.024,13,0.526,82,0.222,117,0.613,134,0.415,136,0.47,175,3.188,252,0.235,306,0.222,356,0.267,357,0.267,410,2.125,419,0.613,421,0.526,464,2.191,562,3.771,563,5.397,564,3.438,565,5.964,566,5.762,567,4.536,568,4.536,569,3.438,570,3.438,571,3.438]],["title/classes/SortInfo.html",[252,0.161,572,2.584]],["body/classes/SortInfo.html",[5,0.034,9,0.02,10,0.02,13,0.403,33,1.946,63,3.193,82,0.17,107,0.641,117,0.582,134,0.456,136,0.515,139,1.999,166,3.136,214,4.412,220,1.612,252,0.195,255,0.643,306,0.17,356,0.204,357,0.204,410,1.768,419,0.641,421,0.577,422,2.404,549,3.136,572,3.136,573,5.466,574,2.631,575,5.307,576,5.307,577,4.817,578,4.817,579,3.772,580,3.772,581,2.631,582,2.631,583,3.772,584,2.631,585,3.772,586,2.631,587,2.631,588,2.631,589,3.772,590,3.772]],["title/interfaces/ClickListener.html",[254,0.241,591,2.584]],["body/interfaces/ClickListener.html",[5,0.032,9,0.027,10,0.027,13,0.623,59,3.641,82,0.263,83,1.908,107,0.492,117,0.492,134,0.492,136,0.556,139,1.807,254,0.393,255,0.862,306,0.263,356,0.316,357,0.316,419,0.492,421,0.623,591,4.202,592,4.072,593,5.055,594,2.836,595,4.072]],["title/interfaces/DblClickListener.html",[254,0.241,596,2.584]],["body/interfaces/DblClickListener.html",[5,0.032,9,0.027,10,0.027,13,0.617,82,0.26,83,1.888,107,0.487,117,0.487,134,0.487,136,0.55,139,1.795,254,0.39,255,0.856,306,0.26,356,0.313,357,0.313,419,0.487,421,0.617,594,2.822,596,4.175,597,5.022,598,4.03,599,5.022,600,5.022,601,4.03]],["title/interfaces/Dictionary.html",[254,0.241,602,2.584]],["body/interfaces/Dictionary.html",[5,0.032,9,0.027,10,0.027,13,0.614,63,3.426,82,0.259,117,0.605,220,2.442,254,0.389,291,4.752,306,0.259,356,0.311,357,0.311,410,2.346,419,0.605,602,4.162,603,4.009,604,4.009,605,4.009]],["title/interfaces/EmptyConstructor.html",[254,0.241,505,2.238]],["body/interfaces/EmptyConstructor.html",[5,0.034,9,0.028,10,0.028,82,0.268,107,0.503,108,2.642,252,0.215,254,0.398,306,0.33,356,0.323,357,0.323,498,2.996,499,3.458,503,2.651,505,4.171,508,3.264,509,2.651,510,3.458]],["title/interfaces/EventListenerArg.html",[200,2.238,254,0.241]],["body/interfaces/EventListenerArg.html",[5,0.032,9,0.026,10,0.026,13,0.589,82,0.248,84,3.859,117,0.75,134,0.59,200,3.514,227,3.59,254,0.379,306,0.248,356,0.299,357,0.299,370,1.26,373,1.376,410,2.286,419,0.59,606,5.357,607,3.849,608,3.849,609,3.849]],["title/interfaces/InjectableConstructor.html",[254,0.241,556,2.238]],["body/interfaces/InjectableConstructor.html",[5,0.034,9,0.026,10,0.026,31,2.679,82,0.24,96,2.37,100,1.589,107,0.449,108,1.919,117,0.577,143,2.37,252,0.193,254,0.371,306,0.308,356,0.289,357,0.289,370,1.218,373,1.33,411,2.679,500,2.679,501,2.679,502,2.679,503,2.37,508,3.042,509,2.37,551,2.679,552,3.092,553,4.782,554,3.092,556,3.797,558,3.092,560,3.092,561,3.092]],["title/interfaces/MouseDownListener.html",[254,0.241,610,2.584]],["body/interfaces/MouseDownListener.html",[5,0.032,9,0.027,10,0.027,13,0.617,82,0.26,83,1.888,107,0.487,117,0.487,134,0.487,136,0.55,139,1.795,254,0.39,255,0.856,306,0.26,356,0.313,357,0.313,419,0.487,421,0.617,594,2.822,610,4.175,611,3.2,612,4.03,613,5.022,614,5.022,615,4.03]],["title/interfaces/MouseDragListener.html",[254,0.241,616,2.584]],["body/interfaces/MouseDragListener.html",[5,0.032,9,0.027,10,0.027,13,0.617,82,0.26,83,1.888,107,0.487,117,0.487,134,0.487,136,0.55,139,1.795,254,0.39,255,0.856,306,0.26,356,0.313,357,0.313,419,0.487,421,0.617,594,2.822,611,3.2,616,4.175,617,4.03,618,5.022,619,5.022,620,4.03]],["title/interfaces/MouseOverListener.html",[254,0.241,621,2.584]],["body/interfaces/MouseOverListener.html",[5,0.032,9,0.027,10,0.027,13,0.617,82,0.26,83,1.888,107,0.487,117,0.487,134,0.487,136,0.55,139,1.795,254,0.39,255,0.856,306,0.26,356,0.313,357,0.313,419,0.487,421,0.617,594,2.822,611,3.2,621,4.175,622,4.03,623,5.022,624,5.022,625,4.03]],["title/interfaces/MouseUpListener.html",[254,0.241,626,2.584]],["body/interfaces/MouseUpListener.html",[5,0.032,9,0.027,10,0.027,13,0.617,82,0.26,83,1.888,107,0.487,117,0.487,134,0.487,136,0.55,139,1.795,254,0.39,255,0.856,306,0.26,356,0.313,357,0.313,419,0.487,421,0.617,594,2.822,611,3.2,626,4.175,627,4.03,628,5.022,629,5.022,630,4.03]],["title/miscellaneous/variables.html",[631,2.159,632,3.107]],["body/miscellaneous/variables.html",[5,0.033,9,0.024,10,0.024,13,0.517,33,2.958,59,3.624,117,0.693,175,3.179,184,3.624,187,4.183,220,2.45,408,2.809,425,2.809,631,2.809,632,2.809,633,5.032,634,5.032,635,5.032,636,5.032,637,3.378,638,4.483,639,3.378]]],"invertedIndex":[["",{"_index":5,"title":{},"body":{"dependencies.html":{},"index.html":{},"overview.html":{},"changelog.html":{},"modules.html":{},"modules/GridModule.html":{},"injectables/GridMessageService.html":{},"pipes/IsFixedPipe.html":{},"pipes/IsGroupPipe.html":{},"pipes/IsRowVisiblePipe.html":{},"pipes/IsVisiblePipe.html":{},"classes/Cell.html":{},"classes/CellTextView.html":{},"classes/EmptyFactory.html":{},"classes/FormatterParser.html":{},"classes/HtmlUtil.html":{},"classes/InjectableFactory.html":{},"classes/RowChange.html":{},"classes/SortInfo.html":{},"interfaces/ClickListener.html":{},"interfaces/DblClickListener.html":{},"interfaces/Dictionary.html":{},"interfaces/EmptyConstructor.html":{},"interfaces/EventListenerArg.html":{},"interfaces/InjectableConstructor.html":{},"interfaces/MouseDownListener.html":{},"interfaces/MouseDragListener.html":{},"interfaces/MouseOverListener.html":{},"interfaces/MouseUpListener.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":638,"title":{},"body":{"miscellaneous/variables.html":{}}}],["1",{"_index":184,"title":{},"body":{"index.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["1.1.x",{"_index":6,"title":{},"body":{"dependencies.html":{}}}],["10",{"_index":179,"title":{},"body":{"index.html":{}}}],["100",{"_index":185,"title":{},"body":{"index.html":{}}}],["1000",{"_index":115,"title":{},"body":{"index.html":{}}}],["11",{"_index":328,"title":{},"body":{"overview.html":{}}}],["15",{"_index":267,"title":{},"body":{"index.html":{}}}],["2",{"_index":425,"title":{},"body":{"injectables/GridMessageService.html":{},"miscellaneous/variables.html":{}}}],["2.0.0",{"_index":335,"title":{},"body":{"changelog.html":{}}}],["2.18.1",{"_index":8,"title":{},"body":{"dependencies.html":{}}}],["2016",{"_index":362,"title":{},"body":{"modules/GridModule.html":{}}}],["25",{"_index":180,"title":{},"body":{"index.html":{}}}],["33",{"_index":332,"title":{},"body":{"overview.html":{}}}],["4",{"_index":329,"title":{},"body":{"overview.html":{}}}],["50",{"_index":181,"title":{},"body":{"index.html":{}}}],["85",{"_index":269,"title":{},"body":{"index.html":{}}}],["8px",{"_index":488,"title":{},"body":{"classes/CellTextView.html":{}}}],["_level",{"_index":412,"title":{},"body":{"injectables/GridMessageService.html":{}}}],["_messag",{"_index":413,"title":{},"body":{"injectables/GridMessageService.html":{}}}],["_messageobserv",{"_index":414,"title":{},"body":{"injectables/GridMessageService.html":{}}}],["abov",{"_index":153,"title":{},"body":{"index.html":{}}}],["accessor",{"_index":416,"title":{},"body":{"injectables/GridMessageService.html":{}}}],["action",{"_index":88,"title":{},"body":{"index.html":{}}}],["ad",{"_index":85,"title":{},"body":{"index.html":{},"changelog.html":{}}}],["allow",{"_index":143,"title":{},"body":{"index.html":{},"classes/EmptyFactory.html":{},"classes/InjectableFactory.html":{},"interfaces/InjectableConstructor.html":{}}}],["angular",{"_index":15,"title":{},"body":{"index.html":{}}}],["angular/common",{"_index":375,"title":{},"body":{"modules/GridModule.html":{}}}],["angular/cor",{"_index":373,"title":{},"body":{"modules/GridModule.html":{},"injectables/GridMessageService.html":{},"pipes/IsFixedPipe.html":{},"pipes/IsGroupPipe.html":{},"pipes/IsRowVisiblePipe.html":{},"pipes/IsVisiblePipe.html":{},"classes/CellTextView.html":{},"classes/InjectableFactory.html":{},"interfaces/EventListenerArg.html":{},"interfaces/InjectableConstructor.html":{}}}],["angular/form",{"_index":377,"title":{},"body":{"modules/GridModule.html":{}}}],["anyth",{"_index":27,"title":{},"body":{"index.html":{}}}],["anything.advanc",{"_index":240,"title":{},"body":{"index.html":{}}}],["arg.interface.t",{"_index":607,"title":{},"body":{"interfaces/EventListenerArg.html":{}}}],["arg.interface.ts:4",{"_index":609,"title":{},"body":{"interfaces/EventListenerArg.html":{}}}],["arg.interface.ts:5",{"_index":608,"title":{},"body":{"interfaces/EventListenerArg.html":{}}}],["argument",{"_index":502,"title":{},"body":{"classes/EmptyFactory.html":{},"classes/InjectableFactory.html":{},"interfaces/InjectableConstructor.html":{}}}],["array",{"_index":120,"title":{},"body":{"index.html":{},"pipes/IsFixedPipe.html":{}}}],["arrow",{"_index":633,"title":{},"body":{"miscellaneous/variables.html":{}}}],["asc",{"_index":576,"title":{},"body":{"classes/SortInfo.html":{}}}],["auto",{"_index":491,"title":{},"body":{"classes/CellTextView.html":{}}}],["bar",{"_index":152,"title":{},"body":{"index.html":{}}}],["base",{"_index":275,"title":{},"body":{"index.html":{}}}],["basic",{"_index":35,"title":{},"body":{"index.html":{}}}],["becom",{"_index":36,"title":{},"body":{"index.html":{}}}],["big).titl",{"_index":149,"title":{},"body":{"index.html":{}}}],["bigtextpopup",{"_index":319,"title":{},"body":{"overview.html":{},"modules/GridModule.html":{}}}],["bind",{"_index":123,"title":{},"body":{"index.html":{}}}],["birth",{"_index":281,"title":{},"body":{"index.html":{}}}],["boolean",{"_index":139,"title":{},"body":{"index.html":{},"pipes/IsFixedPipe.html":{},"classes/Cell.html":{},"classes/SortInfo.html":{},"interfaces/ClickListener.html":{},"interfaces/DblClickListener.html":{},"interfaces/MouseDownListener.html":{},"interfaces/MouseDragListener.html":{},"interfaces/MouseOverListener.html":{},"interfaces/MouseUpListener.html":{}}}],["bootstrap",{"_index":4,"title":{},"body":{"dependencies.html":{},"overview.html":{},"modules/GridModule.html":{}}}],["bootstrap/ng",{"_index":3,"title":{},"body":{"dependencies.html":{},"modules/GridModule.html":{}}}],["bottom",{"_index":492,"title":{},"body":{"classes/CellTextView.html":{}}}],["break",{"_index":297,"title":{},"body":{"index.html":{},"classes/HtmlUtil.html":{}}}],["brows",{"_index":355,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":353,"title":{},"body":{"modules.html":{}}}],["built",{"_index":272,"title":{},"body":{"index.html":{}}}],["busi",{"_index":339,"title":{},"body":{"changelog.html":{}}}],["c",{"_index":361,"title":{},"body":{"modules/GridModule.html":{}}}],["call",{"_index":79,"title":{},"body":{"index.html":{},"changelog.html":{}}}],["call.externalpag",{"_index":173,"title":{},"body":{"index.html":{}}}],["call.externalsort",{"_index":172,"title":{},"body":{"index.html":{}}}],["call.pages",{"_index":174,"title":{},"body":{"index.html":{}}}],["callback",{"_index":80,"title":{},"body":{"index.html":{}}}],["cancer",{"_index":364,"title":{},"body":{"modules/GridModule.html":{}}}],["cell",{"_index":242,"title":{"classes/Cell.html":{}},"body":{"index.html":{},"changelog.html":{},"classes/Cell.html":{},"classes/CellTextView.html":{}}}],["cell'",{"_index":461,"title":{},"body":{"classes/Cell.html":{}}}],["cell.onrowsav",{"_index":221,"title":{},"body":{"index.html":{}}}],["cell/editrenderers/choic",{"_index":391,"title":{},"body":{"modules/GridModule.html":{}}}],["cell/editrenderers/d",{"_index":392,"title":{},"body":{"modules/GridModule.html":{}}}],["cell/editrenderers/text",{"_index":386,"title":{},"body":{"modules/GridModule.html":{}}}],["cell/viewpopuprenderer/bigtext",{"_index":394,"title":{},"body":{"modules/GridModule.html":{}}}],["cellnumberrangeview",{"_index":264,"title":{},"body":{"index.html":{}}}],["celltextview",{"_index":471,"title":{"classes/CellTextView.html":{}},"body":{"classes/CellTextView.html":{}}}],["cellviewrender",{"_index":253,"title":{},"body":{"index.html":{},"classes/CellTextView.html":{}}}],["chang",{"_index":58,"title":{},"body":{"index.html":{},"changelog.html":{}}}],["change.t",{"_index":564,"title":{},"body":{"classes/RowChange.html":{}}}],["change.ts:3",{"_index":569,"title":{},"body":{"classes/RowChange.html":{}}}],["change.ts:4",{"_index":568,"title":{},"body":{"classes/RowChange.html":{}}}],["changelog",{"_index":333,"title":{"changelog.html":{}},"body":{}}],["choic",{"_index":289,"title":{},"body":{"index.html":{}}}],["choice.compon",{"_index":402,"title":{},"body":{"modules/GridModule.html":{}}}],["choiceeditrender",{"_index":288,"title":{},"body":{"index.html":{},"overview.html":{},"modules/GridModule.html":{}}}],["choos",{"_index":182,"title":{},"body":{"index.html":{}}}],["class",{"_index":252,"title":{"classes/Cell.html":{},"classes/CellTextView.html":{},"classes/EmptyFactory.html":{},"classes/FormatterParser.html":{},"classes/HtmlUtil.html":{},"classes/InjectableFactory.html":{},"classes/RowChange.html":{},"classes/SortInfo.html":{}},"body":{"index.html":{},"overview.html":{},"modules/GridModule.html":{},"injectables/GridMessageService.html":{},"pipes/IsFixedPipe.html":{},"pipes/IsGroupPipe.html":{},"pipes/IsRowVisiblePipe.html":{},"pipes/IsVisiblePipe.html":{},"classes/Cell.html":{},"classes/CellTextView.html":{},"classes/EmptyFactory.html":{},"classes/FormatterParser.html":{},"classes/HtmlUtil.html":{},"classes/InjectableFactory.html":{},"classes/RowChange.html":{},"classes/SortInfo.html":{},"interfaces/EmptyConstructor.html":{},"interfaces/InjectableConstructor.html":{}}}],["click",{"_index":59,"title":{},"body":{"index.html":{},"interfaces/ClickListener.html":{},"miscellaneous/variables.html":{}}}],["click(ev",{"_index":593,"title":{},"body":{"interfaces/ClickListener.html":{}}}],["click.interface.t",{"_index":598,"title":{},"body":{"interfaces/DblClickListener.html":{}}}],["click.interface.ts:3",{"_index":601,"title":{},"body":{"interfaces/DblClickListener.html":{}}}],["clicklisten",{"_index":591,"title":{"interfaces/ClickListener.html":{}},"body":{"interfaces/ClickListener.html":{}}}],["cluster_gridmodul",{"_index":307,"title":{},"body":{"overview.html":{},"modules/GridModule.html":{}}}],["cluster_gridmodule_declar",{"_index":308,"title":{},"body":{"overview.html":{},"modules/GridModule.html":{}}}],["cluster_gridmodule_export",{"_index":310,"title":{},"body":{"overview.html":{},"modules/GridModule.html":{}}}],["cluster_gridmodule_gridcomponent_provid",{"_index":309,"title":{},"body":{"overview.html":{},"modules/GridModule.html":{}}}],["code",{"_index":40,"title":{},"body":{"index.html":{}}}],["colum",{"_index":147,"title":{},"body":{"index.html":{}}}],["column",{"_index":60,"title":{},"body":{"index.html":{},"pipes/IsFixedPipe.html":{},"pipes/IsGroupPipe.html":{},"pipes/IsVisiblePipe.html":{},"classes/CellTextView.html":{}}}],["column/column",{"_index":380,"title":{},"body":{"modules/GridModule.html":{},"pipes/IsFixedPipe.html":{},"pipes/IsGroupPipe.html":{},"pipes/IsVisiblePipe.html":{},"classes/CellTextView.html":{}}}],["column/filterrenderers/compar",{"_index":390,"title":{},"body":{"modules/GridModule.html":{}}}],["column/filterrenderers/select",{"_index":393,"title":{},"body":{"modules/GridModule.html":{}}}],["column/filterrenderers/text",{"_index":389,"title":{},"body":{"modules/GridModule.html":{}}}],["columnheadercompon",{"_index":313,"title":{},"body":{"overview.html":{},"modules/GridModule.html":{}}}],["columns[j].field",{"_index":215,"title":{},"body":{"index.html":{}}}],["command",{"_index":47,"title":{},"body":{"index.html":{}}}],["commonmodul",{"_index":374,"title":{},"body":{"modules/GridModule.html":{}}}],["comparefilterrender",{"_index":286,"title":{},"body":{"index.html":{},"overview.html":{},"modules/GridModule.html":{}}}],["compil",{"_index":39,"title":{},"body":{"index.html":{}}}],["complex",{"_index":28,"title":{},"body":{"index.html":{}}}],["compon",{"_index":101,"title":{},"body":{"index.html":{},"overview.html":{}}}],["confidenti",{"_index":368,"title":{},"body":{"modules/GridModule.html":{}}}],["config",{"_index":227,"title":{},"body":{"index.html":{},"classes/CellTextView.html":{},"classes/FormatterParser.html":{},"interfaces/EventListenerArg.html":{}}}],["config/config",{"_index":396,"title":{},"body":{"modules/GridModule.html":{}}}],["configmenucompon",{"_index":320,"title":{},"body":{"overview.html":{},"modules/GridModule.html":{}}}],["configmultichoicecompon",{"_index":321,"title":{},"body":{"overview.html":{},"modules/GridModule.html":{}}}],["configur",{"_index":133,"title":{},"body":{"index.html":{},"changelog.html":{}}}],["configuration.publish",{"_index":38,"title":{},"body":{"index.html":{}}}],["connect",{"_index":346,"title":{},"body":{"changelog.html":{}}}],["console.output",{"_index":210,"title":{},"body":{"index.html":{}}}],["constructor",{"_index":464,"title":{},"body":{"classes/Cell.html":{},"classes/EmptyFactory.html":{},"classes/InjectableFactory.html":{},"classes/RowChange.html":{}}}],["constructor(",{"_index":555,"title":{},"body":{"classes/InjectableFactory.html":{}}}],["constructor(emptyconstructor",{"_index":504,"title":{},"body":{"classes/EmptyFactory.html":{}}}],["constructor(o",{"_index":465,"title":{},"body":{"classes/Cell.html":{}}}],["constructor(oldrownum",{"_index":567,"title":{},"body":{"classes/RowChange.html":{}}}],["constructor(priv",{"_index":509,"title":{},"body":{"classes/EmptyFactory.html":{},"classes/InjectableFactory.html":{},"interfaces/EmptyConstructor.html":{},"interfaces/InjectableConstructor.html":{}}}],["contain",{"_index":132,"title":{},"body":{"index.html":{}}}],["conveni",{"_index":530,"title":{},"body":{"classes/HtmlUtil.html":{}}}],["copi",{"_index":44,"title":{},"body":{"index.html":{}}}],["copyright",{"_index":360,"title":{},"body":{"modules/GridModule.html":{}}}],["creat",{"_index":205,"title":{},"body":{"index.html":{}}}],["createel",{"_index":475,"title":{},"body":{"classes/CellTextView.html":{}}}],["createelement(render",{"_index":257,"title":{},"body":{"index.html":{},"classes/CellTextView.html":{}}}],["current",{"_index":93,"title":{},"body":{"index.html":{}}}],["custom",{"_index":46,"title":{},"body":{"index.html":{},"changelog.html":{}}}],["data",{"_index":29,"title":{},"body":{"index.html":{},"changelog.html":{},"classes/Cell.html":{}}}],["data.celldblclick",{"_index":230,"title":{},"body":{"index.html":{}}}],["data.datacal",{"_index":124,"title":{},"body":{"index.html":{}}}],["data.rowclick",{"_index":231,"title":{},"body":{"index.html":{}}}],["data.rowdblclick",{"_index":232,"title":{},"body":{"index.html":{}}}],["data.warn",{"_index":233,"title":{},"body":{"index.html":{}}}],["data/config/ev",{"_index":337,"title":{},"body":{"changelog.html":{}}}],["datarequest(externalinfo",{"_index":104,"title":{},"body":{"index.html":{}}}],["datatyp",{"_index":282,"title":{},"body":{"index.html":{}}}],["date",{"_index":280,"title":{},"body":{"index.html":{},"changelog.html":{}}}],["dateeditrender",{"_index":285,"title":{},"body":{"index.html":{},"overview.html":{},"modules/GridModule.html":{}}}],["dblclick",{"_index":599,"title":{},"body":{"interfaces/DblClickListener.html":{}}}],["dblclick(ev",{"_index":600,"title":{},"body":{"interfaces/DblClickListener.html":{}}}],["dblclicklisten",{"_index":596,"title":{"interfaces/DblClickListener.html":{}},"body":{"interfaces/DblClickListener.html":{}}}],["declar",{"_index":304,"title":{},"body":{"overview.html":{},"modules/GridModule.html":{}}}],["default",{"_index":33,"title":{},"body":{"index.html":{},"injectables/GridMessageService.html":{},"classes/Cell.html":{},"classes/FormatterParser.html":{},"classes/SortInfo.html":{},"miscellaneous/variables.html":{}}}],["default.externalfilt",{"_index":171,"title":{},"body":{"index.html":{}}}],["defin",{"_index":419,"title":{},"body":{"injectables/GridMessageService.html":{},"pipes/IsFixedPipe.html":{},"pipes/IsGroupPipe.html":{},"pipes/IsRowVisiblePipe.html":{},"pipes/IsVisiblePipe.html":{},"classes/Cell.html":{},"classes/CellTextView.html":{},"classes/EmptyFactory.html":{},"classes/FormatterParser.html":{},"classes/HtmlUtil.html":{},"classes/InjectableFactory.html":{},"classes/RowChange.html":{},"classes/SortInfo.html":{},"interfaces/ClickListener.html":{},"interfaces/DblClickListener.html":{},"interfaces/Dictionary.html":{},"interfaces/EventListenerArg.html":{},"interfaces/MouseDownListener.html":{},"interfaces/MouseDragListener.html":{},"interfaces/MouseOverListener.html":{},"interfaces/MouseUpListener.html":{}}}],["demo",{"_index":19,"title":{},"body":{"index.html":{}}}],["depend",{"_index":1,"title":{"dependencies.html":{}},"body":{"dependencies.html":{},"overview.html":{},"modules/GridModule.html":{}}}],["descript",{"_index":459,"title":{},"body":{"classes/Cell.html":{},"classes/EmptyFactory.html":{},"classes/FormatterParser.html":{},"classes/HtmlUtil.html":{},"classes/InjectableFactory.html":{}}}],["design",{"_index":22,"title":{},"body":{"index.html":{}}}],["determin",{"_index":229,"title":{},"body":{"index.html":{}}}],["dictionari",{"_index":602,"title":{"interfaces/Dictionary.html":{}},"body":{"interfaces/Dictionary.html":{}}}],["differ",{"_index":273,"title":{},"body":{"index.html":{}}}],["dirti",{"_index":193,"title":{},"body":{"index.html":{},"classes/Cell.html":{}}}],["disabl",{"_index":164,"title":{},"body":{"index.html":{}}}],["display",{"_index":291,"title":{},"body":{"index.html":{},"interfaces/Dictionary.html":{}}}],["dist",{"_index":42,"title":{},"body":{"index.html":{}}}],["dob",{"_index":279,"title":{},"body":{"index.html":{}}}],["don't",{"_index":198,"title":{},"body":{"index.html":{}}}],["down.interface.t",{"_index":612,"title":{},"body":{"interfaces/MouseDownListener.html":{}}}],["down.interface.ts:3",{"_index":615,"title":{},"body":{"interfaces/MouseDownListener.html":{}}}],["drag.interface.t",{"_index":617,"title":{},"body":{"interfaces/MouseDragListener.html":{}}}],["drag.interface.ts:3",{"_index":620,"title":{},"body":{"interfaces/MouseDragListener.html":{}}}],["e",{"_index":539,"title":{},"body":{"classes/HtmlUtil.html":{}}}],["e.g",{"_index":146,"title":{},"body":{"index.html":{}}}],["e.id",{"_index":546,"title":{},"body":{"classes/HtmlUtil.html":{}}}],["e.id.startswith(id",{"_index":547,"title":{},"body":{"classes/HtmlUtil.html":{}}}],["e.parentel",{"_index":548,"title":{},"body":{"classes/HtmlUtil.html":{}}}],["each",{"_index":249,"title":{},"body":{"index.html":{}}}],["edit",{"_index":387,"title":{},"body":{"modules/GridModule.html":{}}}],["editrender",{"_index":284,"title":{},"body":{"index.html":{}}}],["element",{"_index":533,"title":{},"body":{"classes/HtmlUtil.html":{}}}],["ellipsi",{"_index":495,"title":{},"body":{"classes/CellTextView.html":{}}}],["emit",{"_index":190,"title":{},"body":{"index.html":{}}}],["emptyconstructor",{"_index":505,"title":{"interfaces/EmptyConstructor.html":{}},"body":{"classes/EmptyFactory.html":{},"interfaces/EmptyConstructor.html":{}}}],["emptyfactori",{"_index":498,"title":{"classes/EmptyFactory.html":{}},"body":{"classes/EmptyFactory.html":{},"interfaces/EmptyConstructor.html":{}}}],["entrycompon",{"_index":359,"title":{},"body":{"modules/GridModule.html":{}}}],["error",{"_index":415,"title":{},"body":{"injectables/GridMessageService.html":{}}}],["error(messag",{"_index":418,"title":{},"body":{"injectables/GridMessageService.html":{}}}],["especi",{"_index":343,"title":{},"body":{"changelog.html":{}}}],["event",{"_index":83,"title":{},"body":{"index.html":{},"interfaces/ClickListener.html":{},"interfaces/DblClickListener.html":{},"interfaces/MouseDownListener.html":{},"interfaces/MouseDragListener.html":{},"interfaces/MouseOverListener.html":{},"interfaces/MouseUpListener.html":{}}}],["event.service.t",{"_index":637,"title":{},"body":{"miscellaneous/variables.html":{}}}],["eventlisten",{"_index":554,"title":{},"body":{"classes/InjectableFactory.html":{},"interfaces/InjectableConstructor.html":{}}}],["eventlistenerarg",{"_index":200,"title":{"interfaces/EventListenerArg.html":{}},"body":{"index.html":{},"interfaces/EventListenerArg.html":{}}}],["events.mod",{"_index":203,"title":{},"body":{"index.html":{}}}],["exampl",{"_index":97,"title":{},"body":{"index.html":{}}}],["expect",{"_index":31,"title":{},"body":{"index.html":{},"classes/InjectableFactory.html":{},"interfaces/InjectableConstructor.html":{}}}],["export",{"_index":306,"title":{},"body":{"overview.html":{},"modules/GridModule.html":{},"injectables/GridMessageService.html":{},"pipes/IsFixedPipe.html":{},"pipes/IsGroupPipe.html":{},"pipes/IsRowVisiblePipe.html":{},"pipes/IsVisiblePipe.html":{},"classes/Cell.html":{},"classes/CellTextView.html":{},"classes/EmptyFactory.html":{},"classes/FormatterParser.html":{},"classes/HtmlUtil.html":{},"classes/InjectableFactory.html":{},"classes/RowChange.html":{},"classes/SortInfo.html":{},"interfaces/ClickListener.html":{},"interfaces/DblClickListener.html":{},"interfaces/Dictionary.html":{},"interfaces/EmptyConstructor.html":{},"interfaces/EventListenerArg.html":{},"interfaces/InjectableConstructor.html":{},"interfaces/MouseDownListener.html":{},"interfaces/MouseDragListener.html":{},"interfaces/MouseOverListener.html":{},"interfaces/MouseUpListener.html":{}}}],["extend",{"_index":274,"title":{},"body":{"index.html":{}}}],["extern",{"_index":78,"title":{},"body":{"index.html":{},"changelog.html":{}}}],["externaldata",{"_index":112,"title":{},"body":{"index.html":{}}}],["externalinfo",{"_index":105,"title":{},"body":{"index.html":{}}}],["fals",{"_index":140,"title":{},"body":{"index.html":{},"pipes/IsFixedPipe.html":{},"classes/Cell.html":{}}}],["featur",{"_index":24,"title":{},"body":{"index.html":{},"changelog.html":{}}}],["femal",{"_index":290,"title":{},"body":{"index.html":{}}}],["field",{"_index":214,"title":{},"body":{"index.html":{},"classes/SortInfo.html":{}}}],["file",{"_index":357,"title":{},"body":{"modules/GridModule.html":{},"injectables/GridMessageService.html":{},"pipes/IsFixedPipe.html":{},"pipes/IsGroupPipe.html":{},"pipes/IsRowVisiblePipe.html":{},"pipes/IsVisiblePipe.html":{},"classes/Cell.html":{},"classes/CellTextView.html":{},"classes/EmptyFactory.html":{},"classes/FormatterParser.html":{},"classes/HtmlUtil.html":{},"classes/InjectableFactory.html":{},"classes/RowChange.html":{},"classes/SortInfo.html":{},"interfaces/ClickListener.html":{},"interfaces/DblClickListener.html":{},"interfaces/Dictionary.html":{},"interfaces/EmptyConstructor.html":{},"interfaces/EventListenerArg.html":{},"interfaces/InjectableConstructor.html":{},"interfaces/MouseDownListener.html":{},"interfaces/MouseDragListener.html":{},"interfaces/MouseOverListener.html":{},"interfaces/MouseUpListener.html":{}}}],["filter",{"_index":62,"title":{},"body":{"index.html":{},"modules/GridModule.html":{}}}],["filterrender",{"_index":276,"title":{},"body":{"index.html":{}}}],["first",{"_index":70,"title":{},"body":{"index.html":{}}}],["firstnam",{"_index":277,"title":{},"body":{"index.html":{}}}],["fix",{"_index":159,"title":{},"body":{"index.html":{},"pipes/IsFixedPipe.html":{}}}],["fixed.pip",{"_index":385,"title":{},"body":{"modules/GridModule.html":{}}}],["fixed.pipe.t",{"_index":438,"title":{},"body":{"pipes/IsFixedPipe.html":{}}}],["fixed.pipe.ts:10",{"_index":443,"title":{},"body":{"pipes/IsFixedPipe.html":{}}}],["fixes.1.0.0",{"_index":349,"title":{},"body":{"changelog.html":{}}}],["flag",{"_index":141,"title":{},"body":{"index.html":{}}}],["folder",{"_index":43,"title":{},"body":{"index.html":{}}}],["follow",{"_index":260,"title":{},"body":{"index.html":{}}}],["format",{"_index":224,"title":{},"body":{"index.html":{}}}],["formatt",{"_index":514,"title":{},"body":{"classes/FormatterParser.html":{}}}],["formatterpars",{"_index":511,"title":{"classes/FormatterParser.html":{}},"body":{"classes/FormatterParser.html":{}}}],["formatting/pars",{"_index":342,"title":{},"body":{"changelog.html":{}}}],["formatvalu",{"_index":518,"title":{},"body":{"classes/FormatterParser.html":{}}}],["formatvalue(valu",{"_index":520,"title":{},"body":{"classes/FormatterParser.html":{}}}],["formsmodul",{"_index":376,"title":{},"body":{"modules/GridModule.html":{}}}],["forroot(globalconfig",{"_index":405,"title":{},"body":{"modules/GridModule.html":{}}}],["from.nvisiblerow",{"_index":183,"title":{},"body":{"index.html":{}}}],["full",{"_index":23,"title":{},"body":{"index.html":{}}}],["function",{"_index":102,"title":{},"body":{"index.html":{}}}],["gender",{"_index":287,"title":{},"body":{"index.html":{}}}],["gener",{"_index":501,"title":{},"body":{"classes/EmptyFactory.html":{},"classes/InjectableFactory.html":{},"interfaces/InjectableConstructor.html":{}}}],["get",{"_index":11,"title":{"index.html":{},"changelog.html":{}},"body":{"index.html":{}}}],["getasc",{"_index":577,"title":{},"body":{"classes/SortInfo.html":{}}}],["getfield",{"_index":578,"title":{},"body":{"classes/SortInfo.html":{}}}],["getid",{"_index":534,"title":{},"body":{"classes/HtmlUtil.html":{}}}],["getid(",{"_index":537,"title":{},"body":{"classes/HtmlUtil.html":{}}}],["getidel",{"_index":535,"title":{},"body":{"classes/HtmlUtil.html":{}}}],["getidelement(",{"_index":541,"title":{},"body":{"classes/HtmlUtil.html":{}}}],["getinst",{"_index":503,"title":{},"body":{"classes/EmptyFactory.html":{},"classes/InjectableFactory.html":{},"interfaces/EmptyConstructor.html":{},"interfaces/InjectableConstructor.html":{}}}],["getloc",{"_index":536,"title":{},"body":{"classes/HtmlUtil.html":{}}}],["getlocation(",{"_index":543,"title":{},"body":{"classes/HtmlUtil.html":{}}}],["getmessageobserv",{"_index":431,"title":{},"body":{"injectables/GridMessageService.html":{}}}],["github",{"_index":20,"title":{},"body":{"index.html":{}}}],["global",{"_index":129,"title":{},"body":{"index.html":{},"changelog.html":{}}}],["global.servic",{"_index":400,"title":{},"body":{"modules/GridModule.html":{}}}],["globalconfig",{"_index":406,"title":{},"body":{"modules/GridModule.html":{}}}],["grid",{"_index":16,"title":{},"body":{"index.html":{},"changelog.html":{}}}],["grid'",{"_index":145,"title":{},"body":{"index.html":{}}}],["grid.cellclick",{"_index":228,"title":{},"body":{"index.html":{}}}],["grid.compon",{"_index":379,"title":{},"body":{"modules/GridModule.html":{}}}],["grid.groupbi",{"_index":162,"title":{},"body":{"index.html":{}}}],["grid.linkedgroup",{"_index":135,"title":{},"body":{"index.html":{}}}],["grid.them",{"_index":154,"title":{},"body":{"index.html":{}}}],["gridcompon",{"_index":311,"title":{},"body":{"overview.html":{},"modules/GridModule.html":{}}}],["grideventservic",{"_index":323,"title":{},"body":{"overview.html":{},"modules/GridModule.html":{}}}],["gridglobalservic",{"_index":398,"title":{},"body":{"modules/GridModule.html":{}}}],["gridmessageservic",{"_index":324,"title":{"injectables/GridMessageService.html":{}},"body":{"overview.html":{},"modules/GridModule.html":{},"injectables/GridMessageService.html":{}}}],["gridmodul",{"_index":312,"title":{"modules/GridModule.html":{}},"body":{"overview.html":{},"modules.html":{},"modules/GridModule.html":{}}}],["gridservic",{"_index":322,"title":{},"body":{"overview.html":{},"modules/GridModule.html":{}}}],["group",{"_index":75,"title":{},"body":{"index.html":{}}}],["group.pip",{"_index":384,"title":{},"body":{"modules/GridModule.html":{}}}],["group.pipe.t",{"_index":447,"title":{},"body":{"pipes/IsGroupPipe.html":{}}}],["group.pipe.ts:9",{"_index":449,"title":{},"body":{"pipes/IsGroupPipe.html":{}}}],["groupbycollaps",{"_index":165,"title":{},"body":{"index.html":{}}}],["handl",{"_index":25,"title":{},"body":{"index.html":{}}}],["hci",{"_index":18,"title":{},"body":{"index.html":{}}}],["hci'",{"_index":14,"title":{},"body":{"index.html":{}}}],["header",{"_index":61,"title":{},"body":{"index.html":{}}}],["header.compon",{"_index":381,"title":{},"body":{"modules/GridModule.html":{}}}],["here",{"_index":95,"title":{},"body":{"index.html":{}}}],["hidden",{"_index":169,"title":{},"body":{"index.html":{},"classes/CellTextView.html":{}}}],["high",{"_index":268,"title":{},"body":{"index.html":{}}}],["holder",{"_index":460,"title":{},"body":{"classes/Cell.html":{}}}],["html",{"_index":127,"title":{},"body":{"index.html":{}}}],["htmlelement",{"_index":479,"title":{},"body":{"classes/CellTextView.html":{},"classes/HtmlUtil.html":{}}}],["htmlelement;a",{"_index":259,"title":{},"body":{"index.html":{}}}],["htmlutil",{"_index":527,"title":{"classes/HtmlUtil.html":{}},"body":{"classes/HtmlUtil.html":{}}}],["huntsman",{"_index":363,"title":{},"body":{"modules/GridModule.html":{}}}],["ic",{"_index":558,"title":{},"body":{"classes/InjectableFactory.html":{},"interfaces/InjectableConstructor.html":{}}}],["id",{"_index":128,"title":{},"body":{"index.html":{},"classes/HtmlUtil.html":{}}}],["implement",{"_index":100,"title":{},"body":{"index.html":{},"pipes/IsFixedPipe.html":{},"pipes/IsGroupPipe.html":{},"pipes/IsRowVisiblePipe.html":{},"pipes/IsVisiblePipe.html":{},"classes/CellTextView.html":{},"classes/InjectableFactory.html":{},"interfaces/InjectableConstructor.html":{}}}],["import",{"_index":370,"title":{},"body":{"modules/GridModule.html":{},"injectables/GridMessageService.html":{},"pipes/IsFixedPipe.html":{},"pipes/IsGroupPipe.html":{},"pipes/IsRowVisiblePipe.html":{},"pipes/IsVisiblePipe.html":{},"classes/CellTextView.html":{},"classes/HtmlUtil.html":{},"classes/InjectableFactory.html":{},"interfaces/EventListenerArg.html":{},"interfaces/InjectableConstructor.html":{}}}],["improv",{"_index":341,"title":{},"body":{"changelog.html":{}}}],["in.onconfigchang",{"_index":226,"title":{},"body":{"index.html":{}}}],["index",{"_index":13,"title":{"index.html":{}},"body":{"injectables/GridMessageService.html":{},"classes/Cell.html":{},"classes/CellTextView.html":{},"classes/EmptyFactory.html":{},"classes/FormatterParser.html":{},"classes/HtmlUtil.html":{},"classes/InjectableFactory.html":{},"classes/RowChange.html":{},"classes/SortInfo.html":{},"interfaces/ClickListener.html":{},"interfaces/DblClickListener.html":{},"interfaces/Dictionary.html":{},"interfaces/EventListenerArg.html":{},"interfaces/MouseDownListener.html":{},"interfaces/MouseDragListener.html":{},"interfaces/MouseOverListener.html":{},"interfaces/MouseUpListener.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":356,"title":{},"body":{"modules/GridModule.html":{},"injectables/GridMessageService.html":{},"pipes/IsFixedPipe.html":{},"pipes/IsGroupPipe.html":{},"pipes/IsRowVisiblePipe.html":{},"pipes/IsVisiblePipe.html":{},"classes/Cell.html":{},"classes/CellTextView.html":{},"classes/EmptyFactory.html":{},"classes/FormatterParser.html":{},"classes/HtmlUtil.html":{},"classes/InjectableFactory.html":{},"classes/RowChange.html":{},"classes/SortInfo.html":{},"interfaces/ClickListener.html":{},"interfaces/DblClickListener.html":{},"interfaces/Dictionary.html":{},"interfaces/EmptyConstructor.html":{},"interfaces/EventListenerArg.html":{},"interfaces/InjectableConstructor.html":{},"interfaces/MouseDownListener.html":{},"interfaces/MouseDragListener.html":{},"interfaces/MouseOverListener.html":{},"interfaces/MouseUpListener.html":{}}}],["info.id",{"_index":126,"title":{},"body":{"index.html":{}}}],["info.t",{"_index":574,"title":{},"body":{"classes/SortInfo.html":{}}}],["info.ts:13",{"_index":582,"title":{},"body":{"classes/SortInfo.html":{}}}],["info.ts:17",{"_index":586,"title":{},"body":{"classes/SortInfo.html":{}}}],["info.ts:2",{"_index":587,"title":{},"body":{"classes/SortInfo.html":{}}}],["info.ts:3",{"_index":588,"title":{},"body":{"classes/SortInfo.html":{}}}],["info.ts:5",{"_index":581,"title":{},"body":{"classes/SortInfo.html":{}}}],["info.ts:9",{"_index":584,"title":{},"body":{"classes/SortInfo.html":{}}}],["initi",{"_index":350,"title":{},"body":{"changelog.html":{}}}],["inject",{"_index":330,"title":{"injectables/GridMessageService.html":{}},"body":{"overview.html":{},"injectables/GridMessageService.html":{}}}],["injectableconstructor",{"_index":556,"title":{"interfaces/InjectableConstructor.html":{}},"body":{"classes/InjectableFactory.html":{},"interfaces/InjectableConstructor.html":{}}}],["injectablefactori",{"_index":551,"title":{"classes/InjectableFactory.html":{}},"body":{"classes/InjectableFactory.html":{},"interfaces/InjectableConstructor.html":{}}}],["injector",{"_index":553,"title":{},"body":{"classes/InjectableFactory.html":{},"interfaces/InjectableConstructor.html":{}}}],["input",{"_index":116,"title":{},"body":{"index.html":{}}}],["instanti",{"_index":500,"title":{},"body":{"classes/EmptyFactory.html":{},"classes/InjectableFactory.html":{},"interfaces/InjectableConstructor.html":{}}}],["instead",{"_index":53,"title":{},"body":{"index.html":{}}}],["institut",{"_index":365,"title":{},"body":{"modules/GridModule.html":{}}}],["interfac",{"_index":254,"title":{"interfaces/ClickListener.html":{},"interfaces/DblClickListener.html":{},"interfaces/Dictionary.html":{},"interfaces/EmptyConstructor.html":{},"interfaces/EventListenerArg.html":{},"interfaces/InjectableConstructor.html":{},"interfaces/MouseDownListener.html":{},"interfaces/MouseDragListener.html":{},"interfaces/MouseOverListener.html":{},"interfaces/MouseUpListener.html":{}},"body":{"index.html":{},"overview.html":{},"classes/EmptyFactory.html":{},"classes/InjectableFactory.html":{},"interfaces/ClickListener.html":{},"interfaces/DblClickListener.html":{},"interfaces/Dictionary.html":{},"interfaces/EmptyConstructor.html":{},"interfaces/EventListenerArg.html":{},"interfaces/InjectableConstructor.html":{},"interfaces/MouseDownListener.html":{},"interfaces/MouseDragListener.html":{},"interfaces/MouseOverListener.html":{},"interfaces/MouseUpListener.html":{}}}],["intro",{"_index":21,"title":{},"body":{"index.html":{}}}],["introduc",{"_index":298,"title":{},"body":{"index.html":{}}}],["isfix",{"_index":440,"title":{},"body":{"pipes/IsFixedPipe.html":{}}}],["isfixedpip",{"_index":316,"title":{"pipes/IsFixedPipe.html":{}},"body":{"overview.html":{},"modules/GridModule.html":{},"pipes/IsFixedPipe.html":{}}}],["isgroup",{"_index":448,"title":{},"body":{"pipes/IsGroupPipe.html":{}}}],["isgrouppip",{"_index":315,"title":{"pipes/IsGroupPipe.html":{}},"body":{"overview.html":{},"modules/GridModule.html":{},"pipes/IsGroupPipe.html":{}}}],["isrowvis",{"_index":453,"title":{},"body":{"pipes/IsRowVisiblePipe.html":{}}}],["isrowvisiblepip",{"_index":317,"title":{"pipes/IsRowVisiblePipe.html":{}},"body":{"overview.html":{},"modules/GridModule.html":{},"pipes/IsRowVisiblePipe.html":{}}}],["issu",{"_index":295,"title":{},"body":{"index.html":{}}}],["isvis",{"_index":457,"title":{},"body":{"pipes/IsVisiblePipe.html":{}}}],["isvisiblepip",{"_index":314,"title":{"pipes/IsVisiblePipe.html":{}},"body":{"overview.html":{},"modules/GridModule.html":{},"pipes/IsVisiblePipe.html":{}}}],["j",{"_index":213,"title":{},"body":{"index.html":{},"classes/CellTextView.html":{}}}],["json",{"_index":131,"title":{},"body":{"index.html":{}}}],["key",{"_index":202,"title":{},"body":{"index.html":{},"classes/Cell.html":{}}}],["key1",{"_index":238,"title":{},"body":{"index.html":{}}}],["key2",{"_index":239,"title":{},"body":{"index.html":{}}}],["known",{"_index":294,"title":{},"body":{"index.html":{}}}],["lab",{"_index":262,"title":{},"body":{"index.html":{}}}],["last",{"_index":71,"title":{},"body":{"index.html":{}}}],["left",{"_index":160,"title":{},"body":{"index.html":{},"classes/CellTextView.html":{}}}],["legend",{"_index":303,"title":{},"body":{"overview.html":{},"modules/GridModule.html":{}}}],["librari",{"_index":17,"title":{},"body":{"index.html":{}}}],["limit",{"_index":186,"title":{},"body":{"index.html":{}}}],["link",{"_index":137,"title":{},"body":{"index.html":{}}}],["list",{"_index":94,"title":{},"body":{"index.html":{},"pipes/IsFixedPipe.html":{},"pipes/IsGroupPipe.html":{},"pipes/IsRowVisiblePipe.html":{},"pipes/IsVisiblePipe.html":{}}}],["list.filter((o",{"_index":445,"title":{},"body":{"pipes/IsFixedPipe.html":{},"pipes/IsGroupPipe.html":{},"pipes/IsRowVisiblePipe.html":{},"pipes/IsVisiblePipe.html":{}}}],["listen",{"_index":84,"title":{},"body":{"index.html":{},"changelog.html":{},"interfaces/EventListenerArg.html":{}}}],["load",{"_index":197,"title":{},"body":{"index.html":{}}}],["locat",{"_index":218,"title":{},"body":{"index.html":{}}}],["log",{"_index":334,"title":{},"body":{"changelog.html":{}}}],["low",{"_index":266,"title":{},"body":{"index.html":{}}}],["male",{"_index":292,"title":{},"body":{"index.html":{}}}],["manag",{"_index":463,"title":{},"body":{"classes/Cell.html":{}}}],["mani",{"_index":92,"title":{},"body":{"index.html":{}}}],["margin",{"_index":489,"title":{},"body":{"classes/CellTextView.html":{}}}],["match",{"_index":10,"title":{},"body":{"dependencies.html":{},"index.html":{},"overview.html":{},"changelog.html":{},"modules.html":{},"modules/GridModule.html":{},"injectables/GridMessageService.html":{},"pipes/IsFixedPipe.html":{},"pipes/IsGroupPipe.html":{},"pipes/IsRowVisiblePipe.html":{},"pipes/IsVisiblePipe.html":{},"classes/Cell.html":{},"classes/CellTextView.html":{},"classes/EmptyFactory.html":{},"classes/FormatterParser.html":{},"classes/HtmlUtil.html":{},"classes/InjectableFactory.html":{},"classes/RowChange.html":{},"classes/SortInfo.html":{},"interfaces/ClickListener.html":{},"interfaces/DblClickListener.html":{},"interfaces/Dictionary.html":{},"interfaces/EmptyConstructor.html":{},"interfaces/EventListenerArg.html":{},"interfaces/InjectableConstructor.html":{},"interfaces/MouseDownListener.html":{},"interfaces/MouseDragListener.html":{},"interfaces/MouseOverListener.html":{},"interfaces/MouseUpListener.html":{},"miscellaneous/variables.html":{}}}],["menu.compon",{"_index":397,"title":{},"body":{"modules/GridModule.html":{}}}],["messag",{"_index":234,"title":{},"body":{"index.html":{},"injectables/GridMessageService.html":{}}}],["message.service.t",{"_index":409,"title":{},"body":{"injectables/GridMessageService.html":{}}}],["message.service.ts:10",{"_index":426,"title":{},"body":{"injectables/GridMessageService.html":{}}}],["message.service.ts:12",{"_index":420,"title":{},"body":{"injectables/GridMessageService.html":{}}}],["message.service.ts:16",{"_index":424,"title":{},"body":{"injectables/GridMessageService.html":{}}}],["message.service.ts:20",{"_index":432,"title":{},"body":{"injectables/GridMessageService.html":{}}}],["message.service.ts:8",{"_index":428,"title":{},"body":{"injectables/GridMessageService.html":{}}}],["message.service.ts:9",{"_index":430,"title":{},"body":{"injectables/GridMessageService.html":{}}}],["messageobserv",{"_index":417,"title":{},"body":{"injectables/GridMessageService.html":{}}}],["metadata",{"_index":439,"title":{},"body":{"pipes/IsFixedPipe.html":{},"pipes/IsGroupPipe.html":{},"pipes/IsRowVisiblePipe.html":{},"pipes/IsVisiblePipe.html":{},"classes/Cell.html":{}}}],["method",{"_index":255,"title":{},"body":{"index.html":{},"injectables/GridMessageService.html":{},"pipes/IsFixedPipe.html":{},"pipes/IsGroupPipe.html":{},"pipes/IsRowVisiblePipe.html":{},"pipes/IsVisiblePipe.html":{},"classes/CellTextView.html":{},"classes/EmptyFactory.html":{},"classes/FormatterParser.html":{},"classes/HtmlUtil.html":{},"classes/InjectableFactory.html":{},"classes/SortInfo.html":{},"interfaces/ClickListener.html":{},"interfaces/DblClickListener.html":{},"interfaces/MouseDownListener.html":{},"interfaces/MouseDragListener.html":{},"interfaces/MouseOverListener.html":{},"interfaces/MouseUpListener.html":{}}}],["miscellan",{"_index":631,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["mm/dd/yyyi",{"_index":283,"title":{},"body":{"index.html":{}}}],["mock",{"_index":103,"title":{},"body":{"index.html":{}}}],["mode",{"_index":206,"title":{},"body":{"index.html":{}}}],["modif",{"_index":517,"title":{},"body":{"classes/FormatterParser.html":{}}}],["modifi",{"_index":144,"title":{},"body":{"index.html":{}}}],["modul",{"_index":305,"title":{"modules.html":{},"modules/GridModule.html":{}},"body":{"overview.html":{},"modules.html":{},"modules/GridModule.html":{}}}],["modulewithprovid",{"_index":371,"title":{},"body":{"modules/GridModule.html":{}}}],["moment",{"_index":7,"title":{},"body":{"dependencies.html":{}}}],["more",{"_index":77,"title":{},"body":{"index.html":{}}}],["mousedown",{"_index":613,"title":{},"body":{"interfaces/MouseDownListener.html":{}}}],["mousedown(ev",{"_index":614,"title":{},"body":{"interfaces/MouseDownListener.html":{}}}],["mousedownlisten",{"_index":610,"title":{"interfaces/MouseDownListener.html":{}},"body":{"interfaces/MouseDownListener.html":{}}}],["mousedrag",{"_index":618,"title":{},"body":{"interfaces/MouseDragListener.html":{}}}],["mousedrag(ev",{"_index":619,"title":{},"body":{"interfaces/MouseDragListener.html":{}}}],["mousedraglisten",{"_index":616,"title":{"interfaces/MouseDragListener.html":{}},"body":{"interfaces/MouseDragListener.html":{}}}],["mouseev",{"_index":594,"title":{},"body":{"interfaces/ClickListener.html":{},"interfaces/DblClickListener.html":{},"interfaces/MouseDownListener.html":{},"interfaces/MouseDragListener.html":{},"interfaces/MouseOverListener.html":{},"interfaces/MouseUpListener.html":{}}}],["mouseov",{"_index":623,"title":{},"body":{"interfaces/MouseOverListener.html":{}}}],["mouseover(ev",{"_index":624,"title":{},"body":{"interfaces/MouseOverListener.html":{}}}],["mouseoverlisten",{"_index":621,"title":{"interfaces/MouseOverListener.html":{}},"body":{"interfaces/MouseOverListener.html":{}}}],["mouseup",{"_index":628,"title":{},"body":{"interfaces/MouseUpListener.html":{}}}],["mouseup(ev",{"_index":629,"title":{},"body":{"interfaces/MouseUpListener.html":{}}}],["mouseuplisten",{"_index":626,"title":{"interfaces/MouseUpListener.html":{}},"body":{"interfaces/MouseUpListener.html":{}}}],["move",{"_index":41,"title":{},"body":{"index.html":{}}}],["multi",{"_index":401,"title":{},"body":{"modules/GridModule.html":{}}}],["name",{"_index":136,"title":{},"body":{"index.html":{},"injectables/GridMessageService.html":{},"pipes/IsFixedPipe.html":{},"pipes/IsGroupPipe.html":{},"pipes/IsRowVisiblePipe.html":{},"pipes/IsVisiblePipe.html":{},"classes/Cell.html":{},"classes/CellTextView.html":{},"classes/EmptyFactory.html":{},"classes/FormatterParser.html":{},"classes/HtmlUtil.html":{},"classes/InjectableFactory.html":{},"classes/RowChange.html":{},"classes/SortInfo.html":{},"interfaces/ClickListener.html":{},"interfaces/DblClickListener.html":{},"interfaces/MouseDownListener.html":{},"interfaces/MouseDragListener.html":{},"interfaces/MouseOverListener.html":{},"interfaces/MouseUpListener.html":{}}}],["navig",{"_index":192,"title":{},"body":{"index.html":{}}}],["nearli",{"_index":26,"title":{},"body":{"index.html":{}}}],["need",{"_index":462,"title":{},"body":{"classes/Cell.html":{}}}],["new",{"_index":108,"title":{},"body":{"index.html":{},"injectables/GridMessageService.html":{},"classes/EmptyFactory.html":{},"classes/InjectableFactory.html":{},"interfaces/EmptyConstructor.html":{},"interfaces/InjectableConstructor.html":{}}}],["new(injector",{"_index":561,"title":{},"body":{"classes/InjectableFactory.html":{},"interfaces/InjectableConstructor.html":{}}}],["newrownum",{"_index":565,"title":{},"body":{"classes/RowChange.html":{}}}],["newvalu",{"_index":217,"title":{},"body":{"index.html":{}}}],["next",{"_index":73,"title":{},"body":{"index.html":{}}}],["ng",{"_index":2,"title":{},"body":{"dependencies.html":{},"index.html":{},"modules/GridModule.html":{}}}],["ngbmodul",{"_index":378,"title":{},"body":{"modules/GridModule.html":{}}}],["ngbmodule.forroot",{"_index":403,"title":{},"body":{"modules/GridModule.html":{}}}],["ngmodul",{"_index":372,"title":{},"body":{"modules/GridModule.html":{}}}],["nlab",{"_index":261,"title":{},"body":{"index.html":{}}}],["no_ev",{"_index":634,"title":{},"body":{"miscellaneous/variables.html":{}}}],["note",{"_index":91,"title":{},"body":{"index.html":{}}}],["npmpack",{"_index":51,"title":{},"body":{"index.html":{}}}],["npmpublish",{"_index":52,"title":{},"body":{"index.html":{}}}],["null",{"_index":549,"title":{},"body":{"classes/HtmlUtil.html":{},"classes/SortInfo.html":{}}}],["number",{"_index":175,"title":{},"body":{"index.html":{},"injectables/GridMessageService.html":{},"classes/Cell.html":{},"classes/CellTextView.html":{},"classes/RowChange.html":{},"miscellaneous/variables.html":{}}}],["numer",{"_index":348,"title":{},"body":{"changelog.html":{}}}],["o",{"_index":467,"title":{},"body":{"classes/Cell.html":{}}}],["o.isfix",{"_index":446,"title":{},"body":{"pipes/IsFixedPipe.html":{}}}],["o.isgroup",{"_index":450,"title":{},"body":{"pipes/IsGroupPipe.html":{}}}],["o.isutil",{"_index":451,"title":{},"body":{"pipes/IsGroupPipe.html":{}}}],["o.vis",{"_index":456,"title":{},"body":{"pipes/IsRowVisiblePipe.html":{},"pipes/IsVisiblePipe.html":{}}}],["object",{"_index":118,"title":{},"body":{"index.html":{},"classes/Cell.html":{}}}],["object.assign(thi",{"_index":470,"title":{},"body":{"classes/Cell.html":{}}}],["objects.fixedcolumn",{"_index":158,"title":{},"body":{"index.html":{}}}],["observ",{"_index":347,"title":{},"body":{"changelog.html":{},"injectables/GridMessageService.html":{}}}],["old",{"_index":219,"title":{},"body":{"index.html":{}}}],["oldrownum",{"_index":566,"title":{},"body":{"classes/RowChange.html":{}}}],["oldvalu",{"_index":216,"title":{},"body":{"index.html":{}}}],["on",{"_index":76,"title":{},"body":{"index.html":{}}}],["oncellsav",{"_index":211,"title":{},"body":{"index.html":{}}}],["onrowsav",{"_index":191,"title":{},"body":{"index.html":{}}}],["option",{"_index":134,"title":{},"body":{"index.html":{},"injectables/GridMessageService.html":{},"pipes/IsFixedPipe.html":{},"pipes/IsGroupPipe.html":{},"pipes/IsRowVisiblePipe.html":{},"pipes/IsVisiblePipe.html":{},"classes/Cell.html":{},"classes/CellTextView.html":{},"classes/EmptyFactory.html":{},"classes/FormatterParser.html":{},"classes/HtmlUtil.html":{},"classes/InjectableFactory.html":{},"classes/RowChange.html":{},"classes/SortInfo.html":{},"interfaces/ClickListener.html":{},"interfaces/DblClickListener.html":{},"interfaces/EventListenerArg.html":{},"interfaces/MouseDownListener.html":{},"interfaces/MouseDragListener.html":{},"interfaces/MouseOverListener.html":{},"interfaces/MouseUpListener.html":{}}}],["origin",{"_index":225,"title":{},"body":{"index.html":{}}}],["originalrowdata",{"_index":223,"title":{},"body":{"index.html":{}}}],["out",{"_index":327,"title":{},"body":{"overview.html":{},"modules/GridModule.html":{}}}],["over.interface.t",{"_index":622,"title":{},"body":{"interfaces/MouseOverListener.html":{}}}],["over.interface.ts:3",{"_index":625,"title":{},"body":{"interfaces/MouseOverListener.html":{}}}],["overflow",{"_index":493,"title":{},"body":{"classes/CellTextView.html":{}}}],["overview",{"_index":302,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["pack",{"_index":55,"title":{},"body":{"index.html":{}}}],["packag",{"_index":0,"title":{"dependencies.html":{}},"body":{"index.html":{}}}],["package.json",{"_index":45,"title":{},"body":{"index.html":{}}}],["pad",{"_index":487,"title":{},"body":{"classes/CellTextView.html":{}}}],["page",{"_index":67,"title":{},"body":{"index.html":{}}}],["paramet",{"_index":421,"title":{},"body":{"injectables/GridMessageService.html":{},"pipes/IsFixedPipe.html":{},"pipes/IsGroupPipe.html":{},"pipes/IsRowVisiblePipe.html":{},"pipes/IsVisiblePipe.html":{},"classes/Cell.html":{},"classes/CellTextView.html":{},"classes/EmptyFactory.html":{},"classes/FormatterParser.html":{},"classes/HtmlUtil.html":{},"classes/InjectableFactory.html":{},"classes/RowChange.html":{},"classes/SortInfo.html":{},"interfaces/ClickListener.html":{},"interfaces/DblClickListener.html":{},"interfaces/MouseDownListener.html":{},"interfaces/MouseDragListener.html":{},"interfaces/MouseOverListener.html":{},"interfaces/MouseUpListener.html":{}}}],["parser",{"_index":515,"title":{},"body":{"classes/FormatterParser.html":{}}}],["parser.t",{"_index":513,"title":{},"body":{"classes/FormatterParser.html":{}}}],["parser.ts:12",{"_index":521,"title":{},"body":{"classes/FormatterParser.html":{}}}],["parser.ts:20",{"_index":523,"title":{},"body":{"classes/FormatterParser.html":{}}}],["parser.ts:6",{"_index":525,"title":{},"body":{"classes/FormatterParser.html":{}}}],["parser.ts:8",{"_index":524,"title":{},"body":{"classes/FormatterParser.html":{}}}],["parsevalu",{"_index":519,"title":{},"body":{"classes/FormatterParser.html":{}}}],["parsevalue(valu",{"_index":522,"title":{},"body":{"classes/FormatterParser.html":{}}}],["pass",{"_index":125,"title":{},"body":{"index.html":{}}}],["per",{"_index":176,"title":{},"body":{"index.html":{}}}],["perform",{"_index":201,"title":{},"body":{"index.html":{}}}],["pipe",{"_index":331,"title":{"pipes/IsFixedPipe.html":{},"pipes/IsGroupPipe.html":{},"pipes/IsRowVisiblePipe.html":{},"pipes/IsVisiblePipe.html":{}},"body":{"overview.html":{},"pipes/IsFixedPipe.html":{},"pipes/IsGroupPipe.html":{},"pipes/IsRowVisiblePipe.html":{},"pipes/IsVisiblePipe.html":{}}}],["pipetransform",{"_index":444,"title":{},"body":{"pipes/IsFixedPipe.html":{},"pipes/IsGroupPipe.html":{},"pipes/IsRowVisiblePipe.html":{},"pipes/IsVisiblePipe.html":{}}}],["point",{"_index":545,"title":{},"body":{"classes/HtmlUtil.html":{}}}],["point.getpoint(this.getid(",{"_index":550,"title":{},"body":{"classes/HtmlUtil.html":{}}}],["popup).selectedrow",{"_index":237,"title":{},"body":{"index.html":{}}}],["popup.compon",{"_index":395,"title":{},"body":{"modules/GridModule.html":{}}}],["possibl",{"_index":66,"title":{},"body":{"index.html":{}}}],["previou",{"_index":72,"title":{},"body":{"index.html":{}}}],["privat",{"_index":411,"title":{},"body":{"injectables/GridMessageService.html":{},"classes/InjectableFactory.html":{},"interfaces/InjectableConstructor.html":{}}}],["promis",{"_index":106,"title":{},"body":{"index.html":{},"changelog.html":{}}}],["promise((resolv",{"_index":109,"title":{},"body":{"index.html":{}}}],["properti",{"_index":410,"title":{},"body":{"injectables/GridMessageService.html":{},"classes/Cell.html":{},"classes/FormatterParser.html":{},"classes/RowChange.html":{},"classes/SortInfo.html":{},"interfaces/Dictionary.html":{},"interfaces/EventListenerArg.html":{}}}],["proprietari",{"_index":369,"title":{},"body":{"modules/GridModule.html":{}}}],["provid",{"_index":99,"title":{},"body":{"index.html":{},"overview.html":{},"modules/GridModule.html":{}}}],["public",{"_index":575,"title":{},"body":{"classes/SortInfo.html":{}}}],["publish",{"_index":49,"title":{},"body":{"index.html":{}}}],["publish.bas",{"_index":56,"title":{},"body":{"index.html":{}}}],["pull",{"_index":531,"title":{},"body":{"classes/HtmlUtil.html":{}}}],["pure",{"_index":250,"title":{},"body":{"index.html":{},"pipes/IsFixedPipe.html":{}}}],["rang",{"_index":65,"title":{},"body":{"index.html":{}}}],["re",{"_index":245,"title":{},"body":{"index.html":{}}}],["readme.md",{"_index":352,"title":{},"body":{"changelog.html":{}}}],["refactor",{"_index":336,"title":{},"body":{"changelog.html":{}}}],["referenc",{"_index":345,"title":{},"body":{"changelog.html":{}}}],["refresh",{"_index":243,"title":{},"body":{"index.html":{}}}],["reject",{"_index":110,"title":{},"body":{"index.html":{}}}],["releas",{"_index":351,"title":{},"body":{"changelog.html":{}}}],["render",{"_index":241,"title":{},"body":{"index.html":{},"changelog.html":{},"classes/Cell.html":{},"classes/CellTextView.html":{}}}],["renderer.appendchild(span",{"_index":497,"title":{},"body":{"classes/CellTextView.html":{}}}],["renderer.compon",{"_index":388,"title":{},"body":{"modules/GridModule.html":{}}}],["renderer.createelement(\"span",{"_index":485,"title":{},"body":{"classes/CellTextView.html":{}}}],["renderer.createtext(column.formatvalue(valu",{"_index":496,"title":{},"body":{"classes/CellTextView.html":{}}}],["renderer.interfac",{"_index":483,"title":{},"body":{"classes/CellTextView.html":{}}}],["renderer.setstyle(span",{"_index":486,"title":{},"body":{"classes/CellTextView.html":{}}}],["renderer2",{"_index":258,"title":{},"body":{"index.html":{},"classes/CellTextView.html":{}}}],["report",{"_index":156,"title":{},"body":{"index.html":{}}}],["request",{"_index":300,"title":{},"body":{"index.html":{}}}],["requir",{"_index":48,"title":{},"body":{"index.html":{}}}],["reset",{"_index":326,"title":{},"body":{"overview.html":{},"modules/GridModule.html":{}}}],["resiz",{"_index":635,"title":{},"body":{"miscellaneous/variables.html":{}}}],["resolve(externaldata",{"_index":114,"title":{},"body":{"index.html":{}}}],["result",{"_index":9,"title":{},"body":{"dependencies.html":{},"index.html":{},"overview.html":{},"changelog.html":{},"modules.html":{},"modules/GridModule.html":{},"injectables/GridMessageService.html":{},"pipes/IsFixedPipe.html":{},"pipes/IsGroupPipe.html":{},"pipes/IsRowVisiblePipe.html":{},"pipes/IsVisiblePipe.html":{},"classes/Cell.html":{},"classes/CellTextView.html":{},"classes/EmptyFactory.html":{},"classes/FormatterParser.html":{},"classes/HtmlUtil.html":{},"classes/InjectableFactory.html":{},"classes/RowChange.html":{},"classes/SortInfo.html":{},"interfaces/ClickListener.html":{},"interfaces/DblClickListener.html":{},"interfaces/Dictionary.html":{},"interfaces/EmptyConstructor.html":{},"interfaces/EventListenerArg.html":{},"interfaces/InjectableConstructor.html":{},"interfaces/MouseDownListener.html":{},"interfaces/MouseDragListener.html":{},"interfaces/MouseOverListener.html":{},"interfaces/MouseUpListener.html":{},"miscellaneous/variables.html":{}}}],["retriev",{"_index":81,"title":{},"body":{"index.html":{}}}],["return",{"_index":107,"title":{},"body":{"index.html":{},"modules/GridModule.html":{},"injectables/GridMessageService.html":{},"pipes/IsFixedPipe.html":{},"pipes/IsGroupPipe.html":{},"pipes/IsRowVisiblePipe.html":{},"pipes/IsVisiblePipe.html":{},"classes/CellTextView.html":{},"classes/EmptyFactory.html":{},"classes/FormatterParser.html":{},"classes/HtmlUtil.html":{},"classes/InjectableFactory.html":{},"classes/SortInfo.html":{},"interfaces/ClickListener.html":{},"interfaces/DblClickListener.html":{},"interfaces/EmptyConstructor.html":{},"interfaces/InjectableConstructor.html":{},"interfaces/MouseDownListener.html":{},"interfaces/MouseDragListener.html":{},"interfaces/MouseOverListener.html":{},"interfaces/MouseUpListener.html":{}}}],["right",{"_index":301,"title":{},"body":{"index.html":{}}}],["row",{"_index":74,"title":{},"body":{"index.html":{},"changelog.html":{},"modules/GridModule.html":{},"pipes/IsRowVisiblePipe.html":{}}}],["row/row",{"_index":455,"title":{},"body":{"pipes/IsRowVisiblePipe.html":{}}}],["rowchang",{"_index":562,"title":{"classes/RowChange.html":{}},"body":{"classes/RowChange.html":{}}}],["rownum",{"_index":222,"title":{},"body":{"index.html":{}}}],["rows[i].key",{"_index":212,"title":{},"body":{"index.html":{}}}],["rxjs/rx",{"_index":433,"title":{},"body":{"injectables/GridMessageService.html":{}}}],["same",{"_index":188,"title":{},"body":{"index.html":{}}}],["save",{"_index":338,"title":{},"body":{"changelog.html":{}}}],["scroll",{"_index":187,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["see",{"_index":96,"title":{},"body":{"index.html":{},"changelog.html":{},"classes/InjectableFactory.html":{},"interfaces/InjectableConstructor.html":{}}}],["select",{"_index":64,"title":{},"body":{"index.html":{},"changelog.html":{}}}],["selectfilterrender",{"_index":293,"title":{},"body":{"index.html":{},"overview.html":{},"modules/GridModule.html":{}}}],["servic",{"_index":344,"title":{},"body":{"changelog.html":{}}}],["service.config",{"_index":130,"title":{},"body":{"index.html":{}}}],["services/grid",{"_index":399,"title":{},"body":{"modules/GridModule.html":{}}}],["setasc",{"_index":579,"title":{},"body":{"classes/SortInfo.html":{}}}],["setasc(asc",{"_index":583,"title":{},"body":{"classes/SortInfo.html":{}}}],["setconfig",{"_index":476,"title":{},"body":{"classes/CellTextView.html":{},"classes/FormatterParser.html":{}}}],["setconfig(config",{"_index":256,"title":{},"body":{"index.html":{},"classes/CellTextView.html":{},"classes/FormatterParser.html":{}}}],["setfield",{"_index":580,"title":{},"body":{"classes/SortInfo.html":{}}}],["setfield(field",{"_index":585,"title":{},"body":{"classes/SortInfo.html":{}}}],["settimeout",{"_index":113,"title":{},"body":{"index.html":{}}}],["sever",{"_index":251,"title":{},"body":{"index.html":{}}}],["shortcut",{"_index":204,"title":{},"body":{"index.html":{}}}],["show",{"_index":150,"title":{},"body":{"index.html":{}}}],["showicon",{"_index":270,"title":{},"body":{"index.html":{}}}],["shown",{"_index":170,"title":{},"body":{"index.html":{}}}],["side",{"_index":161,"title":{},"body":{"index.html":{}}}],["simpl",{"_index":34,"title":{},"body":{"index.html":{},"classes/FormatterParser.html":{}}}],["size",{"_index":69,"title":{},"body":{"index.html":{}}}],["size.saveondirtyrowchang",{"_index":189,"title":{},"body":{"index.html":{}}}],["sort",{"_index":57,"title":{},"body":{"index.html":{}}}],["sortinfo",{"_index":572,"title":{"classes/SortInfo.html":{}},"body":{"classes/SortInfo.html":{}}}],["sourc",{"_index":82,"title":{},"body":{"index.html":{},"modules/GridModule.html":{},"injectables/GridMessageService.html":{},"pipes/IsFixedPipe.html":{},"pipes/IsGroupPipe.html":{},"pipes/IsRowVisiblePipe.html":{},"pipes/IsVisiblePipe.html":{},"classes/Cell.html":{},"classes/CellTextView.html":{},"classes/EmptyFactory.html":{},"classes/FormatterParser.html":{},"classes/HtmlUtil.html":{},"classes/InjectableFactory.html":{},"classes/RowChange.html":{},"classes/SortInfo.html":{},"interfaces/ClickListener.html":{},"interfaces/DblClickListener.html":{},"interfaces/Dictionary.html":{},"interfaces/EmptyConstructor.html":{},"interfaces/EventListenerArg.html":{},"interfaces/InjectableConstructor.html":{},"interfaces/MouseDownListener.html":{},"interfaces/MouseDragListener.html":{},"interfaces/MouseOverListener.html":{},"interfaces/MouseUpListener.html":{}}}],["span",{"_index":484,"title":{},"body":{"classes/CellTextView.html":{}}}],["specif",{"_index":87,"title":{},"body":{"index.html":{}}}],["specifi",{"_index":177,"title":{},"body":{"index.html":{}}}],["speed",{"_index":246,"title":{},"body":{"index.html":{}}}],["spinner.eventlisten",{"_index":199,"title":{},"body":{"index.html":{}}}],["spreadsheet",{"_index":155,"title":{},"body":{"index.html":{}}}],["src/grid/cell/cell.t",{"_index":458,"title":{},"body":{"classes/Cell.html":{}}}],["src/grid/cell/cell.ts:5",{"_index":469,"title":{},"body":{"classes/Cell.html":{}}}],["src/grid/cell/cell.ts:6",{"_index":468,"title":{},"body":{"classes/Cell.html":{}}}],["src/grid/cell/cell.ts:7",{"_index":466,"title":{},"body":{"classes/Cell.html":{}}}],["src/grid/cell/viewrenderers/cel",{"_index":472,"title":{},"body":{"classes/CellTextView.html":{}}}],["src/grid/column/formatters/formatt",{"_index":512,"title":{},"body":{"classes/FormatterParser.html":{}}}],["src/grid/event/click.interface.t",{"_index":592,"title":{},"body":{"interfaces/ClickListener.html":{}}}],["src/grid/event/click.interface.ts:3",{"_index":595,"title":{},"body":{"interfaces/ClickListener.html":{}}}],["src/grid/event/dbl",{"_index":597,"title":{},"body":{"interfaces/DblClickListener.html":{}}}],["src/grid/event/ev",{"_index":606,"title":{},"body":{"interfaces/EventListenerArg.html":{}}}],["src/grid/event/mous",{"_index":611,"title":{},"body":{"interfaces/MouseDownListener.html":{},"interfaces/MouseDragListener.html":{},"interfaces/MouseOverListener.html":{},"interfaces/MouseUpListener.html":{}}}],["src/grid/grid.component.t",{"_index":639,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/grid/grid.module.t",{"_index":358,"title":{},"body":{"modules/GridModule.html":{}}}],["src/grid/model/dictionary.interface.t",{"_index":603,"title":{},"body":{"interfaces/Dictionary.html":{}}}],["src/grid/model/dictionary.interface.ts:2",{"_index":605,"title":{},"body":{"interfaces/Dictionary.html":{}}}],["src/grid/model/dictionary.interface.ts:3",{"_index":604,"title":{},"body":{"interfaces/Dictionary.html":{}}}],["src/grid/services/grid",{"_index":408,"title":{},"body":{"injectables/GridMessageService.html":{},"miscellaneous/variables.html":{}}}],["src/grid/utils/empty.factory.t",{"_index":499,"title":{},"body":{"classes/EmptyFactory.html":{},"interfaces/EmptyConstructor.html":{}}}],["src/grid/utils/empty.factory.ts:4",{"_index":506,"title":{},"body":{"classes/EmptyFactory.html":{}}}],["src/grid/utils/empty.factory.ts:7",{"_index":507,"title":{},"body":{"classes/EmptyFactory.html":{}}}],["src/grid/utils/html",{"_index":528,"title":{},"body":{"classes/HtmlUtil.html":{}}}],["src/grid/utils/i",{"_index":437,"title":{},"body":{"pipes/IsFixedPipe.html":{},"pipes/IsGroupPipe.html":{},"pipes/IsRowVisiblePipe.html":{},"pipes/IsVisiblePipe.html":{}}}],["src/grid/utils/injectable.factory.t",{"_index":552,"title":{},"body":{"classes/InjectableFactory.html":{},"interfaces/InjectableConstructor.html":{}}}],["src/grid/utils/injectable.factory.ts:10",{"_index":559,"title":{},"body":{"classes/InjectableFactory.html":{}}}],["src/grid/utils/injectable.factory.ts:7",{"_index":557,"title":{},"body":{"classes/InjectableFactory.html":{}}}],["src/grid/utils/row",{"_index":563,"title":{},"body":{"classes/RowChange.html":{}}}],["src/grid/utils/sort",{"_index":573,"title":{},"body":{"classes/SortInfo.html":{}}}],["start",{"_index":12,"title":{"index.html":{},"changelog.html":{}},"body":{}}],["state",{"_index":167,"title":{},"body":{"index.html":{}}}],["static",{"_index":404,"title":{},"body":{"modules/GridModule.html":{},"classes/HtmlUtil.html":{}}}],["string",{"_index":63,"title":{},"body":{"index.html":{},"injectables/GridMessageService.html":{},"classes/HtmlUtil.html":{},"classes/SortInfo.html":{},"interfaces/Dictionary.html":{}}}],["subject",{"_index":427,"title":{},"body":{"injectables/GridMessageService.html":{}}}],["such",{"_index":532,"title":{},"body":{"classes/HtmlUtil.html":{}}}],["support",{"_index":32,"title":{},"body":{"index.html":{},"changelog.html":{},"modules.html":{}}}],["svg",{"_index":354,"title":{},"body":{"modules.html":{}}}],["syntax",{"_index":98,"title":{},"body":{"index.html":{}}}],["t",{"_index":508,"title":{},"body":{"classes/EmptyFactory.html":{},"classes/InjectableFactory.html":{},"interfaces/EmptyConstructor.html":{},"interfaces/InjectableConstructor.html":{}}}],["tab",{"_index":636,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tabl",{"_index":30,"title":{},"body":{"index.html":{}}}],["taken",{"_index":89,"title":{},"body":{"index.html":{}}}],["templat",{"_index":196,"title":{},"body":{"index.html":{}}}],["templateref",{"_index":195,"title":{},"body":{"index.html":{}}}],["text",{"_index":473,"title":{},"body":{"classes/CellTextView.html":{}}}],["texteditrender",{"_index":318,"title":{},"body":{"overview.html":{},"modules/GridModule.html":{}}}],["textfilterrender",{"_index":278,"title":{},"body":{"index.html":{},"overview.html":{},"modules/GridModule.html":{}}}],["them.pages",{"_index":178,"title":{},"body":{"index.html":{}}}],["theme",{"_index":157,"title":{},"body":{"index.html":{}}}],["thing",{"_index":247,"title":{},"body":{"index.html":{},"classes/HtmlUtil.html":{}}}],["this._message.asobserv",{"_index":429,"title":{},"body":{"injectables/GridMessageService.html":{}}}],["this._message.next(\"error",{"_index":434,"title":{},"body":{"injectables/GridMessageService.html":{}}}],["this._message.next(\"warn",{"_index":435,"title":{},"body":{"injectables/GridMessageService.html":{}}}],["this._messageobserv",{"_index":436,"title":{},"body":{"injectables/GridMessageService.html":{}}}],["this.asc",{"_index":589,"title":{},"body":{"classes/SortInfo.html":{}}}],["this.config",{"_index":526,"title":{},"body":{"classes/FormatterParser.html":{}}}],["this.datageneratorservice.getexternaldata1(externalinfo).subscribe((externaldata",{"_index":111,"title":{},"body":{"index.html":{}}}],["this.emptyconstructor",{"_index":510,"title":{},"body":{"classes/EmptyFactory.html":{},"interfaces/EmptyConstructor.html":{}}}],["this.field",{"_index":590,"title":{},"body":{"classes/SortInfo.html":{}}}],["this.ic(this.injector",{"_index":560,"title":{},"body":{"classes/InjectableFactory.html":{},"interfaces/InjectableConstructor.html":{}}}],["this.newrownum",{"_index":571,"title":{},"body":{"classes/RowChange.html":{}}}],["this.oldrownum",{"_index":570,"title":{},"body":{"classes/RowChange.html":{}}}],["those",{"_index":168,"title":{},"body":{"index.html":{}}}],["through",{"_index":37,"title":{},"body":{"index.html":{}}}],["titl",{"_index":151,"title":{},"body":{"index.html":{}}}],["to.configur",{"_index":138,"title":{},"body":{"index.html":{}}}],["toast",{"_index":236,"title":{},"body":{"index.html":{}}}],["todo",{"_index":299,"title":{},"body":{"index.html":{}}}],["togeth",{"_index":163,"title":{},"body":{"index.html":{}}}],["top",{"_index":490,"title":{},"body":{"classes/CellTextView.html":{}}}],["transform",{"_index":441,"title":{},"body":{"pipes/IsFixedPipe.html":{},"pipes/IsGroupPipe.html":{},"pipes/IsRowVisiblePipe.html":{},"pipes/IsVisiblePipe.html":{}}}],["transform(list",{"_index":442,"title":{},"body":{"pipes/IsFixedPipe.html":{},"pipes/IsGroupPipe.html":{},"pipes/IsRowVisiblePipe.html":{},"pipes/IsVisiblePipe.html":{}}}],["true",{"_index":166,"title":{},"body":{"index.html":{},"classes/SortInfo.html":{}}}],["two",{"_index":121,"title":{},"body":{"index.html":{}}}],["type",{"_index":117,"title":{},"body":{"index.html":{},"injectables/GridMessageService.html":{},"pipes/IsFixedPipe.html":{},"classes/Cell.html":{},"classes/CellTextView.html":{},"classes/EmptyFactory.html":{},"classes/FormatterParser.html":{},"classes/HtmlUtil.html":{},"classes/InjectableFactory.html":{},"classes/RowChange.html":{},"classes/SortInfo.html":{},"interfaces/ClickListener.html":{},"interfaces/DblClickListener.html":{},"interfaces/Dictionary.html":{},"interfaces/EventListenerArg.html":{},"interfaces/InjectableConstructor.html":{},"interfaces/MouseDownListener.html":{},"interfaces/MouseDragListener.html":{},"interfaces/MouseOverListener.html":{},"interfaces/MouseUpListener.html":{},"miscellaneous/variables.html":{}}}],["undefin",{"_index":119,"title":{},"body":{"index.html":{},"pipes/IsFixedPipe.html":{},"pipes/IsGroupPipe.html":{},"pipes/IsRowVisiblePipe.html":{},"pipes/IsVisiblePipe.html":{},"classes/FormatterParser.html":{}}}],["univers",{"_index":366,"title":{},"body":{"modules/GridModule.html":{}}}],["up",{"_index":248,"title":{},"body":{"index.html":{}}}],["up.interface.t",{"_index":627,"title":{},"body":{"interfaces/MouseUpListener.html":{}}}],["up.interface.ts:3",{"_index":630,"title":{},"body":{"interfaces/MouseUpListener.html":{}}}],["updatecolumn",{"_index":477,"title":{},"body":{"classes/CellTextView.html":{}}}],["updatecolumn(column",{"_index":481,"title":{},"body":{"classes/CellTextView.html":{}}}],["upon",{"_index":296,"title":{},"body":{"index.html":{}}}],["us",{"_index":50,"title":{},"body":{"index.html":{}}}],["usag",{"_index":90,"title":{},"body":{"index.html":{}}}],["user",{"_index":142,"title":{},"body":{"index.html":{},"changelog.html":{}}}],["usevalu",{"_index":407,"title":{},"body":{"modules/GridModule.html":{}}}],["usual",{"_index":54,"title":{},"body":{"index.html":{}}}],["utah",{"_index":367,"title":{},"body":{"modules/GridModule.html":{}}}],["util.t",{"_index":529,"title":{},"body":{"classes/HtmlUtil.html":{}}}],["util.ts:23",{"_index":542,"title":{},"body":{"classes/HtmlUtil.html":{}}}],["util.ts:38",{"_index":544,"title":{},"body":{"classes/HtmlUtil.html":{}}}],["util.ts:8",{"_index":538,"title":{},"body":{"classes/HtmlUtil.html":{}}}],["utils/i",{"_index":382,"title":{},"body":{"modules/GridModule.html":{}}}],["valid",{"_index":340,"title":{},"body":{"changelog.html":{}}}],["valu",{"_index":220,"title":{},"body":{"index.html":{},"injectables/GridMessageService.html":{},"classes/Cell.html":{},"classes/CellTextView.html":{},"classes/FormatterParser.html":{},"classes/SortInfo.html":{},"interfaces/Dictionary.html":{},"miscellaneous/variables.html":{}}}],["values.busytempl",{"_index":194,"title":{},"body":{"index.html":{}}}],["variabl",{"_index":632,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["variou",{"_index":68,"title":{},"body":{"index.html":{}}}],["vertic",{"_index":244,"title":{},"body":{"index.html":{}}}],["view",{"_index":271,"title":{},"body":{"index.html":{},"changelog.html":{},"classes/CellTextView.html":{}}}],["view.t",{"_index":474,"title":{},"body":{"classes/CellTextView.html":{}}}],["view.ts:10",{"_index":480,"title":{},"body":{"classes/CellTextView.html":{}}}],["view.ts:12",{"_index":478,"title":{},"body":{"classes/CellTextView.html":{}}}],["view.ts:8",{"_index":482,"title":{},"body":{"classes/CellTextView.html":{}}}],["viewconfig",{"_index":265,"title":{},"body":{"index.html":{}}}],["viewrender",{"_index":263,"title":{},"body":{"index.html":{}}}],["visibl",{"_index":148,"title":{},"body":{"index.html":{}}}],["visible.pip",{"_index":383,"title":{},"body":{"modules/GridModule.html":{}}}],["visible.pipe.t",{"_index":452,"title":{},"body":{"pipes/IsRowVisiblePipe.html":{},"pipes/IsVisiblePipe.html":{}}}],["visible.pipe.ts:9",{"_index":454,"title":{},"body":{"pipes/IsRowVisiblePipe.html":{},"pipes/IsVisiblePipe.html":{}}}],["void",{"_index":422,"title":{},"body":{"injectables/GridMessageService.html":{},"classes/CellTextView.html":{},"classes/FormatterParser.html":{},"classes/SortInfo.html":{}}}],["want",{"_index":208,"title":{},"body":{"index.html":{}}}],["warn",{"_index":209,"title":{},"body":{"index.html":{},"injectables/GridMessageService.html":{}}}],["warn(messag",{"_index":423,"title":{},"body":{"injectables/GridMessageService.html":{}}}],["way",{"_index":122,"title":{},"body":{"index.html":{}}}],["wish",{"_index":235,"title":{},"body":{"index.html":{}}}],["without",{"_index":516,"title":{},"body":{"classes/FormatterParser.html":{}}}],["work",{"_index":86,"title":{},"body":{"index.html":{}}}],["x",{"_index":494,"title":{},"body":{"classes/CellTextView.html":{}}}],["ye",{"_index":540,"title":{},"body":{"classes/HtmlUtil.html":{}}}],["you.logwarn",{"_index":207,"title":{},"body":{"index.html":{}}}],["zoom",{"_index":325,"title":{},"body":{"overview.html":{},"modules/GridModule.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n    Dependencies\n\n\n    \n        @ng-bootstrap/ng-bootstrap : 1.1.x\n    \n        moment : ^2.18.1\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nHCI's Angular Grid Library\nhci-ng-grid Demo on Github\nIntro\nThis grid is designed to be a full featured grid that can handle nearly anything that complex data tables may\nbe expected to support.  By default, the grid is simple and basic, but becomes full featured through\nconfiguration.Publishing\nCompiled code gets moved to the dist folder with a copy of the package.json.  Custom commands are required for\npackaging and publishing.  Use npmPack and npmPublish instead of the usual pack and publish.Basic Features\n\nSorting: Change sorting by clicking on column header.\nFiltering: String, select, range filtering with the possibility for custom filters.\nPaging: Paging with various page sizes, first, last, previous and next.\nRow Grouping: Rows can be grouped by one or more columns.\nExternal Data Call: Callback to retrieve data from external source.\nCustom Events: Listeners can be added to work for specific events and custom actions can be taken.\n\nUsage\nNote, there are so many features to this grid that not all are currently listed here.  See the demo for full examples.\nThe basic syntax for data provided by the implementing component.\n\nThe basic syntax for an external data call.\n\nAnd a function using mocked external data call.\ndataRequest(externalInfo: ExternalInfo): Promise {\n  return new Promise((resolve, reject) => {\n    this.dataGeneratorService.getExternalData1(externalInfo).subscribe((externalData: ExternalData) => {\n      setTimeout(() =>\n        resolve(externalData), 1000\n      );\n    });\n  });\n}Inputs\ndata\ntype: Object[]\ndefault: undefined\nProvide the grid with an array of rows as objects.  Two way binding to this data.dataCall\ntype: Function\ndefault: undefined\nA function that is called to retrieve data.  The function is passed filtering, sorting and paging info.id\ntype: string\ndefault: undefined\nThe html id for the grid and the id that can be used to get the grid from the global grid service.config\ntype: any\ndefault: {}\nA json object that contains configuration options for the grid.linkedGroups\ntype: string[]\ndefault: undefined\nThe group names that this grid should be linked to.configurable\ntype: boolean\ndefault: false\nFlag if the user should be allowed to modify the grid's configuration (e.g. what colums are visible and how big).title\ntype: string\ndefault: undefined\nShows this title in a title bar above the grid.theme\ntype: string\ndefault: \"spreadsheet\"\noptions: \"spreadsheet\", \"report\", or your own\nThe name of the theme to use.  columns\ntype: Column[]\ndefault: undefined\nAn array of column configuration objects.fixedColumns\ntype: string[]\ndefault: undefined\nA list of column names that should be fixed to the left side of the grid.groupBy\ntype: string[]\ndefault: undefined\nA list of column names that should be used to group rows together.* Currently disabled *\ngroupByCollapsed\ntype: boolean\ndefault: true\nThe state for grouped rows if those rows in a group should be hidden or shown by default.externalFiltering\ntype: boolean\ndefault: false\nTrue if filtering should be handled by the external data call.externalSorting\ntype: boolean\ndefault: false\nTrue if sorting should be handled by the external data call.externalPaging\ntype: boolean\ndefault: false\nTrue if paging should be handled by the external data call.pageSize\ntype: number\ndefault: undefined\nThe number of rows per page.  If not specified it will show all of them.pageSizes\ntype: number[]\ndefault: [10, 25, 50]\nAn array of possible page sizes that the user can choose from.nVisibleRows\ntype: number\ndefault: -1\nThe number of visible rows.  A page might have 100 rows, but you can limit the size of the grid to 10 rows which would be scrolling for the user.  The default is -1 which is the same as the page size.saveOnDirtyRowChange\ntype: boolean\ndefault: false\nIf true, will emit a (onRowSave) event if you navigate to a new row and the previous row has dirty values.busyTemplate\ntype: TemplateRef\ndefault: undefined\nA custom template shown when data is loaded.  If you don't like the default spinner.eventListeners\ntype: EventListenerArg[]\ndefault: []\nAn array of listeners that can perform actions on any sort of click or key events.mode\ntype: string\ndefault: undefined\nA shortcut for creating listeners.  Rather than passing in your own listeners, specify a mode and the required listeners will be created for you.logWarnings\ntype: boolean\ndefault: true\nTrue if you want warnings to show in the console.Outputs\nonCellSave\ntype: any\n$event: { key: rows[i].key,\n          i: i,\n          j: j,\n          field: columns[j].field,\n          oldValue: oldValue,\n          newValue: newValue }\nThe row key, location, field, old and new value of the cell.onRowSave\ntype: any\n$event: { key: rows[i].key,\n          rowNum: i,\n          row: originalRowData }\nEmits the key, row number and the data for the row in the format originally passed in.onConfigChange\ntype: any\n$event: config\nEmits the current configuration for the grid.cellClick\ntype: any\n$event: any\nDetermined by the event listener which can emit any type of data.cellDblClick\ntype: any\n$event: any\nDetermined by the event listener which can emit any type of data.rowClick\ntype: any\n$event: any\nDetermined by the event listener which can emit any type of data.rowDblClick\ntype: any\n$event: any\nDetermined by the event listener which can emit any type of data.warning\ntype: string\n$event: warning message as a string\nListen to this to handle warnings from the grid as you wish (e.g. as a toast popup).selectedRows\ntype: any[]\n$event: [key1, key2, ...]\nThis is an array of any instead of number because the row key could be anything.Advanced Features\nRendering Cells\nEvery refresh of data and every vertical scroll will re-render the visible rows and cells.  To speed things\nup, each cell is limited to rendering pure HTML.  However, there are several options of how to render and\nthe option of custom rendering.\nEvery cell is rendering with a class that implements the CellViewRenderer interface.  The two methods\nrequired to implement are\nsetConfig(config: any);\n\ncreateElement(renderer: Renderer2, column: Column, value: any, i: number, j: number): HTMLElement;As an example, the following is an example of a number range renderer.\n{\n    field: \"nLabs\",\n    name: \"# Labs\",\n    viewRenderer: CellNumberRangeView,\n    viewConfig: { low: 15, high: 85, showIcon: true }\n}The class is passed in as the viewRenderer and any config is passed in through the viewConfig.\nFiltering\nLike view rendering, built in and custom components can be used to render the filter.  The difference\nis rather than pure HTML, a filter is a component that extends a base class FilterRenderer.  The\nfollowing are examples of built in filters.\n{\n    field: \"firstName\",\n    name: \"First Name\",\n    filterRenderer: TextFilterRenderer\n},\n{\n    field: \"dob\",\n    name: \"Date of Birth\",\n    dataType: \"date\",\n    format: \"MM/DD/YYYY\",\n    editRenderer: DateEditRenderer,\n    filterRenderer: CompareFilterRenderer\n},\n{\n    field: \"gender\",\n    name: \"Gender\",\n    editRenderer: ChoiceEditRenderer,\n    choices: [ {value: \"Female\", display: \"Female\"}, {value: \"Male\", display: \"Male\"} ],\n    filterRenderer: SelectFilterRenderer\n}Known Issues\n\nRow Groups works upon load, but breaks when filtering is introduced.\n\nTODOs\n\nThere are only left fixed colums, but some have requested right fixed columns.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n            \n                \n                    \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_GridModule\n\n\n\ncluster_GridModule_declarations\n\n\n\ncluster_GridModule_GridComponent_providers\n\n\n\ncluster_GridModule_exports\n\n\n\n\nGridComponent\n\nGridComponent\n\n\n\nGridModule\n\nGridModule\n\nGridModule -->\n\nGridComponent->GridModule\n\n\n\n\n\nColumnHeaderComponent\n\nColumnHeaderComponent\n\nGridModule -->\n\nColumnHeaderComponent->GridModule\n\n\n\n\n\nIsVisiblePipe\n\nIsVisiblePipe\n\nGridModule -->\n\nIsVisiblePipe->GridModule\n\n\n\n\n\nIsGroupPipe\n\nIsGroupPipe\n\nGridModule -->\n\nIsGroupPipe->GridModule\n\n\n\n\n\nIsFixedPipe\n\nIsFixedPipe\n\nGridModule -->\n\nIsFixedPipe->GridModule\n\n\n\n\n\nIsRowVisiblePipe\n\nIsRowVisiblePipe\n\nGridModule -->\n\nIsRowVisiblePipe->GridModule\n\n\n\n\n\nTextEditRenderer\n\nTextEditRenderer\n\nGridModule -->\n\nTextEditRenderer->GridModule\n\n\n\n\n\nDateEditRenderer\n\nDateEditRenderer\n\nGridModule -->\n\nDateEditRenderer->GridModule\n\n\n\n\n\nChoiceEditRenderer\n\nChoiceEditRenderer\n\nGridModule -->\n\nChoiceEditRenderer->GridModule\n\n\n\n\n\nTextFilterRenderer\n\nTextFilterRenderer\n\nGridModule -->\n\nTextFilterRenderer->GridModule\n\n\n\n\n\nSelectFilterRenderer\n\nSelectFilterRenderer\n\nGridModule -->\n\nSelectFilterRenderer->GridModule\n\n\n\n\n\nCompareFilterRenderer\n\nCompareFilterRenderer\n\nGridModule -->\n\nCompareFilterRenderer->GridModule\n\n\n\n\n\nBigTextPopup\n\nBigTextPopup\n\nGridModule -->\n\nBigTextPopup->GridModule\n\n\n\n\n\nConfigMenuComponent\n\nConfigMenuComponent\n\nGridModule -->\n\nConfigMenuComponent->GridModule\n\n\n\n\n\nConfigMultiChoiceComponent\n\nConfigMultiChoiceComponent\n\nGridModule -->\n\nConfigMultiChoiceComponent->GridModule\n\n\n\n\n\nGridComponent \n\nGridComponent \n\nGridComponent  -->\n\nGridModule->GridComponent \n\n\n\n\n\nGridService\n\nGridService\n\nGridComponent -->\n\nGridService->GridComponent\n\n\n\n\n\nGridEventService\n\nGridEventService\n\nGridComponent -->\n\nGridEventService->GridComponent\n\n\n\n\n\nGridMessageService\n\nGridMessageService\n\nGridComponent -->\n\nGridMessageService->GridComponent\n\n\n\n\n\n\n                \n                \n                \n                    Zoom in\n                    Reset\n                    Zoom out\n                \n            \n\n    \n            \n                \n                    \n                        \n                        \n                            1 module\n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                        11 components\n                    \n                \n            \n            \n                \n                    \n                        \n                        4 injectables\n                    \n                \n            \n            \n                \n                    \n                        \n                        4 pipes\n                    \n                \n            \n            \n                \n                    \n                        \n                        33 classes\n                    \n                \n            \n            \n                \n                    \n                        \n                        11 interfaces\n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"changelog.html":{"url":"changelog.html","title":"getting-started - changelog","body":"\n                   \n\nChange Log\n2.0.0\n- Refactor of rendering and how data/config/events are listened to.\n- Listeners for saving cells and rows.\n- Customization of busy, and view renderers.\n- Validation support and improved formatting/parsing especially for dates.\n- User configuration added.\n- Global grid service for referencing and connecting grids.\n- Row selection improved.\n- External data calls from Promise to Observable.\n- Numerous fixes.1.0.0\n- Initial Release.  See README.md for features.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        GridModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/GridModule.html":{"url":"modules/GridModule.html","title":"module - GridModule","body":"\n                   \n\n\n\n\n  Modules\n  GridModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_GridModule\n\n\n\ncluster_GridModule_declarations\n\n\n\ncluster_GridModule_GridComponent_providers\n\n\n\ncluster_GridModule_exports\n\n\n\n\nGridComponent\n\nGridComponent\n\n\n\nGridModule\n\nGridModule\n\nGridModule -->\n\nGridComponent->GridModule\n\n\n\n\n\nColumnHeaderComponent\n\nColumnHeaderComponent\n\nGridModule -->\n\nColumnHeaderComponent->GridModule\n\n\n\n\n\nIsVisiblePipe\n\nIsVisiblePipe\n\nGridModule -->\n\nIsVisiblePipe->GridModule\n\n\n\n\n\nIsGroupPipe\n\nIsGroupPipe\n\nGridModule -->\n\nIsGroupPipe->GridModule\n\n\n\n\n\nIsFixedPipe\n\nIsFixedPipe\n\nGridModule -->\n\nIsFixedPipe->GridModule\n\n\n\n\n\nIsRowVisiblePipe\n\nIsRowVisiblePipe\n\nGridModule -->\n\nIsRowVisiblePipe->GridModule\n\n\n\n\n\nTextEditRenderer\n\nTextEditRenderer\n\nGridModule -->\n\nTextEditRenderer->GridModule\n\n\n\n\n\nDateEditRenderer\n\nDateEditRenderer\n\nGridModule -->\n\nDateEditRenderer->GridModule\n\n\n\n\n\nChoiceEditRenderer\n\nChoiceEditRenderer\n\nGridModule -->\n\nChoiceEditRenderer->GridModule\n\n\n\n\n\nTextFilterRenderer\n\nTextFilterRenderer\n\nGridModule -->\n\nTextFilterRenderer->GridModule\n\n\n\n\n\nSelectFilterRenderer\n\nSelectFilterRenderer\n\nGridModule -->\n\nSelectFilterRenderer->GridModule\n\n\n\n\n\nCompareFilterRenderer\n\nCompareFilterRenderer\n\nGridModule -->\n\nCompareFilterRenderer->GridModule\n\n\n\n\n\nBigTextPopup\n\nBigTextPopup\n\nGridModule -->\n\nBigTextPopup->GridModule\n\n\n\n\n\nConfigMenuComponent\n\nConfigMenuComponent\n\nGridModule -->\n\nConfigMenuComponent->GridModule\n\n\n\n\n\nConfigMultiChoiceComponent\n\nConfigMultiChoiceComponent\n\nGridModule -->\n\nConfigMultiChoiceComponent->GridModule\n\n\n\n\n\nGridComponent \n\nGridComponent \n\nGridComponent  -->\n\nGridModule->GridComponent \n\n\n\n\n\nGridService\n\nGridService\n\nGridComponent -->\n\nGridService->GridComponent\n\n\n\n\n\nGridEventService\n\nGridEventService\n\nGridComponent -->\n\nGridEventService->GridComponent\n\n\n\n\n\nGridMessageService\n\nGridMessageService\n\nGridComponent -->\n\nGridMessageService->GridComponent\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/grid/grid.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                GridComponent\n                            \n                            \n                                ColumnHeaderComponent\n                            \n                            \n                                IsVisiblePipe\n                            \n                            \n                                IsGroupPipe\n                            \n                            \n                                IsFixedPipe\n                            \n                            \n                                IsRowVisiblePipe\n                            \n                            \n                                TextEditRenderer\n                            \n                            \n                                DateEditRenderer\n                            \n                            \n                                ChoiceEditRenderer\n                            \n                            \n                                TextFilterRenderer\n                            \n                            \n                                SelectFilterRenderer\n                            \n                            \n                                CompareFilterRenderer\n                            \n                            \n                                BigTextPopup\n                            \n                            \n                                ConfigMenuComponent\n                            \n                            \n                                ConfigMultiChoiceComponent\n                            \n                    \n                \n                \n                    EntryComponents\n                    \n                            \n                                TextEditRenderer\n                            \n                            \n                                DateEditRenderer\n                            \n                            \n                                ChoiceEditRenderer\n                            \n                            \n                                TextFilterRenderer\n                            \n                            \n                                SelectFilterRenderer\n                            \n                            \n                                CompareFilterRenderer\n                            \n                            \n                                BigTextPopup\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    GridComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        /*\n * Copyright (c) 2016 Huntsman Cancer Institute at the University of Utah, Confidential and Proprietary\n */\nimport {ModuleWithProviders, NgModule} from \"@angular/core\";\nimport {CommonModule} from \"@angular/common\";\nimport {FormsModule} from \"@angular/forms\";\n\nimport {NgbModule} from \"@ng-bootstrap/ng-bootstrap\";\n\nimport {GridComponent} from \"./grid.component\";\nimport {ColumnHeaderComponent} from \"./column/column-header.component\";\nimport {IsVisiblePipe} from \"./utils/is-visible.pipe\";\nimport {IsGroupPipe} from \"./utils/is-group.pipe\";\nimport {IsFixedPipe} from \"./utils/is-fixed.pipe\";\nimport {IsRowVisiblePipe} from \"./utils/is-row-visible.pipe\";\nimport {TextEditRenderer} from \"./cell/editRenderers/text-edit-renderer.component\";\nimport {TextFilterRenderer} from \"./column/filterRenderers/text-filter-renderer.component\";\nimport {CompareFilterRenderer} from \"./column/filterRenderers/compare-filter-renderer.component\";\nimport {ChoiceEditRenderer} from \"./cell/editRenderers/choice-edit-renderer.component\";\nimport {DateEditRenderer} from \"./cell/editRenderers/date-edit-renderer.component\";\nimport {SelectFilterRenderer} from \"./column/filterRenderers/select-filter-renderer.component\";\nimport {BigTextPopup} from \"./cell/viewPopupRenderer/bigtext-popup.component\";\nimport {ConfigMenuComponent} from \"./config/config-menu.component\";\nimport {GridGlobalService} from \"./services/grid-global.service\";\nimport {ConfigMultiChoiceComponent} from \"./config/config-multi-choice.component\";\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    NgbModule.forRoot()\n  ],\n  declarations: [\n    GridComponent,\n    ColumnHeaderComponent,\n    IsVisiblePipe,\n    IsGroupPipe,\n    IsFixedPipe,\n    IsRowVisiblePipe,\n    TextEditRenderer,\n    DateEditRenderer,\n    ChoiceEditRenderer,\n    TextFilterRenderer,\n    SelectFilterRenderer,\n    CompareFilterRenderer,\n    BigTextPopup,\n    ConfigMenuComponent,\n    ConfigMultiChoiceComponent\n  ],\n  entryComponents: [\n    TextEditRenderer,\n    DateEditRenderer,\n    ChoiceEditRenderer,\n    TextFilterRenderer,\n    SelectFilterRenderer,\n    CompareFilterRenderer,\n    BigTextPopup\n  ],\n  exports: [\n    GridComponent\n  ]\n})\nexport class GridModule {\n  static forRoot(globalConfig?: any): ModuleWithProviders {\n    return {\n      providers: [\n        GridGlobalService,\n        {provide: \"globalConfig\", useValue: (globalConfig) ? globalConfig : {}}\n      ],\n      ngModule: GridModule\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GridMessageService.html":{"url":"injectables/GridMessageService.html","title":"injectable - GridMessageService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  GridMessageService\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/grid/services/grid-message.service.ts\n        \n\n\n\n            \n                Index\n                \n                    \n                        \n                            \n                                Properties\n                            \n                        \n                        \n                            \n                                \n                                    \n                                            Private\n                                        _level\n                                    \n                                    \n                                            Private\n                                        _message\n                                    \n                                    \n                                            Private\n                                        _messageObservable\n                                    \n                                \n                            \n                        \n                        \n                            \n                                Methods\n                            \n                        \n                        \n                            \n                                \n                                    \n                                        error\n                                    \n                                    \n                                        warn\n                                    \n                                \n                            \n                        \n                        \n                            \n                                Accessors\n                            \n                        \n                        \n                            \n                                \n                                    \n                                        messageObservable\n                                    \n                                \n                            \n                        \n                    \n                \n            \n\n\n            \n                \n                    \n                        Methods\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        error\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            error(message: string)\n                                \n                            \n            \n            \n                                    \n                                        \n                                                Defined in src/grid/services/grid-message.service.ts:12\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                                Type\n                                                            Optional\n                                                        \n                                                    \n                                                    \n                                                            \n                                                                message\n                                                                \n                                                                    \n                                                                                string\n                                                                    \n                                                                \n                                                                \n                                                                        no\n                                                                \n                                                                \n            \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     void\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        warn\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            warn(message: string)\n                                \n                            \n            \n            \n                                    \n                                        \n                                                Defined in src/grid/services/grid-message.service.ts:16\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                                Type\n                                                            Optional\n                                                        \n                                                    \n                                                    \n                                                            \n                                                                message\n                                                                \n                                                                    \n                                                                                string\n                                                                    \n                                                                \n                                                                \n                                                                        no\n                                                                \n                                                                \n            \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     void\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n            \n\n            \n                \n                    \n                        Properties\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                            Private\n                                        _level\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                    _level:     number\n            \n                                \n                            \n                                \n                                    \n                                        Type :     number\n            \n                                    \n                                \n                                \n                                    \n                                        Default value : 2\n                                    \n                                \n                                    \n                                        \n                                                Defined in src/grid/services/grid-message.service.ts:10\n                                        \n                                    \n            \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                            Private\n                                        _message\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                    _message:     Subject\n            \n                                \n                            \n                                \n                                    \n                                        Type :     Subject\n            \n                                    \n                                \n                                \n                                    \n                                        Default value : new Subject()\n                                    \n                                \n                                    \n                                        \n                                                Defined in src/grid/services/grid-message.service.ts:8\n                                        \n                                    \n            \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                            Private\n                                        _messageObservable\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                    _messageObservable:     Observable\n            \n                                \n                            \n                                \n                                    \n                                        Type :     Observable\n            \n                                    \n                                \n                                \n                                    \n                                        Default value : this._message.asObservable()\n                                    \n                                \n                                    \n                                        \n                                                Defined in src/grid/services/grid-message.service.ts:9\n                                        \n                                    \n            \n            \n                        \n                    \n            \n\n            \n                \n                    Accessors\n                \n                    \n                        \n                            \n                                \n                                    \n                                    messageObservable\n                                \n                            \n            \n                            \n                                \n                                    getmessageObservable()\n                                \n                            \n                                        \n                                            \n                                                Defined in src/grid/services/grid-message.service.ts:20\n                                            \n                                        \n            \n                        \n                    \n            \n    \n\n\n    \n        import {Injectable} from \"@angular/core\";\n\nimport {Subject, Observable} from \"rxjs/Rx\";\n\n@Injectable()\nexport class GridMessageService {\n\n  private _message: Subject = new Subject();\n  private _messageObservable: Observable = this._message.asObservable();\n  private _level: number = 2;\n\n  error(message: string) {\n    this._message.next(\"ERROR: \" + message);\n  }\n\n  warn(message: string) {\n    this._message.next(\"WARN: \" + message);\n  }\n\n  get messageObservable(): Observable {\n    return this._messageObservable;\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/IsFixedPipe.html":{"url":"pipes/IsFixedPipe.html","title":"pipe - IsFixedPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Pipes\n  IsFixedPipe\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n\n    \n\n        \n            File\n        \n        \n            src/grid/utils/is-fixed.pipe.ts\n        \n\n\n\n        \n            Metadata\n            \n                \n                    \n                        name\n                        isFixed\n                    \n                \n            \n        \n\n            \n                \n                    \n                        Methods\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        transform\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            transform(list: Array, fixed: boolean)\n                                \n                            \n            \n            \n                                    \n                                        \n                                                Defined in src/grid/utils/is-fixed.pipe.ts:10\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                                Type\n                                                            Optional\n                                                        \n                                                    \n                                                    \n                                                            \n                                                                list\n                                                                \n                                                                    \n                                                                                Array\n                                                                    \n                                                                \n                                                                \n                                                                        no\n                                                                \n                                                                \n            \n                                                            \n                                                            \n                                                                fixed\n                                                                \n                                                                    \n                                                                                boolean\n                                                                    \n                                                                \n                                                                \n                                                                        no\n                                                                \n                                                                \n            \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     any\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n            \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from \"@angular/core\";\n\nimport { Column } from \"../column/column\";\n\n@Pipe({\n  name: \"isFixed\",\n  pure: false\n})\nexport class IsFixedPipe implements PipeTransform {\n  transform(list: Array, fixed: boolean) {\n    if (list === undefined) {\n      return list;\n    } else {\n      return list.filter((o: Column) => o.isFixed === fixed);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/IsGroupPipe.html":{"url":"pipes/IsGroupPipe.html","title":"pipe - IsGroupPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Pipes\n  IsGroupPipe\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n\n    \n\n        \n            File\n        \n        \n            src/grid/utils/is-group.pipe.ts\n        \n\n\n\n        \n            Metadata\n            \n                \n                    \n                        name\n                        isGroup\n                    \n                \n            \n        \n\n            \n                \n                    \n                        Methods\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        transform\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            transform(list: )\n                                \n                            \n            \n            \n                                    \n                                        \n                                                Defined in src/grid/utils/is-group.pipe.ts:9\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Optional\n                                                        \n                                                    \n                                                    \n                                                            \n                                                                list\n                                                                \n                                                                \n                                                                \n                                                                        no\n                                                                \n                                                                \n            \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     any\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n            \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from \"@angular/core\";\n\nimport { Column } from \"../column/column\";\n\n@Pipe({\n  name: \"isGroup\"\n})\nexport class IsGroupPipe implements PipeTransform {\n  transform(list) {\n    if (list === undefined) {\n      return list;\n    } else {\n      return list.filter((o: Column) => o.isGroup || o.isUtility);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/IsRowVisiblePipe.html":{"url":"pipes/IsRowVisiblePipe.html","title":"pipe - IsRowVisiblePipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Pipes\n  IsRowVisiblePipe\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n\n    \n\n        \n            File\n        \n        \n            src/grid/utils/is-row-visible.pipe.ts\n        \n\n\n\n        \n            Metadata\n            \n                \n                    \n                        name\n                        isRowVisible\n                    \n                \n            \n        \n\n            \n                \n                    \n                        Methods\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        transform\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            transform(list: )\n                                \n                            \n            \n            \n                                    \n                                        \n                                                Defined in src/grid/utils/is-row-visible.pipe.ts:9\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Optional\n                                                        \n                                                    \n                                                    \n                                                            \n                                                                list\n                                                                \n                                                                \n                                                                \n                                                                        no\n                                                                \n                                                                \n            \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     any\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n            \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from \"@angular/core\";\n\nimport { Row } from \"../row/row\";\n\n@Pipe({\n  name: \"isRowVisible\"\n})\nexport class IsRowVisiblePipe implements PipeTransform {\n  transform(list) {\n    if (list === undefined) {\n      return list;\n    } else {\n      return list.filter((o: Row) => o.visible);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/IsVisiblePipe.html":{"url":"pipes/IsVisiblePipe.html","title":"pipe - IsVisiblePipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Pipes\n  IsVisiblePipe\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n\n    \n\n        \n            File\n        \n        \n            src/grid/utils/is-visible.pipe.ts\n        \n\n\n\n        \n            Metadata\n            \n                \n                    \n                        name\n                        isVisible\n                    \n                \n            \n        \n\n            \n                \n                    \n                        Methods\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        transform\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            transform(list: )\n                                \n                            \n            \n            \n                                    \n                                        \n                                                Defined in src/grid/utils/is-visible.pipe.ts:9\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Optional\n                                                        \n                                                    \n                                                    \n                                                            \n                                                                list\n                                                                \n                                                                \n                                                                \n                                                                        no\n                                                                \n                                                                \n            \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     any\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n            \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from \"@angular/core\";\n\nimport { Column } from \"../column/column\";\n\n@Pipe({\n  name: \"isVisible\"\n})\nexport class IsVisiblePipe implements PipeTransform {\n  transform(list) {\n    if (list === undefined) {\n      return list;\n    } else {\n      return list.filter((o: Column) => o.visible);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Cell.html":{"url":"classes/Cell.html","title":"class - Cell","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  Cell\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/grid/cell/cell.ts\n        \n\n            \n                Description\n            \n            \n                A holder for the cell's data and other metadata needed for rendering or data management.\n\n            \n\n\n\n\n            \n                Index\n                \n                    \n                        \n                            \n                                Properties\n                            \n                        \n                        \n                            \n                                \n                                    \n                                        dirty\n                                    \n                                    \n                                        key\n                                    \n                                    \n                                        value\n                                    \n                                \n                            \n                        \n                    \n                \n            \n\n            \n                Constructor\n                    \n                        \n                            \n                                \n            constructor(o: Object)\n                                \n                            \n                                    \n                                        \n                                            Defined in src/grid/cell/cell.ts:7\n                                        \n                                    \n            \n                            \n                                \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                                Type\n                                                            Optional\n                                                        \n                                                    \n                                                    \n                                                            \n                                                                o\n                                                              \n                                                                    \n                                                                                Object\n                                                                    \n                                                              \n                                                                \n                                                                        no\n                                                                \n                                                                \n                                                            \n                                                    \n                                                \n                                        \n                                \n                            \n                        \n                    \n            \n\n\n\n            \n                \n                    \n                        Properties\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        dirty\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                    dirty:     boolean\n            \n                                \n                            \n                                \n                                    \n                                        Type :     boolean\n            \n                                    \n                                \n                                \n                                    \n                                        Default value : false\n                                    \n                                \n                                    \n                                        \n                                                Defined in src/grid/cell/cell.ts:7\n                                        \n                                    \n            \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        key\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                    key:     number\n            \n                                \n                            \n                                \n                                    \n                                        Type :     number\n            \n                                    \n                                \n                                    \n                                        \n                                                Defined in src/grid/cell/cell.ts:6\n                                        \n                                    \n            \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        value\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                    value:     any\n            \n                                \n                            \n                                \n                                    \n                                        Type :     any\n            \n                                    \n                                \n                                    \n                                        \n                                                Defined in src/grid/cell/cell.ts:5\n                                        \n                                    \n            \n            \n                        \n                    \n            \n\n    \n\n\n    \n        export class Cell {\n  value: any;\n  key: number;\n  dirty: boolean = false;\n\n  constructor(o: Object) {\n    Object.assign(this, o);\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CellTextView.html":{"url":"classes/CellTextView.html","title":"class - CellTextView","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  CellTextView\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/grid/cell/viewRenderers/cell-text-view.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        CellViewRenderer\n            \n\n\n            \n                Index\n                \n                    \n                        \n                            \n                                Methods\n                            \n                        \n                        \n                            \n                                \n                                    \n                                        createElement\n                                    \n                                    \n                                        setConfig\n                                    \n                                    \n                                        updateColumn\n                                    \n                                \n                            \n                        \n                    \n                \n            \n\n\n            \n                \n                    \n                        Methods\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        createElement\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            createElement(renderer: Renderer2, column: Column, value: any, i: number, j: number)\n                                \n                            \n            \n            \n                                    \n                                        \n                                                Defined in src/grid/cell/viewRenderers/cell-text-view.ts:12\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                                Type\n                                                            Optional\n                                                        \n                                                    \n                                                    \n                                                            \n                                                                renderer\n                                                                \n                                                                    \n                                                                                Renderer2\n                                                                    \n                                                                \n                                                                \n                                                                        no\n                                                                \n                                                                \n            \n                                                            \n                                                            \n                                                                column\n                                                                \n                                                                    \n                                                                                Column\n                                                                    \n                                                                \n                                                                \n                                                                        no\n                                                                \n                                                                \n            \n                                                            \n                                                            \n                                                                value\n                                                                \n                                                                    \n                                                                                any\n                                                                    \n                                                                \n                                                                \n                                                                        no\n                                                                \n                                                                \n            \n                                                            \n                                                            \n                                                                i\n                                                                \n                                                                    \n                                                                                number\n                                                                    \n                                                                \n                                                                \n                                                                        no\n                                                                \n                                                                \n            \n                                                            \n                                                            \n                                                                j\n                                                                \n                                                                    \n                                                                                number\n                                                                    \n                                                                \n                                                                \n                                                                        no\n                                                                \n                                                                \n            \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     HTMLElement\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        setConfig\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            setConfig(config: any)\n                                \n                            \n            \n            \n                                    \n                                        \n                                                Defined in src/grid/cell/viewRenderers/cell-text-view.ts:10\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                                Type\n                                                            Optional\n                                                        \n                                                    \n                                                    \n                                                            \n                                                                config\n                                                                \n                                                                    \n                                                                                any\n                                                                    \n                                                                \n                                                                \n                                                                        no\n                                                                \n                                                                \n            \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     void\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        updateColumn\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            updateColumn(column: Column)\n                                \n                            \n            \n            \n                                    \n                                        \n                                                Defined in src/grid/cell/viewRenderers/cell-text-view.ts:8\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                                Type\n                                                            Optional\n                                                        \n                                                    \n                                                    \n                                                            \n                                                                column\n                                                                \n                                                                    \n                                                                                Column\n                                                                    \n                                                                \n                                                                \n                                                                        no\n                                                                \n                                                                \n            \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     void\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n            \n\n\n\n    \n\n\n    \n        import {Renderer2} from \"@angular/core\";\n\nimport {CellViewRenderer} from \"./cell-view-renderer.interface\";\nimport {Column} from \"../../column/column\";\n\nexport class CellTextView implements CellViewRenderer {\n\n  updateColumn(column: Column) {}\n\n  setConfig(config: any) {}\n\n  createElement(renderer: Renderer2, column: Column, value: any, i: number, j: number): HTMLElement {\n    let span = renderer.createElement(\"span\");\n    renderer.setStyle(span, \"padding-left\", \"8px\");\n    renderer.setStyle(span, \"margin-top\", \"auto\");\n    renderer.setStyle(span, \"margin-bottom\", \"auto\");\n    renderer.setStyle(span, \"overflow-x\", \"hidden\");\n    renderer.setStyle(span, \"text-overflow\", \"ellipsis\");\n\n    let text = renderer.createText(column.formatValue(value));\n    renderer.appendChild(span, text);\n    return span;\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/EmptyFactory.html":{"url":"classes/EmptyFactory.html","title":"class - EmptyFactory","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  EmptyFactory\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/grid/utils/empty.factory.ts\n        \n\n            \n                Description\n            \n            \n                Allows instantiation of any generic type if the type has no constructor arguments.\n\n            \n\n\n\n\n            \n                Index\n                \n                    \n                        \n                            \n                                Methods\n                            \n                        \n                        \n                            \n                                \n                                    \n                                        getInstance\n                                    \n                                \n                            \n                        \n                    \n                \n            \n\n            \n                Constructor\n                    \n                        \n                            \n                                \n            constructor(emptyConstructor: EmptyConstructor)\n                                \n                            \n                                    \n                                        \n                                            Defined in src/grid/utils/empty.factory.ts:4\n                                        \n                                    \n            \n                            \n                                \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                                Type\n                                                            Optional\n                                                        \n                                                    \n                                                    \n                                                            \n                                                                emptyConstructor\n                                                              \n                                                                    \n                                                                                EmptyConstructor\n                                                                    \n                                                              \n                                                                \n                                                                        no\n                                                                \n                                                                \n                                                            \n                                                    \n                                                \n                                        \n                                \n                            \n                        \n                    \n            \n\n            \n                \n                    \n                        Methods\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        getInstance\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            getInstance()\n                                \n                            \n            \n            \n                                    \n                                        \n                                                Defined in src/grid/utils/empty.factory.ts:7\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                            Returns :     T\n            \n                                        \n                                \n                            \n                        \n                    \n            \n\n\n\n    \n\n\n    \n        export class EmptyFactory {\n  constructor(private emptyConstructor: EmptyConstructor) {}\n\n  getInstance(): T {\n    return new this.emptyConstructor();\n  }\n}\n\nexport interface EmptyConstructor {\n  new(): T;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FormatterParser.html":{"url":"classes/FormatterParser.html","title":"class - FormatterParser","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  FormatterParser\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/grid/column/formatters/formatter-parser.ts\n        \n\n            \n                Description\n            \n            \n                Most simple formatter parser which just returns the value without modification.\n\n            \n\n\n\n\n            \n                Index\n                \n                    \n                        \n                            \n                                Properties\n                            \n                        \n                        \n                            \n                                \n                                    \n                                        config\n                                    \n                                \n                            \n                        \n                        \n                            \n                                Methods\n                            \n                        \n                        \n                            \n                                \n                                    \n                                        formatValue\n                                    \n                                    \n                                        parseValue\n                                    \n                                    \n                                        setConfig\n                                    \n                                \n                            \n                        \n                    \n                \n            \n\n\n            \n                \n                    \n                        Methods\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        formatValue\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            formatValue(value: any)\n                                \n                            \n            \n            \n                                    \n                                        \n                                                Defined in src/grid/column/formatters/formatter-parser.ts:12\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                                Type\n                                                            Optional\n                                                        \n                                                    \n                                                    \n                                                            \n                                                                value\n                                                                \n                                                                    \n                                                                                any\n                                                                    \n                                                                \n                                                                \n                                                                        no\n                                                                \n                                                                \n            \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     any\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        parseValue\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            parseValue(value: any)\n                                \n                            \n            \n            \n                                    \n                                        \n                                                Defined in src/grid/column/formatters/formatter-parser.ts:20\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                                Type\n                                                            Optional\n                                                        \n                                                    \n                                                    \n                                                            \n                                                                value\n                                                                \n                                                                    \n                                                                                any\n                                                                    \n                                                                \n                                                                \n                                                                        no\n                                                                \n                                                                \n            \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     any\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        setConfig\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            setConfig(config: any)\n                                \n                            \n            \n            \n                                    \n                                        \n                                                Defined in src/grid/column/formatters/formatter-parser.ts:8\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                                Type\n                                                            Optional\n                                                        \n                                                    \n                                                    \n                                                            \n                                                                config\n                                                                \n                                                                    \n                                                                                any\n                                                                    \n                                                                \n                                                                \n                                                                        no\n                                                                \n                                                                \n            \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     void\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n            \n\n\n            \n                \n                    \n                        Properties\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        config\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                    config:     any\n            \n                                \n                            \n                                \n                                    \n                                        Type :     any\n            \n                                    \n                                \n                                \n                                    \n                                        Default value : {}\n                                    \n                                \n                                    \n                                        \n                                                Defined in src/grid/column/formatters/formatter-parser.ts:6\n                                        \n                                    \n            \n            \n                        \n                    \n            \n\n    \n\n\n    \n        export class FormatterParser {\n\n  config: any = {};\n\n  setConfig(config: any) {\n    this.config = config;\n  }\n\n  formatValue(value: any): any {\n    if (value !== undefined) {\n      return value;\n    } else {\n      return \"\";\n    }\n  }\n\n  parseValue(value: any): any {\n    if (value !== undefined) {\n      return value;\n    } else {\n      return \"\";\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/HtmlUtil.html":{"url":"classes/HtmlUtil.html","title":"class - HtmlUtil","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  HtmlUtil\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/grid/utils/html-util.ts\n        \n\n            \n                Description\n            \n            \n                Convenience class for pulling things such as id from an element.\n\n            \n\n\n\n\n            \n                Index\n                \n                    \n                        \n                            \n                                Methods\n                            \n                        \n                        \n                            \n                                \n                                    \n                                            Static\n                                        getId\n                                    \n                                    \n                                            Static\n                                        getIdElement\n                                    \n                                    \n                                            Static\n                                        getLocation\n                                    \n                                \n                            \n                        \n                    \n                \n            \n\n\n            \n                \n                    \n                        Methods\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                            Static\n                                        getId\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                        \n                                    getId(e: HTMLElement, id?: string)\n                                \n                            \n            \n            \n                                    \n                                        \n                                                Defined in src/grid/utils/html-util.ts:8\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                                Type\n                                                            Optional\n                                                        \n                                                    \n                                                    \n                                                            \n                                                                e\n                                                                \n                                                                    \n                                                                                HTMLElement\n                                                                    \n                                                                \n                                                                \n                                                                        no\n                                                                \n                                                                \n            \n                                                            \n                                                            \n                                                                id\n                                                                \n                                                                    \n                                                                                string\n                                                                    \n                                                                \n                                                                \n                                                                        yes\n                                                                \n                                                                \n            \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     string\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                            Static\n                                        getIdElement\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                        \n                                    getIdElement(e: HTMLElement)\n                                \n                            \n            \n            \n                                    \n                                        \n                                                Defined in src/grid/utils/html-util.ts:23\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                                Type\n                                                            Optional\n                                                        \n                                                    \n                                                    \n                                                            \n                                                                e\n                                                                \n                                                                    \n                                                                                HTMLElement\n                                                                    \n                                                                \n                                                                \n                                                                        no\n                                                                \n                                                                \n            \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     HTMLElement\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                            Static\n                                        getLocation\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                        \n                                    getLocation(e: HTMLElement)\n                                \n                            \n            \n            \n                                    \n                                        \n                                                Defined in src/grid/utils/html-util.ts:38\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                                Type\n                                                            Optional\n                                                        \n                                                    \n                                                    \n                                                            \n                                                                e\n                                                                \n                                                                    \n                                                                                HTMLElement\n                                                                    \n                                                                \n                                                                \n                                                                        no\n                                                                \n                                                                \n            \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     Point\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n            \n\n\n\n    \n\n\n    \n        import {Point} from \"./point\";\n\n/**\n * Convenience class for pulling things such as id from an element.\n */\nexport class HtmlUtil {\n\n  static getId(e: HTMLElement, id?: string): string {\n    if (!e) {\n      return \"\";\n    }\n    while ((!id && e.id === \"\") || (id && !e.id.startsWith(id))) {\n      if (e.parentElement) {\n        e = e.parentElement;\n      } else {\n        break;\n      }\n    }\n\n    return e.id;\n  }\n\n  static getIdElement(e: HTMLElement): HTMLElement {\n    if (!e) {\n      return null;\n    }\n    while (e.id === \"\") {\n      if (e.parentElement) {\n        e = e.parentElement;\n      } else {\n        break;\n      }\n    }\n\n    return e;\n  }\n\n  static getLocation(e: HTMLElement): Point {\n    return Point.getPoint(this.getId(e));\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/InjectableFactory.html":{"url":"classes/InjectableFactory.html","title":"class - InjectableFactory","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  InjectableFactory\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/grid/utils/injectable.factory.ts\n        \n\n            \n                Description\n            \n            \n                Allows instantiation of any generic type if the type expects an injector argument.  See the implementation of\nthe EventListener.\n\n            \n\n\n\n\n            \n                Index\n                \n                    \n                        \n                            \n                                Methods\n                            \n                        \n                        \n                            \n                                \n                                    \n                                        getInstance\n                                    \n                                \n                            \n                        \n                    \n                \n            \n\n            \n                Constructor\n                    \n                        \n                            \n                                \n            constructor(ic: InjectableConstructor, injector: Injector)\n                                \n                            \n                                    \n                                        \n                                            Defined in src/grid/utils/injectable.factory.ts:7\n                                        \n                                    \n            \n                            \n                                \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                                Type\n                                                            Optional\n                                                        \n                                                    \n                                                    \n                                                            \n                                                                ic\n                                                              \n                                                                    \n                                                                                InjectableConstructor\n                                                                    \n                                                              \n                                                                \n                                                                        no\n                                                                \n                                                                \n                                                            \n                                                            \n                                                                injector\n                                                              \n                                                                    \n                                                                                Injector\n                                                                    \n                                                              \n                                                                \n                                                                        no\n                                                                \n                                                                \n                                                            \n                                                    \n                                                \n                                        \n                                \n                            \n                        \n                    \n            \n\n            \n                \n                    \n                        Methods\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        getInstance\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            getInstance()\n                                \n                            \n            \n            \n                                    \n                                        \n                                                Defined in src/grid/utils/injectable.factory.ts:10\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                            Returns :     T\n            \n                                        \n                                \n                            \n                        \n                    \n            \n\n\n\n    \n\n\n    \n        import {Injector} from \"@angular/core\";\n\n/**\n * Allows instantiation of any generic type if the type expects an injector argument.  See the implementation of\n * the EventListener.\n */\nexport class InjectableFactory {\n  constructor(private ic: InjectableConstructor, private injector: Injector) {}\n\n  getInstance(): T {\n    return new this.ic(this.injector);\n  }\n}\n\nexport interface InjectableConstructor {\n  new(injector: Injector): T;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RowChange.html":{"url":"classes/RowChange.html","title":"class - RowChange","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  RowChange\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/grid/utils/row-change.ts\n        \n\n\n\n\n\n            \n                Index\n                \n                    \n                        \n                            \n                                Properties\n                            \n                        \n                        \n                            \n                                \n                                    \n                                        newRowNum\n                                    \n                                    \n                                        oldRowNum\n                                    \n                                \n                            \n                        \n                    \n                \n            \n\n            \n                Constructor\n                    \n                        \n                            \n                                \n            constructor(oldRowNum: number, newRowNum: number)\n                                \n                            \n                                    \n                                        \n                                            Defined in src/grid/utils/row-change.ts:4\n                                        \n                                    \n            \n                            \n                                \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                                Type\n                                                            Optional\n                                                        \n                                                    \n                                                    \n                                                            \n                                                                oldRowNum\n                                                              \n                                                                    \n                                                                                number\n                                                                    \n                                                              \n                                                                \n                                                                        no\n                                                                \n                                                                \n                                                            \n                                                            \n                                                                newRowNum\n                                                              \n                                                                    \n                                                                                number\n                                                                    \n                                                              \n                                                                \n                                                                        no\n                                                                \n                                                                \n                                                            \n                                                    \n                                                \n                                        \n                                \n                            \n                        \n                    \n            \n\n\n\n            \n                \n                    \n                        Properties\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        newRowNum\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                    newRowNum:     number\n            \n                                \n                            \n                                \n                                    \n                                        Type :     number\n            \n                                    \n                                \n                                    \n                                        \n                                                Defined in src/grid/utils/row-change.ts:4\n                                        \n                                    \n            \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        oldRowNum\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                    oldRowNum:     number\n            \n                                \n                            \n                                \n                                    \n                                        Type :     number\n            \n                                    \n                                \n                                    \n                                        \n                                                Defined in src/grid/utils/row-change.ts:3\n                                        \n                                    \n            \n            \n                        \n                    \n            \n\n    \n\n\n    \n        export class RowChange {\n\n  oldRowNum: number;\n  newRowNum: number;\n\n  constructor(oldRowNum: number, newRowNum: number) {\n    this.oldRowNum = oldRowNum;\n    this.newRowNum = newRowNum;\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SortInfo.html":{"url":"classes/SortInfo.html","title":"class - SortInfo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  SortInfo\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/grid/utils/sort-info.ts\n        \n\n\n\n\n\n            \n                Index\n                \n                    \n                        \n                            \n                                Properties\n                            \n                        \n                        \n                            \n                                \n                                    \n                                            Public\n                                        asc\n                                    \n                                    \n                                            Public\n                                        field\n                                    \n                                \n                            \n                        \n                        \n                            \n                                Methods\n                            \n                        \n                        \n                            \n                                \n                                    \n                                        getAsc\n                                    \n                                    \n                                        getField\n                                    \n                                    \n                                        setAsc\n                                    \n                                    \n                                        setField\n                                    \n                                \n                            \n                        \n                    \n                \n            \n\n\n            \n                \n                    \n                        Methods\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        getAsc\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            getAsc()\n                                \n                            \n            \n            \n                                    \n                                        \n                                                Defined in src/grid/utils/sort-info.ts:5\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                            Returns :     boolean\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        getField\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            getField()\n                                \n                            \n            \n            \n                                    \n                                        \n                                                Defined in src/grid/utils/sort-info.ts:13\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                            Returns :     string\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        setAsc\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            setAsc(asc: boolean)\n                                \n                            \n            \n            \n                                    \n                                        \n                                                Defined in src/grid/utils/sort-info.ts:9\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                                Type\n                                                            Optional\n                                                        \n                                                    \n                                                    \n                                                            \n                                                                asc\n                                                                \n                                                                    \n                                                                                boolean\n                                                                    \n                                                                \n                                                                \n                                                                        no\n                                                                \n                                                                \n            \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     void\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        setField\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            setField(field: string)\n                                \n                            \n            \n            \n                                    \n                                        \n                                                Defined in src/grid/utils/sort-info.ts:17\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                                Type\n                                                            Optional\n                                                        \n                                                    \n                                                    \n                                                            \n                                                                field\n                                                                \n                                                                    \n                                                                                string\n                                                                    \n                                                                \n                                                                \n                                                                        no\n                                                                \n                                                                \n            \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     void\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n            \n\n\n            \n                \n                    \n                        Properties\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                            Public\n                                        asc\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                    asc:     boolean\n            \n                                \n                            \n                                \n                                    \n                                        Type :     boolean\n            \n                                    \n                                \n                                \n                                    \n                                        Default value : true\n                                    \n                                \n                                    \n                                        \n                                                Defined in src/grid/utils/sort-info.ts:2\n                                        \n                                    \n            \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                            Public\n                                        field\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                    field:     string\n            \n                                \n                            \n                                \n                                    \n                                        Type :     string\n            \n                                    \n                                \n                                \n                                    \n                                        Default value : null\n                                    \n                                \n                                    \n                                        \n                                                Defined in src/grid/utils/sort-info.ts:3\n                                        \n                                    \n            \n            \n                        \n                    \n            \n\n    \n\n\n    \n        export class SortInfo {\n  public asc: boolean = true;\n  public field: string = null;\n\n  getAsc(): boolean {\n    return this.asc;\n  }\n\n  setAsc(asc: boolean) {\n    this.asc = asc;\n  }\n\n  getField(): string {\n    return this.field;\n  }\n\n  setField(field: string) {\n    this.field = field;\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ClickListener.html":{"url":"interfaces/ClickListener.html","title":"interface - ClickListener","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ClickListener\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/grid/event/click.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    click\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n                \n                    \n                        Methods\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        click\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            click(event: MouseEvent)\n                                \n                            \n            \n            \n                                    \n                                        \n                                                Defined in src/grid/event/click.interface.ts:3\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                                Type\n                                                            Optional\n                                                        \n                                                    \n                                                    \n                                                            \n                                                                event\n                                                                \n                                                                    \n                                                                                MouseEvent\n                                                                    \n                                                                \n                                                                \n                                                                        no\n                                                                \n                                                                \n            \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     boolean\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n            \n\n\n    \n\n\n    \n        export interface ClickListener {\n\n  click(event: MouseEvent): boolean;\n\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DblClickListener.html":{"url":"interfaces/DblClickListener.html","title":"interface - DblClickListener","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  DblClickListener\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/grid/event/dbl-click.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    dblclick\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n                \n                    \n                        Methods\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        dblclick\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            dblclick(event: MouseEvent)\n                                \n                            \n            \n            \n                                    \n                                        \n                                                Defined in src/grid/event/dbl-click.interface.ts:3\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                                Type\n                                                            Optional\n                                                        \n                                                    \n                                                    \n                                                            \n                                                                event\n                                                                \n                                                                    \n                                                                                MouseEvent\n                                                                    \n                                                                \n                                                                \n                                                                        no\n                                                                \n                                                                \n            \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     boolean\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n            \n\n\n    \n\n\n    \n        export interface DblClickListener {\n\n  dblclick(event: MouseEvent): boolean;\n\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Dictionary.html":{"url":"interfaces/Dictionary.html","title":"interface - Dictionary","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Dictionary\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/grid/model/dictionary.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        display\n                                \n                                \n                                        value\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        display\n                                    \n                                \n                                \n                                    \n                                        display:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n                                    \n                                        \n                                            Defined in src/grid/model/dictionary.interface.ts:3\n                                        \n                                    \n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        value\n                                    \n                                \n                                \n                                    \n                                        value:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n                                    \n                                        \n                                            Defined in src/grid/model/dictionary.interface.ts:2\n                                        \n                                    \n\n                        \n                    \n            \n    \n\n\n    \n        export interface Dictionary {\n  value: string;\n  display: string;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/EmptyConstructor.html":{"url":"interfaces/EmptyConstructor.html","title":"interface - EmptyConstructor","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  EmptyConstructor\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/grid/utils/empty.factory.ts\n        \n\n\n\n\n\n\n    \n\n\n    \n        export class EmptyFactory {\n  constructor(private emptyConstructor: EmptyConstructor) {}\n\n  getInstance(): T {\n    return new this.emptyConstructor();\n  }\n}\n\nexport interface EmptyConstructor {\n  new(): T;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/EventListenerArg.html":{"url":"interfaces/EventListenerArg.html","title":"interface - EventListenerArg","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  EventListenerArg\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/grid/event/event-listener-arg.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        config\n                                \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        config\n                                    \n                                \n                                \n                                    \n                                        config:     any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/grid/event/event-listener-arg.interface.ts:5\n                                        \n                                    \n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     Type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Type\n\n                                        \n                                    \n\n\n\n\n                                    \n                                        \n                                            Defined in src/grid/event/event-listener-arg.interface.ts:4\n                                        \n                                    \n\n                        \n                    \n            \n    \n\n\n    \n        import {Type} from \"@angular/core\";\n\nexport interface EventListenerArg {\n  type: Type;\n  config?: any;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/InjectableConstructor.html":{"url":"interfaces/InjectableConstructor.html","title":"interface - InjectableConstructor","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  InjectableConstructor\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/grid/utils/injectable.factory.ts\n        \n\n\n\n\n\n\n    \n\n\n    \n        import {Injector} from \"@angular/core\";\n\n/**\n * Allows instantiation of any generic type if the type expects an injector argument.  See the implementation of\n * the EventListener.\n */\nexport class InjectableFactory {\n  constructor(private ic: InjectableConstructor, private injector: Injector) {}\n\n  getInstance(): T {\n    return new this.ic(this.injector);\n  }\n}\n\nexport interface InjectableConstructor {\n  new(injector: Injector): T;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MouseDownListener.html":{"url":"interfaces/MouseDownListener.html","title":"interface - MouseDownListener","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  MouseDownListener\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/grid/event/mouse-down.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    mouseDown\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n                \n                    \n                        Methods\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        mouseDown\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            mouseDown(event: MouseEvent)\n                                \n                            \n            \n            \n                                    \n                                        \n                                                Defined in src/grid/event/mouse-down.interface.ts:3\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                                Type\n                                                            Optional\n                                                        \n                                                    \n                                                    \n                                                            \n                                                                event\n                                                                \n                                                                    \n                                                                                MouseEvent\n                                                                    \n                                                                \n                                                                \n                                                                        no\n                                                                \n                                                                \n            \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     boolean\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n            \n\n\n    \n\n\n    \n        export interface MouseDownListener {\n\n  mouseDown(event: MouseEvent): boolean;\n\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MouseDragListener.html":{"url":"interfaces/MouseDragListener.html","title":"interface - MouseDragListener","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  MouseDragListener\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/grid/event/mouse-drag.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    mouseDrag\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n                \n                    \n                        Methods\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        mouseDrag\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            mouseDrag(event: MouseEvent)\n                                \n                            \n            \n            \n                                    \n                                        \n                                                Defined in src/grid/event/mouse-drag.interface.ts:3\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                                Type\n                                                            Optional\n                                                        \n                                                    \n                                                    \n                                                            \n                                                                event\n                                                                \n                                                                    \n                                                                                MouseEvent\n                                                                    \n                                                                \n                                                                \n                                                                        no\n                                                                \n                                                                \n            \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     boolean\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n            \n\n\n    \n\n\n    \n        export interface MouseDragListener {\n\n  mouseDrag(event: MouseEvent): boolean;\n\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MouseOverListener.html":{"url":"interfaces/MouseOverListener.html","title":"interface - MouseOverListener","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  MouseOverListener\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/grid/event/mouse-over.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    mouseOver\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n                \n                    \n                        Methods\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        mouseOver\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            mouseOver(event: MouseEvent)\n                                \n                            \n            \n            \n                                    \n                                        \n                                                Defined in src/grid/event/mouse-over.interface.ts:3\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                                Type\n                                                            Optional\n                                                        \n                                                    \n                                                    \n                                                            \n                                                                event\n                                                                \n                                                                    \n                                                                                MouseEvent\n                                                                    \n                                                                \n                                                                \n                                                                        no\n                                                                \n                                                                \n            \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     boolean\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n            \n\n\n    \n\n\n    \n        export interface MouseOverListener {\n\n  mouseOver(event: MouseEvent): boolean;\n\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MouseUpListener.html":{"url":"interfaces/MouseUpListener.html","title":"interface - MouseUpListener","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  MouseUpListener\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/grid/event/mouse-up.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    mouseUp\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n                \n                    \n                        Methods\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        mouseUp\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            mouseUp(event: MouseEvent)\n                                \n                            \n            \n            \n                                    \n                                        \n                                                Defined in src/grid/event/mouse-up.interface.ts:3\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                                Type\n                                                            Optional\n                                                        \n                                                    \n                                                    \n                                                            \n                                                                event\n                                                                \n                                                                    \n                                                                                MouseEvent\n                                                                    \n                                                                \n                                                                \n                                                                        no\n                                                                \n                                                                \n            \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     boolean\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n            \n\n\n    \n\n\n    \n        export interface MouseUpListener {\n\n  mouseUp(event: MouseEvent): boolean;\n\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ARROW\n                        \n                        \n                            CLICK\n                        \n                        \n                            NO_EVENT\n                        \n                        \n                            RESIZE\n                        \n                        \n                            SCROLL\n                        \n                        \n                            TAB\n                        \n                    \n                \n            \n        \n    \n\n\n    src/grid/services/grid-event.service.ts\n    \n                \n                \n                    \n                        \n                            \n                            \n                                \n                                ARROW\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n                            ARROW:     number\n    \n                        \n                    \n                        \n                            \n                                Type :     number\n    \n                            \n                        \n                        \n                            \n                                Default value : 2\n                            \n                        \n    \n    \n                \n            \n            \n                \n                    \n                        \n                            \n                            \n                                \n                                CLICK\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n                            CLICK:     number\n    \n                        \n                    \n                        \n                            \n                                Type :     number\n    \n                            \n                        \n                        \n                            \n                                Default value : 0\n                            \n                        \n    \n    \n                \n            \n            \n                \n                    \n                        \n                            \n                            \n                                \n                                TAB\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n                            TAB:     number\n    \n                        \n                    \n                        \n                            \n                                Type :     number\n    \n                            \n                        \n                        \n                            \n                                Default value : 1\n                            \n                        \n    \n    \n                \n            \n    \n    src/grid/grid.component.ts\n    \n                \n                \n                    \n                        \n                            \n                            \n                                \n                                NO_EVENT\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n                            NO_EVENT:     number\n    \n                        \n                    \n                        \n                            \n                                Type :     number\n    \n                            \n                        \n                        \n                            \n                                Default value : -1\n                            \n                        \n    \n    \n                \n            \n            \n                \n                    \n                        \n                            \n                            \n                                \n                                RESIZE\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n                            RESIZE:     number\n    \n                        \n                    \n                        \n                            \n                                Type :     number\n    \n                            \n                        \n                        \n                            \n                                Default value : 0\n                            \n                        \n    \n    \n                \n            \n            \n                \n                    \n                        \n                            \n                            \n                                \n                                SCROLL\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n                            SCROLL:     number\n    \n                        \n                    \n                        \n                            \n                                Type :     number\n    \n                            \n                        \n                        \n                            \n                                Default value : 1\n                            \n                        \n    \n    \n                \n            \n    \n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
