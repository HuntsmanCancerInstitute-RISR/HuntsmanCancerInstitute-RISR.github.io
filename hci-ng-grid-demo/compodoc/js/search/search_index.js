var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.1.6","fields":["title","body"],"fieldVectors":[["title/dependencies.html",[0,2.175,1,2.146]],["body/dependencies.html",[1,2.54,2,3.4,3,3.698,4,3.4,5,0.033,6,4.449,7,4.449,8,3.698,9,3.204,10,4.449,11,4.449,12,4.449,13,4.449,14,4.449,15,0.029,16,0.029]],["title/index.html",[17,1.668,18,1.885,19,0.446]],["body/index.html",[0,0.609,1,1.029,2,1.405,5,0.029,8,1.498,9,3.417,15,0.007,16,0.007,17,0.842,20,0.528,21,0.528,22,0.733,23,0.609,24,0.733,25,3.091,26,0.733,27,0.733,28,0.733,29,2.204,30,2.116,31,3.091,32,0.733,33,0.733,34,0.733,35,3.417,36,0.733,37,0.528,38,0.528,39,2.776,40,0.609,41,1.802,42,0.733,43,1.321,44,0.733,45,0.609,46,0.733,47,0.432,48,0.419,49,0.733,50,1.321,51,1.098,52,0.733,53,0.733,54,0.733,55,0.733,56,0.733,57,1.098,58,1.321,59,3.062,60,2.545,61,1.802,62,3.062,63,0.733,64,0.733,65,1.321,66,0.733,67,0.733,68,0.733,69,2.754,70,1.833,71,1.588,72,2.192,73,1.321,74,3.117,75,2.536,76,1.098,77,1.321,78,1.321,79,3.839,80,0.733,81,1.802,82,1.802,83,0.733,84,1.321,85,0.733,86,3.104,87,3.313,88,1.321,89,0.609,90,2.754,91,2.569,92,0.733,93,1.321,94,0.057,95,1.762,96,2.653,97,0.609,98,1.321,99,0.733,100,1.098,101,0.733,102,0.733,103,0.733,104,0.733,105,1.802,106,1.259,107,0.733,108,0.467,109,2.837,110,1.098,111,1.405,112,1.033,113,1.588,114,1.833,115,0.733,116,0.733,117,2.204,118,0.733,119,0.733,120,0.246,121,0.733,122,0.733,123,0.733,124,0.733,125,0.781,126,1.498,127,2.283,128,2.043,129,1.321,130,0.733,131,0.733,132,0.733,133,2.545,134,0.733,135,1.802,136,1.498,137,0.609,138,0.733,139,1.321,140,0.733,141,2.116,142,0.301,143,0.733,144,0.537,145,0.733,146,0.733,147,1.184,148,2.043,149,0.733,150,1.498,151,0.419,152,0.609,153,0.733,154,1.321,155,1.321,156,1.802,157,0.733,158,1.802,159,1.802,160,1.321,161,0.609,162,0.733,163,1.321,164,1.321,165,2.204,166,0.733,167,1.298,168,1.098,169,0.733,170,0.733,171,0.733,172,0.733,173,0.733,174,2.917,175,0.733,176,0.733,177,0.733,178,1.321,179,0.733,180,1.321,181,0.733,182,0.733,183,0.733,184,0.733,185,2.192,186,0.733,187,1.802,188,0.733,189,1.321,190,0.733,191,0.733,192,0.733,193,0.733,194,0.951,195,0.733,196,1.098,197,1.098,198,1.321,199,0.733,200,3.683,201,0.733,202,0.733,203,1.193,204,0.609,205,0.733,206,0.733,207,0.733,208,1.098,209,1.321,210,0.733,211,0.528,212,0.733,213,2.359,214,0.733,215,0.733,216,2.204,217,0.733,218,0.733,219,2.204,220,1.498,221,0.733,222,0.733,223,1.802,224,1.321,225,1.298,226,0.733,227,0.733,228,0.733,229,0.733,230,0.609,231,0.733,232,0.733,233,1.321,234,0.528,235,0.733,236,0.733,237,1.298,238,2.204,239,1.321,240,0.733,241,1.833,242,0.733,243,0.733,244,0.733,245,0.733,246,0.733,247,1.321,248,1.802,249,2.754,250,0.733,251,1.321,252,1.321,253,0.733,254,0.733,255,1.033,256,0.733,257,0.733,258,0.733,259,1.321,260,0.733,261,0.733,262,1.298,263,0.733,264,2.204,265,0.733,266,0.733,267,0.733,268,0.733,269,0.609,270,0.733,271,0.733,272,0.733,273,0.733,274,0.733,275,0.733,276,1.802,277,0.733,278,0.733,279,0.733,280,0.733,281,0.609,282,0.733,283,1.802,284,1.321,285,1.321,286,1.321,287,1.098,288,0.733,289,0.733,290,1.321,291,0.733,292,0.733,293,1.802,294,0.733,295,0.733,296,0.733,297,0.733,298,0.378,299,0.733,300,0.733,301,1.833,302,0.733,303,2.527,304,1.405,305,0.733,306,0.733,307,0.733,308,0.733,309,0.609,310,0.733,311,0.733,312,1.098,313,0.733,314,0.191,315,0.733,316,0.038,317,0.138,318,0.609,319,0.733,320,0.733,321,0.733,322,0.733,323,0.733,324,1.321,325,0.733,326,1.321,327,0.733,328,0.733,329,0.733,330,0.733,331,0.733,332,0.609,333,1.321,334,0.733,335,0.733,336,0.733,337,2.204,338,0.733,339,0.528,340,0.733,341,1.098,342,0.733,343,0.733,344,0.733,345,1.321,346,0.528,347,0.528,348,1.321,349,0.528,350,0.609,351,1.321,352,1.321,353,0.528,354,0.733,355,0.733,356,0.609,357,0.733,358,0.733,359,0.609,360,0.528,361,2.204,362,3.98,363,0.733,364,3.091,365,1.321,366,0.733,367,0.733,368,0.733,369,0.733,370,0.733,371,0.733,372,0.047,373,0.733,374,1.321,375,0.609,376,0.733,377,0.733,378,0.733]],["title/overview.html",[379,3.538]],["body/overview.html",[1,1.53,4,1.708,5,0.033,15,0.021,16,0.021,48,3.64,111,1.708,113,1.93,194,1.93,298,1.972,314,0.284,316,0.139,339,3.209,346,3.209,347,3.209,349,3.209,353,3.209,379,2.228,380,2.228,381,2.228,382,0.208,383,2.228,384,2.228,385,2.228,386,2.228,387,4.971,388,3.704,389,2.839,390,2.839,391,2.839,392,2.839,393,3.704,394,3.704,395,3.704,396,3.704,397,3.704,398,3.704,399,2.839,400,3.178,401,2.228,402,1.93,403,2.68,404,3.822,405,1.93,406,1.047,407,2.68,408,2.68]],["title/changelog.html",[17,1.668,18,1.885,409,2.617]],["body/changelog.html",[2,1.568,4,1.568,5,0.019,9,2.588,15,0.019,16,0.019,23,2.046,30,2.046,35,3.058,38,1.772,39,1.854,45,2.046,59,2.046,69,2.988,70,2.988,72,3.198,74,3.735,76,2.046,86,2.706,89,2.046,90,2.046,91,2.046,95,0.88,96,3.058,97,2.988,108,1.568,110,2.046,114,2.988,127,1.854,128,1.772,137,2.046,141,3.882,150,2.046,151,2.052,167,4.154,168,2.046,203,1.153,208,2.046,225,1.772,230,3.53,234,1.772,249,2.046,255,1.153,303,2.588,304,1.568,332,2.988,341,3.53,350,2.988,359,2.046,360,1.772,410,2.461,411,2.461,412,2.046,413,2.461,414,2.461,415,2.461,416,2.461,417,2.461,418,2.461,419,2.461,420,2.461,421,2.461,422,2.461,423,2.461,424,2.461,425,2.461,426,2.461,427,2.046,428,2.461,429,2.461,430,2.461,431,2.461,432,3.594,433,2.461,434,2.461,435,2.461,436,2.461,437,2.461,438,2.461,439,2.461,440,2.29,441,4.246,442,2.461,443,2.461,444,2.461,445,2.461,446,2.461,447,2.461,448,2.461,449,2.461,450,2.461,451,2.461,452,2.461,453,2.461,454,2.461,455,2.461,456,2.461,457,2.461,458,2.461,459,2.461,460,2.461,461,2.461,462,2.461,463,2.461,464,2.046,465,2.461,466,2.461,467,2.461,468,2.461,469,2.461,470,2.461,471,3.594,472,2.461,473,2.461,474,2.461,475,2.461,476,2.046,477,2.461,478,2.461,479,2.461,480,2.461,481,2.461,482,2.461]],["title/license.html",[17,1.668,18,1.885,464,2.175]],["body/license.html",[5,0.023,15,0.023,16,0.023,20,2.295,21,2.295,51,2.649,57,4.352,62,3.584,95,1.139,100,2.649,111,2.031,152,2.649,161,2.649,196,3.584,281,4.062,301,2.649,360,2.295,372,0.206,402,2.295,427,3.584,476,2.649,483,4.062,484,2.649,485,3.187,486,2.649,487,2.649,488,2.649,489,4.311,490,3.187,491,3.187,492,3.187,493,3.187,494,4.311,495,3.187,496,5.942,497,3.187,498,3.187,499,4.062,500,3.187,501,3.187,502,3.187,503,3.187,504,3.187,505,3.187,506,3.187,507,3.187,508,2.649,509,3.187,510,4.311,511,4.311,512,3.187,513,3.187,514,4.311,515,3.187,516,3.187,517,3.187,518,3.187,519,3.187,520,3.187,521,3.187,522,3.187,523,3.187,524,2.649,525,3.187,526,3.187,527,3.187,528,3.187,529,3.187,530,3.187,531,3.187,532,3.187,533,3.187]],["title/modules.html",[298,2.196]],["body/modules.html",[5,0.03,15,0.03,16,0.03,38,3.44,48,2.727,298,2.464,534,4.776,535,4.776,536,4.776]],["title/modules/GridModule.html",[48,1.785,298,1.613]],["body/modules/GridModule.html",[1,0.907,2,1.012,3,1.321,4,1.635,5,0.034,15,0.014,16,0.014,20,1.144,21,1.144,47,1.894,48,3.502,74,2.324,86,1.012,94,0.123,111,2.771,113,2.324,120,0.35,174,2.133,298,1.323,314,0.168,339,3.429,346,3.429,347,3.429,349,3.429,353,3.429,372,0.102,380,1.321,381,2.682,382,0.288,383,1.321,384,1.321,385,1.321,386,1.321,387,4.704,388,3.614,389,2.771,390,2.771,391,2.771,392,2.771,393,3.958,394,3.958,395,3.614,396,3.614,397,2.682,398,2.682,399,2.056,400,2.133,401,1.321,402,1.144,483,1.321,484,1.321,486,1.321,487,1.321,488,1.321,537,0.145,538,1.588,539,2.565,540,1.588,541,1.588,542,1.588,543,3.227,544,3.227,545,3.704,546,0.62,547,2.565,548,1.588,549,2.565,550,1.588,551,2.565,552,1.588,553,1.012,554,1.588,555,3.704,556,2.565,557,1.588,558,1.588,559,1.588,560,3.227,561,4.348,562,1.588,563,1.588,564,1.588,565,1.588,566,1.588,567,1.588,568,1.588,569,2.565,570,1.588,571,2.565,572,1.588,573,1.588,574,3.227,575,1.588,576,2.133,577,1.588,578,3.227,579,3.227,580,1.588]],["title/injectables/GridMessageService.html",[399,1.993,405,2.252]],["body/injectables/GridMessageService.html",[5,0.034,15,0.02,16,0.02,19,0.443,39,2.258,47,1.224,75,3.367,94,0.202,120,0.598,125,0.693,142,0.51,144,0.572,185,2.5,203,1.751,220,3.107,234,3.655,237,2.692,241,3.107,255,2.052,269,3.981,314,0.275,317,0.706,372,0.167,382,0.202,399,2.382,405,3.153,412,2.159,508,4.393,537,0.238,546,1.014,581,4.527,582,2.597,583,1.928,584,4.088,585,4.789,586,4.789,587,4.789,588,3.737,589,4.378,590,3.737,591,0.722,592,2.597,593,0.637,594,3.737,595,2.597,596,3.107,597,2.597,598,2.597,599,3.737,600,2.597,601,2.597,602,2.597,603,2.597,604,2.597,605,2.597]],["title/pipes/IsFixedPipe.html",[391,1.993,406,1.221]],["body/pipes/IsFixedPipe.html",[5,0.034,15,0.024,16,0.024,47,1.48,72,2.581,94,0.266,106,2.89,112,1.602,120,0.691,125,0.467,127,1.764,128,3.646,142,0.467,144,0.775,147,1.81,148,2.463,167,3.879,312,2.843,314,0.362,317,0.646,372,0.221,382,0.266,391,2.88,406,1.977,537,0.313,546,1.335,553,2.179,591,0.467,593,0.583,606,2.88,607,3.419,608,1.952,609,4.519,610,2.179,611,2.88,612,3.419,613,2.88,614,2.179,615,3.419]],["title/pipes/IsGroupPipe.html",[390,1.993,406,1.221]],["body/pipes/IsGroupPipe.html",[5,0.034,15,0.025,16,0.025,47,1.525,72,2.659,94,0.278,106,2.956,112,1.677,120,0.707,127,1.846,142,0.489,144,0.792,314,0.379,317,0.676,372,0.231,382,0.278,390,2.968,406,2.021,537,0.327,546,1.398,553,2.281,591,0.489,593,0.61,606,2.968,608,2.044,610,2.281,611,2.968,613,2.968,614,2.281,616,3.579,617,4.657,618,3.579,619,3.579,620,3.579]],["title/pipes/IsRowVisiblePipe.html",[392,1.993,406,1.221]],["body/pipes/IsRowVisiblePipe.html",[5,0.034,15,0.025,16,0.025,47,1.525,86,3.493,94,0.278,106,2.956,112,1.677,120,0.707,127,1.846,142,0.489,144,0.792,314,0.379,317,0.676,372,0.231,382,0.278,392,2.968,406,2.021,537,0.327,546,1.398,591,0.489,593,0.61,606,2.968,608,2.044,610,2.281,611,2.968,613,2.968,614,2.281,621,2.976,622,4.657,623,2.976,624,3.579,625,2.976]],["title/pipes/IsVisiblePipe.html",[389,1.993,406,1.221]],["body/pipes/IsVisiblePipe.html",[5,0.034,15,0.025,16,0.025,47,1.533,72,2.674,94,0.28,106,2.968,112,1.691,120,0.71,127,1.862,142,0.493,144,0.796,314,0.382,317,0.682,372,0.233,382,0.28,389,2.984,406,2.03,537,0.33,546,1.41,553,2.3,591,0.493,593,0.615,606,2.984,608,2.061,610,2.3,611,2.984,613,2.984,614,2.3,621,3.001,623,3.001,625,3.001,626,4.683]],["title/classes/Cell.html",[304,1.993,314,0.331]],["body/classes/Cell.html",[5,0.033,15,0.024,16,0.024,19,0.58,35,3.246,39,1.757,94,0.265,125,0.734,126,4.2,142,0.465,144,0.521,147,1.806,148,3.246,185,2.885,204,4.47,213,4.47,255,2.621,303,2.453,304,2.872,314,0.477,372,0.22,382,0.265,524,2.831,537,0.311,583,2.325,591,0.734,593,0.58,608,1.945,627,3.406,628,1.945,629,3.406,630,3.406,631,3.406,632,2.17,633,4.507,634,4.507,635,4.507,636,3.406,637,3.406,638,3.406]],["title/classes/EmptyFactory.html",[314,0.331,639,2.252]],["body/classes/EmptyFactory.html",[5,0.033,15,0.025,16,0.025,19,0.623,94,0.284,120,0.645,125,0.714,142,0.499,144,0.56,151,2.088,203,2.213,314,0.5,316,0.189,317,0.892,372,0.236,382,0.367,440,2.33,537,0.334,591,0.645,593,0.623,628,2.088,632,3.009,639,3.401,640,3.04,641,2.634,642,2.634,643,3.522,644,3.657,645,4.221,646,3.657,647,3.657,648,3.333,649,2.33,650,3.04]],["title/classes/FormatterParser.html",[314,0.331,651,2.599]],["body/classes/FormatterParser.html",[5,0.034,15,0.023,16,0.023,19,0.533,39,1.613,40,2.6,94,0.243,120,0.766,125,0.709,142,0.661,144,0.741,237,2.252,255,2.627,262,4.038,314,0.45,317,0.804,318,3.539,372,0.202,382,0.243,499,2.6,537,0.286,583,2.196,591,0.709,593,0.825,628,1.786,651,3.539,652,5.434,653,3.127,654,3.127,655,3.127,656,3.127,657,4.257,658,4.257,659,4.257,660,4.257,661,3.127,662,4.257,663,3.127,664,3.127,665,3.127,666,3.127]],["title/classes/HtmlUtil.html",[314,0.331,667,2.599]],["body/classes/HtmlUtil.html",[5,0.034,15,0.019,16,0.019,19,0.424,47,0.815,75,3.18,94,0.193,120,0.752,125,0.584,136,4.469,142,0.584,144,0.654,287,3.903,309,3.013,314,0.497,317,0.684,356,3.013,372,0.161,375,3.013,382,0.193,537,0.228,576,4.669,591,0.584,593,0.729,628,1.422,667,3.013,668,4.695,669,2.49,670,3.625,671,3.625,672,3.625,673,3.625,674,3.625,675,3.625,676,3.625,677,5.782,678,2.49,679,5.509,680,2.49,681,3.625,682,2.49,683,3.625,684,2.49,685,4.275,686,2.49,687,4.695,688,2.49,689,2.49]],["title/classes/InjectableFactory.html",[314,0.331,690,2.252]],["body/classes/InjectableFactory.html",[5,0.033,15,0.023,16,0.023,19,0.552,37,3.137,47,1.059,94,0.251,108,2.776,112,2.041,120,0.595,125,0.751,142,0.442,144,0.495,151,2.487,203,1.516,314,0.461,316,0.168,317,0.822,372,0.209,382,0.338,440,2.776,537,0.296,546,1.264,584,2.33,591,0.595,593,0.552,628,1.847,632,2.062,641,3.137,642,3.137,643,3.357,648,3.138,649,2.062,690,3.137,691,2.69,692,5.008,693,3.621,694,3.236,695,3.794,696,3.236,697,3.621,698,3.236,699,2.69,700,2.69]],["title/classes/RowChange.html",[314,0.331,701,2.599]],["body/classes/RowChange.html",[5,0.033,15,0.025,16,0.025,19,0.602,94,0.275,125,0.703,142,0.483,144,0.541,185,3.543,314,0.489,372,0.228,382,0.275,537,0.323,583,2.382,591,0.703,593,0.602,632,2.252,701,3.839,702,5.455,703,3.534,704,5.999,705,5.806,706,4.619,707,4.619,708,3.534,709,3.534,710,3.534]],["title/interfaces/ClickListener.html",[316,0.162,711,2.599]],["body/interfaces/ClickListener.html",[5,0.032,15,0.027,16,0.027,19,0.706,71,3.679,94,0.322,95,1.481,120,0.566,125,0.566,142,0.566,144,0.634,147,1.826,316,0.265,317,0.965,372,0.267,382,0.322,537,0.379,591,0.566,593,0.706,711,4.247,712,4.142,713,5.109,714,2.596,715,4.142]],["title/interfaces/DblClickListener.html",[316,0.162,716,2.599]],["body/interfaces/DblClickListener.html",[5,0.032,15,0.027,16,0.027,19,0.699,94,0.319,95,1.466,120,0.56,125,0.56,142,0.56,144,0.628,147,1.815,316,0.263,317,0.959,372,0.265,382,0.319,537,0.375,591,0.56,593,0.699,714,2.584,716,4.221,717,5.078,718,4.102,719,5.078,720,5.078,721,4.102]],["title/interfaces/Dictionary.html",[316,0.162,722,2.599]],["body/interfaces/Dictionary.html",[5,0.032,15,0.027,16,0.027,19,0.696,75,3.841,94,0.317,125,0.691,225,4.144,255,2.696,316,0.262,372,0.263,382,0.317,537,0.373,583,2.611,591,0.691,722,4.209,723,4.082,724,4.082,725,4.082]],["title/interfaces/EmptyConstructor.html",[316,0.162,645,2.252]],["body/interfaces/EmptyConstructor.html",[5,0.034,15,0.028,16,0.028,94,0.328,120,0.577,203,2.423,314,0.447,316,0.268,372,0.273,382,0.402,537,0.386,639,3.043,640,3.513,643,2.693,645,4.194,648,3.295,649,2.693,650,3.513]],["title/interfaces/EventListenerArg.html",[211,2.252,316,0.162]],["body/interfaces/EventListenerArg.html",[5,0.032,15,0.027,16,0.027,19,0.67,47,1.287,94,0.305,96,3.896,125,0.851,142,0.675,211,3.561,262,4.088,316,0.256,372,0.253,382,0.305,537,0.359,546,1.535,583,2.55,591,0.675,726,5.409,727,3.93,728,3.93,729,3.93]],["title/interfaces/InjectableConstructor.html",[316,0.162,695,2.252]],["body/interfaces/InjectableConstructor.html",[5,0.034,15,0.026,16,0.026,37,2.741,47,1.246,94,0.296,108,2.425,112,1.783,120,0.52,125,0.662,151,2.173,203,1.783,314,0.403,316,0.251,372,0.245,382,0.376,440,2.425,537,0.348,546,1.486,584,2.741,641,2.741,642,2.741,643,2.425,648,3.087,649,2.425,690,2.741,691,3.164,692,4.816,693,3.164,695,3.838,697,3.164,699,3.164,700,3.164]],["title/interfaces/MouseDownListener.html",[316,0.162,730,2.599]],["body/interfaces/MouseDownListener.html",[5,0.032,15,0.027,16,0.027,19,0.699,94,0.319,95,1.466,120,0.56,125,0.56,142,0.56,144,0.628,147,1.815,316,0.263,317,0.959,372,0.265,382,0.319,537,0.375,591,0.56,593,0.699,714,2.584,730,4.221,731,2.899,732,4.102,733,5.078,734,5.078,735,4.102]],["title/interfaces/MouseDragListener.html",[316,0.162,736,2.599]],["body/interfaces/MouseDragListener.html",[5,0.032,15,0.027,16,0.027,19,0.699,94,0.319,95,1.466,120,0.56,125,0.56,142,0.56,144,0.628,147,1.815,316,0.263,317,0.959,372,0.265,382,0.319,537,0.375,591,0.56,593,0.699,714,2.584,731,2.899,736,4.221,737,4.102,738,5.078,739,5.078,740,4.102]],["title/interfaces/MouseOutListener.html",[316,0.162,741,2.599]],["body/interfaces/MouseOutListener.html",[5,0.032,15,0.027,16,0.027,19,0.699,94,0.319,95,1.466,120,0.56,125,0.56,142,0.56,144,0.628,147,1.815,316,0.263,317,0.959,372,0.265,382,0.319,537,0.375,591,0.56,593,0.699,714,2.584,731,2.899,741,4.221,742,4.102,743,5.078,744,5.078,745,4.102]],["title/interfaces/MouseOverListener.html",[316,0.162,746,2.599]],["body/interfaces/MouseOverListener.html",[5,0.032,15,0.027,16,0.027,19,0.699,94,0.319,95,1.466,120,0.56,125,0.56,142,0.56,144,0.628,147,1.815,316,0.263,317,0.959,372,0.265,382,0.319,537,0.375,591,0.56,593,0.699,714,2.584,731,2.899,746,4.221,747,4.102,748,5.078,749,5.078,750,4.102]],["title/interfaces/MouseUpListener.html",[316,0.162,751,2.599]],["body/interfaces/MouseUpListener.html",[5,0.032,15,0.027,16,0.027,19,0.699,94,0.319,95,1.466,120,0.56,125,0.56,142,0.56,144,0.628,147,1.815,316,0.263,317,0.959,372,0.265,382,0.319,537,0.375,591,0.56,593,0.699,714,2.584,731,2.899,751,4.221,752,4.102,753,5.078,754,5.078,755,4.102]],["title/miscellaneous/variables.html",[756,2.175,757,3.124]],["body/miscellaneous/variables.html",[5,0.034,15,0.025,16,0.025,19,0.592,39,2.981,71,3.675,125,0.789,185,3.534,194,3.675,197,4.242,255,2.708,581,2.89,596,2.89,756,2.89,757,2.89,758,5.103,759,5.103,760,5.103,761,5.103,762,3.476,763,4.568,764,3.476]]],"invertedIndex":[["",{"_index":5,"title":{},"body":{"dependencies.html":{},"index.html":{},"overview.html":{},"changelog.html":{},"license.html":{},"modules.html":{},"modules/GridModule.html":{},"injectables/GridMessageService.html":{},"pipes/IsFixedPipe.html":{},"pipes/IsGroupPipe.html":{},"pipes/IsRowVisiblePipe.html":{},"pipes/IsVisiblePipe.html":{},"classes/Cell.html":{},"classes/EmptyFactory.html":{},"classes/FormatterParser.html":{},"classes/HtmlUtil.html":{},"classes/InjectableFactory.html":{},"classes/RowChange.html":{},"interfaces/ClickListener.html":{},"interfaces/DblClickListener.html":{},"interfaces/Dictionary.html":{},"interfaces/EmptyConstructor.html":{},"interfaces/EventListenerArg.html":{},"interfaces/InjectableConstructor.html":{},"interfaces/MouseDownListener.html":{},"interfaces/MouseDragListener.html":{},"interfaces/MouseOutListener.html":{},"interfaces/MouseOverListener.html":{},"interfaces/MouseUpListener.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":763,"title":{},"body":{"miscellaneous/variables.html":{}}}],["1",{"_index":194,"title":{},"body":{"index.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["1.0.0",{"_index":11,"title":{},"body":{"dependencies.html":{}}}],["10",{"_index":189,"title":{},"body":{"index.html":{}}}],["100",{"_index":195,"title":{},"body":{"index.html":{}}}],["11",{"_index":403,"title":{},"body":{"overview.html":{}}}],["12",{"_index":408,"title":{},"body":{"overview.html":{}}}],["15",{"_index":328,"title":{},"body":{"index.html":{}}}],["2",{"_index":596,"title":{},"body":{"injectables/GridMessageService.html":{},"miscellaneous/variables.html":{}}}],["2.19.3",{"_index":14,"title":{},"body":{"dependencies.html":{}}}],["2016",{"_index":540,"title":{},"body":{"modules/GridModule.html":{}}}],["2018",{"_index":485,"title":{},"body":{"license.html":{}}}],["25",{"_index":190,"title":{},"body":{"index.html":{}}}],["32",{"_index":407,"title":{},"body":{"overview.html":{}}}],["4",{"_index":404,"title":{},"body":{"overview.html":{}}}],["4.2.x",{"_index":6,"title":{},"body":{"dependencies.html":{}}}],["4.24.0.0",{"_index":414,"title":{},"body":{"changelog.html":{}}}],["4.3.1",{"_index":7,"title":{},"body":{"dependencies.html":{}}}],["5.0.0",{"_index":45,"title":{},"body":{"index.html":{},"changelog.html":{}}}],["50",{"_index":191,"title":{},"body":{"index.html":{}}}],["6",{"_index":413,"title":{},"body":{"changelog.html":{}}}],["8",{"_index":411,"title":{},"body":{"changelog.html":{}}}],["85",{"_index":330,"title":{},"body":{"index.html":{}}}],["_level",{"_index":585,"title":{},"body":{"injectables/GridMessageService.html":{}}}],["_messag",{"_index":586,"title":{},"body":{"injectables/GridMessageService.html":{}}}],["_messageobserv",{"_index":587,"title":{},"body":{"injectables/GridMessageService.html":{}}}],["abov",{"_index":161,"title":{},"body":{"index.html":{},"license.html":{}}}],["accessor",{"_index":588,"title":{},"body":{"injectables/GridMessageService.html":{}}}],["action",{"_index":100,"title":{},"body":{"index.html":{},"license.html":{}}}],["ad",{"_index":97,"title":{},"body":{"index.html":{},"changelog.html":{}}}],["add",{"_index":230,"title":{},"body":{"index.html":{},"changelog.html":{}}}],["advanc",{"_index":302,"title":{},"body":{"index.html":{}}}],["allow",{"_index":151,"title":{},"body":{"index.html":{},"changelog.html":{},"classes/EmptyFactory.html":{},"classes/InjectableFactory.html":{},"interfaces/InjectableConstructor.html":{}}}],["although",{"_index":226,"title":{},"body":{"index.html":{}}}],["analyze_for_entry_compon",{"_index":543,"title":{},"body":{"modules/GridModule.html":{}}}],["and/or",{"_index":504,"title":{},"body":{"license.html":{}}}],["angular",{"_index":23,"title":{},"body":{"index.html":{},"changelog.html":{}}}],["angular/common",{"_index":548,"title":{},"body":{"modules/GridModule.html":{}}}],["angular/cor",{"_index":546,"title":{},"body":{"modules/GridModule.html":{},"injectables/GridMessageService.html":{},"pipes/IsFixedPipe.html":{},"pipes/IsGroupPipe.html":{},"pipes/IsRowVisiblePipe.html":{},"pipes/IsVisiblePipe.html":{},"classes/InjectableFactory.html":{},"interfaces/EventListenerArg.html":{},"interfaces/InjectableConstructor.html":{}}}],["angular/form",{"_index":550,"title":{},"body":{"modules/GridModule.html":{}}}],["anyth",{"_index":33,"title":{},"body":{"index.html":{}}}],["anything.filterev",{"_index":275,"title":{},"body":{"index.html":{}}}],["anywher",{"_index":377,"title":{},"body":{"index.html":{}}}],["api",{"_index":443,"title":{},"body":{"changelog.html":{}}}],["appear.newrowpostcal",{"_index":232,"title":{},"body":{"index.html":{}}}],["appli",{"_index":278,"title":{},"body":{"index.html":{}}}],["applic",{"_index":299,"title":{},"body":{"index.html":{}}}],["arg.interface.t",{"_index":727,"title":{},"body":{"interfaces/EventListenerArg.html":{}}}],["arg.interface.ts:4",{"_index":729,"title":{},"body":{"interfaces/EventListenerArg.html":{}}}],["arg.interface.ts:5",{"_index":728,"title":{},"body":{"interfaces/EventListenerArg.html":{}}}],["argument",{"_index":642,"title":{},"body":{"classes/EmptyFactory.html":{},"classes/InjectableFactory.html":{},"interfaces/InjectableConstructor.html":{}}}],["aris",{"_index":533,"title":{},"body":{"license.html":{}}}],["array",{"_index":128,"title":{},"body":{"index.html":{},"changelog.html":{},"pipes/IsFixedPipe.html":{}}}],["arrow",{"_index":758,"title":{},"body":{"miscellaneous/variables.html":{}}}],["artifact.2.0.0",{"_index":465,"title":{},"body":{"changelog.html":{}}}],["associ",{"_index":497,"title":{},"body":{"license.html":{}}}],["author",{"_index":523,"title":{},"body":{"license.html":{}}}],["auto",{"_index":452,"title":{},"body":{"changelog.html":{}}}],["automat",{"_index":370,"title":{},"body":{"index.html":{}}}],["back",{"_index":286,"title":{},"body":{"index.html":{}}}],["bar",{"_index":160,"title":{},"body":{"index.html":{}}}],["base",{"_index":336,"title":{},"body":{"index.html":{}}}],["basic",{"_index":41,"title":{},"body":{"index.html":{}}}],["be",{"_index":296,"title":{},"body":{"index.html":{}}}],["becom",{"_index":42,"title":{},"body":{"index.html":{}}}],["behavior",{"_index":445,"title":{},"body":{"changelog.html":{}}}],["beta.2",{"_index":46,"title":{},"body":{"index.html":{}}}],["beta.4",{"_index":12,"title":{},"body":{"dependencies.html":{}}}],["big).titl",{"_index":157,"title":{},"body":{"index.html":{}}}],["bigtextpopup",{"_index":394,"title":{},"body":{"overview.html":{},"modules/GridModule.html":{}}}],["bind",{"_index":131,"title":{},"body":{"index.html":{}}}],["birth",{"_index":342,"title":{},"body":{"index.html":{}}}],["boolean",{"_index":147,"title":{},"body":{"index.html":{},"pipes/IsFixedPipe.html":{},"classes/Cell.html":{},"interfaces/ClickListener.html":{},"interfaces/DblClickListener.html":{},"interfaces/MouseDownListener.html":{},"interfaces/MouseDragListener.html":{},"interfaces/MouseOutListener.html":{},"interfaces/MouseOverListener.html":{},"interfaces/MouseUpListener.html":{}}}],["bootstrap",{"_index":4,"title":{},"body":{"dependencies.html":{},"overview.html":{},"changelog.html":{},"modules/GridModule.html":{}}}],["bootstrap/ng",{"_index":3,"title":{},"body":{"dependencies.html":{},"modules/GridModule.html":{}}}],["break",{"_index":356,"title":{},"body":{"index.html":{},"classes/HtmlUtil.html":{}}}],["brows",{"_index":536,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":534,"title":{},"body":{"modules.html":{}}}],["build",{"_index":361,"title":{},"body":{"index.html":{}}}],["built",{"_index":333,"title":{},"body":{"index.html":{}}}],["bump",{"_index":456,"title":{},"body":{"changelog.html":{}}}],["busi",{"_index":469,"title":{},"body":{"changelog.html":{}}}],["button",{"_index":231,"title":{},"body":{"index.html":{}}}],["button.3.1.0",{"_index":431,"title":{},"body":{"changelog.html":{}}}],["c",{"_index":484,"title":{},"body":{"license.html":{},"modules/GridModule.html":{}}}],["calculation.2.0.2",{"_index":460,"title":{},"body":{"changelog.html":{}}}],["call",{"_index":91,"title":{},"body":{"index.html":{},"changelog.html":{}}}],["call.externalpag",{"_index":183,"title":{},"body":{"index.html":{}}}],["call.externalsort",{"_index":182,"title":{},"body":{"index.html":{}}}],["callback",{"_index":92,"title":{},"body":{"index.html":{}}}],["cancer",{"_index":21,"title":{},"body":{"index.html":{},"license.html":{},"modules/GridModule.html":{}}}],["case",{"_index":279,"title":{},"body":{"index.html":{}}}],["cell",{"_index":304,"title":{"classes/Cell.html":{}},"body":{"index.html":{},"changelog.html":{},"classes/Cell.html":{}}}],["cell'",{"_index":629,"title":{},"body":{"classes/Cell.html":{}}}],["cell.onrowsav",{"_index":256,"title":{},"body":{"index.html":{}}}],["cell/editrenderers/choic",{"_index":564,"title":{},"body":{"modules/GridModule.html":{}}}],["cell/editrenderers/d",{"_index":565,"title":{},"body":{"modules/GridModule.html":{}}}],["cell/editrenderers/text",{"_index":559,"title":{},"body":{"modules/GridModule.html":{}}}],["cell/viewpopuprenderer/bigtext",{"_index":567,"title":{},"body":{"modules/GridModule.html":{}}}],["cellnumberrangeview",{"_index":325,"title":{},"body":{"index.html":{}}}],["cellviewrender",{"_index":315,"title":{},"body":{"index.html":{}}}],["chang",{"_index":70,"title":{},"body":{"index.html":{},"changelog.html":{}}}],["change.t",{"_index":703,"title":{},"body":{"classes/RowChange.html":{}}}],["change.ts:3",{"_index":708,"title":{},"body":{"classes/RowChange.html":{}}}],["change.ts:4",{"_index":707,"title":{},"body":{"classes/RowChange.html":{}}}],["changelog",{"_index":409,"title":{"changelog.html":{}},"body":{}}],["charg",{"_index":493,"title":{},"body":{"license.html":{}}}],["check.3.1.5",{"_index":420,"title":{},"body":{"changelog.html":{}}}],["choic",{"_index":350,"title":{},"body":{"index.html":{},"changelog.html":{}}}],["choice.compon",{"_index":575,"title":{},"body":{"modules/GridModule.html":{}}}],["choiceeditrender",{"_index":349,"title":{},"body":{"index.html":{},"overview.html":{},"modules/GridModule.html":{}}}],["choos",{"_index":192,"title":{},"body":{"index.html":{}}}],["claim",{"_index":526,"title":{},"body":{"license.html":{}}}],["class",{"_index":314,"title":{"classes/Cell.html":{},"classes/EmptyFactory.html":{},"classes/FormatterParser.html":{},"classes/HtmlUtil.html":{},"classes/InjectableFactory.html":{},"classes/RowChange.html":{}},"body":{"index.html":{},"overview.html":{},"modules/GridModule.html":{},"injectables/GridMessageService.html":{},"pipes/IsFixedPipe.html":{},"pipes/IsGroupPipe.html":{},"pipes/IsRowVisiblePipe.html":{},"pipes/IsVisiblePipe.html":{},"classes/Cell.html":{},"classes/EmptyFactory.html":{},"classes/FormatterParser.html":{},"classes/HtmlUtil.html":{},"classes/InjectableFactory.html":{},"classes/RowChange.html":{},"interfaces/EmptyConstructor.html":{},"interfaces/InjectableConstructor.html":{}}}],["click",{"_index":71,"title":{},"body":{"index.html":{},"interfaces/ClickListener.html":{},"miscellaneous/variables.html":{}}}],["click(ev",{"_index":713,"title":{},"body":{"interfaces/ClickListener.html":{}}}],["click.interface.t",{"_index":718,"title":{},"body":{"interfaces/DblClickListener.html":{}}}],["click.interface.ts:3",{"_index":721,"title":{},"body":{"interfaces/DblClickListener.html":{}}}],["clicklisten",{"_index":711,"title":{"interfaces/ClickListener.html":{}},"body":{"interfaces/ClickListener.html":{}}}],["cluster_gridmodul",{"_index":383,"title":{},"body":{"overview.html":{},"modules/GridModule.html":{}}}],["cluster_gridmodule_declar",{"_index":384,"title":{},"body":{"overview.html":{},"modules/GridModule.html":{}}}],["cluster_gridmodule_export",{"_index":386,"title":{},"body":{"overview.html":{},"modules/GridModule.html":{}}}],["cluster_gridmodule_gridcomponent_provid",{"_index":385,"title":{},"body":{"overview.html":{},"modules/GridModule.html":{}}}],["code",{"_index":53,"title":{},"body":{"index.html":{}}}],["color",{"_index":422,"title":{},"body":{"changelog.html":{}}}],["colum",{"_index":155,"title":{},"body":{"index.html":{}}}],["column",{"_index":72,"title":{},"body":{"index.html":{},"changelog.html":{},"pipes/IsFixedPipe.html":{},"pipes/IsGroupPipe.html":{},"pipes/IsVisiblePipe.html":{}}}],["column'",{"_index":277,"title":{},"body":{"index.html":{}}}],["column/column",{"_index":553,"title":{},"body":{"modules/GridModule.html":{},"pipes/IsFixedPipe.html":{},"pipes/IsGroupPipe.html":{},"pipes/IsVisiblePipe.html":{}}}],["column/filterrenderers/compar",{"_index":563,"title":{},"body":{"modules/GridModule.html":{}}}],["column/filterrenderers/select",{"_index":566,"title":{},"body":{"modules/GridModule.html":{}}}],["column/filterrenderers/text",{"_index":562,"title":{},"body":{"modules/GridModule.html":{}}}],["columnheadercompon",{"_index":388,"title":{},"body":{"overview.html":{},"modules/GridModule.html":{}}}],["columns[j].field",{"_index":250,"title":{},"body":{"index.html":{}}}],["come",{"_index":285,"title":{},"body":{"index.html":{}}}],["command",{"_index":60,"title":{},"body":{"index.html":{}}}],["commonmodul",{"_index":547,"title":{},"body":{"modules/GridModule.html":{}}}],["compare.3.1.2",{"_index":426,"title":{},"body":{"changelog.html":{}}}],["comparefilterrender",{"_index":347,"title":{},"body":{"index.html":{},"overview.html":{},"modules/GridModule.html":{}}}],["compil",{"_index":52,"title":{},"body":{"index.html":{}}}],["completes.output",{"_index":245,"title":{},"body":{"index.html":{}}}],["complex",{"_index":34,"title":{},"body":{"index.html":{}}}],["compon",{"_index":113,"title":{},"body":{"index.html":{},"overview.html":{},"modules/GridModule.html":{}}}],["condit",{"_index":509,"title":{},"body":{"license.html":{}}}],["confidenti",{"_index":541,"title":{},"body":{"modules/GridModule.html":{}}}],["config",{"_index":262,"title":{},"body":{"index.html":{},"classes/FormatterParser.html":{},"interfaces/EventListenerArg.html":{}}}],["config/config",{"_index":569,"title":{},"body":{"modules/GridModule.html":{}}}],["configmenucompon",{"_index":395,"title":{},"body":{"overview.html":{},"modules/GridModule.html":{}}}],["configmultichoicecompon",{"_index":396,"title":{},"body":{"overview.html":{},"modules/GridModule.html":{}}}],["configur",{"_index":141,"title":{},"body":{"index.html":{},"changelog.html":{}}}],["configuration.instal",{"_index":44,"title":{},"body":{"index.html":{}}}],["connect",{"_index":476,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["console.display",{"_index":221,"title":{},"body":{"index.html":{}}}],["constructor",{"_index":632,"title":{},"body":{"classes/Cell.html":{},"classes/EmptyFactory.html":{},"classes/InjectableFactory.html":{},"classes/RowChange.html":{}}}],["constructor(",{"_index":694,"title":{},"body":{"classes/InjectableFactory.html":{}}}],["constructor(emptyconstructor",{"_index":644,"title":{},"body":{"classes/EmptyFactory.html":{}}}],["constructor(o",{"_index":633,"title":{},"body":{"classes/Cell.html":{}}}],["constructor(oldrownum",{"_index":706,"title":{},"body":{"classes/RowChange.html":{}}}],["constructor(priv",{"_index":649,"title":{},"body":{"classes/EmptyFactory.html":{},"classes/InjectableFactory.html":{},"interfaces/EmptyConstructor.html":{},"interfaces/InjectableConstructor.html":{}}}],["contain",{"_index":140,"title":{},"body":{"index.html":{}}}],["contract",{"_index":530,"title":{},"body":{"license.html":{}}}],["conveni",{"_index":670,"title":{},"body":{"classes/HtmlUtil.html":{}}}],["copi",{"_index":57,"title":{},"body":{"index.html":{},"license.html":{}}}],["copyright",{"_index":483,"title":{},"body":{"license.html":{},"modules/GridModule.html":{}}}],["creat",{"_index":216,"title":{},"body":{"index.html":{}}}],["createelement(render",{"_index":319,"title":{},"body":{"index.html":{}}}],["current",{"_index":105,"title":{},"body":{"index.html":{}}}],["custom",{"_index":59,"title":{},"body":{"index.html":{},"changelog.html":{}}}],["customiz",{"_index":432,"title":{},"body":{"changelog.html":{}}}],["damag",{"_index":527,"title":{},"body":{"license.html":{}}}],["data",{"_index":35,"title":{},"body":{"index.html":{},"changelog.html":{},"classes/Cell.html":{}}}],["data.celldblclick",{"_index":265,"title":{},"body":{"index.html":{}}}],["data.datacal",{"_index":132,"title":{},"body":{"index.html":{}}}],["data.rowclick",{"_index":266,"title":{},"body":{"index.html":{}}}],["data.rowdblclick",{"_index":267,"title":{},"body":{"index.html":{}}}],["data.warn",{"_index":268,"title":{},"body":{"index.html":{}}}],["data/config/ev",{"_index":467,"title":{},"body":{"changelog.html":{}}}],["database.newrowpostcallsuccess",{"_index":236,"title":{},"body":{"index.html":{}}}],["datarequest",{"_index":116,"title":{},"body":{"index.html":{}}}],["datatyp",{"_index":343,"title":{},"body":{"index.html":{}}}],["date",{"_index":341,"title":{},"body":{"index.html":{},"changelog.html":{}}}],["dateeditrender",{"_index":346,"title":{},"body":{"index.html":{},"overview.html":{},"modules/GridModule.html":{}}}],["dblclick",{"_index":719,"title":{},"body":{"interfaces/DblClickListener.html":{}}}],["dblclick(ev",{"_index":720,"title":{},"body":{"interfaces/DblClickListener.html":{}}}],["dblclicklisten",{"_index":716,"title":{"interfaces/DblClickListener.html":{}},"body":{"interfaces/DblClickListener.html":{}}}],["deal",{"_index":427,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["declar",{"_index":381,"title":{},"body":{"overview.html":{},"modules/GridModule.html":{}}}],["default",{"_index":39,"title":{},"body":{"index.html":{},"changelog.html":{},"injectables/GridMessageService.html":{},"classes/Cell.html":{},"classes/FormatterParser.html":{},"miscellaneous/variables.html":{}}}],["default.externalgroup",{"_index":179,"title":{},"body":{"index.html":{}}}],["defin",{"_index":591,"title":{},"body":{"injectables/GridMessageService.html":{},"pipes/IsFixedPipe.html":{},"pipes/IsGroupPipe.html":{},"pipes/IsRowVisiblePipe.html":{},"pipes/IsVisiblePipe.html":{},"classes/Cell.html":{},"classes/EmptyFactory.html":{},"classes/FormatterParser.html":{},"classes/HtmlUtil.html":{},"classes/InjectableFactory.html":{},"classes/RowChange.html":{},"interfaces/ClickListener.html":{},"interfaces/DblClickListener.html":{},"interfaces/Dictionary.html":{},"interfaces/EventListenerArg.html":{},"interfaces/MouseDownListener.html":{},"interfaces/MouseDragListener.html":{},"interfaces/MouseOutListener.html":{},"interfaces/MouseOverListener.html":{},"interfaces/MouseUpListener.html":{}}}],["delay",{"_index":284,"title":{},"body":{"index.html":{}}}],["demo",{"_index":25,"title":{},"body":{"index.html":{}}}],["demo/node_modules/hci",{"_index":373,"title":{},"body":{"index.html":{}}}],["demoif",{"_index":366,"title":{},"body":{"index.html":{}}}],["demoth",{"_index":369,"title":{},"body":{"index.html":{}}}],["depend",{"_index":1,"title":{"dependencies.html":{}},"body":{"dependencies.html":{},"index.html":{},"overview.html":{},"modules/GridModule.html":{}}}],["descript",{"_index":628,"title":{},"body":{"classes/Cell.html":{},"classes/EmptyFactory.html":{},"classes/FormatterParser.html":{},"classes/HtmlUtil.html":{},"classes/InjectableFactory.html":{}}}],["design",{"_index":28,"title":{},"body":{"index.html":{}}}],["determin",{"_index":264,"title":{},"body":{"index.html":{}}}],["dictionari",{"_index":722,"title":{"interfaces/Dictionary.html":{}},"body":{"interfaces/Dictionary.html":{}}}],["differ",{"_index":334,"title":{},"body":{"index.html":{}}}],["dirti",{"_index":204,"title":{},"body":{"index.html":{},"classes/Cell.html":{}}}],["disabl",{"_index":172,"title":{},"body":{"index.html":{}}}],["display",{"_index":225,"title":{},"body":{"index.html":{},"changelog.html":{},"interfaces/Dictionary.html":{}}}],["dist",{"_index":55,"title":{},"body":{"index.html":{}}}],["distribut",{"_index":502,"title":{},"body":{"license.html":{}}}],["dob",{"_index":340,"title":{},"body":{"index.html":{}}}],["document",{"_index":498,"title":{},"body":{"license.html":{}}}],["doesn't",{"_index":367,"title":{},"body":{"index.html":{}}}],["don't",{"_index":209,"title":{},"body":{"index.html":{}}}],["down.interface.t",{"_index":732,"title":{},"body":{"interfaces/MouseDownListener.html":{}}}],["down.interface.ts:3",{"_index":735,"title":{},"body":{"interfaces/MouseDownListener.html":{}}}],["drag",{"_index":434,"title":{},"body":{"changelog.html":{}}}],["drag.interface.t",{"_index":737,"title":{},"body":{"interfaces/MouseDragListener.html":{}}}],["drag.interface.ts:3",{"_index":740,"title":{},"body":{"interfaces/MouseDragListener.html":{}}}],["drop",{"_index":436,"title":{},"body":{"changelog.html":{}}}],["dto",{"_index":10,"title":{},"body":{"dependencies.html":{}}}],["e",{"_index":679,"title":{},"body":{"classes/HtmlUtil.html":{}}}],["e.g",{"_index":154,"title":{},"body":{"index.html":{}}}],["e.id",{"_index":685,"title":{},"body":{"classes/HtmlUtil.html":{}}}],["e.id.startswith(id",{"_index":686,"title":{},"body":{"classes/HtmlUtil.html":{}}}],["e.parentel",{"_index":687,"title":{},"body":{"classes/HtmlUtil.html":{}}}],["each",{"_index":311,"title":{},"body":{"index.html":{}}}],["edit",{"_index":560,"title":{},"body":{"modules/GridModule.html":{}}}],["editrender",{"_index":345,"title":{},"body":{"index.html":{}}}],["element",{"_index":672,"title":{},"body":{"classes/HtmlUtil.html":{}}}],["emit",{"_index":200,"title":{},"body":{"index.html":{}}}],["emitt",{"_index":433,"title":{},"body":{"changelog.html":{}}}],["empti",{"_index":437,"title":{},"body":{"changelog.html":{}}}],["emptyconstructor",{"_index":645,"title":{"interfaces/EmptyConstructor.html":{}},"body":{"classes/EmptyFactory.html":{},"interfaces/EmptyConstructor.html":{}}}],["emptyfactori",{"_index":639,"title":{"classes/EmptyFactory.html":{}},"body":{"classes/EmptyFactory.html":{},"interfaces/EmptyConstructor.html":{}}}],["entrycompon",{"_index":539,"title":{},"body":{"modules/GridModule.html":{}}}],["error",{"_index":241,"title":{},"body":{"index.html":{},"injectables/GridMessageService.html":{}}}],["error(messag",{"_index":590,"title":{},"body":{"injectables/GridMessageService.html":{}}}],["error.3.0.0",{"_index":439,"title":{},"body":{"changelog.html":{}}}],["especi",{"_index":473,"title":{},"body":{"changelog.html":{}}}],["event",{"_index":95,"title":{},"body":{"index.html":{},"changelog.html":{},"license.html":{},"interfaces/ClickListener.html":{},"interfaces/DblClickListener.html":{},"interfaces/MouseDownListener.html":{},"interfaces/MouseDragListener.html":{},"interfaces/MouseOutListener.html":{},"interfaces/MouseOverListener.html":{},"interfaces/MouseUpListener.html":{}}}],["event.service.t",{"_index":762,"title":{},"body":{"miscellaneous/variables.html":{}}}],["eventlisten",{"_index":693,"title":{},"body":{"classes/InjectableFactory.html":{},"interfaces/InjectableConstructor.html":{}}}],["eventlistenerarg",{"_index":211,"title":{"interfaces/EventListenerArg.html":{}},"body":{"index.html":{},"interfaces/EventListenerArg.html":{}}}],["events.mod",{"_index":214,"title":{},"body":{"index.html":{}}}],["exampl",{"_index":109,"title":{},"body":{"index.html":{}}}],["expect",{"_index":37,"title":{},"body":{"index.html":{},"classes/InjectableFactory.html":{},"interfaces/InjectableConstructor.html":{}}}],["export",{"_index":382,"title":{},"body":{"overview.html":{},"modules/GridModule.html":{},"injectables/GridMessageService.html":{},"pipes/IsFixedPipe.html":{},"pipes/IsGroupPipe.html":{},"pipes/IsRowVisiblePipe.html":{},"pipes/IsVisiblePipe.html":{},"classes/Cell.html":{},"classes/EmptyFactory.html":{},"classes/FormatterParser.html":{},"classes/HtmlUtil.html":{},"classes/InjectableFactory.html":{},"classes/RowChange.html":{},"interfaces/ClickListener.html":{},"interfaces/DblClickListener.html":{},"interfaces/Dictionary.html":{},"interfaces/EmptyConstructor.html":{},"interfaces/EventListenerArg.html":{},"interfaces/InjectableConstructor.html":{},"interfaces/MouseDownListener.html":{},"interfaces/MouseDragListener.html":{},"interfaces/MouseOutListener.html":{},"interfaces/MouseOverListener.html":{},"interfaces/MouseUpListener.html":{}}}],["express",{"_index":516,"title":{},"body":{"license.html":{}}}],["extend",{"_index":335,"title":{},"body":{"index.html":{}}}],["extern",{"_index":90,"title":{},"body":{"index.html":{},"changelog.html":{}}}],["external.externalfilt",{"_index":181,"title":{},"body":{"index.html":{}}}],["external.pages",{"_index":184,"title":{},"body":{"index.html":{}}}],["externalconfig",{"_index":446,"title":{},"body":{"changelog.html":{}}}],["externaldata(this.datageneratorservice.getdata(250",{"_index":122,"title":{},"body":{"index.html":{}}}],["externalinfo",{"_index":117,"title":{},"body":{"index.html":{}}}],["externalinfo)).delay(500",{"_index":123,"title":{},"body":{"index.html":{}}}],["fals",{"_index":148,"title":{},"body":{"index.html":{},"pipes/IsFixedPipe.html":{},"classes/Cell.html":{}}}],["featur",{"_index":30,"title":{},"body":{"index.html":{},"changelog.html":{}}}],["femal",{"_index":351,"title":{},"body":{"index.html":{}}}],["field",{"_index":249,"title":{},"body":{"index.html":{},"changelog.html":{}}}],["file",{"_index":372,"title":{},"body":{"index.html":{},"license.html":{},"modules/GridModule.html":{},"injectables/GridMessageService.html":{},"pipes/IsFixedPipe.html":{},"pipes/IsGroupPipe.html":{},"pipes/IsRowVisiblePipe.html":{},"pipes/IsVisiblePipe.html":{},"classes/Cell.html":{},"classes/EmptyFactory.html":{},"classes/FormatterParser.html":{},"classes/HtmlUtil.html":{},"classes/InjectableFactory.html":{},"classes/RowChange.html":{},"interfaces/ClickListener.html":{},"interfaces/DblClickListener.html":{},"interfaces/Dictionary.html":{},"interfaces/EmptyConstructor.html":{},"interfaces/EventListenerArg.html":{},"interfaces/InjectableConstructor.html":{},"interfaces/MouseDownListener.html":{},"interfaces/MouseDragListener.html":{},"interfaces/MouseOutListener.html":{},"interfaces/MouseOverListener.html":{},"interfaces/MouseUpListener.html":{}}}],["filter",{"_index":74,"title":{},"body":{"index.html":{},"changelog.html":{},"modules/GridModule.html":{}}}],["filterev",{"_index":288,"title":{},"body":{"index.html":{}}}],["filterinfo",{"_index":276,"title":{},"body":{"index.html":{}}}],["filterrender",{"_index":337,"title":{},"body":{"index.html":{}}}],["final",{"_index":243,"title":{},"body":{"index.html":{}}}],["fire",{"_index":282,"title":{},"body":{"index.html":{}}}],["fired.datafilt",{"_index":289,"title":{},"body":{"index.html":{}}}],["fired.datasort",{"_index":295,"title":{},"body":{"index.html":{}}}],["first",{"_index":82,"title":{},"body":{"index.html":{}}}],["firstnam",{"_index":338,"title":{},"body":{"index.html":{}}}],["fit",{"_index":519,"title":{},"body":{"license.html":{}}}],["fix",{"_index":167,"title":{},"body":{"index.html":{},"changelog.html":{},"pipes/IsFixedPipe.html":{}}}],["fixed.pip",{"_index":558,"title":{},"body":{"modules/GridModule.html":{}}}],["fixed.pipe.t",{"_index":607,"title":{},"body":{"pipes/IsFixedPipe.html":{}}}],["fixed.pipe.ts:10",{"_index":612,"title":{},"body":{"pipes/IsFixedPipe.html":{}}}],["fixes.1.0.0",{"_index":479,"title":{},"body":{"changelog.html":{}}}],["flag",{"_index":149,"title":{},"body":{"index.html":{}}}],["flow",{"_index":222,"title":{},"body":{"index.html":{}}}],["folder",{"_index":56,"title":{},"body":{"index.html":{}}}],["follow",{"_index":301,"title":{},"body":{"index.html":{},"license.html":{}}}],["footer",{"_index":229,"title":{},"body":{"index.html":{}}}],["forc",{"_index":180,"title":{},"body":{"index.html":{}}}],["format",{"_index":259,"title":{},"body":{"index.html":{}}}],["format/pars",{"_index":448,"title":{},"body":{"changelog.html":{}}}],["formatt",{"_index":654,"title":{},"body":{"classes/FormatterParser.html":{}}}],["formatterpars",{"_index":651,"title":{"classes/FormatterParser.html":{}},"body":{"classes/FormatterParser.html":{}}}],["formatting/pars",{"_index":472,"title":{},"body":{"changelog.html":{}}}],["formatvalu",{"_index":657,"title":{},"body":{"classes/FormatterParser.html":{}}}],["formatvalue(valu",{"_index":660,"title":{},"body":{"classes/FormatterParser.html":{}}}],["formsmodul",{"_index":549,"title":{},"body":{"modules/GridModule.html":{}}}],["forroot(globalconfig",{"_index":577,"title":{},"body":{"modules/GridModule.html":{}}}],["free",{"_index":492,"title":{},"body":{"license.html":{}}}],["from.nvisiblerow",{"_index":193,"title":{},"body":{"index.html":{}}}],["full",{"_index":29,"title":{},"body":{"index.html":{}}}],["function",{"_index":114,"title":{},"body":{"index.html":{},"changelog.html":{}}}],["furnish",{"_index":507,"title":{},"body":{"license.html":{}}}],["gender",{"_index":348,"title":{},"body":{"index.html":{}}}],["gener",{"_index":440,"title":{},"body":{"changelog.html":{},"classes/EmptyFactory.html":{},"classes/InjectableFactory.html":{},"interfaces/InjectableConstructor.html":{}}}],["generic.2.1.1",{"_index":449,"title":{},"body":{"changelog.html":{}}}],["get",{"_index":17,"title":{"index.html":{},"changelog.html":{},"license.html":{}},"body":{"index.html":{}}}],["getid",{"_index":673,"title":{},"body":{"classes/HtmlUtil.html":{}}}],["getid(",{"_index":676,"title":{},"body":{"classes/HtmlUtil.html":{}}}],["getidel",{"_index":674,"title":{},"body":{"classes/HtmlUtil.html":{}}}],["getidelement(",{"_index":681,"title":{},"body":{"classes/HtmlUtil.html":{}}}],["getinst",{"_index":643,"title":{},"body":{"classes/EmptyFactory.html":{},"classes/InjectableFactory.html":{},"interfaces/EmptyConstructor.html":{},"interfaces/InjectableConstructor.html":{}}}],["getloc",{"_index":675,"title":{},"body":{"classes/HtmlUtil.html":{}}}],["getlocation(",{"_index":683,"title":{},"body":{"classes/HtmlUtil.html":{}}}],["getmessageobserv",{"_index":601,"title":{},"body":{"injectables/GridMessageService.html":{}}}],["github",{"_index":26,"title":{},"body":{"index.html":{}}}],["global",{"_index":137,"title":{},"body":{"index.html":{},"changelog.html":{}}}],["global.servic",{"_index":573,"title":{},"body":{"modules/GridModule.html":{}}}],["globalconfig",{"_index":578,"title":{},"body":{"modules/GridModule.html":{}}}],["grant",{"_index":491,"title":{},"body":{"license.html":{}}}],["grid",{"_index":9,"title":{},"body":{"dependencies.html":{},"index.html":{},"changelog.html":{}}}],["grid\";@ngmodul",{"_index":49,"title":{},"body":{"index.html":{}}}],["grid'",{"_index":153,"title":{},"body":{"index.html":{}}}],["grid.addnewrowbuttonloc",{"_index":228,"title":{},"body":{"index.html":{}}}],["grid.cellclick",{"_index":263,"title":{},"body":{"index.html":{}}}],["grid.compon",{"_index":552,"title":{},"body":{"modules/GridModule.html":{}}}],["grid.groupbi",{"_index":170,"title":{},"body":{"index.html":{}}}],["grid.linkedgroup",{"_index":143,"title":{},"body":{"index.html":{}}}],["grid.them",{"_index":162,"title":{},"body":{"index.html":{}}}],["grid/servic",{"_index":418,"title":{},"body":{"changelog.html":{}}}],["gridcompon",{"_index":387,"title":{},"body":{"overview.html":{},"modules/GridModule.html":{}}}],["grideventservic",{"_index":398,"title":{},"body":{"overview.html":{},"modules/GridModule.html":{}}}],["gridglobalservic",{"_index":571,"title":{},"body":{"modules/GridModule.html":{}}}],["gridmessageservic",{"_index":399,"title":{"injectables/GridMessageService.html":{}},"body":{"overview.html":{},"modules/GridModule.html":{},"injectables/GridMessageService.html":{}}}],["gridmodul",{"_index":48,"title":{"modules/GridModule.html":{}},"body":{"index.html":{},"overview.html":{},"modules.html":{},"modules/GridModule.html":{}}}],["gridmodule.forroot",{"_index":50,"title":{},"body":{"index.html":{}}}],["gridservic",{"_index":397,"title":{},"body":{"overview.html":{},"modules/GridModule.html":{}}}],["group",{"_index":87,"title":{},"body":{"index.html":{}}}],["group.pip",{"_index":557,"title":{},"body":{"modules/GridModule.html":{}}}],["group.pipe.t",{"_index":616,"title":{},"body":{"pipes/IsGroupPipe.html":{}}}],["group.pipe.ts:9",{"_index":618,"title":{},"body":{"pipes/IsGroupPipe.html":{}}}],["groupbycollaps",{"_index":173,"title":{},"body":{"index.html":{}}}],["handl",{"_index":31,"title":{},"body":{"index.html":{}}}],["hci",{"_index":8,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["header",{"_index":73,"title":{},"body":{"index.html":{}}}],["header.compon",{"_index":554,"title":{},"body":{"modules/GridModule.html":{}}}],["height",{"_index":457,"title":{},"body":{"changelog.html":{}}}],["here",{"_index":107,"title":{},"body":{"index.html":{}}}],["herebi",{"_index":490,"title":{},"body":{"license.html":{}}}],["hidden",{"_index":177,"title":{},"body":{"index.html":{}}}],["high",{"_index":329,"title":{},"body":{"index.html":{}}}],["holder",{"_index":524,"title":{},"body":{"license.html":{},"classes/Cell.html":{}}}],["html",{"_index":135,"title":{},"body":{"index.html":{}}}],["htmlelement",{"_index":677,"title":{},"body":{"classes/HtmlUtil.html":{}}}],["htmlelement;a",{"_index":321,"title":{},"body":{"index.html":{}}}],["htmlutil",{"_index":667,"title":{"classes/HtmlUtil.html":{}},"body":{"classes/HtmlUtil.html":{}}}],["http",{"_index":438,"title":{},"body":{"changelog.html":{}}}],["huntsman",{"_index":20,"title":{},"body":{"index.html":{},"license.html":{},"modules/GridModule.html":{}}}],["ic",{"_index":697,"title":{},"body":{"classes/InjectableFactory.html":{},"interfaces/InjectableConstructor.html":{}}}],["id",{"_index":136,"title":{},"body":{"index.html":{},"classes/HtmlUtil.html":{}}}],["implement",{"_index":112,"title":{},"body":{"index.html":{},"pipes/IsFixedPipe.html":{},"pipes/IsGroupPipe.html":{},"pipes/IsRowVisiblePipe.html":{},"pipes/IsVisiblePipe.html":{},"classes/InjectableFactory.html":{},"interfaces/InjectableConstructor.html":{}}}],["impli",{"_index":517,"title":{},"body":{"license.html":{}}}],["import",{"_index":47,"title":{},"body":{"index.html":{},"modules/GridModule.html":{},"injectables/GridMessageService.html":{},"pipes/IsFixedPipe.html":{},"pipes/IsGroupPipe.html":{},"pipes/IsRowVisiblePipe.html":{},"pipes/IsVisiblePipe.html":{},"classes/HtmlUtil.html":{},"classes/InjectableFactory.html":{},"interfaces/EventListenerArg.html":{},"interfaces/InjectableConstructor.html":{}}}],["improv",{"_index":471,"title":{},"body":{"changelog.html":{}}}],["in.onconfigchang",{"_index":261,"title":{},"body":{"index.html":{}}}],["includ",{"_index":281,"title":{},"body":{"index.html":{},"license.html":{}}}],["index",{"_index":19,"title":{"index.html":{}},"body":{"injectables/GridMessageService.html":{},"classes/Cell.html":{},"classes/EmptyFactory.html":{},"classes/FormatterParser.html":{},"classes/HtmlUtil.html":{},"classes/InjectableFactory.html":{},"classes/RowChange.html":{},"interfaces/ClickListener.html":{},"interfaces/DblClickListener.html":{},"interfaces/Dictionary.html":{},"interfaces/EventListenerArg.html":{},"interfaces/MouseDownListener.html":{},"interfaces/MouseDragListener.html":{},"interfaces/MouseOutListener.html":{},"interfaces/MouseOverListener.html":{},"interfaces/MouseUpListener.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":537,"title":{},"body":{"modules/GridModule.html":{},"injectables/GridMessageService.html":{},"pipes/IsFixedPipe.html":{},"pipes/IsGroupPipe.html":{},"pipes/IsRowVisiblePipe.html":{},"pipes/IsVisiblePipe.html":{},"classes/Cell.html":{},"classes/EmptyFactory.html":{},"classes/FormatterParser.html":{},"classes/HtmlUtil.html":{},"classes/InjectableFactory.html":{},"classes/RowChange.html":{},"interfaces/ClickListener.html":{},"interfaces/DblClickListener.html":{},"interfaces/Dictionary.html":{},"interfaces/EmptyConstructor.html":{},"interfaces/EventListenerArg.html":{},"interfaces/InjectableConstructor.html":{},"interfaces/MouseDownListener.html":{},"interfaces/MouseDragListener.html":{},"interfaces/MouseOutListener.html":{},"interfaces/MouseOverListener.html":{},"interfaces/MouseUpListener.html":{}}}],["info.id",{"_index":134,"title":{},"body":{"index.html":{}}}],["initi",{"_index":480,"title":{},"body":{"changelog.html":{}}}],["inject",{"_index":405,"title":{"injectables/GridMessageService.html":{}},"body":{"overview.html":{},"injectables/GridMessageService.html":{}}}],["injectableconstructor",{"_index":695,"title":{"interfaces/InjectableConstructor.html":{}},"body":{"classes/InjectableFactory.html":{},"interfaces/InjectableConstructor.html":{}}}],["injectablefactori",{"_index":690,"title":{"classes/InjectableFactory.html":{}},"body":{"classes/InjectableFactory.html":{},"interfaces/InjectableConstructor.html":{}}}],["injector",{"_index":692,"title":{},"body":{"classes/InjectableFactory.html":{},"interfaces/InjectableConstructor.html":{}}}],["input",{"_index":124,"title":{},"body":{"index.html":{}}}],["instal",{"_index":365,"title":{},"body":{"index.html":{}}}],["instanc",{"_index":300,"title":{},"body":{"index.html":{}}}],["instanti",{"_index":641,"title":{},"body":{"classes/EmptyFactory.html":{},"classes/InjectableFactory.html":{},"interfaces/InjectableConstructor.html":{}}}],["instead",{"_index":65,"title":{},"body":{"index.html":{}}}],["institut",{"_index":486,"title":{},"body":{"license.html":{},"modules/GridModule.html":{}}}],["institute'",{"_index":22,"title":{},"body":{"index.html":{}}}],["interfac",{"_index":316,"title":{"interfaces/ClickListener.html":{},"interfaces/DblClickListener.html":{},"interfaces/Dictionary.html":{},"interfaces/EmptyConstructor.html":{},"interfaces/EventListenerArg.html":{},"interfaces/InjectableConstructor.html":{},"interfaces/MouseDownListener.html":{},"interfaces/MouseDragListener.html":{},"interfaces/MouseOutListener.html":{},"interfaces/MouseOverListener.html":{},"interfaces/MouseUpListener.html":{}},"body":{"index.html":{},"overview.html":{},"classes/EmptyFactory.html":{},"classes/InjectableFactory.html":{},"interfaces/ClickListener.html":{},"interfaces/DblClickListener.html":{},"interfaces/Dictionary.html":{},"interfaces/EmptyConstructor.html":{},"interfaces/EventListenerArg.html":{},"interfaces/InjectableConstructor.html":{},"interfaces/MouseDownListener.html":{},"interfaces/MouseDragListener.html":{},"interfaces/MouseOutListener.html":{},"interfaces/MouseOverListener.html":{},"interfaces/MouseUpListener.html":{}}}],["intro",{"_index":27,"title":{},"body":{"index.html":{}}}],["introduc",{"_index":357,"title":{},"body":{"index.html":{}}}],["invalid",{"_index":416,"title":{},"body":{"changelog.html":{}}}],["isfix",{"_index":609,"title":{},"body":{"pipes/IsFixedPipe.html":{}}}],["isfixedpip",{"_index":391,"title":{"pipes/IsFixedPipe.html":{}},"body":{"overview.html":{},"modules/GridModule.html":{},"pipes/IsFixedPipe.html":{}}}],["isgroup",{"_index":617,"title":{},"body":{"pipes/IsGroupPipe.html":{}}}],["isgrouppip",{"_index":390,"title":{"pipes/IsGroupPipe.html":{}},"body":{"overview.html":{},"modules/GridModule.html":{},"pipes/IsGroupPipe.html":{}}}],["isrowvis",{"_index":622,"title":{},"body":{"pipes/IsRowVisiblePipe.html":{}}}],["isrowvisiblepip",{"_index":392,"title":{"pipes/IsRowVisiblePipe.html":{}},"body":{"overview.html":{},"modules/GridModule.html":{},"pipes/IsRowVisiblePipe.html":{}}}],["issu",{"_index":355,"title":{},"body":{"index.html":{}}}],["isvis",{"_index":626,"title":{},"body":{"pipes/IsVisiblePipe.html":{}}}],["isvisiblepip",{"_index":389,"title":{"pipes/IsVisiblePipe.html":{}},"body":{"overview.html":{},"modules/GridModule.html":{},"pipes/IsVisiblePipe.html":{}}}],["j",{"_index":248,"title":{},"body":{"index.html":{}}}],["json",{"_index":139,"title":{},"body":{"index.html":{}}}],["key",{"_index":213,"title":{},"body":{"index.html":{},"classes/Cell.html":{}}}],["key1",{"_index":273,"title":{},"body":{"index.html":{}}}],["key2",{"_index":274,"title":{},"body":{"index.html":{}}}],["keyword",{"_index":461,"title":{},"body":{"changelog.html":{}}}],["kind",{"_index":515,"title":{},"body":{"license.html":{}}}],["known",{"_index":354,"title":{},"body":{"index.html":{}}}],["lab",{"_index":323,"title":{},"body":{"index.html":{}}}],["last",{"_index":83,"title":{},"body":{"index.html":{}}}],["left",{"_index":168,"title":{},"body":{"index.html":{},"changelog.html":{}}}],["legend",{"_index":380,"title":{},"body":{"overview.html":{},"modules/GridModule.html":{}}}],["liabil",{"_index":528,"title":{},"body":{"license.html":{}}}],["liabl",{"_index":525,"title":{},"body":{"license.html":{}}}],["librari",{"_index":24,"title":{},"body":{"index.html":{}}}],["licens",{"_index":464,"title":{"license.html":{}},"body":{"changelog.html":{}}}],["limit",{"_index":196,"title":{},"body":{"index.html":{},"license.html":{}}}],["link",{"_index":145,"title":{},"body":{"index.html":{}}}],["list",{"_index":106,"title":{},"body":{"index.html":{},"pipes/IsFixedPipe.html":{},"pipes/IsGroupPipe.html":{},"pipes/IsRowVisiblePipe.html":{},"pipes/IsVisiblePipe.html":{}}}],["list.filter((o",{"_index":614,"title":{},"body":{"pipes/IsFixedPipe.html":{},"pipes/IsGroupPipe.html":{},"pipes/IsRowVisiblePipe.html":{},"pipes/IsVisiblePipe.html":{}}}],["listen",{"_index":96,"title":{},"body":{"index.html":{},"changelog.html":{},"interfaces/EventListenerArg.html":{}}}],["load",{"_index":208,"title":{},"body":{"index.html":{},"changelog.html":{}}}],["locat",{"_index":253,"title":{},"body":{"index.html":{}}}],["log",{"_index":410,"title":{},"body":{"changelog.html":{}}}],["low",{"_index":327,"title":{},"body":{"index.html":{}}}],["make",{"_index":368,"title":{},"body":{"index.html":{}}}],["male",{"_index":352,"title":{},"body":{"index.html":{}}}],["manag",{"_index":631,"title":{},"body":{"classes/Cell.html":{}}}],["mani",{"_index":104,"title":{},"body":{"index.html":{}}}],["match",{"_index":16,"title":{},"body":{"dependencies.html":{},"index.html":{},"overview.html":{},"changelog.html":{},"license.html":{},"modules.html":{},"modules/GridModule.html":{},"injectables/GridMessageService.html":{},"pipes/IsFixedPipe.html":{},"pipes/IsGroupPipe.html":{},"pipes/IsRowVisiblePipe.html":{},"pipes/IsVisiblePipe.html":{},"classes/Cell.html":{},"classes/EmptyFactory.html":{},"classes/FormatterParser.html":{},"classes/HtmlUtil.html":{},"classes/InjectableFactory.html":{},"classes/RowChange.html":{},"interfaces/ClickListener.html":{},"interfaces/DblClickListener.html":{},"interfaces/Dictionary.html":{},"interfaces/EmptyConstructor.html":{},"interfaces/EventListenerArg.html":{},"interfaces/InjectableConstructor.html":{},"interfaces/MouseDownListener.html":{},"interfaces/MouseDragListener.html":{},"interfaces/MouseOutListener.html":{},"interfaces/MouseOverListener.html":{},"interfaces/MouseUpListener.html":{},"miscellaneous/variables.html":{}}}],["menu.compon",{"_index":570,"title":{},"body":{"modules/GridModule.html":{}}}],["merchant",{"_index":518,"title":{},"body":{"license.html":{}}}],["merg",{"_index":501,"title":{},"body":{"license.html":{}}}],["messag",{"_index":269,"title":{},"body":{"index.html":{},"injectables/GridMessageService.html":{}}}],["message.service.t",{"_index":582,"title":{},"body":{"injectables/GridMessageService.html":{}}}],["message.service.ts:10",{"_index":597,"title":{},"body":{"injectables/GridMessageService.html":{}}}],["message.service.ts:12",{"_index":592,"title":{},"body":{"injectables/GridMessageService.html":{}}}],["message.service.ts:16",{"_index":595,"title":{},"body":{"injectables/GridMessageService.html":{}}}],["message.service.ts:20",{"_index":602,"title":{},"body":{"injectables/GridMessageService.html":{}}}],["message.service.ts:8",{"_index":598,"title":{},"body":{"injectables/GridMessageService.html":{}}}],["message.service.ts:9",{"_index":600,"title":{},"body":{"injectables/GridMessageService.html":{}}}],["messageobserv",{"_index":589,"title":{},"body":{"injectables/GridMessageService.html":{}}}],["metadata",{"_index":608,"title":{},"body":{"pipes/IsFixedPipe.html":{},"pipes/IsGroupPipe.html":{},"pipes/IsRowVisiblePipe.html":{},"pipes/IsVisiblePipe.html":{},"classes/Cell.html":{}}}],["method",{"_index":317,"title":{},"body":{"index.html":{},"injectables/GridMessageService.html":{},"pipes/IsFixedPipe.html":{},"pipes/IsGroupPipe.html":{},"pipes/IsRowVisiblePipe.html":{},"pipes/IsVisiblePipe.html":{},"classes/EmptyFactory.html":{},"classes/FormatterParser.html":{},"classes/HtmlUtil.html":{},"classes/InjectableFactory.html":{},"interfaces/ClickListener.html":{},"interfaces/DblClickListener.html":{},"interfaces/MouseDownListener.html":{},"interfaces/MouseDragListener.html":{},"interfaces/MouseOutListener.html":{},"interfaces/MouseOverListener.html":{},"interfaces/MouseUpListener.html":{}}}],["mimic",{"_index":374,"title":{},"body":{"index.html":{}}}],["miscellan",{"_index":756,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["mm/dd/yyyi",{"_index":344,"title":{},"body":{"index.html":{}}}],["mock",{"_index":115,"title":{},"body":{"index.html":{}}}],["mode",{"_index":217,"title":{},"body":{"index.html":{}}}],["modif",{"_index":656,"title":{},"body":{"classes/FormatterParser.html":{}}}],["modifi",{"_index":152,"title":{},"body":{"index.html":{},"license.html":{}}}],["modul",{"_index":298,"title":{"modules.html":{},"modules/GridModule.html":{}},"body":{"index.html":{},"overview.html":{},"modules.html":{},"modules/GridModule.html":{}}}],["modulewithprovid",{"_index":544,"title":{},"body":{"modules/GridModule.html":{}}}],["moment",{"_index":13,"title":{},"body":{"dependencies.html":{}}}],["more",{"_index":89,"title":{},"body":{"index.html":{},"changelog.html":{}}}],["mousedown",{"_index":733,"title":{},"body":{"interfaces/MouseDownListener.html":{}}}],["mousedown(ev",{"_index":734,"title":{},"body":{"interfaces/MouseDownListener.html":{}}}],["mousedownlisten",{"_index":730,"title":{"interfaces/MouseDownListener.html":{}},"body":{"interfaces/MouseDownListener.html":{}}}],["mousedrag",{"_index":738,"title":{},"body":{"interfaces/MouseDragListener.html":{}}}],["mousedrag(ev",{"_index":739,"title":{},"body":{"interfaces/MouseDragListener.html":{}}}],["mousedraglisten",{"_index":736,"title":{"interfaces/MouseDragListener.html":{}},"body":{"interfaces/MouseDragListener.html":{}}}],["mouseev",{"_index":714,"title":{},"body":{"interfaces/ClickListener.html":{},"interfaces/DblClickListener.html":{},"interfaces/MouseDownListener.html":{},"interfaces/MouseDragListener.html":{},"interfaces/MouseOutListener.html":{},"interfaces/MouseOverListener.html":{},"interfaces/MouseUpListener.html":{}}}],["mouseout",{"_index":743,"title":{},"body":{"interfaces/MouseOutListener.html":{}}}],["mouseout(ev",{"_index":744,"title":{},"body":{"interfaces/MouseOutListener.html":{}}}],["mouseoutlisten",{"_index":741,"title":{"interfaces/MouseOutListener.html":{}},"body":{"interfaces/MouseOutListener.html":{}}}],["mouseov",{"_index":748,"title":{},"body":{"interfaces/MouseOverListener.html":{}}}],["mouseover(ev",{"_index":749,"title":{},"body":{"interfaces/MouseOverListener.html":{}}}],["mouseoverlisten",{"_index":746,"title":{"interfaces/MouseOverListener.html":{}},"body":{"interfaces/MouseOverListener.html":{}}}],["mouseup",{"_index":753,"title":{},"body":{"interfaces/MouseUpListener.html":{}}}],["mouseup(ev",{"_index":754,"title":{},"body":{"interfaces/MouseUpListener.html":{}}}],["mouseuplisten",{"_index":751,"title":{"interfaces/MouseUpListener.html":{}},"body":{"interfaces/MouseUpListener.html":{}}}],["move",{"_index":54,"title":{},"body":{"index.html":{}}}],["ms",{"_index":425,"title":{},"body":{"changelog.html":{}}}],["multi",{"_index":574,"title":{},"body":{"modules/GridModule.html":{}}}],["multipl",{"_index":280,"title":{},"body":{"index.html":{}}}],["n",{"_index":435,"title":{},"body":{"changelog.html":{}}}],["name",{"_index":144,"title":{},"body":{"index.html":{},"injectables/GridMessageService.html":{},"pipes/IsFixedPipe.html":{},"pipes/IsGroupPipe.html":{},"pipes/IsRowVisiblePipe.html":{},"pipes/IsVisiblePipe.html":{},"classes/Cell.html":{},"classes/EmptyFactory.html":{},"classes/FormatterParser.html":{},"classes/HtmlUtil.html":{},"classes/InjectableFactory.html":{},"classes/RowChange.html":{},"interfaces/ClickListener.html":{},"interfaces/DblClickListener.html":{},"interfaces/MouseDownListener.html":{},"interfaces/MouseDragListener.html":{},"interfaces/MouseOutListener.html":{},"interfaces/MouseOverListener.html":{},"interfaces/MouseUpListener.html":{}}}],["name.3.1.3",{"_index":424,"title":{},"body":{"changelog.html":{}}}],["navig",{"_index":202,"title":{},"body":{"index.html":{}}}],["ndata",{"_index":291,"title":{},"body":{"index.html":{}}}],["nearli",{"_index":32,"title":{},"body":{"index.html":{}}}],["need",{"_index":630,"title":{},"body":{"classes/Cell.html":{}}}],["new",{"_index":203,"title":{},"body":{"index.html":{},"changelog.html":{},"injectables/GridMessageService.html":{},"classes/EmptyFactory.html":{},"classes/InjectableFactory.html":{},"interfaces/EmptyConstructor.html":{},"interfaces/InjectableConstructor.html":{}}}],["new(injector",{"_index":700,"title":{},"body":{"classes/InjectableFactory.html":{},"interfaces/InjectableConstructor.html":{}}}],["newrow",{"_index":233,"title":{},"body":{"index.html":{}}}],["newrownum",{"_index":704,"title":{},"body":{"classes/RowChange.html":{}}}],["newrowpostcal",{"_index":244,"title":{},"body":{"index.html":{}}}],["newrowpostcall().newrowpostcallerror",{"_index":240,"title":{},"body":{"index.html":{}}}],["newrowpostcall().newrowpostcallfin",{"_index":242,"title":{},"body":{"index.html":{}}}],["newvalu",{"_index":252,"title":{},"body":{"index.html":{}}}],["next",{"_index":85,"title":{},"body":{"index.html":{}}}],["ng",{"_index":2,"title":{},"body":{"dependencies.html":{},"index.html":{},"changelog.html":{},"modules/GridModule.html":{}}}],["ngbmodul",{"_index":551,"title":{},"body":{"modules/GridModule.html":{}}}],["ngmodul",{"_index":545,"title":{},"body":{"modules/GridModule.html":{}}}],["ngoninit",{"_index":118,"title":{},"body":{"index.html":{}}}],["nlab",{"_index":322,"title":{},"body":{"index.html":{}}}],["no_ev",{"_index":759,"title":{},"body":{"miscellaneous/variables.html":{}}}],["noninfring",{"_index":522,"title":{},"body":{"license.html":{}}}],["note",{"_index":103,"title":{},"body":{"index.html":{}}}],["notic",{"_index":510,"title":{},"body":{"license.html":{}}}],["npm",{"_index":364,"title":{},"body":{"index.html":{}}}],["npmignore.2.0.1",{"_index":462,"title":{},"body":{"changelog.html":{}}}],["npmpack",{"_index":63,"title":{},"body":{"index.html":{}}}],["npmpublish",{"_index":64,"title":{},"body":{"index.html":{}}}],["null",{"_index":688,"title":{},"body":{"classes/HtmlUtil.html":{}}}],["number",{"_index":185,"title":{},"body":{"index.html":{},"injectables/GridMessageService.html":{},"classes/Cell.html":{},"classes/RowChange.html":{},"miscellaneous/variables.html":{}}}],["numer",{"_index":478,"title":{},"body":{"changelog.html":{}}}],["o",{"_index":635,"title":{},"body":{"classes/Cell.html":{}}}],["o.isfix",{"_index":615,"title":{},"body":{"pipes/IsFixedPipe.html":{}}}],["o.isgroup",{"_index":619,"title":{},"body":{"pipes/IsGroupPipe.html":{}}}],["o.isutil",{"_index":620,"title":{},"body":{"pipes/IsGroupPipe.html":{}}}],["o.vis",{"_index":625,"title":{},"body":{"pipes/IsRowVisiblePipe.html":{},"pipes/IsVisiblePipe.html":{}}}],["object",{"_index":126,"title":{},"body":{"index.html":{},"classes/Cell.html":{}}}],["object.assign(thi",{"_index":638,"title":{},"body":{"classes/Cell.html":{}}}],["objects.fixedcolumn",{"_index":166,"title":{},"body":{"index.html":{}}}],["observ",{"_index":234,"title":{},"body":{"index.html":{},"changelog.html":{},"injectables/GridMessageService.html":{}}}],["observable.of(new",{"_index":121,"title":{},"body":{"index.html":{}}}],["obtain",{"_index":495,"title":{},"body":{"license.html":{}}}],["odd.3.1.4",{"_index":423,"title":{},"body":{"changelog.html":{}}}],["old",{"_index":254,"title":{},"body":{"index.html":{}}}],["oldrownum",{"_index":705,"title":{},"body":{"classes/RowChange.html":{}}}],["oldvalu",{"_index":251,"title":{},"body":{"index.html":{}}}],["on",{"_index":88,"title":{},"body":{"index.html":{}}}],["oncellsav",{"_index":246,"title":{},"body":{"index.html":{}}}],["onrowsav",{"_index":201,"title":{},"body":{"index.html":{}}}],["option",{"_index":142,"title":{},"body":{"index.html":{},"injectables/GridMessageService.html":{},"pipes/IsFixedPipe.html":{},"pipes/IsGroupPipe.html":{},"pipes/IsRowVisiblePipe.html":{},"pipes/IsVisiblePipe.html":{},"classes/Cell.html":{},"classes/EmptyFactory.html":{},"classes/FormatterParser.html":{},"classes/HtmlUtil.html":{},"classes/InjectableFactory.html":{},"classes/RowChange.html":{},"interfaces/ClickListener.html":{},"interfaces/DblClickListener.html":{},"interfaces/EventListenerArg.html":{},"interfaces/MouseDownListener.html":{},"interfaces/MouseDragListener.html":{},"interfaces/MouseOutListener.html":{},"interfaces/MouseOverListener.html":{},"interfaces/MouseUpListener.html":{}}}],["organization.3.1.6",{"_index":419,"title":{},"body":{"changelog.html":{}}}],["origin",{"_index":260,"title":{},"body":{"index.html":{}}}],["originalrowdata",{"_index":258,"title":{},"body":{"index.html":{}}}],["otherwis",{"_index":532,"title":{},"body":{"license.html":{}}}],["out",{"_index":402,"title":{},"body":{"overview.html":{},"license.html":{},"modules/GridModule.html":{}}}],["out.interface.t",{"_index":742,"title":{},"body":{"interfaces/MouseOutListener.html":{}}}],["out.interface.ts:3",{"_index":745,"title":{},"body":{"interfaces/MouseOutListener.html":{}}}],["over.interface.t",{"_index":747,"title":{},"body":{"interfaces/MouseOverListener.html":{}}}],["over.interface.ts:3",{"_index":750,"title":{},"body":{"interfaces/MouseOverListener.html":{}}}],["overview",{"_index":379,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["pack",{"_index":67,"title":{},"body":{"index.html":{}}}],["packag",{"_index":0,"title":{"dependencies.html":{}},"body":{"index.html":{}}}],["package.json",{"_index":58,"title":{},"body":{"index.html":{}}}],["page",{"_index":79,"title":{},"body":{"index.html":{}}}],["paramet",{"_index":593,"title":{},"body":{"injectables/GridMessageService.html":{},"pipes/IsFixedPipe.html":{},"pipes/IsGroupPipe.html":{},"pipes/IsRowVisiblePipe.html":{},"pipes/IsVisiblePipe.html":{},"classes/Cell.html":{},"classes/EmptyFactory.html":{},"classes/FormatterParser.html":{},"classes/HtmlUtil.html":{},"classes/InjectableFactory.html":{},"classes/RowChange.html":{},"interfaces/ClickListener.html":{},"interfaces/DblClickListener.html":{},"interfaces/MouseDownListener.html":{},"interfaces/MouseDragListener.html":{},"interfaces/MouseOutListener.html":{},"interfaces/MouseOverListener.html":{},"interfaces/MouseUpListener.html":{}}}],["parser",{"_index":655,"title":{},"body":{"classes/FormatterParser.html":{}}}],["parser.t",{"_index":653,"title":{},"body":{"classes/FormatterParser.html":{}}}],["parser.ts:12",{"_index":661,"title":{},"body":{"classes/FormatterParser.html":{}}}],["parser.ts:16",{"_index":663,"title":{},"body":{"classes/FormatterParser.html":{}}}],["parser.ts:6",{"_index":665,"title":{},"body":{"classes/FormatterParser.html":{}}}],["parser.ts:8",{"_index":664,"title":{},"body":{"classes/FormatterParser.html":{}}}],["parsevalu",{"_index":658,"title":{},"body":{"classes/FormatterParser.html":{}}}],["parsevalue(valu",{"_index":662,"title":{},"body":{"classes/FormatterParser.html":{}}}],["particular",{"_index":520,"title":{},"body":{"license.html":{}}}],["pass",{"_index":133,"title":{},"body":{"index.html":{}}}],["paus",{"_index":453,"title":{},"body":{"changelog.html":{}}}],["per",{"_index":186,"title":{},"body":{"index.html":{}}}],["perform",{"_index":212,"title":{},"body":{"index.html":{}}}],["permiss",{"_index":489,"title":{},"body":{"license.html":{}}}],["permit",{"_index":506,"title":{},"body":{"license.html":{}}}],["persist",{"_index":235,"title":{},"body":{"index.html":{}}}],["person",{"_index":494,"title":{},"body":{"license.html":{}}}],["pipe",{"_index":406,"title":{"pipes/IsFixedPipe.html":{},"pipes/IsGroupPipe.html":{},"pipes/IsRowVisiblePipe.html":{},"pipes/IsVisiblePipe.html":{}},"body":{"overview.html":{},"pipes/IsFixedPipe.html":{},"pipes/IsGroupPipe.html":{},"pipes/IsRowVisiblePipe.html":{},"pipes/IsVisiblePipe.html":{}}}],["pipetransform",{"_index":613,"title":{},"body":{"pipes/IsFixedPipe.html":{},"pipes/IsGroupPipe.html":{},"pipes/IsRowVisiblePipe.html":{},"pipes/IsVisiblePipe.html":{}}}],["point",{"_index":287,"title":{},"body":{"index.html":{},"classes/HtmlUtil.html":{}}}],["point.getpoint(this.getid(",{"_index":689,"title":{},"body":{"classes/HtmlUtil.html":{}}}],["popup",{"_index":444,"title":{},"body":{"changelog.html":{}}}],["popup).selectedrow",{"_index":272,"title":{},"body":{"index.html":{}}}],["popup.compon",{"_index":568,"title":{},"body":{"modules/GridModule.html":{}}}],["portion",{"_index":513,"title":{},"body":{"license.html":{}}}],["possibl",{"_index":78,"title":{},"body":{"index.html":{}}}],["prevent",{"_index":455,"title":{},"body":{"changelog.html":{}}}],["previou",{"_index":84,"title":{},"body":{"index.html":{}}}],["privat",{"_index":584,"title":{},"body":{"injectables/GridMessageService.html":{},"classes/InjectableFactory.html":{},"interfaces/InjectableConstructor.html":{}}}],["prod",{"_index":378,"title":{},"body":{"index.html":{}}}],["product",{"_index":376,"title":{},"body":{"index.html":{}}}],["promis",{"_index":477,"title":{},"body":{"changelog.html":{}}}],["propag",{"_index":430,"title":{},"body":{"changelog.html":{}}}],["properti",{"_index":583,"title":{},"body":{"injectables/GridMessageService.html":{},"classes/Cell.html":{},"classes/FormatterParser.html":{},"classes/RowChange.html":{},"interfaces/Dictionary.html":{},"interfaces/EventListenerArg.html":{}}}],["proprietari",{"_index":542,"title":{},"body":{"modules/GridModule.html":{}}}],["provid",{"_index":111,"title":{},"body":{"index.html":{},"overview.html":{},"license.html":{},"modules/GridModule.html":{}}}],["public",{"_index":442,"title":{},"body":{"changelog.html":{}}}],["publish",{"_index":51,"title":{},"body":{"index.html":{},"license.html":{}}}],["publish.bas",{"_index":68,"title":{},"body":{"index.html":{}}}],["pull",{"_index":375,"title":{},"body":{"index.html":{},"classes/HtmlUtil.html":{}}}],["pure",{"_index":312,"title":{},"body":{"index.html":{},"pipes/IsFixedPipe.html":{}}}],["purpos",{"_index":521,"title":{},"body":{"license.html":{}}}],["rang",{"_index":77,"title":{},"body":{"index.html":{}}}],["re",{"_index":307,"title":{},"body":{"index.html":{}}}],["readm",{"_index":463,"title":{},"body":{"changelog.html":{}}}],["readme.2.1.0",{"_index":450,"title":{},"body":{"changelog.html":{}}}],["readme.md",{"_index":482,"title":{},"body":{"changelog.html":{}}}],["rearrang",{"_index":417,"title":{},"body":{"changelog.html":{}}}],["refactor",{"_index":466,"title":{},"body":{"changelog.html":{}}}],["referenc",{"_index":475,"title":{},"body":{"changelog.html":{}}}],["refresh",{"_index":305,"title":{},"body":{"index.html":{}}}],["releas",{"_index":481,"title":{},"body":{"changelog.html":{}}}],["remov",{"_index":451,"title":{},"body":{"changelog.html":{}}}],["render",{"_index":303,"title":{},"body":{"index.html":{},"changelog.html":{},"classes/Cell.html":{}}}],["renderer.compon",{"_index":561,"title":{},"body":{"modules/GridModule.html":{}}}],["renderer2",{"_index":320,"title":{},"body":{"index.html":{}}}],["report",{"_index":164,"title":{},"body":{"index.html":{}}}],["request",{"_index":359,"title":{},"body":{"index.html":{},"changelog.html":{}}}],["requir",{"_index":61,"title":{},"body":{"index.html":{}}}],["reset",{"_index":401,"title":{},"body":{"overview.html":{},"modules/GridModule.html":{}}}],["resiz",{"_index":760,"title":{},"body":{"miscellaneous/variables.html":{}}}],["restrict",{"_index":500,"title":{},"body":{"license.html":{}}}],["result",{"_index":15,"title":{},"body":{"dependencies.html":{},"index.html":{},"overview.html":{},"changelog.html":{},"license.html":{},"modules.html":{},"modules/GridModule.html":{},"injectables/GridMessageService.html":{},"pipes/IsFixedPipe.html":{},"pipes/IsGroupPipe.html":{},"pipes/IsRowVisiblePipe.html":{},"pipes/IsVisiblePipe.html":{},"classes/Cell.html":{},"classes/EmptyFactory.html":{},"classes/FormatterParser.html":{},"classes/HtmlUtil.html":{},"classes/InjectableFactory.html":{},"classes/RowChange.html":{},"interfaces/ClickListener.html":{},"interfaces/DblClickListener.html":{},"interfaces/Dictionary.html":{},"interfaces/EmptyConstructor.html":{},"interfaces/EventListenerArg.html":{},"interfaces/InjectableConstructor.html":{},"interfaces/MouseDownListener.html":{},"interfaces/MouseDragListener.html":{},"interfaces/MouseOutListener.html":{},"interfaces/MouseOverListener.html":{},"interfaces/MouseUpListener.html":{},"miscellaneous/variables.html":{}}}],["retriev",{"_index":93,"title":{},"body":{"index.html":{}}}],["return",{"_index":120,"title":{},"body":{"index.html":{},"modules/GridModule.html":{},"injectables/GridMessageService.html":{},"pipes/IsFixedPipe.html":{},"pipes/IsGroupPipe.html":{},"pipes/IsRowVisiblePipe.html":{},"pipes/IsVisiblePipe.html":{},"classes/EmptyFactory.html":{},"classes/FormatterParser.html":{},"classes/HtmlUtil.html":{},"classes/InjectableFactory.html":{},"interfaces/ClickListener.html":{},"interfaces/DblClickListener.html":{},"interfaces/EmptyConstructor.html":{},"interfaces/InjectableConstructor.html":{},"interfaces/MouseDownListener.html":{},"interfaces/MouseDragListener.html":{},"interfaces/MouseOutListener.html":{},"interfaces/MouseOverListener.html":{},"interfaces/MouseUpListener.html":{}}}],["returning.sortev",{"_index":292,"title":{},"body":{"index.html":{}}}],["revers",{"_index":421,"title":{},"body":{"changelog.html":{}}}],["right",{"_index":360,"title":{},"body":{"index.html":{},"changelog.html":{},"license.html":{}}}],["root",{"_index":223,"title":{},"body":{"index.html":{}}}],["row",{"_index":86,"title":{},"body":{"index.html":{},"changelog.html":{},"modules/GridModule.html":{},"pipes/IsRowVisiblePipe.html":{}}}],["row/row",{"_index":624,"title":{},"body":{"pipes/IsRowVisiblePipe.html":{}}}],["rowchang",{"_index":701,"title":{"classes/RowChange.html":{}},"body":{"classes/RowChange.html":{}}}],["rownum",{"_index":257,"title":{},"body":{"index.html":{}}}],["rows[i].key",{"_index":247,"title":{},"body":{"index.html":{}}}],["run",{"_index":362,"title":{},"body":{"index.html":{}}}],["rxj",{"_index":412,"title":{},"body":{"changelog.html":{},"injectables/GridMessageService.html":{}}}],["same",{"_index":198,"title":{},"body":{"index.html":{}}}],["save",{"_index":468,"title":{},"body":{"changelog.html":{}}}],["scroll",{"_index":197,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["scrollbar",{"_index":458,"title":{},"body":{"changelog.html":{}}}],["see",{"_index":108,"title":{},"body":{"index.html":{},"changelog.html":{},"classes/InjectableFactory.html":{},"interfaces/InjectableConstructor.html":{}}}],["select",{"_index":76,"title":{},"body":{"index.html":{},"changelog.html":{}}}],["selectfilterrender",{"_index":353,"title":{},"body":{"index.html":{},"overview.html":{},"modules/GridModule.html":{}}}],["sell",{"_index":505,"title":{},"body":{"license.html":{}}}],["servic",{"_index":474,"title":{},"body":{"changelog.html":{}}}],["service.config",{"_index":138,"title":{},"body":{"index.html":{}}}],["services/grid",{"_index":572,"title":{},"body":{"modules/GridModule.html":{}}}],["set",{"_index":224,"title":{},"body":{"index.html":{}}}],["setconfig",{"_index":659,"title":{},"body":{"classes/FormatterParser.html":{}}}],["setconfig(config",{"_index":318,"title":{},"body":{"index.html":{},"classes/FormatterParser.html":{}}}],["sever",{"_index":313,"title":{},"body":{"index.html":{}}}],["shall",{"_index":511,"title":{},"body":{"license.html":{}}}],["shortcut",{"_index":215,"title":{},"body":{"index.html":{}}}],["show",{"_index":158,"title":{},"body":{"index.html":{}}}],["showicon",{"_index":331,"title":{},"body":{"index.html":{}}}],["shown",{"_index":178,"title":{},"body":{"index.html":{}}}],["side",{"_index":169,"title":{},"body":{"index.html":{}}}],["simpl",{"_index":40,"title":{},"body":{"index.html":{},"classes/FormatterParser.html":{}}}],["size",{"_index":81,"title":{},"body":{"index.html":{}}}],["size.saveondirtyrowchang",{"_index":199,"title":{},"body":{"index.html":{}}}],["softwar",{"_index":496,"title":{},"body":{"license.html":{}}}],["sort",{"_index":69,"title":{},"body":{"index.html":{},"changelog.html":{}}}],["sorted.glob",{"_index":297,"title":{},"body":{"index.html":{}}}],["sortev",{"_index":294,"title":{},"body":{"index.html":{}}}],["sortinfo",{"_index":293,"title":{},"body":{"index.html":{}}}],["sorting.3.1.1",{"_index":428,"title":{},"body":{"changelog.html":{}}}],["sourc",{"_index":94,"title":{},"body":{"index.html":{},"modules/GridModule.html":{},"injectables/GridMessageService.html":{},"pipes/IsFixedPipe.html":{},"pipes/IsGroupPipe.html":{},"pipes/IsRowVisiblePipe.html":{},"pipes/IsVisiblePipe.html":{},"classes/Cell.html":{},"classes/EmptyFactory.html":{},"classes/FormatterParser.html":{},"classes/HtmlUtil.html":{},"classes/InjectableFactory.html":{},"classes/RowChange.html":{},"interfaces/ClickListener.html":{},"interfaces/DblClickListener.html":{},"interfaces/Dictionary.html":{},"interfaces/EmptyConstructor.html":{},"interfaces/EventListenerArg.html":{},"interfaces/InjectableConstructor.html":{},"interfaces/MouseDownListener.html":{},"interfaces/MouseDragListener.html":{},"interfaces/MouseOutListener.html":{},"interfaces/MouseOverListener.html":{},"interfaces/MouseUpListener.html":{}}}],["specif",{"_index":99,"title":{},"body":{"index.html":{}}}],["specifi",{"_index":187,"title":{},"body":{"index.html":{}}}],["speed",{"_index":308,"title":{},"body":{"index.html":{}}}],["spinner",{"_index":454,"title":{},"body":{"changelog.html":{}}}],["spinner.eventlisten",{"_index":210,"title":{},"body":{"index.html":{}}}],["spreadsheet",{"_index":163,"title":{},"body":{"index.html":{}}}],["src/grid/cell/cell.t",{"_index":627,"title":{},"body":{"classes/Cell.html":{}}}],["src/grid/cell/cell.ts:5",{"_index":637,"title":{},"body":{"classes/Cell.html":{}}}],["src/grid/cell/cell.ts:6",{"_index":636,"title":{},"body":{"classes/Cell.html":{}}}],["src/grid/cell/cell.ts:7",{"_index":634,"title":{},"body":{"classes/Cell.html":{}}}],["src/grid/column/formatters/formatt",{"_index":652,"title":{},"body":{"classes/FormatterParser.html":{}}}],["src/grid/event/click.interface.t",{"_index":712,"title":{},"body":{"interfaces/ClickListener.html":{}}}],["src/grid/event/click.interface.ts:3",{"_index":715,"title":{},"body":{"interfaces/ClickListener.html":{}}}],["src/grid/event/dbl",{"_index":717,"title":{},"body":{"interfaces/DblClickListener.html":{}}}],["src/grid/event/ev",{"_index":726,"title":{},"body":{"interfaces/EventListenerArg.html":{}}}],["src/grid/event/mous",{"_index":731,"title":{},"body":{"interfaces/MouseDownListener.html":{},"interfaces/MouseDragListener.html":{},"interfaces/MouseOutListener.html":{},"interfaces/MouseOverListener.html":{},"interfaces/MouseUpListener.html":{}}}],["src/grid/grid.component.t",{"_index":764,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/grid/grid.module.t",{"_index":538,"title":{},"body":{"modules/GridModule.html":{}}}],["src/grid/model/dictionary.interface.t",{"_index":723,"title":{},"body":{"interfaces/Dictionary.html":{}}}],["src/grid/model/dictionary.interface.ts:2",{"_index":725,"title":{},"body":{"interfaces/Dictionary.html":{}}}],["src/grid/model/dictionary.interface.ts:3",{"_index":724,"title":{},"body":{"interfaces/Dictionary.html":{}}}],["src/grid/services/grid",{"_index":581,"title":{},"body":{"injectables/GridMessageService.html":{},"miscellaneous/variables.html":{}}}],["src/grid/utils/empty.factory.t",{"_index":640,"title":{},"body":{"classes/EmptyFactory.html":{},"interfaces/EmptyConstructor.html":{}}}],["src/grid/utils/empty.factory.ts:4",{"_index":646,"title":{},"body":{"classes/EmptyFactory.html":{}}}],["src/grid/utils/empty.factory.ts:7",{"_index":647,"title":{},"body":{"classes/EmptyFactory.html":{}}}],["src/grid/utils/html",{"_index":668,"title":{},"body":{"classes/HtmlUtil.html":{}}}],["src/grid/utils/i",{"_index":606,"title":{},"body":{"pipes/IsFixedPipe.html":{},"pipes/IsGroupPipe.html":{},"pipes/IsRowVisiblePipe.html":{},"pipes/IsVisiblePipe.html":{}}}],["src/grid/utils/injectable.factory.t",{"_index":691,"title":{},"body":{"classes/InjectableFactory.html":{},"interfaces/InjectableConstructor.html":{}}}],["src/grid/utils/injectable.factory.ts:10",{"_index":698,"title":{},"body":{"classes/InjectableFactory.html":{}}}],["src/grid/utils/injectable.factory.ts:7",{"_index":696,"title":{},"body":{"classes/InjectableFactory.html":{}}}],["src/grid/utils/row",{"_index":702,"title":{},"body":{"classes/RowChange.html":{}}}],["start",{"_index":18,"title":{"index.html":{},"changelog.html":{},"license.html":{}},"body":{}}],["state",{"_index":175,"title":{},"body":{"index.html":{}}}],["static",{"_index":576,"title":{},"body":{"modules/GridModule.html":{},"classes/HtmlUtil.html":{}}}],["statu",{"_index":290,"title":{},"body":{"index.html":{}}}],["stop",{"_index":429,"title":{},"body":{"changelog.html":{}}}],["storag",{"_index":447,"title":{},"body":{"changelog.html":{}}}],["string",{"_index":75,"title":{},"body":{"index.html":{},"injectables/GridMessageService.html":{},"classes/HtmlUtil.html":{},"interfaces/Dictionary.html":{}}}],["style",{"_index":227,"title":{},"body":{"index.html":{}}}],["subject",{"_index":508,"title":{},"body":{"license.html":{},"injectables/GridMessageService.html":{}}}],["sublicens",{"_index":503,"title":{},"body":{"license.html":{}}}],["substanti",{"_index":512,"title":{},"body":{"license.html":{}}}],["success",{"_index":239,"title":{},"body":{"index.html":{}}}],["such",{"_index":671,"title":{},"body":{"classes/HtmlUtil.html":{}}}],["support",{"_index":38,"title":{},"body":{"index.html":{},"changelog.html":{},"modules.html":{}}}],["svg",{"_index":535,"title":{},"body":{"modules.html":{}}}],["syntax",{"_index":110,"title":{},"body":{"index.html":{},"changelog.html":{}}}],["t",{"_index":648,"title":{},"body":{"classes/EmptyFactory.html":{},"classes/InjectableFactory.html":{},"interfaces/EmptyConstructor.html":{},"interfaces/InjectableConstructor.html":{}}}],["tab",{"_index":761,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tabl",{"_index":36,"title":{},"body":{"index.html":{}}}],["take",{"_index":283,"title":{},"body":{"index.html":{}}}],["taken",{"_index":101,"title":{},"body":{"index.html":{}}}],["templat",{"_index":207,"title":{},"body":{"index.html":{}}}],["templateref",{"_index":206,"title":{},"body":{"index.html":{}}}],["texteditrender",{"_index":393,"title":{},"body":{"overview.html":{},"modules/GridModule.html":{}}}],["textfilterrender",{"_index":339,"title":{},"body":{"index.html":{},"overview.html":{},"modules/GridModule.html":{}}}],["them.pages",{"_index":188,"title":{},"body":{"index.html":{}}}],["theme",{"_index":165,"title":{},"body":{"index.html":{}}}],["thing",{"_index":309,"title":{},"body":{"index.html":{},"classes/HtmlUtil.html":{}}}],["this._message.asobserv",{"_index":599,"title":{},"body":{"injectables/GridMessageService.html":{}}}],["this._message.next(\"error",{"_index":603,"title":{},"body":{"injectables/GridMessageService.html":{}}}],["this._message.next(\"warn",{"_index":604,"title":{},"body":{"injectables/GridMessageService.html":{}}}],["this._messageobserv",{"_index":605,"title":{},"body":{"injectables/GridMessageService.html":{}}}],["this.config",{"_index":666,"title":{},"body":{"classes/FormatterParser.html":{}}}],["this.datarequest",{"_index":119,"title":{},"body":{"index.html":{}}}],["this.emptyconstructor",{"_index":650,"title":{},"body":{"classes/EmptyFactory.html":{},"interfaces/EmptyConstructor.html":{}}}],["this.ic(this.injector",{"_index":699,"title":{},"body":{"classes/InjectableFactory.html":{},"interfaces/InjectableConstructor.html":{}}}],["this.newrownum",{"_index":710,"title":{},"body":{"classes/RowChange.html":{}}}],["this.oldrownum",{"_index":709,"title":{},"body":{"classes/RowChange.html":{}}}],["those",{"_index":176,"title":{},"body":{"index.html":{}}}],["through",{"_index":43,"title":{},"body":{"index.html":{}}}],["time",{"_index":363,"title":{},"body":{"index.html":{}}}],["titl",{"_index":159,"title":{},"body":{"index.html":{}}}],["to.configur",{"_index":146,"title":{},"body":{"index.html":{}}}],["toast",{"_index":271,"title":{},"body":{"index.html":{}}}],["todo",{"_index":358,"title":{},"body":{"index.html":{}}}],["togeth",{"_index":171,"title":{},"body":{"index.html":{}}}],["tort",{"_index":531,"title":{},"body":{"license.html":{}}}],["transform",{"_index":610,"title":{},"body":{"pipes/IsFixedPipe.html":{},"pipes/IsGroupPipe.html":{},"pipes/IsRowVisiblePipe.html":{},"pipes/IsVisiblePipe.html":{}}}],["transform(list",{"_index":611,"title":{},"body":{"pipes/IsFixedPipe.html":{},"pipes/IsGroupPipe.html":{},"pipes/IsRowVisiblePipe.html":{},"pipes/IsVisiblePipe.html":{}}}],["transpil",{"_index":371,"title":{},"body":{"index.html":{}}}],["true",{"_index":174,"title":{},"body":{"index.html":{},"modules/GridModule.html":{}}}],["two",{"_index":129,"title":{},"body":{"index.html":{}}}],["type",{"_index":125,"title":{},"body":{"index.html":{},"injectables/GridMessageService.html":{},"pipes/IsFixedPipe.html":{},"classes/Cell.html":{},"classes/EmptyFactory.html":{},"classes/FormatterParser.html":{},"classes/HtmlUtil.html":{},"classes/InjectableFactory.html":{},"classes/RowChange.html":{},"interfaces/ClickListener.html":{},"interfaces/DblClickListener.html":{},"interfaces/Dictionary.html":{},"interfaces/EventListenerArg.html":{},"interfaces/InjectableConstructor.html":{},"interfaces/MouseDownListener.html":{},"interfaces/MouseDragListener.html":{},"interfaces/MouseOutListener.html":{},"interfaces/MouseOverListener.html":{},"interfaces/MouseUpListener.html":{},"miscellaneous/variables.html":{}}}],["undefin",{"_index":127,"title":{},"body":{"index.html":{},"changelog.html":{},"pipes/IsFixedPipe.html":{},"pipes/IsGroupPipe.html":{},"pipes/IsRowVisiblePipe.html":{},"pipes/IsVisiblePipe.html":{}}}],["univers",{"_index":487,"title":{},"body":{"license.html":{},"modules/GridModule.html":{}}}],["up",{"_index":310,"title":{},"body":{"index.html":{}}}],["up.interface.t",{"_index":752,"title":{},"body":{"interfaces/MouseUpListener.html":{}}}],["up.interface.ts:3",{"_index":755,"title":{},"body":{"interfaces/MouseUpListener.html":{}}}],["upon",{"_index":238,"title":{},"body":{"index.html":{}}}],["us",{"_index":62,"title":{},"body":{"index.html":{},"license.html":{}}}],["usag",{"_index":102,"title":{},"body":{"index.html":{}}}],["user",{"_index":150,"title":{},"body":{"index.html":{},"changelog.html":{}}}],["usevalu",{"_index":579,"title":{},"body":{"modules/GridModule.html":{}}}],["usual",{"_index":66,"title":{},"body":{"index.html":{}}}],["utah",{"_index":488,"title":{},"body":{"license.html":{},"modules/GridModule.html":{}}}],["util.t",{"_index":669,"title":{},"body":{"classes/HtmlUtil.html":{}}}],["util.ts:23",{"_index":682,"title":{},"body":{"classes/HtmlUtil.html":{}}}],["util.ts:38",{"_index":684,"title":{},"body":{"classes/HtmlUtil.html":{}}}],["util.ts:8",{"_index":678,"title":{},"body":{"classes/HtmlUtil.html":{}}}],["utils/i",{"_index":555,"title":{},"body":{"modules/GridModule.html":{}}}],["valid",{"_index":470,"title":{},"body":{"changelog.html":{}}}],["valu",{"_index":255,"title":{},"body":{"index.html":{},"changelog.html":{},"injectables/GridMessageService.html":{},"classes/Cell.html":{},"classes/FormatterParser.html":{},"interfaces/Dictionary.html":{},"miscellaneous/variables.html":{}}}],["values.busytempl",{"_index":205,"title":{},"body":{"index.html":{}}}],["variabl",{"_index":757,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["variou",{"_index":80,"title":{},"body":{"index.html":{}}}],["vertic",{"_index":306,"title":{},"body":{"index.html":{}}}],["view",{"_index":332,"title":{},"body":{"index.html":{},"changelog.html":{}}}],["viewconfig",{"_index":326,"title":{},"body":{"index.html":{}}}],["viewrender",{"_index":324,"title":{},"body":{"index.html":{}}}],["visibl",{"_index":156,"title":{},"body":{"index.html":{}}}],["visible.pip",{"_index":556,"title":{},"body":{"modules/GridModule.html":{}}}],["visible.pipe.t",{"_index":621,"title":{},"body":{"pipes/IsRowVisiblePipe.html":{},"pipes/IsVisiblePipe.html":{}}}],["visible.pipe.ts:9",{"_index":623,"title":{},"body":{"pipes/IsRowVisiblePipe.html":{},"pipes/IsVisiblePipe.html":{}}}],["visual",{"_index":415,"title":{},"body":{"changelog.html":{}}}],["void",{"_index":237,"title":{},"body":{"index.html":{},"injectables/GridMessageService.html":{},"classes/FormatterParser.html":{}}}],["wait",{"_index":441,"title":{},"body":{"changelog.html":{}}}],["want",{"_index":219,"title":{},"body":{"index.html":{}}}],["warn",{"_index":220,"title":{},"body":{"index.html":{},"injectables/GridMessageService.html":{}}}],["warn(messag",{"_index":594,"title":{},"body":{"injectables/GridMessageService.html":{}}}],["warranti",{"_index":514,"title":{},"body":{"license.html":{}}}],["way",{"_index":130,"title":{},"body":{"index.html":{}}}],["whether",{"_index":529,"title":{},"body":{"license.html":{}}}],["width",{"_index":459,"title":{},"body":{"changelog.html":{}}}],["wish",{"_index":270,"title":{},"body":{"index.html":{}}}],["withcomponents(compon",{"_index":580,"title":{},"body":{"modules/GridModule.html":{}}}],["without",{"_index":499,"title":{},"body":{"license.html":{},"classes/FormatterParser.html":{}}}],["work",{"_index":98,"title":{},"body":{"index.html":{}}}],["ye",{"_index":680,"title":{},"body":{"classes/HtmlUtil.html":{}}}],["you.logwarn",{"_index":218,"title":{},"body":{"index.html":{}}}],["zoom",{"_index":400,"title":{},"body":{"overview.html":{},"modules/GridModule.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n    Dependencies\n\n\n    \n        @ng-bootstrap/ng-bootstrap : 4.2.x\n    \n        bootstrap : >=4.3.1 \n    \n        hci-ng-grid-dto : 1.0.0-beta.4\n    \n        moment : >=2.19.3\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nHuntsman Cancer Institute's Angular Grid Library\nhci-ng-grid Demo on Github\nIntro\nThis grid is designed to be a full featured grid that can handle nearly anything that complex data tables may\nbe expected to support.  By default, the grid is simple and basic, but becomes full featured through\nconfiguration.Install\n\"dependencies\": {\n    \"hci-ng-grid\": \"5.0.0-beta.2\"\n}import {GridModule} from \"hci-ng-grid\";@NgModule({\n    imports: [\n        GridModule.forRoot()\n    ]\n})Publishing\nCompiled code gets moved to the dist folder with a copy of the package.json.  Custom commands are required for\npackaging and publishing.  Use npmPack and npmPublish instead of the usual pack and publish.Basic Features\n\nSorting: Change sorting by clicking on column header.\nFiltering: String, select, range filtering with the possibility for custom filters.\nPaging: Paging with various page sizes, first, last, previous and next.\nRow Grouping: Rows can be grouped by one or more columns.\nExternal Data Call: Callback to retrieve data from external source.\nCustom Events: Listeners can be added to work for specific events and custom actions can be taken.\n\nUsage\nNote, there are so many features to this grid that not all are currently listed here.  See the demo for full examples.\nThe basic syntax for data provided by the implementing component.\n\nThe basic syntax for an external data call.\n\nAnd a function using mocked external data call.\ndataRequest: (externalInfo: ExternalInfo) => {};\n\nngOnInit() {\n  this.dataRequest = (externalInfo: ExternalInfo) => {\n    return Observable.of(new ExternalData(this.dataGeneratorService.getData(250), externalInfo)).delay(500);\n  };\n}Inputs\ndata\ntype: Object[]\ndefault: undefined\nProvide the grid with an array of rows as objects.  Two way binding to this data.dataCall\ntype: Function\ndefault: undefined\nA function that is called to retrieve data.  The function is passed filtering, sorting and paging info.id\ntype: string\ndefault: undefined\nThe html id for the grid and the id that can be used to get the grid from the global grid service.config\ntype: any\ndefault: {}\nA json object that contains configuration options for the grid.linkedGroups\ntype: string[]\ndefault: undefined\nThe group names that this grid should be linked to.configurable\ntype: boolean\ndefault: false\nFlag if the user should be allowed to modify the grid's configuration (e.g. what colums are visible and how big).title\ntype: string\ndefault: undefined\nShows this title in a title bar above the grid.theme\ntype: string\ndefault: \"spreadsheet\"\noptions: \"spreadsheet\", \"report\", or your own\nThe name of the theme to use.  columns\ntype: Column[]\ndefault: undefined\nAn array of column configuration objects.fixedColumns\ntype: string[]\ndefault: undefined\nA list of column names that should be fixed to the left side of the grid.groupBy\ntype: string[]\ndefault: undefined\nA list of column names that should be used to group rows together.* Currently disabled *\ngroupByCollapsed\ntype: boolean\ndefault: true\nThe state for grouped rows if those rows in a group should be hidden or shown by default.externalGrouping\ntype: boolean\ndefault: false\nTrue if grouping should be handled by the external data call.  This forces filtering, sorting and paging to also be external.externalFiltering\ntype: boolean\ndefault: false\nTrue if filtering should be handled by the external data call.externalSorting\ntype: boolean\ndefault: false\nTrue if sorting should be handled by the external data call.externalPaging\ntype: boolean\ndefault: false\nTrue if paging should be handled by the external data call.  This forces filtering, sorting and paging to be external.pageSize\ntype: number\ndefault: undefined\nThe number of rows per page.  If not specified it will show all of them.pageSizes\ntype: number[]\ndefault: [10, 25, 50]\nAn array of possible page sizes that the user can choose from.nVisibleRows\ntype: number\ndefault: -1\nThe number of visible rows.  A page might have 100 rows, but you can limit the size of the grid to 10 rows which would be scrolling for the user.  The default is -1 which is the same as the page size.saveOnDirtyRowChange\ntype: boolean\ndefault: false\nIf true, will emit a (onRowSave) event if you navigate to a new row and the previous row has dirty values.busyTemplate\ntype: TemplateRef\ndefault: undefined\nA custom template shown when data is loaded.  If you don't like the default spinner.eventListeners\ntype: EventListenerArg[]\ndefault: []\nAn array of listeners that can perform actions on any sort of click or key events.mode\ntype: string\ndefault: undefined\nA shortcut for creating listeners.  Rather than passing in your own listeners, specify a mode and the required listeners will be created for you.logWarnings\ntype: boolean\ndefault: true\nTrue if you want warnings to show in the console.display\ntype: string\ndefault: flow-root\nSets the display on the root component.  Although you could also do this with style on the grid.addNewRowButtonLocation\ntype: string\ndefault: undefined\nCan be \"title-bar\" or \"footer\" depending where you want the add new row button to appear.newRowPostCall\ntype: (data: newRow) => Observable\ndefault: undefined\nImplement your own call to handle creating a new row.  For example, persisting it so the new gets an id created in the database.newRowPostCallSuccess\ntype: (newRow: any) => void\ndefault: undefined\nCustom command upon successful newRowPostCall().newRowPostCallError\ntype: (error: any) => void\ndefault: undefined\nCustom error command upon error from newRowPostCall().newRowPostCallFinally\ntype: () => void\ndefault: undefined\nCustom finally command when newRowPostCall() success or error completes.Outputs\nonCellSave\ntype: any\n$event: { key: rows[i].key,\n          i: i,\n          j: j,\n          field: columns[j].field,\n          oldValue: oldValue,\n          newValue: newValue }\nThe row key, location, field, old and new value of the cell.onRowSave\ntype: any\n$event: { key: rows[i].key,\n          rowNum: i,\n          row: originalRowData }\nEmits the key, row number and the data for the row in the format originally passed in.onConfigChange\ntype: any\n$event: config\nEmits the current configuration for the grid.cellClick\ntype: any\n$event: any\nDetermined by the event listener which can emit any type of data.cellDblClick\ntype: any\n$event: any\nDetermined by the event listener which can emit any type of data.rowClick\ntype: any\n$event: any\nDetermined by the event listener which can emit any type of data.rowDblClick\ntype: any\n$event: any\nDetermined by the event listener which can emit any type of data.warning\ntype: string\n$event: warning message as a string\nListen to this to handle warnings from the grid as you wish (e.g. as a toast popup).selectedRows\ntype: any[]\n$event: [key1, key2, ...]\nThis is an array of any instead of number because the row key could be anything.filterEvent\ntype: FilterInfo[]\n$event: FilterInfo[]\nThis is the array of filters used when a column's filters are applied.  In the case of a select where there are multiple\nFilterInfos, this includes the full list and not the one that changed.  This event is fired upon click.  It will take\nsome delay for data to come back at which point the filterEvent would be fired.dataFiltered\ntype: any\n$event: {type, status, nData}\nThis is emitted when a filter event returns data.  It will provide the number of rows returning.sortEvent\ntype: SortInfo\n$event: SortInfo\nThis is the sortInfo emitted when a column header is clicked.  It will take\nsome delay for data to come back at which point the sortEvent would be fired.dataSorted\ntype: any\n$event: {type, status, field}\nThis is emitted when a sort event returns data.  It will provide the field being sorted.Global Config\nThe root module can take configuration json that can be used to set defaults for every grid.\nFor example, if you want every grid in your application to use the same theme and you don't want\nto specify that theme in every instance of the grid, you can do the following:\nGridModule.forRoot({\n  theme: \"report\"\n})Advanced Features\nRendering Cells\nEvery refresh of data and every vertical scroll will re-render the visible rows and cells.  To speed things\nup, each cell is limited to rendering pure HTML.  However, there are several options of how to render and\nthe option of custom rendering.\nEvery cell is rendering with a class that implements the CellViewRenderer interface.  The two methods\nrequired to implement are\nsetConfig(config: any);\n\ncreateElement(renderer: Renderer2, column: Column, value: any, i: number, j: number): HTMLElement;As an example, the following is an example of a number range renderer.\n{\n    field: \"nLabs\",\n    name: \"# Labs\",\n    viewRenderer: CellNumberRangeView,\n    viewConfig: { low: 15, high: 85, showIcon: true }\n}The class is passed in as the viewRenderer and any config is passed in through the viewConfig.\nFiltering\nLike view rendering, built in and custom components can be used to render the filter.  The difference\nis rather than pure HTML, a filter is a component that extends a base class FilterRenderer.  The\nfollowing are examples of built in filters.\n{\n    field: \"firstName\",\n    name: \"First Name\",\n    filterRenderer: TextFilterRenderer\n},\n{\n    field: \"dob\",\n    name: \"Date of Birth\",\n    dataType: \"date\",\n    format: \"MM/DD/YYYY\",\n    editRenderer: DateEditRenderer,\n    filterRenderer: CompareFilterRenderer\n},\n{\n    field: \"gender\",\n    name: \"Gender\",\n    editRenderer: ChoiceEditRenderer,\n    choices: [ {value: \"Female\", display: \"Female\"}, {value: \"Male\", display: \"Male\"} ],\n    filterRenderer: SelectFilterRenderer\n}Known Issues\n\nRow Groups works upon load, but breaks when filtering is introduced.\n\nTODOs\n\nThere are only left fixed colums, but some have requested right fixed columns.\n\nBuilding and Demo\nTo run the demo for the first time, run the following commands:\nnpm install\nnpm run install-demo\nnpm run run-demoIf package.json doesn't change, after making a change to the grid run:\nnpm run build\nnpm run run-demoThe grid build automatically copies the transpiled files to the demo/node_modules/hci-ng-grid which mimics pulling\nthe dependency from npm.\nTo mimic a production build and be able to run the demo anywhere, use \"npm run run-demo-prod\".\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n            \n                \n                    \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_GridModule\n\n\n\ncluster_GridModule_declarations\n\n\n\ncluster_GridModule_GridComponent_providers\n\n\n\ncluster_GridModule_exports\n\n\n\n\nGridComponent\n\nGridComponent\n\n\n\nGridModule\n\nGridModule\n\nGridModule -->\n\nGridComponent->GridModule\n\n\n\n\n\nColumnHeaderComponent\n\nColumnHeaderComponent\n\nGridModule -->\n\nColumnHeaderComponent->GridModule\n\n\n\n\n\nIsVisiblePipe\n\nIsVisiblePipe\n\nGridModule -->\n\nIsVisiblePipe->GridModule\n\n\n\n\n\nIsGroupPipe\n\nIsGroupPipe\n\nGridModule -->\n\nIsGroupPipe->GridModule\n\n\n\n\n\nIsFixedPipe\n\nIsFixedPipe\n\nGridModule -->\n\nIsFixedPipe->GridModule\n\n\n\n\n\nIsRowVisiblePipe\n\nIsRowVisiblePipe\n\nGridModule -->\n\nIsRowVisiblePipe->GridModule\n\n\n\n\n\nTextEditRenderer\n\nTextEditRenderer\n\nGridModule -->\n\nTextEditRenderer->GridModule\n\n\n\n\n\nDateEditRenderer\n\nDateEditRenderer\n\nGridModule -->\n\nDateEditRenderer->GridModule\n\n\n\n\n\nChoiceEditRenderer\n\nChoiceEditRenderer\n\nGridModule -->\n\nChoiceEditRenderer->GridModule\n\n\n\n\n\nTextFilterRenderer\n\nTextFilterRenderer\n\nGridModule -->\n\nTextFilterRenderer->GridModule\n\n\n\n\n\nSelectFilterRenderer\n\nSelectFilterRenderer\n\nGridModule -->\n\nSelectFilterRenderer->GridModule\n\n\n\n\n\nCompareFilterRenderer\n\nCompareFilterRenderer\n\nGridModule -->\n\nCompareFilterRenderer->GridModule\n\n\n\n\n\nBigTextPopup\n\nBigTextPopup\n\nGridModule -->\n\nBigTextPopup->GridModule\n\n\n\n\n\nConfigMenuComponent\n\nConfigMenuComponent\n\nGridModule -->\n\nConfigMenuComponent->GridModule\n\n\n\n\n\nConfigMultiChoiceComponent\n\nConfigMultiChoiceComponent\n\nGridModule -->\n\nConfigMultiChoiceComponent->GridModule\n\n\n\n\n\nGridComponent \n\nGridComponent \n\nGridComponent  -->\n\nGridModule->GridComponent \n\n\n\n\n\nGridService\n\nGridService\n\nGridComponent -->\n\nGridService->GridComponent\n\n\n\n\n\nGridEventService\n\nGridEventService\n\nGridComponent -->\n\nGridEventService->GridComponent\n\n\n\n\n\nGridMessageService\n\nGridMessageService\n\nGridComponent -->\n\nGridMessageService->GridComponent\n\n\n\n\n\n\n                \n                \n                \n                    Zoom in\n                    Reset\n                    Zoom out\n                \n            \n\n    \n            \n                \n                    \n                        \n                        \n                            1 module\n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                        11 components\n                    \n                \n            \n            \n                \n                    \n                        \n                        4 injectables\n                    \n                \n            \n            \n                \n                    \n                        \n                        4 pipes\n                    \n                \n            \n            \n                \n                    \n                        \n                        32 classes\n                    \n                \n            \n            \n                \n                    \n                        \n                        12 interfaces\n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"changelog.html":{"url":"changelog.html","title":"getting-started - changelog","body":"\n                   \n\nChange Log\n5.0.0\n- To Angular 8, rxjs 6, ng-bootstrap 4.24.0.0\n- Add new rows of data.\n- Visualize invalid fields.\n- Some rearrange of grid/service organization.3.1.6\n- Fix choice filter undefined check.3.1.5\n- Fix reverse right coloring when left columns are odd.3.1.4\n- Fix filter value column name.3.1.3\n- Fix date filtering and date-ms compare.3.1.2\n- Fix dealing with undefined in default sorting.3.1.1\n- Stop propagation on filter button.3.1.0\n- Filter to customizable function.\n- Sort to customizable function.\n- Emitters for filter and sort events.\n- Column drag n drop.\n- Fix: Empty choice array on http error.3.0.0\n- Generalize column wait configuration.  Changes public api.\n- Fixes to popup behavior.\n- Column allows externalConfig storage.\n- Default format/parser more generic.2.1.1\n- Fix syntax in README.2.1.0\n- Removed allowing auto column generation when no columns configured.\n- Added wait listeners to pause configuration while waiting on any requests.\n- Add spinner for loading and prevent data display if no columns.\n- Bump height if view has scrollbar.\n- Fix column width calculation.2.0.2\n- Fix keywords and add .npmignore.2.0.1\n- Fix readme and license in artifact.2.0.0\n- Refactor of rendering and how data/config/events are listened to.\n- Listeners for saving cells and rows.\n- Customization of busy, and view renderers.\n- Validation support and improved formatting/parsing especially for dates.\n- User configuration added.\n- Global grid service for referencing and connecting grids.\n- Row selection improved.\n- External data calls from Promise to Observable.\n- Numerous fixes.1.0.0\n- Initial Release.  See README.md for features.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nCopyright (c) 2018 Huntsman Cancer Institute at the University of Utah\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        GridModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/GridModule.html":{"url":"modules/GridModule.html","title":"module - GridModule","body":"\n                   \n\n\n\n\n  Modules\n  GridModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_GridModule\n\n\n\ncluster_GridModule_declarations\n\n\n\ncluster_GridModule_GridComponent_providers\n\n\n\ncluster_GridModule_exports\n\n\n\n\nGridComponent\n\nGridComponent\n\n\n\nGridModule\n\nGridModule\n\nGridModule -->\n\nGridComponent->GridModule\n\n\n\n\n\nColumnHeaderComponent\n\nColumnHeaderComponent\n\nGridModule -->\n\nColumnHeaderComponent->GridModule\n\n\n\n\n\nIsVisiblePipe\n\nIsVisiblePipe\n\nGridModule -->\n\nIsVisiblePipe->GridModule\n\n\n\n\n\nIsGroupPipe\n\nIsGroupPipe\n\nGridModule -->\n\nIsGroupPipe->GridModule\n\n\n\n\n\nIsFixedPipe\n\nIsFixedPipe\n\nGridModule -->\n\nIsFixedPipe->GridModule\n\n\n\n\n\nIsRowVisiblePipe\n\nIsRowVisiblePipe\n\nGridModule -->\n\nIsRowVisiblePipe->GridModule\n\n\n\n\n\nTextEditRenderer\n\nTextEditRenderer\n\nGridModule -->\n\nTextEditRenderer->GridModule\n\n\n\n\n\nDateEditRenderer\n\nDateEditRenderer\n\nGridModule -->\n\nDateEditRenderer->GridModule\n\n\n\n\n\nChoiceEditRenderer\n\nChoiceEditRenderer\n\nGridModule -->\n\nChoiceEditRenderer->GridModule\n\n\n\n\n\nTextFilterRenderer\n\nTextFilterRenderer\n\nGridModule -->\n\nTextFilterRenderer->GridModule\n\n\n\n\n\nSelectFilterRenderer\n\nSelectFilterRenderer\n\nGridModule -->\n\nSelectFilterRenderer->GridModule\n\n\n\n\n\nCompareFilterRenderer\n\nCompareFilterRenderer\n\nGridModule -->\n\nCompareFilterRenderer->GridModule\n\n\n\n\n\nBigTextPopup\n\nBigTextPopup\n\nGridModule -->\n\nBigTextPopup->GridModule\n\n\n\n\n\nConfigMenuComponent\n\nConfigMenuComponent\n\nGridModule -->\n\nConfigMenuComponent->GridModule\n\n\n\n\n\nConfigMultiChoiceComponent\n\nConfigMultiChoiceComponent\n\nGridModule -->\n\nConfigMultiChoiceComponent->GridModule\n\n\n\n\n\nGridComponent \n\nGridComponent \n\nGridComponent  -->\n\nGridModule->GridComponent \n\n\n\n\n\nGridService\n\nGridService\n\nGridComponent -->\n\nGridService->GridComponent\n\n\n\n\n\nGridEventService\n\nGridEventService\n\nGridComponent -->\n\nGridEventService->GridComponent\n\n\n\n\n\nGridMessageService\n\nGridMessageService\n\nGridComponent -->\n\nGridMessageService->GridComponent\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/grid/grid.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                GridComponent\n                            \n                            \n                                ColumnHeaderComponent\n                            \n                            \n                                IsVisiblePipe\n                            \n                            \n                                IsGroupPipe\n                            \n                            \n                                IsFixedPipe\n                            \n                            \n                                IsRowVisiblePipe\n                            \n                            \n                                TextEditRenderer\n                            \n                            \n                                DateEditRenderer\n                            \n                            \n                                ChoiceEditRenderer\n                            \n                            \n                                TextFilterRenderer\n                            \n                            \n                                SelectFilterRenderer\n                            \n                            \n                                CompareFilterRenderer\n                            \n                            \n                                BigTextPopup\n                            \n                            \n                                ConfigMenuComponent\n                            \n                            \n                                ConfigMultiChoiceComponent\n                            \n                    \n                \n                \n                    EntryComponents\n                    \n                            \n                                TextEditRenderer\n                            \n                            \n                                DateEditRenderer\n                            \n                            \n                                ChoiceEditRenderer\n                            \n                            \n                                TextFilterRenderer\n                            \n                            \n                                SelectFilterRenderer\n                            \n                            \n                                CompareFilterRenderer\n                            \n                            \n                                BigTextPopup\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    GridComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        /*\n * Copyright (c) 2016 Huntsman Cancer Institute at the University of Utah, Confidential and Proprietary\n */\nimport {ANALYZE_FOR_ENTRY_COMPONENTS, ModuleWithProviders, NgModule} from \"@angular/core\";\nimport {CommonModule} from \"@angular/common\";\nimport {FormsModule} from \"@angular/forms\";\n\nimport {NgbModule} from \"@ng-bootstrap/ng-bootstrap\";\n\nimport {GridComponent} from \"./grid.component\";\nimport {ColumnHeaderComponent} from \"./column/column-header.component\";\nimport {IsVisiblePipe} from \"./utils/is-visible.pipe\";\nimport {IsGroupPipe} from \"./utils/is-group.pipe\";\nimport {IsFixedPipe} from \"./utils/is-fixed.pipe\";\nimport {IsRowVisiblePipe} from \"./utils/is-row-visible.pipe\";\nimport {TextEditRenderer} from \"./cell/editRenderers/text-edit-renderer.component\";\nimport {TextFilterRenderer} from \"./column/filterRenderers/text-filter-renderer.component\";\nimport {CompareFilterRenderer} from \"./column/filterRenderers/compare-filter-renderer.component\";\nimport {ChoiceEditRenderer} from \"./cell/editRenderers/choice-edit-renderer.component\";\nimport {DateEditRenderer} from \"./cell/editRenderers/date-edit-renderer.component\";\nimport {SelectFilterRenderer} from \"./column/filterRenderers/select-filter-renderer.component\";\nimport {BigTextPopup} from \"./cell/viewPopupRenderer/bigtext-popup.component\";\nimport {ConfigMenuComponent} from \"./config/config-menu.component\";\nimport {GridGlobalService} from \"./services/grid-global.service\";\nimport {ConfigMultiChoiceComponent} from \"./config/config-multi-choice.component\";\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    NgbModule\n  ],\n  declarations: [\n    GridComponent,\n    ColumnHeaderComponent,\n    IsVisiblePipe,\n    IsGroupPipe,\n    IsFixedPipe,\n    IsRowVisiblePipe,\n    TextEditRenderer,\n    DateEditRenderer,\n    ChoiceEditRenderer,\n    TextFilterRenderer,\n    SelectFilterRenderer,\n    CompareFilterRenderer,\n    BigTextPopup,\n    ConfigMenuComponent,\n    ConfigMultiChoiceComponent\n  ],\n  entryComponents: [\n    TextEditRenderer,\n    DateEditRenderer,\n    ChoiceEditRenderer,\n    TextFilterRenderer,\n    SelectFilterRenderer,\n    CompareFilterRenderer,\n    BigTextPopup\n  ],\n  exports: [\n    GridComponent\n  ]\n})\nexport class GridModule {\n\n  static forRoot(globalConfig?: any, components?: any[]): ModuleWithProviders {\n    return {\n      providers: [\n        GridGlobalService,\n        {provide: \"globalConfig\", useValue: (globalConfig) ? globalConfig : {}},\n        {\n          provide: ANALYZE_FOR_ENTRY_COMPONENTS,\n          useValue: components,\n          multi: true\n        }\n      ],\n      ngModule: GridModule\n    };\n  }\n\n  static withComponents(components: any[]): ModuleWithProviders {\n    return {\n      ngModule: GridModule,\n      providers: [\n        {\n          provide: ANALYZE_FOR_ENTRY_COMPONENTS,\n          useValue: components,\n          multi: true\n        }\n      ]\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GridMessageService.html":{"url":"injectables/GridMessageService.html","title":"injectable - GridMessageService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  GridMessageService\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/grid/services/grid-message.service.ts\n        \n\n\n\n            \n                Index\n                \n                    \n                        \n                            \n                                Properties\n                            \n                        \n                        \n                            \n                                \n                                    \n                                            Private\n                                        _level\n                                    \n                                    \n                                            Private\n                                        _message\n                                    \n                                    \n                                            Private\n                                        _messageObservable\n                                    \n                                \n                            \n                        \n                        \n                            \n                                Methods\n                            \n                        \n                        \n                            \n                                \n                                    \n                                        error\n                                    \n                                    \n                                        warn\n                                    \n                                \n                            \n                        \n                        \n                            \n                                Accessors\n                            \n                        \n                        \n                            \n                                \n                                    \n                                        messageObservable\n                                    \n                                \n                            \n                        \n                    \n                \n            \n\n\n            \n                \n                    \n                        Methods\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        error\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            error(message: string)\n                                \n                            \n            \n            \n                                    \n                                        \n                                                Defined in src/grid/services/grid-message.service.ts:12\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                                Type\n                                                            Optional\n                                                        \n                                                    \n                                                    \n                                                            \n                                                                message\n                                                                \n                                                                    \n                                                                                string\n                                                                    \n                                                                \n                                                                \n                                                                        no\n                                                                \n                                                                \n            \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     void\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        warn\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            warn(message: string)\n                                \n                            \n            \n            \n                                    \n                                        \n                                                Defined in src/grid/services/grid-message.service.ts:16\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                                Type\n                                                            Optional\n                                                        \n                                                    \n                                                    \n                                                            \n                                                                message\n                                                                \n                                                                    \n                                                                                string\n                                                                    \n                                                                \n                                                                \n                                                                        no\n                                                                \n                                                                \n            \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     void\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n            \n\n            \n                \n                    \n                        Properties\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                            Private\n                                        _level\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                    _level:     number\n            \n                                \n                            \n                                \n                                    \n                                        Type :     number\n            \n                                    \n                                \n                                \n                                    \n                                        Default value : 2\n                                    \n                                \n                                    \n                                        \n                                                Defined in src/grid/services/grid-message.service.ts:10\n                                        \n                                    \n            \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                            Private\n                                        _message\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                    _message:     Subject\n            \n                                \n                            \n                                \n                                    \n                                        Type :     Subject\n            \n                                    \n                                \n                                \n                                    \n                                        Default value : new Subject()\n                                    \n                                \n                                    \n                                        \n                                                Defined in src/grid/services/grid-message.service.ts:8\n                                        \n                                    \n            \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                            Private\n                                        _messageObservable\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                    _messageObservable:     Observable\n            \n                                \n                            \n                                \n                                    \n                                        Type :     Observable\n            \n                                    \n                                \n                                \n                                    \n                                        Default value : this._message.asObservable()\n                                    \n                                \n                                    \n                                        \n                                                Defined in src/grid/services/grid-message.service.ts:9\n                                        \n                                    \n            \n            \n                        \n                    \n            \n\n            \n                \n                    Accessors\n                \n                    \n                        \n                            \n                                \n                                    \n                                    messageObservable\n                                \n                            \n            \n                            \n                                \n                                    getmessageObservable()\n                                \n                            \n                                        \n                                            \n                                                Defined in src/grid/services/grid-message.service.ts:20\n                                            \n                                        \n            \n                        \n                    \n            \n    \n\n\n    \n        import {Injectable} from \"@angular/core\";\n\nimport {Observable, Subject} from \"rxjs\";\n\n@Injectable()\nexport class GridMessageService {\n\n  private _message: Subject = new Subject();\n  private _messageObservable: Observable = this._message.asObservable();\n  private _level: number = 2;\n\n  error(message: string) {\n    this._message.next(\"ERROR: \" + message);\n  }\n\n  warn(message: string) {\n    this._message.next(\"WARN: \" + message);\n  }\n\n  get messageObservable(): Observable {\n    return this._messageObservable;\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/IsFixedPipe.html":{"url":"pipes/IsFixedPipe.html","title":"pipe - IsFixedPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Pipes\n  IsFixedPipe\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n\n    \n\n        \n            File\n        \n        \n            src/grid/utils/is-fixed.pipe.ts\n        \n\n\n\n        \n            Metadata\n            \n                \n                    \n                        name\n                        isFixed\n                    \n                \n            \n        \n\n            \n                \n                    \n                        Methods\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        transform\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            transform(list: Array, fixed: boolean)\n                                \n                            \n            \n            \n                                    \n                                        \n                                                Defined in src/grid/utils/is-fixed.pipe.ts:10\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                                Type\n                                                            Optional\n                                                        \n                                                    \n                                                    \n                                                            \n                                                                list\n                                                                \n                                                                    \n                                                                                Array\n                                                                    \n                                                                \n                                                                \n                                                                        no\n                                                                \n                                                                \n            \n                                                            \n                                                            \n                                                                fixed\n                                                                \n                                                                    \n                                                                                boolean\n                                                                    \n                                                                \n                                                                \n                                                                        no\n                                                                \n                                                                \n            \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     any\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n            \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from \"@angular/core\";\n\nimport { Column } from \"../column/column\";\n\n@Pipe({\n  name: \"isFixed\",\n  pure: false\n})\nexport class IsFixedPipe implements PipeTransform {\n  transform(list: Array, fixed: boolean) {\n    if (list === undefined) {\n      return list;\n    } else {\n      return list.filter((o: Column) => o.isFixed === fixed);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/IsGroupPipe.html":{"url":"pipes/IsGroupPipe.html","title":"pipe - IsGroupPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Pipes\n  IsGroupPipe\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n\n    \n\n        \n            File\n        \n        \n            src/grid/utils/is-group.pipe.ts\n        \n\n\n\n        \n            Metadata\n            \n                \n                    \n                        name\n                        isGroup\n                    \n                \n            \n        \n\n            \n                \n                    \n                        Methods\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        transform\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            transform(list: )\n                                \n                            \n            \n            \n                                    \n                                        \n                                                Defined in src/grid/utils/is-group.pipe.ts:9\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Optional\n                                                        \n                                                    \n                                                    \n                                                            \n                                                                list\n                                                                \n                                                                \n                                                                \n                                                                        no\n                                                                \n                                                                \n            \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     any\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n            \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from \"@angular/core\";\n\nimport { Column } from \"../column/column\";\n\n@Pipe({\n  name: \"isGroup\"\n})\nexport class IsGroupPipe implements PipeTransform {\n  transform(list) {\n    if (list === undefined) {\n      return list;\n    } else {\n      return list.filter((o: Column) => o.isGroup || o.isUtility);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/IsRowVisiblePipe.html":{"url":"pipes/IsRowVisiblePipe.html","title":"pipe - IsRowVisiblePipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Pipes\n  IsRowVisiblePipe\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n\n    \n\n        \n            File\n        \n        \n            src/grid/utils/is-row-visible.pipe.ts\n        \n\n\n\n        \n            Metadata\n            \n                \n                    \n                        name\n                        isRowVisible\n                    \n                \n            \n        \n\n            \n                \n                    \n                        Methods\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        transform\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            transform(list: )\n                                \n                            \n            \n            \n                                    \n                                        \n                                                Defined in src/grid/utils/is-row-visible.pipe.ts:9\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Optional\n                                                        \n                                                    \n                                                    \n                                                            \n                                                                list\n                                                                \n                                                                \n                                                                \n                                                                        no\n                                                                \n                                                                \n            \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     any\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n            \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from \"@angular/core\";\n\nimport { Row } from \"../row/row\";\n\n@Pipe({\n  name: \"isRowVisible\"\n})\nexport class IsRowVisiblePipe implements PipeTransform {\n  transform(list) {\n    if (list === undefined) {\n      return list;\n    } else {\n      return list.filter((o: Row) => o.visible);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/IsVisiblePipe.html":{"url":"pipes/IsVisiblePipe.html","title":"pipe - IsVisiblePipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Pipes\n  IsVisiblePipe\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n\n    \n\n        \n            File\n        \n        \n            src/grid/utils/is-visible.pipe.ts\n        \n\n\n\n        \n            Metadata\n            \n                \n                    \n                        name\n                        isVisible\n                    \n                \n            \n        \n\n            \n                \n                    \n                        Methods\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        transform\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            transform(list: )\n                                \n                            \n            \n            \n                                    \n                                        \n                                                Defined in src/grid/utils/is-visible.pipe.ts:9\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Optional\n                                                        \n                                                    \n                                                    \n                                                            \n                                                                list\n                                                                \n                                                                \n                                                                \n                                                                        no\n                                                                \n                                                                \n            \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     any\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n            \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from \"@angular/core\";\n\nimport { Column } from \"../column/column\";\n\n@Pipe({\n  name: \"isVisible\"\n})\nexport class IsVisiblePipe implements PipeTransform {\n  transform(list) {\n    if (list === undefined) {\n      return list;\n    } else {\n      return list.filter((o: Column) => o.visible);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Cell.html":{"url":"classes/Cell.html","title":"class - Cell","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  Cell\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/grid/cell/cell.ts\n        \n\n            \n                Description\n            \n            \n                A holder for the cell's data and other metadata needed for rendering or data management.\n\n            \n\n\n\n\n            \n                Index\n                \n                    \n                        \n                            \n                                Properties\n                            \n                        \n                        \n                            \n                                \n                                    \n                                        dirty\n                                    \n                                    \n                                        key\n                                    \n                                    \n                                        value\n                                    \n                                \n                            \n                        \n                    \n                \n            \n\n            \n                Constructor\n                    \n                        \n                            \n                                \n            constructor(o: Object)\n                                \n                            \n                                    \n                                        \n                                            Defined in src/grid/cell/cell.ts:7\n                                        \n                                    \n            \n                            \n                                \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                                Type\n                                                            Optional\n                                                        \n                                                    \n                                                    \n                                                            \n                                                                o\n                                                              \n                                                                    \n                                                                                Object\n                                                                    \n                                                              \n                                                                \n                                                                        no\n                                                                \n                                                                \n                                                            \n                                                    \n                                                \n                                        \n                                \n                            \n                        \n                    \n            \n\n\n\n            \n                \n                    \n                        Properties\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        dirty\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                    dirty:     boolean\n            \n                                \n                            \n                                \n                                    \n                                        Type :     boolean\n            \n                                    \n                                \n                                \n                                    \n                                        Default value : false\n                                    \n                                \n                                    \n                                        \n                                                Defined in src/grid/cell/cell.ts:7\n                                        \n                                    \n            \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        key\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                    key:     number\n            \n                                \n                            \n                                \n                                    \n                                        Type :     number\n            \n                                    \n                                \n                                    \n                                        \n                                                Defined in src/grid/cell/cell.ts:6\n                                        \n                                    \n            \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        value\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                    value:     any\n            \n                                \n                            \n                                \n                                    \n                                        Type :     any\n            \n                                    \n                                \n                                    \n                                        \n                                                Defined in src/grid/cell/cell.ts:5\n                                        \n                                    \n            \n            \n                        \n                    \n            \n\n    \n\n\n    \n        export class Cell {\n  value: any;\n  key: number;\n  dirty: boolean = false;\n\n  constructor(o: Object) {\n    Object.assign(this, o);\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/EmptyFactory.html":{"url":"classes/EmptyFactory.html","title":"class - EmptyFactory","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  EmptyFactory\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/grid/utils/empty.factory.ts\n        \n\n            \n                Description\n            \n            \n                Allows instantiation of any generic type if the type has no constructor arguments.\n\n            \n\n\n\n\n            \n                Index\n                \n                    \n                        \n                            \n                                Methods\n                            \n                        \n                        \n                            \n                                \n                                    \n                                        getInstance\n                                    \n                                \n                            \n                        \n                    \n                \n            \n\n            \n                Constructor\n                    \n                        \n                            \n                                \n            constructor(emptyConstructor: EmptyConstructor)\n                                \n                            \n                                    \n                                        \n                                            Defined in src/grid/utils/empty.factory.ts:4\n                                        \n                                    \n            \n                            \n                                \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                                Type\n                                                            Optional\n                                                        \n                                                    \n                                                    \n                                                            \n                                                                emptyConstructor\n                                                              \n                                                                    \n                                                                                EmptyConstructor\n                                                                    \n                                                              \n                                                                \n                                                                        no\n                                                                \n                                                                \n                                                            \n                                                    \n                                                \n                                        \n                                \n                            \n                        \n                    \n            \n\n            \n                \n                    \n                        Methods\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        getInstance\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            getInstance()\n                                \n                            \n            \n            \n                                    \n                                        \n                                                Defined in src/grid/utils/empty.factory.ts:7\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                            Returns :     T\n            \n                                        \n                                \n                            \n                        \n                    \n            \n\n\n\n    \n\n\n    \n        export class EmptyFactory {\n  constructor(private emptyConstructor: EmptyConstructor) {}\n\n  getInstance(): T {\n    return new this.emptyConstructor();\n  }\n}\n\nexport interface EmptyConstructor {\n  new(): T;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FormatterParser.html":{"url":"classes/FormatterParser.html","title":"class - FormatterParser","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  FormatterParser\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/grid/column/formatters/formatter-parser.ts\n        \n\n            \n                Description\n            \n            \n                Most simple formatter parser which just returns the value without modification.\n\n            \n\n\n\n\n            \n                Index\n                \n                    \n                        \n                            \n                                Properties\n                            \n                        \n                        \n                            \n                                \n                                    \n                                        config\n                                    \n                                \n                            \n                        \n                        \n                            \n                                Methods\n                            \n                        \n                        \n                            \n                                \n                                    \n                                        formatValue\n                                    \n                                    \n                                        parseValue\n                                    \n                                    \n                                        setConfig\n                                    \n                                \n                            \n                        \n                    \n                \n            \n\n\n            \n                \n                    \n                        Methods\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        formatValue\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            formatValue(value: any)\n                                \n                            \n            \n            \n                                    \n                                        \n                                                Defined in src/grid/column/formatters/formatter-parser.ts:12\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                                Type\n                                                            Optional\n                                                        \n                                                    \n                                                    \n                                                            \n                                                                value\n                                                                \n                                                                    \n                                                                                any\n                                                                    \n                                                                \n                                                                \n                                                                        no\n                                                                \n                                                                \n            \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     any\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        parseValue\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            parseValue(value: any)\n                                \n                            \n            \n            \n                                    \n                                        \n                                                Defined in src/grid/column/formatters/formatter-parser.ts:16\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                                Type\n                                                            Optional\n                                                        \n                                                    \n                                                    \n                                                            \n                                                                value\n                                                                \n                                                                    \n                                                                                any\n                                                                    \n                                                                \n                                                                \n                                                                        no\n                                                                \n                                                                \n            \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     any\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        setConfig\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            setConfig(config: any)\n                                \n                            \n            \n            \n                                    \n                                        \n                                                Defined in src/grid/column/formatters/formatter-parser.ts:8\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                                Type\n                                                            Optional\n                                                        \n                                                    \n                                                    \n                                                            \n                                                                config\n                                                                \n                                                                    \n                                                                                any\n                                                                    \n                                                                \n                                                                \n                                                                        no\n                                                                \n                                                                \n            \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     void\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n            \n\n\n            \n                \n                    \n                        Properties\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        config\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                    config:     any\n            \n                                \n                            \n                                \n                                    \n                                        Type :     any\n            \n                                    \n                                \n                                \n                                    \n                                        Default value : {}\n                                    \n                                \n                                    \n                                        \n                                                Defined in src/grid/column/formatters/formatter-parser.ts:6\n                                        \n                                    \n            \n            \n                        \n                    \n            \n\n    \n\n\n    \n        export class FormatterParser {\n\n  config: any = {};\n\n  setConfig(config: any) {\n    this.config = config;\n  }\n\n  formatValue(value: any): any {\n    return value;\n  }\n\n  parseValue(value: any): any {\n    return value;\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/HtmlUtil.html":{"url":"classes/HtmlUtil.html","title":"class - HtmlUtil","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  HtmlUtil\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/grid/utils/html-util.ts\n        \n\n            \n                Description\n            \n            \n                Convenience class for pulling things such as id from an element.\n\n            \n\n\n\n\n            \n                Index\n                \n                    \n                        \n                            \n                                Methods\n                            \n                        \n                        \n                            \n                                \n                                    \n                                            Static\n                                        getId\n                                    \n                                    \n                                            Static\n                                        getIdElement\n                                    \n                                    \n                                            Static\n                                        getLocation\n                                    \n                                \n                            \n                        \n                    \n                \n            \n\n\n            \n                \n                    \n                        Methods\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                            Static\n                                        getId\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                        \n                                    getId(e: HTMLElement, id?: string)\n                                \n                            \n            \n            \n                                    \n                                        \n                                                Defined in src/grid/utils/html-util.ts:8\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                                Type\n                                                            Optional\n                                                        \n                                                    \n                                                    \n                                                            \n                                                                e\n                                                                \n                                                                    \n                                                                                HTMLElement\n                                                                    \n                                                                \n                                                                \n                                                                        no\n                                                                \n                                                                \n            \n                                                            \n                                                            \n                                                                id\n                                                                \n                                                                    \n                                                                                string\n                                                                    \n                                                                \n                                                                \n                                                                        yes\n                                                                \n                                                                \n            \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     string\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                            Static\n                                        getIdElement\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                        \n                                    getIdElement(e: HTMLElement)\n                                \n                            \n            \n            \n                                    \n                                        \n                                                Defined in src/grid/utils/html-util.ts:23\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                                Type\n                                                            Optional\n                                                        \n                                                    \n                                                    \n                                                            \n                                                                e\n                                                                \n                                                                    \n                                                                                HTMLElement\n                                                                    \n                                                                \n                                                                \n                                                                        no\n                                                                \n                                                                \n            \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     HTMLElement\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                            Static\n                                        getLocation\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                        \n                                    getLocation(e: HTMLElement)\n                                \n                            \n            \n            \n                                    \n                                        \n                                                Defined in src/grid/utils/html-util.ts:38\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                                Type\n                                                            Optional\n                                                        \n                                                    \n                                                    \n                                                            \n                                                                e\n                                                                \n                                                                    \n                                                                                HTMLElement\n                                                                    \n                                                                \n                                                                \n                                                                        no\n                                                                \n                                                                \n            \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     Point\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n            \n\n\n\n    \n\n\n    \n        import {Point} from \"./point\";\n\n/**\n * Convenience class for pulling things such as id from an element.\n */\nexport class HtmlUtil {\n\n  static getId(e: HTMLElement, id?: string): string {\n    if (!e) {\n      return \"\";\n    }\n    while ((!id && e.id === \"\") || (id && !e.id.startsWith(id))) {\n      if (e.parentElement) {\n        e = e.parentElement;\n      } else {\n        break;\n      }\n    }\n\n    return e.id;\n  }\n\n  static getIdElement(e: HTMLElement): HTMLElement {\n    if (!e) {\n      return null;\n    }\n    while (e.id === \"\") {\n      if (e.parentElement) {\n        e = e.parentElement;\n      } else {\n        break;\n      }\n    }\n\n    return e;\n  }\n\n  static getLocation(e: HTMLElement): Point {\n    return Point.getPoint(this.getId(e));\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/InjectableFactory.html":{"url":"classes/InjectableFactory.html","title":"class - InjectableFactory","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  InjectableFactory\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/grid/utils/injectable.factory.ts\n        \n\n            \n                Description\n            \n            \n                Allows instantiation of any generic type if the type expects an injector argument.  See the implementation of\nthe EventListener.\n\n            \n\n\n\n\n            \n                Index\n                \n                    \n                        \n                            \n                                Methods\n                            \n                        \n                        \n                            \n                                \n                                    \n                                        getInstance\n                                    \n                                \n                            \n                        \n                    \n                \n            \n\n            \n                Constructor\n                    \n                        \n                            \n                                \n            constructor(ic: InjectableConstructor, injector: Injector)\n                                \n                            \n                                    \n                                        \n                                            Defined in src/grid/utils/injectable.factory.ts:7\n                                        \n                                    \n            \n                            \n                                \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                                Type\n                                                            Optional\n                                                        \n                                                    \n                                                    \n                                                            \n                                                                ic\n                                                              \n                                                                    \n                                                                                InjectableConstructor\n                                                                    \n                                                              \n                                                                \n                                                                        no\n                                                                \n                                                                \n                                                            \n                                                            \n                                                                injector\n                                                              \n                                                                    \n                                                                                Injector\n                                                                    \n                                                              \n                                                                \n                                                                        no\n                                                                \n                                                                \n                                                            \n                                                    \n                                                \n                                        \n                                \n                            \n                        \n                    \n            \n\n            \n                \n                    \n                        Methods\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        getInstance\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            getInstance()\n                                \n                            \n            \n            \n                                    \n                                        \n                                                Defined in src/grid/utils/injectable.factory.ts:10\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                            Returns :     T\n            \n                                        \n                                \n                            \n                        \n                    \n            \n\n\n\n    \n\n\n    \n        import {Injector} from \"@angular/core\";\n\n/**\n * Allows instantiation of any generic type if the type expects an injector argument.  See the implementation of\n * the EventListener.\n */\nexport class InjectableFactory {\n  constructor(private ic: InjectableConstructor, private injector: Injector) {}\n\n  getInstance(): T {\n    return new this.ic(this.injector);\n  }\n}\n\nexport interface InjectableConstructor {\n  new(injector: Injector): T;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RowChange.html":{"url":"classes/RowChange.html","title":"class - RowChange","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  RowChange\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/grid/utils/row-change.ts\n        \n\n\n\n\n\n            \n                Index\n                \n                    \n                        \n                            \n                                Properties\n                            \n                        \n                        \n                            \n                                \n                                    \n                                        newRowNum\n                                    \n                                    \n                                        oldRowNum\n                                    \n                                \n                            \n                        \n                    \n                \n            \n\n            \n                Constructor\n                    \n                        \n                            \n                                \n            constructor(oldRowNum: number, newRowNum: number)\n                                \n                            \n                                    \n                                        \n                                            Defined in src/grid/utils/row-change.ts:4\n                                        \n                                    \n            \n                            \n                                \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                                Type\n                                                            Optional\n                                                        \n                                                    \n                                                    \n                                                            \n                                                                oldRowNum\n                                                              \n                                                                    \n                                                                                number\n                                                                    \n                                                              \n                                                                \n                                                                        no\n                                                                \n                                                                \n                                                            \n                                                            \n                                                                newRowNum\n                                                              \n                                                                    \n                                                                                number\n                                                                    \n                                                              \n                                                                \n                                                                        no\n                                                                \n                                                                \n                                                            \n                                                    \n                                                \n                                        \n                                \n                            \n                        \n                    \n            \n\n\n\n            \n                \n                    \n                        Properties\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        newRowNum\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                    newRowNum:     number\n            \n                                \n                            \n                                \n                                    \n                                        Type :     number\n            \n                                    \n                                \n                                    \n                                        \n                                                Defined in src/grid/utils/row-change.ts:4\n                                        \n                                    \n            \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        oldRowNum\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                    oldRowNum:     number\n            \n                                \n                            \n                                \n                                    \n                                        Type :     number\n            \n                                    \n                                \n                                    \n                                        \n                                                Defined in src/grid/utils/row-change.ts:3\n                                        \n                                    \n            \n            \n                        \n                    \n            \n\n    \n\n\n    \n        export class RowChange {\n\n  oldRowNum: number;\n  newRowNum: number;\n\n  constructor(oldRowNum: number, newRowNum: number) {\n    this.oldRowNum = oldRowNum;\n    this.newRowNum = newRowNum;\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ClickListener.html":{"url":"interfaces/ClickListener.html","title":"interface - ClickListener","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ClickListener\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/grid/event/click.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    click\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n                \n                    \n                        Methods\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        click\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            click(event: MouseEvent)\n                                \n                            \n            \n            \n                                    \n                                        \n                                                Defined in src/grid/event/click.interface.ts:3\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                                Type\n                                                            Optional\n                                                        \n                                                    \n                                                    \n                                                            \n                                                                event\n                                                                \n                                                                    \n                                                                                MouseEvent\n                                                                    \n                                                                \n                                                                \n                                                                        no\n                                                                \n                                                                \n            \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     boolean\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n            \n\n\n    \n\n\n    \n        export interface ClickListener {\n\n  click(event: MouseEvent): boolean;\n\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DblClickListener.html":{"url":"interfaces/DblClickListener.html","title":"interface - DblClickListener","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  DblClickListener\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/grid/event/dbl-click.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    dblclick\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n                \n                    \n                        Methods\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        dblclick\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            dblclick(event: MouseEvent)\n                                \n                            \n            \n            \n                                    \n                                        \n                                                Defined in src/grid/event/dbl-click.interface.ts:3\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                                Type\n                                                            Optional\n                                                        \n                                                    \n                                                    \n                                                            \n                                                                event\n                                                                \n                                                                    \n                                                                                MouseEvent\n                                                                    \n                                                                \n                                                                \n                                                                        no\n                                                                \n                                                                \n            \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     boolean\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n            \n\n\n    \n\n\n    \n        export interface DblClickListener {\n\n  dblclick(event: MouseEvent): boolean;\n\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Dictionary.html":{"url":"interfaces/Dictionary.html","title":"interface - Dictionary","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Dictionary\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/grid/model/dictionary.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        display\n                                \n                                \n                                        value\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        display\n                                    \n                                \n                                \n                                    \n                                        display:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n                                    \n                                        \n                                            Defined in src/grid/model/dictionary.interface.ts:3\n                                        \n                                    \n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        value\n                                    \n                                \n                                \n                                    \n                                        value:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n                                    \n                                        \n                                            Defined in src/grid/model/dictionary.interface.ts:2\n                                        \n                                    \n\n                        \n                    \n            \n    \n\n\n    \n        export interface Dictionary {\n  value: string;\n  display: string;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/EmptyConstructor.html":{"url":"interfaces/EmptyConstructor.html","title":"interface - EmptyConstructor","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  EmptyConstructor\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/grid/utils/empty.factory.ts\n        \n\n\n\n\n\n\n    \n\n\n    \n        export class EmptyFactory {\n  constructor(private emptyConstructor: EmptyConstructor) {}\n\n  getInstance(): T {\n    return new this.emptyConstructor();\n  }\n}\n\nexport interface EmptyConstructor {\n  new(): T;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/EventListenerArg.html":{"url":"interfaces/EventListenerArg.html","title":"interface - EventListenerArg","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  EventListenerArg\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/grid/event/event-listener-arg.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        config\n                                \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        config\n                                    \n                                \n                                \n                                    \n                                        config:     any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/grid/event/event-listener-arg.interface.ts:5\n                                        \n                                    \n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     Type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Type\n\n                                        \n                                    \n\n\n\n\n                                    \n                                        \n                                            Defined in src/grid/event/event-listener-arg.interface.ts:4\n                                        \n                                    \n\n                        \n                    \n            \n    \n\n\n    \n        import {Type} from \"@angular/core\";\n\nexport interface EventListenerArg {\n  type: Type;\n  config?: any;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/InjectableConstructor.html":{"url":"interfaces/InjectableConstructor.html","title":"interface - InjectableConstructor","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  InjectableConstructor\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/grid/utils/injectable.factory.ts\n        \n\n\n\n\n\n\n    \n\n\n    \n        import {Injector} from \"@angular/core\";\n\n/**\n * Allows instantiation of any generic type if the type expects an injector argument.  See the implementation of\n * the EventListener.\n */\nexport class InjectableFactory {\n  constructor(private ic: InjectableConstructor, private injector: Injector) {}\n\n  getInstance(): T {\n    return new this.ic(this.injector);\n  }\n}\n\nexport interface InjectableConstructor {\n  new(injector: Injector): T;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MouseDownListener.html":{"url":"interfaces/MouseDownListener.html","title":"interface - MouseDownListener","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  MouseDownListener\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/grid/event/mouse-down.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    mouseDown\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n                \n                    \n                        Methods\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        mouseDown\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            mouseDown(event: MouseEvent)\n                                \n                            \n            \n            \n                                    \n                                        \n                                                Defined in src/grid/event/mouse-down.interface.ts:3\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                                Type\n                                                            Optional\n                                                        \n                                                    \n                                                    \n                                                            \n                                                                event\n                                                                \n                                                                    \n                                                                                MouseEvent\n                                                                    \n                                                                \n                                                                \n                                                                        no\n                                                                \n                                                                \n            \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     boolean\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n            \n\n\n    \n\n\n    \n        export interface MouseDownListener {\n\n  mouseDown(event: MouseEvent): boolean;\n\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MouseDragListener.html":{"url":"interfaces/MouseDragListener.html","title":"interface - MouseDragListener","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  MouseDragListener\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/grid/event/mouse-drag.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    mouseDrag\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n                \n                    \n                        Methods\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        mouseDrag\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            mouseDrag(event: MouseEvent)\n                                \n                            \n            \n            \n                                    \n                                        \n                                                Defined in src/grid/event/mouse-drag.interface.ts:3\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                                Type\n                                                            Optional\n                                                        \n                                                    \n                                                    \n                                                            \n                                                                event\n                                                                \n                                                                    \n                                                                                MouseEvent\n                                                                    \n                                                                \n                                                                \n                                                                        no\n                                                                \n                                                                \n            \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     boolean\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n            \n\n\n    \n\n\n    \n        export interface MouseDragListener {\n\n  mouseDrag(event: MouseEvent): boolean;\n\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MouseOutListener.html":{"url":"interfaces/MouseOutListener.html","title":"interface - MouseOutListener","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  MouseOutListener\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/grid/event/mouse-out.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    mouseOut\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n                \n                    \n                        Methods\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        mouseOut\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            mouseOut(event: MouseEvent)\n                                \n                            \n            \n            \n                                    \n                                        \n                                                Defined in src/grid/event/mouse-out.interface.ts:3\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                                Type\n                                                            Optional\n                                                        \n                                                    \n                                                    \n                                                            \n                                                                event\n                                                                \n                                                                    \n                                                                                MouseEvent\n                                                                    \n                                                                \n                                                                \n                                                                        no\n                                                                \n                                                                \n            \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     boolean\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n            \n\n\n    \n\n\n    \n        export interface MouseOutListener {\n\n  mouseOut(event: MouseEvent): boolean;\n\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MouseOverListener.html":{"url":"interfaces/MouseOverListener.html","title":"interface - MouseOverListener","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  MouseOverListener\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/grid/event/mouse-over.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    mouseOver\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n                \n                    \n                        Methods\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        mouseOver\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            mouseOver(event: MouseEvent)\n                                \n                            \n            \n            \n                                    \n                                        \n                                                Defined in src/grid/event/mouse-over.interface.ts:3\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                                Type\n                                                            Optional\n                                                        \n                                                    \n                                                    \n                                                            \n                                                                event\n                                                                \n                                                                    \n                                                                                MouseEvent\n                                                                    \n                                                                \n                                                                \n                                                                        no\n                                                                \n                                                                \n            \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     boolean\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n            \n\n\n    \n\n\n    \n        export interface MouseOverListener {\n\n  mouseOver(event: MouseEvent): boolean;\n\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MouseUpListener.html":{"url":"interfaces/MouseUpListener.html","title":"interface - MouseUpListener","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  MouseUpListener\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/grid/event/mouse-up.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    mouseUp\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n                \n                    \n                        Methods\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        mouseUp\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            mouseUp(event: MouseEvent)\n                                \n                            \n            \n            \n                                    \n                                        \n                                                Defined in src/grid/event/mouse-up.interface.ts:3\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                                Type\n                                                            Optional\n                                                        \n                                                    \n                                                    \n                                                            \n                                                                event\n                                                                \n                                                                    \n                                                                                MouseEvent\n                                                                    \n                                                                \n                                                                \n                                                                        no\n                                                                \n                                                                \n            \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     boolean\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n            \n\n\n    \n\n\n    \n        export interface MouseUpListener {\n\n  mouseUp(event: MouseEvent): boolean;\n\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ARROW\n                        \n                        \n                            CLICK\n                        \n                        \n                            NO_EVENT\n                        \n                        \n                            RESIZE\n                        \n                        \n                            SCROLL\n                        \n                        \n                            TAB\n                        \n                    \n                \n            \n        \n    \n\n\n    src/grid/services/grid-event.service.ts\n    \n                \n                \n                    \n                        \n                            \n                            \n                                \n                                ARROW\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n                            ARROW:     number\n    \n                        \n                    \n                        \n                            \n                                Type :     number\n    \n                            \n                        \n                        \n                            \n                                Default value : 2\n                            \n                        \n    \n    \n                \n            \n            \n                \n                    \n                        \n                            \n                            \n                                \n                                CLICK\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n                            CLICK:     number\n    \n                        \n                    \n                        \n                            \n                                Type :     number\n    \n                            \n                        \n                        \n                            \n                                Default value : 0\n                            \n                        \n    \n    \n                \n            \n            \n                \n                    \n                        \n                            \n                            \n                                \n                                TAB\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n                            TAB:     number\n    \n                        \n                    \n                        \n                            \n                                Type :     number\n    \n                            \n                        \n                        \n                            \n                                Default value : 1\n                            \n                        \n    \n    \n                \n            \n    \n    src/grid/grid.component.ts\n    \n                \n                \n                    \n                        \n                            \n                            \n                                \n                                NO_EVENT\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n                            NO_EVENT:     number\n    \n                        \n                    \n                        \n                            \n                                Type :     number\n    \n                            \n                        \n                        \n                            \n                                Default value : -1\n                            \n                        \n    \n    \n                \n            \n            \n                \n                    \n                        \n                            \n                            \n                                \n                                RESIZE\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n                            RESIZE:     number\n    \n                        \n                    \n                        \n                            \n                                Type :     number\n    \n                            \n                        \n                        \n                            \n                                Default value : 0\n                            \n                        \n    \n    \n                \n            \n            \n                \n                    \n                        \n                            \n                            \n                                \n                                SCROLL\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n                            SCROLL:     number\n    \n                        \n                    \n                        \n                            \n                                Type :     number\n    \n                            \n                        \n                        \n                            \n                                Default value : 1\n                            \n                        \n    \n    \n                \n            \n    \n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
