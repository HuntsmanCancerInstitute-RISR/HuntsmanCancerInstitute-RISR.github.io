var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.1.6","fields":["title","body"],"fieldVectors":[["title/dependencies.html",[0,2.175,1,2.146]],["body/dependencies.html",[1,2.662,2,3.358,3,3.876,4,3.358,5,0.032,6,4.662,7,4.662,8,4.662,9,0.029,10,0.029]],["title/index.html",[11,1.668,12,1.885,13,0.446]],["body/index.html",[0,0.738,1,0.507,2,1.515,5,0.03,9,0.008,10,0.008,11,0.566,14,0.888,15,0.888,16,3.782,17,0.888,18,2.104,19,1.567,20,0.888,21,0.888,22,0.888,23,2.104,24,2.408,25,2.896,26,0.888,27,0.888,28,0.888,29,3.277,30,0.888,31,0.64,32,0.64,33,2.749,34,0.738,35,2.104,36,0.888,37,1.567,38,0.888,39,0.888,40,0.513,41,0.507,42,0.888,43,0.888,44,1.303,45,0.888,46,0.888,47,0.888,48,0.888,49,0.888,50,0.738,51,0.888,52,2.872,53,0.888,54,2.104,55,2.658,56,0.888,57,0.888,58,1.567,59,0.888,60,0.888,61,0.888,62,2.896,63,0.738,64,1.129,65,2.305,66,0.888,67,3.357,68,2.305,69,0.738,70,1.567,71,1.567,72,3.868,73,0.888,74,2.104,75,1.567,76,0.888,77,1.567,78,0.888,79,3.163,80,3.454,81,0.888,82,0.888,83,2.872,84,2.11,85,0.888,86,1.567,87,0.069,88,2.024,89,2.908,90,0.738,91,1.567,92,0.888,93,1.303,94,0.888,95,0.888,96,0.888,97,0.888,98,2.104,99,1.201,100,0.888,101,0.566,102,2.538,103,1.567,104,0.999,105,0.986,106,1.749,107,2.538,108,0.888,109,0.888,110,0.888,111,0.738,112,0.121,113,1.085,114,0.888,115,0.888,116,0.888,117,0.888,118,0.888,119,0.888,120,0.888,121,0.888,122,0.771,123,1.749,124,2.16,125,2.408,126,1.567,127,0.888,128,0.888,129,0.888,130,2.896,131,0.888,132,2.104,133,1.303,134,0.738,135,0.888,136,0.888,137,0.888,138,2.11,139,0.347,140,0.888,141,0.592,142,0.888,143,0.888,144,1.235,145,2.086,146,0.888,147,1.749,148,0.507,149,0.738,150,0.888,151,1.567,152,1.567,153,2.104,154,0.888,155,2.104,156,1.567,157,0.888,158,0.738,159,0.888,160,1.567,161,0.888,162,0.888,163,0.888,164,1.515,165,1.567,166,0.888,167,0.888,168,0.888,169,0.888,170,0.888,171,3.056,172,0.888,173,0.888,174,0.888,175,1.567,176,0.888,177,0.888,178,0.888,179,0.888,180,2.305,181,0.888,182,1.567,183,0.888,184,1.567,185,0.888,186,0.888,187,0.888,188,0.888,189,1.129,190,0.888,191,1.303,192,1.303,193,0.888,194,0.888,195,3.454,196,0.888,197,0.888,198,0.738,199,0.888,200,0.888,201,0.888,202,1.303,203,0.888,204,0.888,205,0.64,206,0.888,207,2.658,208,0.888,209,0.888,210,1.567,211,0.888,212,0.888,213,0.888,214,1.749,215,0.888,216,0.888,217,1.567,218,2.104,219,2.658,220,0.888,221,1.567,222,1.567,223,0.888,224,0.888,225,1.189,226,0.888,227,0.888,228,0.888,229,1.567,230,0.888,231,0.888,232,1.129,233,0.888,234,2.538,235,0.888,236,0.888,237,0.888,238,0.888,239,0.738,240,0.888,241,0.888,242,0.888,243,0.888,244,0.888,245,0.888,246,2.786,247,1.617,248,0.888,249,0.888,250,0.888,251,0.888,252,0.738,253,0.888,254,0.888,255,1.303,256,0.888,257,0.163,258,0.888,259,0.069,260,0.168,261,0.738,262,0.888,263,0.888,264,0.888,265,1.303,266,0.888,267,0.888,268,1.567,269,0.888,270,1.567,271,0.888,272,0.888,273,0.888,274,0.888,275,0.888,276,0.738,277,1.567,278,0.888,279,0.888,280,0.888,281,2.538,282,0.888,283,0.64,284,0.888,285,1.303,286,0.888,287,0.888,288,0.888,289,1.567,290,0.64,291,0.64,292,1.567,293,0.64,294,0.888,295,1.567,296,1.129,297,1.567,298,0.64,299,0.888,300,0.888,301,0.888,302,0.738,303,0.888,304,0.888,305,0.738,306,0.738]],["title/overview.html",[307,3.538]],["body/overview.html",[1,1.469,4,1.853,5,0.033,9,0.02,10,0.02,41,3.629,104,1.639,106,2.138,189,1.853,257,0.2,259,0.2,283,3.136,290,3.136,291,3.136,293,3.136,298,3.136,307,2.138,308,2.138,309,2.138,310,2.119,311,0.2,312,2.138,313,2.138,314,2.138,315,2.138,316,4.935,317,3.62,318,2.775,319,2.775,320,2.775,321,2.775,322,3.62,323,3.62,324,3.62,325,3.62,326,3.62,327,3.62,328,2.775,329,3.086,330,2.138,331,1.853,332,3.712,333,3.712,334,1.853,335,1.005,336,2.572]],["title/changelog.html",[11,1.668,12,1.885,337,2.617]],["body/changelog.html",[5,0.023,9,0.023,10,0.023,16,3.624,24,2.693,29,3.14,32,2.333,52,2.693,63,2.693,65,3.009,69,2.693,79,2.778,83,2.693,84,2.693,89,3.549,90,3.624,101,2.064,111,2.693,134,2.693,138,4.096,147,2.693,148,1.85,164,3.549,202,2.693,246,3.14,247,2.064,276,3.624,285,2.693,296,2.333,305,2.693,338,3.239,339,3.239,340,3.239,341,3.239,342,2.064,343,4.359,344,3.239,345,4.359,346,3.239,347,3.239,348,3.239,349,3.239,350,3.239,351,3.239,352,3.239,353,3.239,354,3.239,355,3.239,356,2.693,357,3.239,358,3.239,359,3.239,360,3.239,361,3.239,362,3.239,363,4.359,364,3.239,365,3.239,366,3.239,367,3.239,368,2.693,369,2.693,370,3.239,371,3.239,372,3.239,373,3.239,374,3.239]],["title/license.html",[11,1.668,12,1.885,356,2.175]],["body/license.html",[5,0.023,9,0.023,10,0.023,44,2.564,50,4.294,55,3.505,88,1.318,93,2.564,104,1.966,149,2.564,158,2.564,191,3.505,265,2.564,306,2.564,331,2.221,368,2.564,375,3.994,376,2.564,377,3.084,378,2.564,379,2.564,380,2.564,381,2.564,382,2.564,383,4.217,384,3.084,385,3.084,386,3.084,387,3.084,388,4.217,389,3.084,390,5.902,391,3.084,392,3.084,393,0.24,394,4.217,395,3.994,396,3.084,397,4.805,398,3.084,399,3.084,400,3.084,401,3.084,402,3.084,403,3.084,404,3.084,405,2.564,406,3.084,407,4.217,408,4.217,409,3.084,410,3.084,411,4.217,412,3.084,413,3.084,414,3.084,415,3.084,416,3.084,417,3.084,418,3.084,419,3.084,420,3.084,421,2.564,422,3.084,423,3.084,424,3.084,425,3.084,426,3.084,427,3.084,428,3.084,429,3.084,430,3.084]],["title/modules.html",[310,2.43]],["body/modules.html",[5,0.03,9,0.03,10,0.03,32,3.42,41,2.711,310,2.711,431,4.748,432,4.748,433,4.748]],["title/modules/GridModule.html",[41,1.785,310,1.785]],["body/modules/GridModule.html",[1,0.91,2,1.148,3,1.325,4,1.852,5,0.033,9,0.014,10,0.014,40,1.895,41,3.495,67,2.688,79,1.015,87,0.124,104,2.061,112,0.218,257,0.124,283,3.433,290,3.433,291,3.433,293,3.433,298,3.433,308,1.325,309,2.688,310,1.468,311,0.288,312,1.325,313,1.325,314,1.325,315,1.325,316,4.707,317,3.62,318,2.775,319,2.775,320,2.775,321,2.775,322,3.963,323,3.963,324,3.62,325,3.62,326,2.688,327,2.688,328,2.061,329,2.138,330,1.325,331,1.148,375,1.325,376,1.325,378,1.325,379,1.325,380,1.325,381,1.325,382,1.325,393,0.124,434,0.146,435,1.593,436,2.572,437,1.593,438,1.593,439,1.593,440,2.572,441,3.234,442,0.622,443,2.572,444,1.593,445,2.572,446,1.593,447,1.593,448,1.593,449,1.015,450,1.593,451,3.711,452,2.572,453,1.593,454,1.593,455,1.593,456,3.234,457,4.354,458,1.593,459,1.593,460,1.593,461,1.593,462,1.593,463,1.593,464,1.593,465,2.572,466,1.593,467,2.572,468,1.593,469,1.593,470,1.593,471,1.593,472,1.593,473,1.325,474,1.593,475,3.234,476,1.593]],["title/injectables/GridMessageService.html",[328,1.993,334,2.252]],["body/injectables/GridMessageService.html",[5,0.034,9,0.019,10,0.019,13,0.424,33,2.205,40,1.187,68,2.974,87,0.193,112,0.584,113,1.87,122,0.681,139,0.495,141,0.555,180,2.441,214,3.013,225,2.003,239,3.903,257,0.193,260,0.684,311,0.193,328,2.31,334,3.079,369,4.148,393,0.193,405,4.329,434,0.228,442,0.972,477,4.469,478,2.49,479,1.698,480,4.045,481,4.695,482,4.695,483,4.695,484,3.625,485,3.625,486,4.274,487,3.625,488,0.711,489,2.49,490,0.618,491,2.611,492,3.625,493,2.49,494,3.013,495,2.49,496,2.49,497,3.625,498,2.49,499,2.49,500,2.49,501,2.49,502,2.49,503,2.49,504,2.49]],["title/pipes/IsFixedPipe.html",[320,1.993,335,1.221]],["body/pipes/IsFixedPipe.html",[5,0.034,9,0.024,10,0.024,40,1.452,65,2.532,87,0.258,99,2.849,105,1.557,112,0.681,122,0.454,124,1.714,125,4.149,139,0.454,141,0.764,144,1.784,145,2.393,164,3.835,255,2.762,257,0.258,260,0.627,311,0.258,320,2.826,335,1.949,393,0.258,434,0.304,442,1.298,449,2.117,488,0.454,490,0.566,505,2.826,506,3.323,507,1.897,508,4.434,509,2.117,510,2.826,511,3.323,512,2.826,513,2.117,514,3.323]],["title/pipes/IsGroupPipe.html",[319,1.993,335,1.221]],["body/pipes/IsGroupPipe.html",[5,0.034,9,0.025,10,0.025,40,1.499,65,2.614,87,0.271,99,2.918,105,1.634,112,0.698,124,1.799,139,0.476,141,0.782,257,0.271,260,0.658,311,0.271,319,2.917,335,1.996,393,0.271,434,0.319,442,1.362,449,2.222,488,0.476,490,0.594,505,2.917,507,1.991,509,2.222,510,2.917,512,2.917,513,2.222,515,3.487,516,4.578,517,3.487,518,3.487,519,3.487]],["title/pipes/IsRowVisiblePipe.html",[321,1.993,335,1.221]],["body/pipes/IsRowVisiblePipe.html",[5,0.034,9,0.025,10,0.025,40,1.499,79,3.458,87,0.271,99,2.918,105,1.634,112,0.698,124,1.799,139,0.476,141,0.782,257,0.271,260,0.658,311,0.271,321,2.917,335,1.996,393,0.271,434,0.319,442,1.362,488,0.476,490,0.594,505,2.917,507,1.991,509,2.222,510,2.917,512,2.917,513,2.222,520,2.899,521,4.578,522,2.899,523,3.487,524,2.899]],["title/pipes/IsVisiblePipe.html",[318,1.993,335,1.221]],["body/pipes/IsVisiblePipe.html",[5,0.034,9,0.025,10,0.025,40,1.508,65,2.63,87,0.273,99,2.931,105,1.649,112,0.701,124,1.815,139,0.481,141,0.786,257,0.273,260,0.664,311,0.273,318,2.935,335,2.005,393,0.273,434,0.322,442,1.374,449,2.242,488,0.481,490,0.6,505,2.935,507,2.009,509,2.242,510,2.935,512,2.935,513,2.242,520,2.925,522,2.925,524,2.925,525,4.605]],["title/classes/Cell.html",[247,1.993,257,0.243]],["body/classes/Cell.html",[5,0.033,9,0.024,10,0.024,13,0.564,29,3.184,33,1.707,87,0.257,122,0.726,123,4.14,139,0.452,141,0.506,144,1.78,145,3.184,180,2.843,198,4.419,207,4.419,225,2.596,246,2.383,247,2.817,257,0.344,311,0.257,393,0.257,421,2.75,434,0.303,479,2.072,488,0.726,490,0.564,507,1.889,526,3.308,527,1.889,528,3.308,529,3.308,530,3.308,531,2.108,532,4.421,533,4.421,534,4.421,535,3.308,536,3.308,537,3.308]],["title/classes/EmptyFactory.html",[257,0.243,538,2.252]],["body/classes/EmptyFactory.html",[5,0.033,9,0.025,10,0.025,13,0.608,87,0.277,112,0.635,113,2.397,122,0.706,139,0.487,141,0.546,148,2.037,257,0.361,259,0.277,260,0.877,311,0.361,342,2.273,393,0.277,434,0.326,488,0.635,490,0.608,527,2.037,531,2.961,538,3.347,539,2.966,540,2.569,541,2.569,542,3.489,543,3.567,544,4.192,545,3.567,546,3.567,547,3.293,548,2.273,549,2.966]],["title/classes/FormatterParser.html",[257,0.243,550,2.599]],["body/classes/FormatterParser.html",[5,0.034,9,0.021,10,0.021,13,0.482,33,1.458,34,2.349,87,0.22,112,0.778,122,0.679,124,2.047,139,0.626,141,0.702,225,2.669,232,3.913,257,0.308,260,0.749,261,3.299,311,0.22,393,0.22,395,2.349,434,0.258,479,1.859,488,0.679,490,0.782,491,2.035,527,1.613,550,3.299,551,5.24,552,2.826,553,2.826,554,2.826,555,2.826,556,3.968,557,3.968,558,3.968,559,3.968,560,2.826,561,3.968,562,2.826,563,2.826,564,2.826,565,2.826]],["title/classes/HtmlUtil.html",[257,0.243,566,2.599]],["body/classes/HtmlUtil.html",[5,0.034,9,0.019,10,0.019,13,0.406,40,0.78,68,2.799,87,0.185,112,0.743,122,0.569,133,4.408,139,0.569,141,0.638,252,2.918,257,0.357,260,0.663,302,2.918,311,0.185,393,0.185,434,0.218,473,4.617,488,0.569,490,0.71,527,1.36,566,2.918,567,4.598,568,2.382,569,3.51,570,3.51,571,3.51,572,3.51,573,3.51,574,3.51,575,3.51,576,3.51,577,5.727,578,2.382,579,5.441,580,2.382,581,3.51,582,2.382,583,3.51,584,2.382,585,4.598,586,4.167,587,2.382,588,4.598,589,1.981,590,2.382]],["title/classes/InjectableFactory.html",[257,0.243,591,2.252]],["body/classes/InjectableFactory.html",[5,0.033,9,0.023,10,0.023,13,0.534,31,3.07,40,1.026,87,0.244,101,2.717,105,1.998,112,0.582,113,1.617,122,0.743,139,0.428,141,0.48,148,2.434,257,0.331,259,0.244,260,0.805,311,0.331,342,2.717,393,0.244,434,0.287,442,1.224,480,2.257,488,0.582,490,0.534,527,1.79,531,1.997,540,3.07,541,3.07,542,3.313,547,3.087,548,1.997,591,3.07,592,2.606,593,4.978,594,3.544,595,3.134,596,3.745,597,3.134,598,3.544,599,3.134,600,2.606,601,2.606]],["title/classes/RowChange.html",[257,0.243,602,2.599]],["body/classes/RowChange.html",[5,0.033,9,0.024,10,0.024,13,0.586,87,0.267,122,0.693,139,0.47,141,0.527,180,3.529,257,0.353,311,0.267,393,0.267,434,0.315,479,2.126,488,0.693,490,0.586,531,2.193,602,3.772,603,5.399,604,3.441,605,5.965,606,5.763,607,4.538,608,4.538,609,3.441,610,3.441,611,3.441]],["title/classes/SortInfo.html",[257,0.243,612,2.599]],["body/classes/SortInfo.html",[5,0.034,9,0.02,10,0.02,13,0.449,33,1.947,68,3.194,87,0.205,112,0.725,122,0.658,139,0.515,141,0.578,144,1.999,171,3.138,219,4.413,225,1.769,257,0.293,260,0.713,311,0.205,393,0.205,434,0.241,479,1.769,488,0.725,490,0.643,491,2.719,589,3.138,612,3.138,613,5.468,614,2.633,615,5.309,616,5.309,617,4.819,618,4.819,619,3.775,620,3.775,621,2.633,622,2.633,623,3.775,624,2.633,625,3.775,626,2.633,627,2.633,628,2.633,629,3.775,630,3.775]],["title/interfaces/ClickListener.html",[259,0.243,631,2.599]],["body/interfaces/ClickListener.html",[5,0.032,9,0.027,10,0.027,13,0.694,64,3.642,87,0.317,88,1.741,112,0.556,122,0.556,139,0.556,141,0.624,144,1.807,259,0.393,260,0.955,311,0.317,393,0.317,434,0.373,488,0.556,490,0.694,631,4.203,632,4.074,633,5.056,634,2.836,635,4.074]],["title/interfaces/DblClickListener.html",[259,0.243,636,2.599]],["body/interfaces/DblClickListener.html",[5,0.032,9,0.027,10,0.027,13,0.687,87,0.313,88,1.722,112,0.551,122,0.551,139,0.551,141,0.617,144,1.796,259,0.39,260,0.948,311,0.313,393,0.313,434,0.369,488,0.551,490,0.687,634,2.823,636,4.176,637,5.023,638,4.032,639,5.023,640,5.023,641,4.032]],["title/interfaces/Dictionary.html",[259,0.243,642,2.599]],["body/interfaces/Dictionary.html",[5,0.032,9,0.027,10,0.027,13,0.684,68,3.427,87,0.312,122,0.684,225,2.679,259,0.389,296,4.118,311,0.312,393,0.312,434,0.367,479,2.346,488,0.684,642,4.163,643,4.011,644,4.011,645,4.011]],["title/interfaces/EmptyConstructor.html",[259,0.243,544,2.252]],["body/interfaces/EmptyConstructor.html",[5,0.034,9,0.028,10,0.028,87,0.323,112,0.568,113,2.643,257,0.323,259,0.398,311,0.398,393,0.323,434,0.381,538,2.997,539,3.46,542,2.652,544,4.172,547,3.265,548,2.652,549,3.46]],["title/interfaces/EventListenerArg.html",[205,2.252,259,0.243]],["body/interfaces/EventListenerArg.html",[5,0.032,9,0.026,10,0.026,13,0.656,40,1.261,87,0.299,89,3.859,122,0.848,139,0.667,205,3.515,232,4.058,259,0.379,311,0.299,393,0.299,434,0.352,442,1.504,479,2.287,488,0.667,646,5.359,647,3.851,648,3.851,649,3.851]],["title/interfaces/InjectableConstructor.html",[259,0.243,596,2.252]],["body/interfaces/InjectableConstructor.html",[5,0.034,9,0.026,10,0.026,31,2.68,40,1.219,87,0.289,101,2.372,105,1.744,112,0.508,113,1.92,122,0.652,148,2.125,257,0.289,259,0.371,311,0.371,342,2.372,393,0.289,434,0.34,442,1.453,480,2.68,540,2.68,541,2.68,542,2.372,547,3.043,548,2.372,591,2.68,592,3.094,593,4.783,594,3.094,596,3.798,598,3.094,600,3.094,601,3.094]],["title/interfaces/MouseDownListener.html",[259,0.243,650,2.599]],["body/interfaces/MouseDownListener.html",[5,0.032,9,0.027,10,0.027,13,0.687,87,0.313,88,1.722,112,0.551,122,0.551,139,0.551,141,0.617,144,1.796,259,0.39,260,0.948,311,0.313,393,0.313,434,0.369,488,0.551,490,0.687,634,2.823,650,4.176,651,3.201,652,4.032,653,5.023,654,5.023,655,4.032]],["title/interfaces/MouseDragListener.html",[259,0.243,656,2.599]],["body/interfaces/MouseDragListener.html",[5,0.032,9,0.027,10,0.027,13,0.687,87,0.313,88,1.722,112,0.551,122,0.551,139,0.551,141,0.617,144,1.796,259,0.39,260,0.948,311,0.313,393,0.313,434,0.369,488,0.551,490,0.687,634,2.823,651,3.201,656,4.176,657,4.032,658,5.023,659,5.023,660,4.032]],["title/interfaces/MouseOverListener.html",[259,0.243,661,2.599]],["body/interfaces/MouseOverListener.html",[5,0.032,9,0.027,10,0.027,13,0.687,87,0.313,88,1.722,112,0.551,122,0.551,139,0.551,141,0.617,144,1.796,259,0.39,260,0.948,311,0.313,393,0.313,434,0.369,488,0.551,490,0.687,634,2.823,651,3.201,661,4.176,662,4.032,663,5.023,664,5.023,665,4.032]],["title/interfaces/MouseUpListener.html",[259,0.243,666,2.599]],["body/interfaces/MouseUpListener.html",[5,0.032,9,0.027,10,0.027,13,0.687,87,0.313,88,1.722,112,0.551,122,0.551,139,0.551,141,0.617,144,1.796,259,0.39,260,0.948,311,0.313,393,0.313,434,0.369,488,0.551,490,0.687,634,2.823,651,3.201,666,4.176,667,4.032,668,5.023,669,5.023,670,4.032]],["title/miscellaneous/variables.html",[671,2.175,672,3.124]],["body/miscellaneous/variables.html",[5,0.033,9,0.024,10,0.024,13,0.576,33,2.958,64,3.625,122,0.783,180,3.52,189,3.625,192,4.185,225,2.687,477,2.81,494,2.81,671,2.81,672,2.81,673,5.034,674,5.034,675,5.034,676,5.034,677,3.381,678,4.485,679,3.381]]],"invertedIndex":[["",{"_index":5,"title":{},"body":{"dependencies.html":{},"index.html":{},"overview.html":{},"changelog.html":{},"license.html":{},"modules.html":{},"modules/GridModule.html":{},"injectables/GridMessageService.html":{},"pipes/IsFixedPipe.html":{},"pipes/IsGroupPipe.html":{},"pipes/IsRowVisiblePipe.html":{},"pipes/IsVisiblePipe.html":{},"classes/Cell.html":{},"classes/EmptyFactory.html":{},"classes/FormatterParser.html":{},"classes/HtmlUtil.html":{},"classes/InjectableFactory.html":{},"classes/RowChange.html":{},"classes/SortInfo.html":{},"interfaces/ClickListener.html":{},"interfaces/DblClickListener.html":{},"interfaces/Dictionary.html":{},"interfaces/EmptyConstructor.html":{},"interfaces/EventListenerArg.html":{},"interfaces/InjectableConstructor.html":{},"interfaces/MouseDownListener.html":{},"interfaces/MouseDragListener.html":{},"interfaces/MouseOverListener.html":{},"interfaces/MouseUpListener.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":678,"title":{},"body":{"miscellaneous/variables.html":{}}}],["1",{"_index":189,"title":{},"body":{"index.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["1.1.x",{"_index":6,"title":{},"body":{"dependencies.html":{}}}],["10",{"_index":184,"title":{},"body":{"index.html":{}}}],["100",{"_index":190,"title":{},"body":{"index.html":{}}}],["1000",{"_index":120,"title":{},"body":{"index.html":{}}}],["11",{"_index":332,"title":{},"body":{"overview.html":{}}}],["15",{"_index":272,"title":{},"body":{"index.html":{}}}],["2",{"_index":494,"title":{},"body":{"injectables/GridMessageService.html":{},"miscellaneous/variables.html":{}}}],["2.0.x",{"_index":39,"title":{},"body":{"index.html":{}}}],["2.1.0",{"_index":339,"title":{},"body":{"changelog.html":{}}}],["2.19.3",{"_index":8,"title":{},"body":{"dependencies.html":{}}}],["2016",{"_index":437,"title":{},"body":{"modules/GridModule.html":{}}}],["2018",{"_index":377,"title":{},"body":{"license.html":{}}}],["25",{"_index":185,"title":{},"body":{"index.html":{}}}],["33",{"_index":336,"title":{},"body":{"overview.html":{}}}],["4",{"_index":333,"title":{},"body":{"overview.html":{}}}],["50",{"_index":186,"title":{},"body":{"index.html":{}}}],["85",{"_index":274,"title":{},"body":{"index.html":{}}}],["_level",{"_index":481,"title":{},"body":{"injectables/GridMessageService.html":{}}}],["_messag",{"_index":482,"title":{},"body":{"injectables/GridMessageService.html":{}}}],["_messageobserv",{"_index":483,"title":{},"body":{"injectables/GridMessageService.html":{}}}],["abov",{"_index":158,"title":{},"body":{"index.html":{},"license.html":{}}}],["accessor",{"_index":485,"title":{},"body":{"injectables/GridMessageService.html":{}}}],["action",{"_index":93,"title":{},"body":{"index.html":{},"license.html":{}}}],["ad",{"_index":90,"title":{},"body":{"index.html":{},"changelog.html":{}}}],["add",{"_index":345,"title":{},"body":{"changelog.html":{}}}],["allow",{"_index":148,"title":{},"body":{"index.html":{},"changelog.html":{},"classes/EmptyFactory.html":{},"classes/InjectableFactory.html":{},"interfaces/InjectableConstructor.html":{}}}],["and/or",{"_index":401,"title":{},"body":{"license.html":{}}}],["angular",{"_index":15,"title":{},"body":{"index.html":{}}}],["angular/common",{"_index":444,"title":{},"body":{"modules/GridModule.html":{}}}],["angular/cor",{"_index":442,"title":{},"body":{"modules/GridModule.html":{},"injectables/GridMessageService.html":{},"pipes/IsFixedPipe.html":{},"pipes/IsGroupPipe.html":{},"pipes/IsRowVisiblePipe.html":{},"pipes/IsVisiblePipe.html":{},"classes/InjectableFactory.html":{},"interfaces/EventListenerArg.html":{},"interfaces/InjectableConstructor.html":{}}}],["angular/form",{"_index":446,"title":{},"body":{"modules/GridModule.html":{}}}],["anyth",{"_index":27,"title":{},"body":{"index.html":{}}}],["anything.advanc",{"_index":245,"title":{},"body":{"index.html":{}}}],["arg.interface.t",{"_index":647,"title":{},"body":{"interfaces/EventListenerArg.html":{}}}],["arg.interface.ts:4",{"_index":649,"title":{},"body":{"interfaces/EventListenerArg.html":{}}}],["arg.interface.ts:5",{"_index":648,"title":{},"body":{"interfaces/EventListenerArg.html":{}}}],["argument",{"_index":541,"title":{},"body":{"classes/EmptyFactory.html":{},"classes/InjectableFactory.html":{},"interfaces/InjectableConstructor.html":{}}}],["aris",{"_index":430,"title":{},"body":{"license.html":{}}}],["array",{"_index":125,"title":{},"body":{"index.html":{},"pipes/IsFixedPipe.html":{}}}],["arrow",{"_index":673,"title":{},"body":{"miscellaneous/variables.html":{}}}],["artifact.2.0.0",{"_index":357,"title":{},"body":{"changelog.html":{}}}],["asc",{"_index":616,"title":{},"body":{"classes/SortInfo.html":{}}}],["associ",{"_index":391,"title":{},"body":{"license.html":{}}}],["author",{"_index":420,"title":{},"body":{"license.html":{}}}],["auto",{"_index":341,"title":{},"body":{"changelog.html":{}}}],["bar",{"_index":157,"title":{},"body":{"index.html":{}}}],["base",{"_index":280,"title":{},"body":{"index.html":{}}}],["basic",{"_index":35,"title":{},"body":{"index.html":{}}}],["becom",{"_index":36,"title":{},"body":{"index.html":{}}}],["big).titl",{"_index":154,"title":{},"body":{"index.html":{}}}],["bigtextpopup",{"_index":323,"title":{},"body":{"overview.html":{},"modules/GridModule.html":{}}}],["bind",{"_index":128,"title":{},"body":{"index.html":{}}}],["birth",{"_index":286,"title":{},"body":{"index.html":{}}}],["boolean",{"_index":144,"title":{},"body":{"index.html":{},"pipes/IsFixedPipe.html":{},"classes/Cell.html":{},"classes/SortInfo.html":{},"interfaces/ClickListener.html":{},"interfaces/DblClickListener.html":{},"interfaces/MouseDownListener.html":{},"interfaces/MouseDragListener.html":{},"interfaces/MouseOverListener.html":{},"interfaces/MouseUpListener.html":{}}}],["bootstrap",{"_index":4,"title":{},"body":{"dependencies.html":{},"overview.html":{},"modules/GridModule.html":{}}}],["bootstrap/ng",{"_index":3,"title":{},"body":{"dependencies.html":{},"modules/GridModule.html":{}}}],["break",{"_index":302,"title":{},"body":{"index.html":{},"classes/HtmlUtil.html":{}}}],["brows",{"_index":433,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":431,"title":{},"body":{"modules.html":{}}}],["built",{"_index":277,"title":{},"body":{"index.html":{}}}],["bump",{"_index":348,"title":{},"body":{"changelog.html":{}}}],["busi",{"_index":361,"title":{},"body":{"changelog.html":{}}}],["c",{"_index":376,"title":{},"body":{"license.html":{},"modules/GridModule.html":{}}}],["calculation.2.0.2",{"_index":352,"title":{},"body":{"changelog.html":{}}}],["call",{"_index":84,"title":{},"body":{"index.html":{},"changelog.html":{}}}],["call.externalpag",{"_index":178,"title":{},"body":{"index.html":{}}}],["call.externalsort",{"_index":177,"title":{},"body":{"index.html":{}}}],["call.pages",{"_index":179,"title":{},"body":{"index.html":{}}}],["callback",{"_index":85,"title":{},"body":{"index.html":{}}}],["cancer",{"_index":379,"title":{},"body":{"license.html":{},"modules/GridModule.html":{}}}],["cell",{"_index":247,"title":{"classes/Cell.html":{}},"body":{"index.html":{},"changelog.html":{},"classes/Cell.html":{}}}],["cell'",{"_index":528,"title":{},"body":{"classes/Cell.html":{}}}],["cell.onrowsav",{"_index":226,"title":{},"body":{"index.html":{}}}],["cell/editrenderers/choic",{"_index":460,"title":{},"body":{"modules/GridModule.html":{}}}],["cell/editrenderers/d",{"_index":461,"title":{},"body":{"modules/GridModule.html":{}}}],["cell/editrenderers/text",{"_index":455,"title":{},"body":{"modules/GridModule.html":{}}}],["cell/viewpopuprenderer/bigtext",{"_index":463,"title":{},"body":{"modules/GridModule.html":{}}}],["cellnumberrangeview",{"_index":269,"title":{},"body":{"index.html":{}}}],["cellviewrender",{"_index":258,"title":{},"body":{"index.html":{}}}],["chang",{"_index":63,"title":{},"body":{"index.html":{},"changelog.html":{}}}],["change.t",{"_index":604,"title":{},"body":{"classes/RowChange.html":{}}}],["change.ts:3",{"_index":609,"title":{},"body":{"classes/RowChange.html":{}}}],["change.ts:4",{"_index":608,"title":{},"body":{"classes/RowChange.html":{}}}],["changelog",{"_index":337,"title":{"changelog.html":{}},"body":{}}],["charg",{"_index":387,"title":{},"body":{"license.html":{}}}],["choic",{"_index":294,"title":{},"body":{"index.html":{}}}],["choice.compon",{"_index":471,"title":{},"body":{"modules/GridModule.html":{}}}],["choiceeditrender",{"_index":293,"title":{},"body":{"index.html":{},"overview.html":{},"modules/GridModule.html":{}}}],["choos",{"_index":187,"title":{},"body":{"index.html":{}}}],["claim",{"_index":423,"title":{},"body":{"license.html":{}}}],["class",{"_index":257,"title":{"classes/Cell.html":{},"classes/EmptyFactory.html":{},"classes/FormatterParser.html":{},"classes/HtmlUtil.html":{},"classes/InjectableFactory.html":{},"classes/RowChange.html":{},"classes/SortInfo.html":{}},"body":{"index.html":{},"overview.html":{},"modules/GridModule.html":{},"injectables/GridMessageService.html":{},"pipes/IsFixedPipe.html":{},"pipes/IsGroupPipe.html":{},"pipes/IsRowVisiblePipe.html":{},"pipes/IsVisiblePipe.html":{},"classes/Cell.html":{},"classes/EmptyFactory.html":{},"classes/FormatterParser.html":{},"classes/HtmlUtil.html":{},"classes/InjectableFactory.html":{},"classes/RowChange.html":{},"classes/SortInfo.html":{},"interfaces/EmptyConstructor.html":{},"interfaces/InjectableConstructor.html":{}}}],["click",{"_index":64,"title":{},"body":{"index.html":{},"interfaces/ClickListener.html":{},"miscellaneous/variables.html":{}}}],["click(ev",{"_index":633,"title":{},"body":{"interfaces/ClickListener.html":{}}}],["click.interface.t",{"_index":638,"title":{},"body":{"interfaces/DblClickListener.html":{}}}],["click.interface.ts:3",{"_index":641,"title":{},"body":{"interfaces/DblClickListener.html":{}}}],["clicklisten",{"_index":631,"title":{"interfaces/ClickListener.html":{}},"body":{"interfaces/ClickListener.html":{}}}],["cluster_gridmodul",{"_index":312,"title":{},"body":{"overview.html":{},"modules/GridModule.html":{}}}],["cluster_gridmodule_declar",{"_index":313,"title":{},"body":{"overview.html":{},"modules/GridModule.html":{}}}],["cluster_gridmodule_export",{"_index":315,"title":{},"body":{"overview.html":{},"modules/GridModule.html":{}}}],["cluster_gridmodule_gridcomponent_provid",{"_index":314,"title":{},"body":{"overview.html":{},"modules/GridModule.html":{}}}],["code",{"_index":46,"title":{},"body":{"index.html":{}}}],["colum",{"_index":152,"title":{},"body":{"index.html":{}}}],["column",{"_index":65,"title":{},"body":{"index.html":{},"changelog.html":{},"pipes/IsFixedPipe.html":{},"pipes/IsGroupPipe.html":{},"pipes/IsVisiblePipe.html":{}}}],["column/column",{"_index":449,"title":{},"body":{"modules/GridModule.html":{},"pipes/IsFixedPipe.html":{},"pipes/IsGroupPipe.html":{},"pipes/IsVisiblePipe.html":{}}}],["column/filterrenderers/compar",{"_index":459,"title":{},"body":{"modules/GridModule.html":{}}}],["column/filterrenderers/select",{"_index":462,"title":{},"body":{"modules/GridModule.html":{}}}],["column/filterrenderers/text",{"_index":458,"title":{},"body":{"modules/GridModule.html":{}}}],["columnheadercompon",{"_index":317,"title":{},"body":{"overview.html":{},"modules/GridModule.html":{}}}],["columns[j].field",{"_index":220,"title":{},"body":{"index.html":{}}}],["command",{"_index":53,"title":{},"body":{"index.html":{}}}],["commonmodul",{"_index":443,"title":{},"body":{"modules/GridModule.html":{}}}],["comparefilterrender",{"_index":291,"title":{},"body":{"index.html":{},"overview.html":{},"modules/GridModule.html":{}}}],["compil",{"_index":45,"title":{},"body":{"index.html":{}}}],["complex",{"_index":28,"title":{},"body":{"index.html":{}}}],["compon",{"_index":106,"title":{},"body":{"index.html":{},"overview.html":{}}}],["condit",{"_index":406,"title":{},"body":{"license.html":{}}}],["confidenti",{"_index":438,"title":{},"body":{"modules/GridModule.html":{}}}],["config",{"_index":232,"title":{},"body":{"index.html":{},"classes/FormatterParser.html":{},"interfaces/EventListenerArg.html":{}}}],["config/config",{"_index":465,"title":{},"body":{"modules/GridModule.html":{}}}],["configmenucompon",{"_index":324,"title":{},"body":{"overview.html":{},"modules/GridModule.html":{}}}],["configmultichoicecompon",{"_index":325,"title":{},"body":{"overview.html":{},"modules/GridModule.html":{}}}],["configur",{"_index":138,"title":{},"body":{"index.html":{},"changelog.html":{}}}],["configuration.instal",{"_index":38,"title":{},"body":{"index.html":{}}}],["connect",{"_index":368,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["console.output",{"_index":215,"title":{},"body":{"index.html":{}}}],["constructor",{"_index":531,"title":{},"body":{"classes/Cell.html":{},"classes/EmptyFactory.html":{},"classes/InjectableFactory.html":{},"classes/RowChange.html":{}}}],["constructor(",{"_index":595,"title":{},"body":{"classes/InjectableFactory.html":{}}}],["constructor(emptyconstructor",{"_index":543,"title":{},"body":{"classes/EmptyFactory.html":{}}}],["constructor(o",{"_index":532,"title":{},"body":{"classes/Cell.html":{}}}],["constructor(oldrownum",{"_index":607,"title":{},"body":{"classes/RowChange.html":{}}}],["constructor(priv",{"_index":548,"title":{},"body":{"classes/EmptyFactory.html":{},"classes/InjectableFactory.html":{},"interfaces/EmptyConstructor.html":{},"interfaces/InjectableConstructor.html":{}}}],["contain",{"_index":137,"title":{},"body":{"index.html":{}}}],["contract",{"_index":427,"title":{},"body":{"license.html":{}}}],["conveni",{"_index":569,"title":{},"body":{"classes/HtmlUtil.html":{}}}],["copi",{"_index":50,"title":{},"body":{"index.html":{},"license.html":{}}}],["copyright",{"_index":375,"title":{},"body":{"license.html":{},"modules/GridModule.html":{}}}],["creat",{"_index":210,"title":{},"body":{"index.html":{}}}],["createelement(render",{"_index":262,"title":{},"body":{"index.html":{}}}],["current",{"_index":98,"title":{},"body":{"index.html":{}}}],["custom",{"_index":52,"title":{},"body":{"index.html":{},"changelog.html":{}}}],["damag",{"_index":424,"title":{},"body":{"license.html":{}}}],["data",{"_index":29,"title":{},"body":{"index.html":{},"changelog.html":{},"classes/Cell.html":{}}}],["data.celldblclick",{"_index":235,"title":{},"body":{"index.html":{}}}],["data.datacal",{"_index":129,"title":{},"body":{"index.html":{}}}],["data.rowclick",{"_index":236,"title":{},"body":{"index.html":{}}}],["data.rowdblclick",{"_index":237,"title":{},"body":{"index.html":{}}}],["data.warn",{"_index":238,"title":{},"body":{"index.html":{}}}],["data/config/ev",{"_index":359,"title":{},"body":{"changelog.html":{}}}],["datarequest(externalinfo",{"_index":109,"title":{},"body":{"index.html":{}}}],["datatyp",{"_index":287,"title":{},"body":{"index.html":{}}}],["date",{"_index":285,"title":{},"body":{"index.html":{},"changelog.html":{}}}],["dateeditrender",{"_index":290,"title":{},"body":{"index.html":{},"overview.html":{},"modules/GridModule.html":{}}}],["dblclick",{"_index":639,"title":{},"body":{"interfaces/DblClickListener.html":{}}}],["dblclick(ev",{"_index":640,"title":{},"body":{"interfaces/DblClickListener.html":{}}}],["dblclicklisten",{"_index":636,"title":{"interfaces/DblClickListener.html":{}},"body":{"interfaces/DblClickListener.html":{}}}],["deal",{"_index":394,"title":{},"body":{"license.html":{}}}],["declar",{"_index":309,"title":{},"body":{"overview.html":{},"modules/GridModule.html":{}}}],["default",{"_index":33,"title":{},"body":{"index.html":{},"injectables/GridMessageService.html":{},"classes/Cell.html":{},"classes/FormatterParser.html":{},"classes/SortInfo.html":{},"miscellaneous/variables.html":{}}}],["default.externalfilt",{"_index":176,"title":{},"body":{"index.html":{}}}],["defin",{"_index":488,"title":{},"body":{"injectables/GridMessageService.html":{},"pipes/IsFixedPipe.html":{},"pipes/IsGroupPipe.html":{},"pipes/IsRowVisiblePipe.html":{},"pipes/IsVisiblePipe.html":{},"classes/Cell.html":{},"classes/EmptyFactory.html":{},"classes/FormatterParser.html":{},"classes/HtmlUtil.html":{},"classes/InjectableFactory.html":{},"classes/RowChange.html":{},"classes/SortInfo.html":{},"interfaces/ClickListener.html":{},"interfaces/DblClickListener.html":{},"interfaces/Dictionary.html":{},"interfaces/EventListenerArg.html":{},"interfaces/MouseDownListener.html":{},"interfaces/MouseDragListener.html":{},"interfaces/MouseOverListener.html":{},"interfaces/MouseUpListener.html":{}}}],["demo",{"_index":19,"title":{},"body":{"index.html":{}}}],["depend",{"_index":1,"title":{"dependencies.html":{}},"body":{"dependencies.html":{},"index.html":{},"overview.html":{},"modules/GridModule.html":{}}}],["descript",{"_index":527,"title":{},"body":{"classes/Cell.html":{},"classes/EmptyFactory.html":{},"classes/FormatterParser.html":{},"classes/HtmlUtil.html":{},"classes/InjectableFactory.html":{}}}],["design",{"_index":22,"title":{},"body":{"index.html":{}}}],["determin",{"_index":234,"title":{},"body":{"index.html":{}}}],["dictionari",{"_index":642,"title":{"interfaces/Dictionary.html":{}},"body":{"interfaces/Dictionary.html":{}}}],["differ",{"_index":278,"title":{},"body":{"index.html":{}}}],["dirti",{"_index":198,"title":{},"body":{"index.html":{},"classes/Cell.html":{}}}],["disabl",{"_index":169,"title":{},"body":{"index.html":{}}}],["display",{"_index":296,"title":{},"body":{"index.html":{},"changelog.html":{},"interfaces/Dictionary.html":{}}}],["dist",{"_index":48,"title":{},"body":{"index.html":{}}}],["distribut",{"_index":399,"title":{},"body":{"license.html":{}}}],["dob",{"_index":284,"title":{},"body":{"index.html":{}}}],["document",{"_index":392,"title":{},"body":{"license.html":{}}}],["don't",{"_index":203,"title":{},"body":{"index.html":{}}}],["down.interface.t",{"_index":652,"title":{},"body":{"interfaces/MouseDownListener.html":{}}}],["down.interface.ts:3",{"_index":655,"title":{},"body":{"interfaces/MouseDownListener.html":{}}}],["drag.interface.t",{"_index":657,"title":{},"body":{"interfaces/MouseDragListener.html":{}}}],["drag.interface.ts:3",{"_index":660,"title":{},"body":{"interfaces/MouseDragListener.html":{}}}],["e",{"_index":579,"title":{},"body":{"classes/HtmlUtil.html":{}}}],["e.g",{"_index":151,"title":{},"body":{"index.html":{}}}],["e.id",{"_index":586,"title":{},"body":{"classes/HtmlUtil.html":{}}}],["e.id.startswith(id",{"_index":587,"title":{},"body":{"classes/HtmlUtil.html":{}}}],["e.parentel",{"_index":588,"title":{},"body":{"classes/HtmlUtil.html":{}}}],["each",{"_index":254,"title":{},"body":{"index.html":{}}}],["edit",{"_index":456,"title":{},"body":{"modules/GridModule.html":{}}}],["editrender",{"_index":289,"title":{},"body":{"index.html":{}}}],["element",{"_index":572,"title":{},"body":{"classes/HtmlUtil.html":{}}}],["emit",{"_index":195,"title":{},"body":{"index.html":{}}}],["emptyconstructor",{"_index":544,"title":{"interfaces/EmptyConstructor.html":{}},"body":{"classes/EmptyFactory.html":{},"interfaces/EmptyConstructor.html":{}}}],["emptyfactori",{"_index":538,"title":{"classes/EmptyFactory.html":{}},"body":{"classes/EmptyFactory.html":{},"interfaces/EmptyConstructor.html":{}}}],["entrycompon",{"_index":436,"title":{},"body":{"modules/GridModule.html":{}}}],["error",{"_index":484,"title":{},"body":{"injectables/GridMessageService.html":{}}}],["error(messag",{"_index":487,"title":{},"body":{"injectables/GridMessageService.html":{}}}],["especi",{"_index":365,"title":{},"body":{"changelog.html":{}}}],["event",{"_index":88,"title":{},"body":{"index.html":{},"license.html":{},"interfaces/ClickListener.html":{},"interfaces/DblClickListener.html":{},"interfaces/MouseDownListener.html":{},"interfaces/MouseDragListener.html":{},"interfaces/MouseOverListener.html":{},"interfaces/MouseUpListener.html":{}}}],["event.service.t",{"_index":677,"title":{},"body":{"miscellaneous/variables.html":{}}}],["eventlisten",{"_index":594,"title":{},"body":{"classes/InjectableFactory.html":{},"interfaces/InjectableConstructor.html":{}}}],["eventlistenerarg",{"_index":205,"title":{"interfaces/EventListenerArg.html":{}},"body":{"index.html":{},"interfaces/EventListenerArg.html":{}}}],["events.mod",{"_index":208,"title":{},"body":{"index.html":{}}}],["exampl",{"_index":102,"title":{},"body":{"index.html":{}}}],["expect",{"_index":31,"title":{},"body":{"index.html":{},"classes/InjectableFactory.html":{},"interfaces/InjectableConstructor.html":{}}}],["export",{"_index":311,"title":{},"body":{"overview.html":{},"modules/GridModule.html":{},"injectables/GridMessageService.html":{},"pipes/IsFixedPipe.html":{},"pipes/IsGroupPipe.html":{},"pipes/IsRowVisiblePipe.html":{},"pipes/IsVisiblePipe.html":{},"classes/Cell.html":{},"classes/EmptyFactory.html":{},"classes/FormatterParser.html":{},"classes/HtmlUtil.html":{},"classes/InjectableFactory.html":{},"classes/RowChange.html":{},"classes/SortInfo.html":{},"interfaces/ClickListener.html":{},"interfaces/DblClickListener.html":{},"interfaces/Dictionary.html":{},"interfaces/EmptyConstructor.html":{},"interfaces/EventListenerArg.html":{},"interfaces/InjectableConstructor.html":{},"interfaces/MouseDownListener.html":{},"interfaces/MouseDragListener.html":{},"interfaces/MouseOverListener.html":{},"interfaces/MouseUpListener.html":{}}}],["express",{"_index":413,"title":{},"body":{"license.html":{}}}],["extend",{"_index":279,"title":{},"body":{"index.html":{}}}],["extern",{"_index":83,"title":{},"body":{"index.html":{},"changelog.html":{}}}],["externaldata",{"_index":117,"title":{},"body":{"index.html":{}}}],["externalinfo",{"_index":110,"title":{},"body":{"index.html":{}}}],["fals",{"_index":145,"title":{},"body":{"index.html":{},"pipes/IsFixedPipe.html":{},"classes/Cell.html":{}}}],["featur",{"_index":24,"title":{},"body":{"index.html":{},"changelog.html":{}}}],["femal",{"_index":295,"title":{},"body":{"index.html":{}}}],["field",{"_index":219,"title":{},"body":{"index.html":{},"classes/SortInfo.html":{}}}],["file",{"_index":393,"title":{},"body":{"license.html":{},"modules/GridModule.html":{},"injectables/GridMessageService.html":{},"pipes/IsFixedPipe.html":{},"pipes/IsGroupPipe.html":{},"pipes/IsRowVisiblePipe.html":{},"pipes/IsVisiblePipe.html":{},"classes/Cell.html":{},"classes/EmptyFactory.html":{},"classes/FormatterParser.html":{},"classes/HtmlUtil.html":{},"classes/InjectableFactory.html":{},"classes/RowChange.html":{},"classes/SortInfo.html":{},"interfaces/ClickListener.html":{},"interfaces/DblClickListener.html":{},"interfaces/Dictionary.html":{},"interfaces/EmptyConstructor.html":{},"interfaces/EventListenerArg.html":{},"interfaces/InjectableConstructor.html":{},"interfaces/MouseDownListener.html":{},"interfaces/MouseDragListener.html":{},"interfaces/MouseOverListener.html":{},"interfaces/MouseUpListener.html":{}}}],["filter",{"_index":67,"title":{},"body":{"index.html":{},"modules/GridModule.html":{}}}],["filterrender",{"_index":281,"title":{},"body":{"index.html":{}}}],["first",{"_index":75,"title":{},"body":{"index.html":{}}}],["firstnam",{"_index":282,"title":{},"body":{"index.html":{}}}],["fit",{"_index":416,"title":{},"body":{"license.html":{}}}],["fix",{"_index":164,"title":{},"body":{"index.html":{},"changelog.html":{},"pipes/IsFixedPipe.html":{}}}],["fixed.pip",{"_index":454,"title":{},"body":{"modules/GridModule.html":{}}}],["fixed.pipe.t",{"_index":506,"title":{},"body":{"pipes/IsFixedPipe.html":{}}}],["fixed.pipe.ts:10",{"_index":511,"title":{},"body":{"pipes/IsFixedPipe.html":{}}}],["fixes.1.0.0",{"_index":371,"title":{},"body":{"changelog.html":{}}}],["flag",{"_index":146,"title":{},"body":{"index.html":{}}}],["folder",{"_index":49,"title":{},"body":{"index.html":{}}}],["follow",{"_index":265,"title":{},"body":{"index.html":{},"license.html":{}}}],["format",{"_index":229,"title":{},"body":{"index.html":{}}}],["formatt",{"_index":553,"title":{},"body":{"classes/FormatterParser.html":{}}}],["formatterpars",{"_index":550,"title":{"classes/FormatterParser.html":{}},"body":{"classes/FormatterParser.html":{}}}],["formatting/pars",{"_index":364,"title":{},"body":{"changelog.html":{}}}],["formatvalu",{"_index":556,"title":{},"body":{"classes/FormatterParser.html":{}}}],["formatvalue(valu",{"_index":559,"title":{},"body":{"classes/FormatterParser.html":{}}}],["formsmodul",{"_index":445,"title":{},"body":{"modules/GridModule.html":{}}}],["forroot(globalconfig",{"_index":474,"title":{},"body":{"modules/GridModule.html":{}}}],["free",{"_index":386,"title":{},"body":{"license.html":{}}}],["from.nvisiblerow",{"_index":188,"title":{},"body":{"index.html":{}}}],["full",{"_index":23,"title":{},"body":{"index.html":{}}}],["function",{"_index":107,"title":{},"body":{"index.html":{}}}],["furnish",{"_index":404,"title":{},"body":{"license.html":{}}}],["gender",{"_index":292,"title":{},"body":{"index.html":{}}}],["gener",{"_index":342,"title":{},"body":{"changelog.html":{},"classes/EmptyFactory.html":{},"classes/InjectableFactory.html":{},"interfaces/InjectableConstructor.html":{}}}],["get",{"_index":11,"title":{"index.html":{},"changelog.html":{},"license.html":{}},"body":{"index.html":{}}}],["getasc",{"_index":617,"title":{},"body":{"classes/SortInfo.html":{}}}],["getfield",{"_index":618,"title":{},"body":{"classes/SortInfo.html":{}}}],["getid",{"_index":573,"title":{},"body":{"classes/HtmlUtil.html":{}}}],["getid(",{"_index":576,"title":{},"body":{"classes/HtmlUtil.html":{}}}],["getidel",{"_index":574,"title":{},"body":{"classes/HtmlUtil.html":{}}}],["getidelement(",{"_index":581,"title":{},"body":{"classes/HtmlUtil.html":{}}}],["getinst",{"_index":542,"title":{},"body":{"classes/EmptyFactory.html":{},"classes/InjectableFactory.html":{},"interfaces/EmptyConstructor.html":{},"interfaces/InjectableConstructor.html":{}}}],["getloc",{"_index":575,"title":{},"body":{"classes/HtmlUtil.html":{}}}],["getlocation(",{"_index":583,"title":{},"body":{"classes/HtmlUtil.html":{}}}],["getmessageobserv",{"_index":499,"title":{},"body":{"injectables/GridMessageService.html":{}}}],["github",{"_index":20,"title":{},"body":{"index.html":{}}}],["global",{"_index":134,"title":{},"body":{"index.html":{},"changelog.html":{}}}],["global.servic",{"_index":469,"title":{},"body":{"modules/GridModule.html":{}}}],["globalconfig",{"_index":475,"title":{},"body":{"modules/GridModule.html":{}}}],["grant",{"_index":385,"title":{},"body":{"license.html":{}}}],["grid",{"_index":16,"title":{},"body":{"index.html":{},"changelog.html":{}}}],["grid\";@ngmodul",{"_index":42,"title":{},"body":{"index.html":{}}}],["grid'",{"_index":150,"title":{},"body":{"index.html":{}}}],["grid.cellclick",{"_index":233,"title":{},"body":{"index.html":{}}}],["grid.compon",{"_index":448,"title":{},"body":{"modules/GridModule.html":{}}}],["grid.groupbi",{"_index":167,"title":{},"body":{"index.html":{}}}],["grid.linkedgroup",{"_index":140,"title":{},"body":{"index.html":{}}}],["grid.them",{"_index":159,"title":{},"body":{"index.html":{}}}],["gridcompon",{"_index":316,"title":{},"body":{"overview.html":{},"modules/GridModule.html":{}}}],["grideventservic",{"_index":327,"title":{},"body":{"overview.html":{},"modules/GridModule.html":{}}}],["gridglobalservic",{"_index":467,"title":{},"body":{"modules/GridModule.html":{}}}],["gridmessageservic",{"_index":328,"title":{"injectables/GridMessageService.html":{}},"body":{"overview.html":{},"modules/GridModule.html":{},"injectables/GridMessageService.html":{}}}],["gridmodul",{"_index":41,"title":{"modules/GridModule.html":{}},"body":{"index.html":{},"overview.html":{},"modules.html":{},"modules/GridModule.html":{}}}],["gridmodule.forroot",{"_index":43,"title":{},"body":{"index.html":{}}}],["gridservic",{"_index":326,"title":{},"body":{"overview.html":{},"modules/GridModule.html":{}}}],["group",{"_index":80,"title":{},"body":{"index.html":{}}}],["group.pip",{"_index":453,"title":{},"body":{"modules/GridModule.html":{}}}],["group.pipe.t",{"_index":515,"title":{},"body":{"pipes/IsGroupPipe.html":{}}}],["group.pipe.ts:9",{"_index":517,"title":{},"body":{"pipes/IsGroupPipe.html":{}}}],["groupbycollaps",{"_index":170,"title":{},"body":{"index.html":{}}}],["handl",{"_index":25,"title":{},"body":{"index.html":{}}}],["hci",{"_index":18,"title":{},"body":{"index.html":{}}}],["hci'",{"_index":14,"title":{},"body":{"index.html":{}}}],["header",{"_index":66,"title":{},"body":{"index.html":{}}}],["header.compon",{"_index":450,"title":{},"body":{"modules/GridModule.html":{}}}],["height",{"_index":349,"title":{},"body":{"changelog.html":{}}}],["here",{"_index":100,"title":{},"body":{"index.html":{}}}],["herebi",{"_index":384,"title":{},"body":{"license.html":{}}}],["hidden",{"_index":174,"title":{},"body":{"index.html":{}}}],["high",{"_index":273,"title":{},"body":{"index.html":{}}}],["holder",{"_index":421,"title":{},"body":{"license.html":{},"classes/Cell.html":{}}}],["html",{"_index":132,"title":{},"body":{"index.html":{}}}],["htmlelement",{"_index":577,"title":{},"body":{"classes/HtmlUtil.html":{}}}],["htmlelement;a",{"_index":264,"title":{},"body":{"index.html":{}}}],["htmlutil",{"_index":566,"title":{"classes/HtmlUtil.html":{}},"body":{"classes/HtmlUtil.html":{}}}],["huntsman",{"_index":378,"title":{},"body":{"license.html":{},"modules/GridModule.html":{}}}],["ic",{"_index":598,"title":{},"body":{"classes/InjectableFactory.html":{},"interfaces/InjectableConstructor.html":{}}}],["id",{"_index":133,"title":{},"body":{"index.html":{},"classes/HtmlUtil.html":{}}}],["implement",{"_index":105,"title":{},"body":{"index.html":{},"pipes/IsFixedPipe.html":{},"pipes/IsGroupPipe.html":{},"pipes/IsRowVisiblePipe.html":{},"pipes/IsVisiblePipe.html":{},"classes/InjectableFactory.html":{},"interfaces/InjectableConstructor.html":{}}}],["impli",{"_index":414,"title":{},"body":{"license.html":{}}}],["import",{"_index":40,"title":{},"body":{"index.html":{},"modules/GridModule.html":{},"injectables/GridMessageService.html":{},"pipes/IsFixedPipe.html":{},"pipes/IsGroupPipe.html":{},"pipes/IsRowVisiblePipe.html":{},"pipes/IsVisiblePipe.html":{},"classes/HtmlUtil.html":{},"classes/InjectableFactory.html":{},"interfaces/EventListenerArg.html":{},"interfaces/InjectableConstructor.html":{}}}],["improv",{"_index":363,"title":{},"body":{"changelog.html":{}}}],["in.onconfigchang",{"_index":231,"title":{},"body":{"index.html":{}}}],["includ",{"_index":397,"title":{},"body":{"license.html":{}}}],["index",{"_index":13,"title":{"index.html":{}},"body":{"injectables/GridMessageService.html":{},"classes/Cell.html":{},"classes/EmptyFactory.html":{},"classes/FormatterParser.html":{},"classes/HtmlUtil.html":{},"classes/InjectableFactory.html":{},"classes/RowChange.html":{},"classes/SortInfo.html":{},"interfaces/ClickListener.html":{},"interfaces/DblClickListener.html":{},"interfaces/Dictionary.html":{},"interfaces/EventListenerArg.html":{},"interfaces/MouseDownListener.html":{},"interfaces/MouseDragListener.html":{},"interfaces/MouseOverListener.html":{},"interfaces/MouseUpListener.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":434,"title":{},"body":{"modules/GridModule.html":{},"injectables/GridMessageService.html":{},"pipes/IsFixedPipe.html":{},"pipes/IsGroupPipe.html":{},"pipes/IsRowVisiblePipe.html":{},"pipes/IsVisiblePipe.html":{},"classes/Cell.html":{},"classes/EmptyFactory.html":{},"classes/FormatterParser.html":{},"classes/HtmlUtil.html":{},"classes/InjectableFactory.html":{},"classes/RowChange.html":{},"classes/SortInfo.html":{},"interfaces/ClickListener.html":{},"interfaces/DblClickListener.html":{},"interfaces/Dictionary.html":{},"interfaces/EmptyConstructor.html":{},"interfaces/EventListenerArg.html":{},"interfaces/InjectableConstructor.html":{},"interfaces/MouseDownListener.html":{},"interfaces/MouseDragListener.html":{},"interfaces/MouseOverListener.html":{},"interfaces/MouseUpListener.html":{}}}],["info.id",{"_index":131,"title":{},"body":{"index.html":{}}}],["info.t",{"_index":614,"title":{},"body":{"classes/SortInfo.html":{}}}],["info.ts:13",{"_index":622,"title":{},"body":{"classes/SortInfo.html":{}}}],["info.ts:17",{"_index":626,"title":{},"body":{"classes/SortInfo.html":{}}}],["info.ts:2",{"_index":627,"title":{},"body":{"classes/SortInfo.html":{}}}],["info.ts:3",{"_index":628,"title":{},"body":{"classes/SortInfo.html":{}}}],["info.ts:5",{"_index":621,"title":{},"body":{"classes/SortInfo.html":{}}}],["info.ts:9",{"_index":624,"title":{},"body":{"classes/SortInfo.html":{}}}],["initi",{"_index":372,"title":{},"body":{"changelog.html":{}}}],["inject",{"_index":334,"title":{"injectables/GridMessageService.html":{}},"body":{"overview.html":{},"injectables/GridMessageService.html":{}}}],["injectableconstructor",{"_index":596,"title":{"interfaces/InjectableConstructor.html":{}},"body":{"classes/InjectableFactory.html":{},"interfaces/InjectableConstructor.html":{}}}],["injectablefactori",{"_index":591,"title":{"classes/InjectableFactory.html":{}},"body":{"classes/InjectableFactory.html":{},"interfaces/InjectableConstructor.html":{}}}],["injector",{"_index":593,"title":{},"body":{"classes/InjectableFactory.html":{},"interfaces/InjectableConstructor.html":{}}}],["input",{"_index":121,"title":{},"body":{"index.html":{}}}],["instanti",{"_index":540,"title":{},"body":{"classes/EmptyFactory.html":{},"classes/InjectableFactory.html":{},"interfaces/InjectableConstructor.html":{}}}],["instead",{"_index":58,"title":{},"body":{"index.html":{}}}],["institut",{"_index":380,"title":{},"body":{"license.html":{},"modules/GridModule.html":{}}}],["interfac",{"_index":259,"title":{"interfaces/ClickListener.html":{},"interfaces/DblClickListener.html":{},"interfaces/Dictionary.html":{},"interfaces/EmptyConstructor.html":{},"interfaces/EventListenerArg.html":{},"interfaces/InjectableConstructor.html":{},"interfaces/MouseDownListener.html":{},"interfaces/MouseDragListener.html":{},"interfaces/MouseOverListener.html":{},"interfaces/MouseUpListener.html":{}},"body":{"index.html":{},"overview.html":{},"classes/EmptyFactory.html":{},"classes/InjectableFactory.html":{},"interfaces/ClickListener.html":{},"interfaces/DblClickListener.html":{},"interfaces/Dictionary.html":{},"interfaces/EmptyConstructor.html":{},"interfaces/EventListenerArg.html":{},"interfaces/InjectableConstructor.html":{},"interfaces/MouseDownListener.html":{},"interfaces/MouseDragListener.html":{},"interfaces/MouseOverListener.html":{},"interfaces/MouseUpListener.html":{}}}],["intro",{"_index":21,"title":{},"body":{"index.html":{}}}],["introduc",{"_index":303,"title":{},"body":{"index.html":{}}}],["isfix",{"_index":508,"title":{},"body":{"pipes/IsFixedPipe.html":{}}}],["isfixedpip",{"_index":320,"title":{"pipes/IsFixedPipe.html":{}},"body":{"overview.html":{},"modules/GridModule.html":{},"pipes/IsFixedPipe.html":{}}}],["isgroup",{"_index":516,"title":{},"body":{"pipes/IsGroupPipe.html":{}}}],["isgrouppip",{"_index":319,"title":{"pipes/IsGroupPipe.html":{}},"body":{"overview.html":{},"modules/GridModule.html":{},"pipes/IsGroupPipe.html":{}}}],["isrowvis",{"_index":521,"title":{},"body":{"pipes/IsRowVisiblePipe.html":{}}}],["isrowvisiblepip",{"_index":321,"title":{"pipes/IsRowVisiblePipe.html":{}},"body":{"overview.html":{},"modules/GridModule.html":{},"pipes/IsRowVisiblePipe.html":{}}}],["issu",{"_index":300,"title":{},"body":{"index.html":{}}}],["isvis",{"_index":525,"title":{},"body":{"pipes/IsVisiblePipe.html":{}}}],["isvisiblepip",{"_index":318,"title":{"pipes/IsVisiblePipe.html":{}},"body":{"overview.html":{},"modules/GridModule.html":{},"pipes/IsVisiblePipe.html":{}}}],["j",{"_index":218,"title":{},"body":{"index.html":{}}}],["json",{"_index":136,"title":{},"body":{"index.html":{}}}],["key",{"_index":207,"title":{},"body":{"index.html":{},"classes/Cell.html":{}}}],["key1",{"_index":243,"title":{},"body":{"index.html":{}}}],["key2",{"_index":244,"title":{},"body":{"index.html":{}}}],["keyword",{"_index":353,"title":{},"body":{"changelog.html":{}}}],["kind",{"_index":412,"title":{},"body":{"license.html":{}}}],["known",{"_index":299,"title":{},"body":{"index.html":{}}}],["lab",{"_index":267,"title":{},"body":{"index.html":{}}}],["last",{"_index":76,"title":{},"body":{"index.html":{}}}],["left",{"_index":165,"title":{},"body":{"index.html":{}}}],["legend",{"_index":308,"title":{},"body":{"overview.html":{},"modules/GridModule.html":{}}}],["liabil",{"_index":425,"title":{},"body":{"license.html":{}}}],["liabl",{"_index":422,"title":{},"body":{"license.html":{}}}],["librari",{"_index":17,"title":{},"body":{"index.html":{}}}],["licens",{"_index":356,"title":{"license.html":{}},"body":{"changelog.html":{}}}],["limit",{"_index":191,"title":{},"body":{"index.html":{},"license.html":{}}}],["link",{"_index":142,"title":{},"body":{"index.html":{}}}],["list",{"_index":99,"title":{},"body":{"index.html":{},"pipes/IsFixedPipe.html":{},"pipes/IsGroupPipe.html":{},"pipes/IsRowVisiblePipe.html":{},"pipes/IsVisiblePipe.html":{}}}],["list.filter((o",{"_index":513,"title":{},"body":{"pipes/IsFixedPipe.html":{},"pipes/IsGroupPipe.html":{},"pipes/IsRowVisiblePipe.html":{},"pipes/IsVisiblePipe.html":{}}}],["listen",{"_index":89,"title":{},"body":{"index.html":{},"changelog.html":{},"interfaces/EventListenerArg.html":{}}}],["load",{"_index":202,"title":{},"body":{"index.html":{},"changelog.html":{}}}],["locat",{"_index":223,"title":{},"body":{"index.html":{}}}],["log",{"_index":338,"title":{},"body":{"changelog.html":{}}}],["low",{"_index":271,"title":{},"body":{"index.html":{}}}],["male",{"_index":297,"title":{},"body":{"index.html":{}}}],["manag",{"_index":530,"title":{},"body":{"classes/Cell.html":{}}}],["mani",{"_index":97,"title":{},"body":{"index.html":{}}}],["match",{"_index":10,"title":{},"body":{"dependencies.html":{},"index.html":{},"overview.html":{},"changelog.html":{},"license.html":{},"modules.html":{},"modules/GridModule.html":{},"injectables/GridMessageService.html":{},"pipes/IsFixedPipe.html":{},"pipes/IsGroupPipe.html":{},"pipes/IsRowVisiblePipe.html":{},"pipes/IsVisiblePipe.html":{},"classes/Cell.html":{},"classes/EmptyFactory.html":{},"classes/FormatterParser.html":{},"classes/HtmlUtil.html":{},"classes/InjectableFactory.html":{},"classes/RowChange.html":{},"classes/SortInfo.html":{},"interfaces/ClickListener.html":{},"interfaces/DblClickListener.html":{},"interfaces/Dictionary.html":{},"interfaces/EmptyConstructor.html":{},"interfaces/EventListenerArg.html":{},"interfaces/InjectableConstructor.html":{},"interfaces/MouseDownListener.html":{},"interfaces/MouseDragListener.html":{},"interfaces/MouseOverListener.html":{},"interfaces/MouseUpListener.html":{},"miscellaneous/variables.html":{}}}],["menu.compon",{"_index":466,"title":{},"body":{"modules/GridModule.html":{}}}],["merchant",{"_index":415,"title":{},"body":{"license.html":{}}}],["merg",{"_index":398,"title":{},"body":{"license.html":{}}}],["messag",{"_index":239,"title":{},"body":{"index.html":{},"injectables/GridMessageService.html":{}}}],["message.service.t",{"_index":478,"title":{},"body":{"injectables/GridMessageService.html":{}}}],["message.service.ts:10",{"_index":495,"title":{},"body":{"injectables/GridMessageService.html":{}}}],["message.service.ts:12",{"_index":489,"title":{},"body":{"injectables/GridMessageService.html":{}}}],["message.service.ts:16",{"_index":493,"title":{},"body":{"injectables/GridMessageService.html":{}}}],["message.service.ts:20",{"_index":500,"title":{},"body":{"injectables/GridMessageService.html":{}}}],["message.service.ts:8",{"_index":496,"title":{},"body":{"injectables/GridMessageService.html":{}}}],["message.service.ts:9",{"_index":498,"title":{},"body":{"injectables/GridMessageService.html":{}}}],["messageobserv",{"_index":486,"title":{},"body":{"injectables/GridMessageService.html":{}}}],["metadata",{"_index":507,"title":{},"body":{"pipes/IsFixedPipe.html":{},"pipes/IsGroupPipe.html":{},"pipes/IsRowVisiblePipe.html":{},"pipes/IsVisiblePipe.html":{},"classes/Cell.html":{}}}],["method",{"_index":260,"title":{},"body":{"index.html":{},"injectables/GridMessageService.html":{},"pipes/IsFixedPipe.html":{},"pipes/IsGroupPipe.html":{},"pipes/IsRowVisiblePipe.html":{},"pipes/IsVisiblePipe.html":{},"classes/EmptyFactory.html":{},"classes/FormatterParser.html":{},"classes/HtmlUtil.html":{},"classes/InjectableFactory.html":{},"classes/SortInfo.html":{},"interfaces/ClickListener.html":{},"interfaces/DblClickListener.html":{},"interfaces/MouseDownListener.html":{},"interfaces/MouseDragListener.html":{},"interfaces/MouseOverListener.html":{},"interfaces/MouseUpListener.html":{}}}],["miscellan",{"_index":671,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["mm/dd/yyyi",{"_index":288,"title":{},"body":{"index.html":{}}}],["mock",{"_index":108,"title":{},"body":{"index.html":{}}}],["mode",{"_index":211,"title":{},"body":{"index.html":{}}}],["modif",{"_index":555,"title":{},"body":{"classes/FormatterParser.html":{}}}],["modifi",{"_index":149,"title":{},"body":{"index.html":{},"license.html":{}}}],["modul",{"_index":310,"title":{"modules.html":{},"modules/GridModule.html":{}},"body":{"overview.html":{},"modules.html":{},"modules/GridModule.html":{}}}],["modulewithprovid",{"_index":440,"title":{},"body":{"modules/GridModule.html":{}}}],["moment",{"_index":7,"title":{},"body":{"dependencies.html":{}}}],["more",{"_index":82,"title":{},"body":{"index.html":{}}}],["mousedown",{"_index":653,"title":{},"body":{"interfaces/MouseDownListener.html":{}}}],["mousedown(ev",{"_index":654,"title":{},"body":{"interfaces/MouseDownListener.html":{}}}],["mousedownlisten",{"_index":650,"title":{"interfaces/MouseDownListener.html":{}},"body":{"interfaces/MouseDownListener.html":{}}}],["mousedrag",{"_index":658,"title":{},"body":{"interfaces/MouseDragListener.html":{}}}],["mousedrag(ev",{"_index":659,"title":{},"body":{"interfaces/MouseDragListener.html":{}}}],["mousedraglisten",{"_index":656,"title":{"interfaces/MouseDragListener.html":{}},"body":{"interfaces/MouseDragListener.html":{}}}],["mouseev",{"_index":634,"title":{},"body":{"interfaces/ClickListener.html":{},"interfaces/DblClickListener.html":{},"interfaces/MouseDownListener.html":{},"interfaces/MouseDragListener.html":{},"interfaces/MouseOverListener.html":{},"interfaces/MouseUpListener.html":{}}}],["mouseov",{"_index":663,"title":{},"body":{"interfaces/MouseOverListener.html":{}}}],["mouseover(ev",{"_index":664,"title":{},"body":{"interfaces/MouseOverListener.html":{}}}],["mouseoverlisten",{"_index":661,"title":{"interfaces/MouseOverListener.html":{}},"body":{"interfaces/MouseOverListener.html":{}}}],["mouseup",{"_index":668,"title":{},"body":{"interfaces/MouseUpListener.html":{}}}],["mouseup(ev",{"_index":669,"title":{},"body":{"interfaces/MouseUpListener.html":{}}}],["mouseuplisten",{"_index":666,"title":{"interfaces/MouseUpListener.html":{}},"body":{"interfaces/MouseUpListener.html":{}}}],["move",{"_index":47,"title":{},"body":{"index.html":{}}}],["multi",{"_index":470,"title":{},"body":{"modules/GridModule.html":{}}}],["name",{"_index":141,"title":{},"body":{"index.html":{},"injectables/GridMessageService.html":{},"pipes/IsFixedPipe.html":{},"pipes/IsGroupPipe.html":{},"pipes/IsRowVisiblePipe.html":{},"pipes/IsVisiblePipe.html":{},"classes/Cell.html":{},"classes/EmptyFactory.html":{},"classes/FormatterParser.html":{},"classes/HtmlUtil.html":{},"classes/InjectableFactory.html":{},"classes/RowChange.html":{},"classes/SortInfo.html":{},"interfaces/ClickListener.html":{},"interfaces/DblClickListener.html":{},"interfaces/MouseDownListener.html":{},"interfaces/MouseDragListener.html":{},"interfaces/MouseOverListener.html":{},"interfaces/MouseUpListener.html":{}}}],["navig",{"_index":197,"title":{},"body":{"index.html":{}}}],["nearli",{"_index":26,"title":{},"body":{"index.html":{}}}],["need",{"_index":529,"title":{},"body":{"classes/Cell.html":{}}}],["new",{"_index":113,"title":{},"body":{"index.html":{},"injectables/GridMessageService.html":{},"classes/EmptyFactory.html":{},"classes/InjectableFactory.html":{},"interfaces/EmptyConstructor.html":{},"interfaces/InjectableConstructor.html":{}}}],["new(injector",{"_index":601,"title":{},"body":{"classes/InjectableFactory.html":{},"interfaces/InjectableConstructor.html":{}}}],["newrownum",{"_index":605,"title":{},"body":{"classes/RowChange.html":{}}}],["newvalu",{"_index":222,"title":{},"body":{"index.html":{}}}],["next",{"_index":78,"title":{},"body":{"index.html":{}}}],["ng",{"_index":2,"title":{},"body":{"dependencies.html":{},"index.html":{},"modules/GridModule.html":{}}}],["ngbmodul",{"_index":447,"title":{},"body":{"modules/GridModule.html":{}}}],["ngbmodule.forroot",{"_index":472,"title":{},"body":{"modules/GridModule.html":{}}}],["ngmodul",{"_index":441,"title":{},"body":{"modules/GridModule.html":{}}}],["nlab",{"_index":266,"title":{},"body":{"index.html":{}}}],["no_ev",{"_index":674,"title":{},"body":{"miscellaneous/variables.html":{}}}],["noninfring",{"_index":419,"title":{},"body":{"license.html":{}}}],["note",{"_index":96,"title":{},"body":{"index.html":{}}}],["notic",{"_index":407,"title":{},"body":{"license.html":{}}}],["npmignore.2.0.1",{"_index":354,"title":{},"body":{"changelog.html":{}}}],["npmpack",{"_index":56,"title":{},"body":{"index.html":{}}}],["npmpublish",{"_index":57,"title":{},"body":{"index.html":{}}}],["null",{"_index":589,"title":{},"body":{"classes/HtmlUtil.html":{},"classes/SortInfo.html":{}}}],["number",{"_index":180,"title":{},"body":{"index.html":{},"injectables/GridMessageService.html":{},"classes/Cell.html":{},"classes/RowChange.html":{},"miscellaneous/variables.html":{}}}],["numer",{"_index":370,"title":{},"body":{"changelog.html":{}}}],["o",{"_index":534,"title":{},"body":{"classes/Cell.html":{}}}],["o.isfix",{"_index":514,"title":{},"body":{"pipes/IsFixedPipe.html":{}}}],["o.isgroup",{"_index":518,"title":{},"body":{"pipes/IsGroupPipe.html":{}}}],["o.isutil",{"_index":519,"title":{},"body":{"pipes/IsGroupPipe.html":{}}}],["o.vis",{"_index":524,"title":{},"body":{"pipes/IsRowVisiblePipe.html":{},"pipes/IsVisiblePipe.html":{}}}],["object",{"_index":123,"title":{},"body":{"index.html":{},"classes/Cell.html":{}}}],["object.assign(thi",{"_index":537,"title":{},"body":{"classes/Cell.html":{}}}],["objects.fixedcolumn",{"_index":163,"title":{},"body":{"index.html":{}}}],["observ",{"_index":369,"title":{},"body":{"changelog.html":{},"injectables/GridMessageService.html":{}}}],["obtain",{"_index":389,"title":{},"body":{"license.html":{}}}],["old",{"_index":224,"title":{},"body":{"index.html":{}}}],["oldrownum",{"_index":606,"title":{},"body":{"classes/RowChange.html":{}}}],["oldvalu",{"_index":221,"title":{},"body":{"index.html":{}}}],["on",{"_index":81,"title":{},"body":{"index.html":{}}}],["oncellsav",{"_index":216,"title":{},"body":{"index.html":{}}}],["onrowsav",{"_index":196,"title":{},"body":{"index.html":{}}}],["option",{"_index":139,"title":{},"body":{"index.html":{},"injectables/GridMessageService.html":{},"pipes/IsFixedPipe.html":{},"pipes/IsGroupPipe.html":{},"pipes/IsRowVisiblePipe.html":{},"pipes/IsVisiblePipe.html":{},"classes/Cell.html":{},"classes/EmptyFactory.html":{},"classes/FormatterParser.html":{},"classes/HtmlUtil.html":{},"classes/InjectableFactory.html":{},"classes/RowChange.html":{},"classes/SortInfo.html":{},"interfaces/ClickListener.html":{},"interfaces/DblClickListener.html":{},"interfaces/EventListenerArg.html":{},"interfaces/MouseDownListener.html":{},"interfaces/MouseDragListener.html":{},"interfaces/MouseOverListener.html":{},"interfaces/MouseUpListener.html":{}}}],["origin",{"_index":230,"title":{},"body":{"index.html":{}}}],["originalrowdata",{"_index":228,"title":{},"body":{"index.html":{}}}],["otherwis",{"_index":429,"title":{},"body":{"license.html":{}}}],["out",{"_index":331,"title":{},"body":{"overview.html":{},"license.html":{},"modules/GridModule.html":{}}}],["over.interface.t",{"_index":662,"title":{},"body":{"interfaces/MouseOverListener.html":{}}}],["over.interface.ts:3",{"_index":665,"title":{},"body":{"interfaces/MouseOverListener.html":{}}}],["overview",{"_index":307,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["pack",{"_index":60,"title":{},"body":{"index.html":{}}}],["packag",{"_index":0,"title":{"dependencies.html":{}},"body":{"index.html":{}}}],["package.json",{"_index":51,"title":{},"body":{"index.html":{}}}],["page",{"_index":72,"title":{},"body":{"index.html":{}}}],["paramet",{"_index":490,"title":{},"body":{"injectables/GridMessageService.html":{},"pipes/IsFixedPipe.html":{},"pipes/IsGroupPipe.html":{},"pipes/IsRowVisiblePipe.html":{},"pipes/IsVisiblePipe.html":{},"classes/Cell.html":{},"classes/EmptyFactory.html":{},"classes/FormatterParser.html":{},"classes/HtmlUtil.html":{},"classes/InjectableFactory.html":{},"classes/RowChange.html":{},"classes/SortInfo.html":{},"interfaces/ClickListener.html":{},"interfaces/DblClickListener.html":{},"interfaces/MouseDownListener.html":{},"interfaces/MouseDragListener.html":{},"interfaces/MouseOverListener.html":{},"interfaces/MouseUpListener.html":{}}}],["parser",{"_index":554,"title":{},"body":{"classes/FormatterParser.html":{}}}],["parser.t",{"_index":552,"title":{},"body":{"classes/FormatterParser.html":{}}}],["parser.ts:12",{"_index":560,"title":{},"body":{"classes/FormatterParser.html":{}}}],["parser.ts:20",{"_index":562,"title":{},"body":{"classes/FormatterParser.html":{}}}],["parser.ts:6",{"_index":564,"title":{},"body":{"classes/FormatterParser.html":{}}}],["parser.ts:8",{"_index":563,"title":{},"body":{"classes/FormatterParser.html":{}}}],["parsevalu",{"_index":557,"title":{},"body":{"classes/FormatterParser.html":{}}}],["parsevalue(valu",{"_index":561,"title":{},"body":{"classes/FormatterParser.html":{}}}],["particular",{"_index":417,"title":{},"body":{"license.html":{}}}],["pass",{"_index":130,"title":{},"body":{"index.html":{}}}],["paus",{"_index":344,"title":{},"body":{"changelog.html":{}}}],["per",{"_index":181,"title":{},"body":{"index.html":{}}}],["perform",{"_index":206,"title":{},"body":{"index.html":{}}}],["permiss",{"_index":383,"title":{},"body":{"license.html":{}}}],["permit",{"_index":403,"title":{},"body":{"license.html":{}}}],["person",{"_index":388,"title":{},"body":{"license.html":{}}}],["pipe",{"_index":335,"title":{"pipes/IsFixedPipe.html":{},"pipes/IsGroupPipe.html":{},"pipes/IsRowVisiblePipe.html":{},"pipes/IsVisiblePipe.html":{}},"body":{"overview.html":{},"pipes/IsFixedPipe.html":{},"pipes/IsGroupPipe.html":{},"pipes/IsRowVisiblePipe.html":{},"pipes/IsVisiblePipe.html":{}}}],["pipetransform",{"_index":512,"title":{},"body":{"pipes/IsFixedPipe.html":{},"pipes/IsGroupPipe.html":{},"pipes/IsRowVisiblePipe.html":{},"pipes/IsVisiblePipe.html":{}}}],["point",{"_index":585,"title":{},"body":{"classes/HtmlUtil.html":{}}}],["point.getpoint(this.getid(",{"_index":590,"title":{},"body":{"classes/HtmlUtil.html":{}}}],["popup).selectedrow",{"_index":242,"title":{},"body":{"index.html":{}}}],["popup.compon",{"_index":464,"title":{},"body":{"modules/GridModule.html":{}}}],["portion",{"_index":410,"title":{},"body":{"license.html":{}}}],["possibl",{"_index":71,"title":{},"body":{"index.html":{}}}],["prevent",{"_index":347,"title":{},"body":{"changelog.html":{}}}],["previou",{"_index":77,"title":{},"body":{"index.html":{}}}],["privat",{"_index":480,"title":{},"body":{"injectables/GridMessageService.html":{},"classes/InjectableFactory.html":{},"interfaces/InjectableConstructor.html":{}}}],["promis",{"_index":111,"title":{},"body":{"index.html":{},"changelog.html":{}}}],["promise((resolv",{"_index":114,"title":{},"body":{"index.html":{}}}],["properti",{"_index":479,"title":{},"body":{"injectables/GridMessageService.html":{},"classes/Cell.html":{},"classes/FormatterParser.html":{},"classes/RowChange.html":{},"classes/SortInfo.html":{},"interfaces/Dictionary.html":{},"interfaces/EventListenerArg.html":{}}}],["proprietari",{"_index":439,"title":{},"body":{"modules/GridModule.html":{}}}],["provid",{"_index":104,"title":{},"body":{"index.html":{},"overview.html":{},"license.html":{},"modules/GridModule.html":{}}}],["public",{"_index":615,"title":{},"body":{"classes/SortInfo.html":{}}}],["publish",{"_index":44,"title":{},"body":{"index.html":{},"license.html":{}}}],["publish.bas",{"_index":61,"title":{},"body":{"index.html":{}}}],["pull",{"_index":570,"title":{},"body":{"classes/HtmlUtil.html":{}}}],["pure",{"_index":255,"title":{},"body":{"index.html":{},"pipes/IsFixedPipe.html":{}}}],["purpos",{"_index":418,"title":{},"body":{"license.html":{}}}],["rang",{"_index":70,"title":{},"body":{"index.html":{}}}],["re",{"_index":250,"title":{},"body":{"index.html":{}}}],["readm",{"_index":355,"title":{},"body":{"changelog.html":{}}}],["readme.md",{"_index":374,"title":{},"body":{"changelog.html":{}}}],["refactor",{"_index":358,"title":{},"body":{"changelog.html":{}}}],["referenc",{"_index":367,"title":{},"body":{"changelog.html":{}}}],["refresh",{"_index":248,"title":{},"body":{"index.html":{}}}],["reject",{"_index":115,"title":{},"body":{"index.html":{}}}],["releas",{"_index":373,"title":{},"body":{"changelog.html":{}}}],["remov",{"_index":340,"title":{},"body":{"changelog.html":{}}}],["render",{"_index":246,"title":{},"body":{"index.html":{},"changelog.html":{},"classes/Cell.html":{}}}],["renderer.compon",{"_index":457,"title":{},"body":{"modules/GridModule.html":{}}}],["renderer2",{"_index":263,"title":{},"body":{"index.html":{}}}],["report",{"_index":161,"title":{},"body":{"index.html":{}}}],["request",{"_index":305,"title":{},"body":{"index.html":{},"changelog.html":{}}}],["requir",{"_index":54,"title":{},"body":{"index.html":{}}}],["reset",{"_index":330,"title":{},"body":{"overview.html":{},"modules/GridModule.html":{}}}],["resiz",{"_index":675,"title":{},"body":{"miscellaneous/variables.html":{}}}],["resolve(externaldata",{"_index":119,"title":{},"body":{"index.html":{}}}],["restrict",{"_index":396,"title":{},"body":{"license.html":{}}}],["result",{"_index":9,"title":{},"body":{"dependencies.html":{},"index.html":{},"overview.html":{},"changelog.html":{},"license.html":{},"modules.html":{},"modules/GridModule.html":{},"injectables/GridMessageService.html":{},"pipes/IsFixedPipe.html":{},"pipes/IsGroupPipe.html":{},"pipes/IsRowVisiblePipe.html":{},"pipes/IsVisiblePipe.html":{},"classes/Cell.html":{},"classes/EmptyFactory.html":{},"classes/FormatterParser.html":{},"classes/HtmlUtil.html":{},"classes/InjectableFactory.html":{},"classes/RowChange.html":{},"classes/SortInfo.html":{},"interfaces/ClickListener.html":{},"interfaces/DblClickListener.html":{},"interfaces/Dictionary.html":{},"interfaces/EmptyConstructor.html":{},"interfaces/EventListenerArg.html":{},"interfaces/InjectableConstructor.html":{},"interfaces/MouseDownListener.html":{},"interfaces/MouseDragListener.html":{},"interfaces/MouseOverListener.html":{},"interfaces/MouseUpListener.html":{},"miscellaneous/variables.html":{}}}],["retriev",{"_index":86,"title":{},"body":{"index.html":{}}}],["return",{"_index":112,"title":{},"body":{"index.html":{},"modules/GridModule.html":{},"injectables/GridMessageService.html":{},"pipes/IsFixedPipe.html":{},"pipes/IsGroupPipe.html":{},"pipes/IsRowVisiblePipe.html":{},"pipes/IsVisiblePipe.html":{},"classes/EmptyFactory.html":{},"classes/FormatterParser.html":{},"classes/HtmlUtil.html":{},"classes/InjectableFactory.html":{},"classes/SortInfo.html":{},"interfaces/ClickListener.html":{},"interfaces/DblClickListener.html":{},"interfaces/EmptyConstructor.html":{},"interfaces/InjectableConstructor.html":{},"interfaces/MouseDownListener.html":{},"interfaces/MouseDragListener.html":{},"interfaces/MouseOverListener.html":{},"interfaces/MouseUpListener.html":{}}}],["right",{"_index":306,"title":{},"body":{"index.html":{},"license.html":{}}}],["row",{"_index":79,"title":{},"body":{"index.html":{},"changelog.html":{},"modules/GridModule.html":{},"pipes/IsRowVisiblePipe.html":{}}}],["row/row",{"_index":523,"title":{},"body":{"pipes/IsRowVisiblePipe.html":{}}}],["rowchang",{"_index":602,"title":{"classes/RowChange.html":{}},"body":{"classes/RowChange.html":{}}}],["rownum",{"_index":227,"title":{},"body":{"index.html":{}}}],["rows[i].key",{"_index":217,"title":{},"body":{"index.html":{}}}],["rxjs/rx",{"_index":501,"title":{},"body":{"injectables/GridMessageService.html":{}}}],["same",{"_index":193,"title":{},"body":{"index.html":{}}}],["save",{"_index":360,"title":{},"body":{"changelog.html":{}}}],["scroll",{"_index":192,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["scrollbar",{"_index":350,"title":{},"body":{"changelog.html":{}}}],["see",{"_index":101,"title":{},"body":{"index.html":{},"changelog.html":{},"classes/InjectableFactory.html":{},"interfaces/InjectableConstructor.html":{}}}],["select",{"_index":69,"title":{},"body":{"index.html":{},"changelog.html":{}}}],["selectfilterrender",{"_index":298,"title":{},"body":{"index.html":{},"overview.html":{},"modules/GridModule.html":{}}}],["sell",{"_index":402,"title":{},"body":{"license.html":{}}}],["servic",{"_index":366,"title":{},"body":{"changelog.html":{}}}],["service.config",{"_index":135,"title":{},"body":{"index.html":{}}}],["services/grid",{"_index":468,"title":{},"body":{"modules/GridModule.html":{}}}],["setasc",{"_index":619,"title":{},"body":{"classes/SortInfo.html":{}}}],["setasc(asc",{"_index":623,"title":{},"body":{"classes/SortInfo.html":{}}}],["setconfig",{"_index":558,"title":{},"body":{"classes/FormatterParser.html":{}}}],["setconfig(config",{"_index":261,"title":{},"body":{"index.html":{},"classes/FormatterParser.html":{}}}],["setfield",{"_index":620,"title":{},"body":{"classes/SortInfo.html":{}}}],["setfield(field",{"_index":625,"title":{},"body":{"classes/SortInfo.html":{}}}],["settimeout",{"_index":118,"title":{},"body":{"index.html":{}}}],["sever",{"_index":256,"title":{},"body":{"index.html":{}}}],["shall",{"_index":408,"title":{},"body":{"license.html":{}}}],["shortcut",{"_index":209,"title":{},"body":{"index.html":{}}}],["show",{"_index":155,"title":{},"body":{"index.html":{}}}],["showicon",{"_index":275,"title":{},"body":{"index.html":{}}}],["shown",{"_index":175,"title":{},"body":{"index.html":{}}}],["side",{"_index":166,"title":{},"body":{"index.html":{}}}],["simpl",{"_index":34,"title":{},"body":{"index.html":{},"classes/FormatterParser.html":{}}}],["size",{"_index":74,"title":{},"body":{"index.html":{}}}],["size.saveondirtyrowchang",{"_index":194,"title":{},"body":{"index.html":{}}}],["softwar",{"_index":390,"title":{},"body":{"license.html":{}}}],["sort",{"_index":62,"title":{},"body":{"index.html":{}}}],["sortinfo",{"_index":612,"title":{"classes/SortInfo.html":{}},"body":{"classes/SortInfo.html":{}}}],["sourc",{"_index":87,"title":{},"body":{"index.html":{},"modules/GridModule.html":{},"injectables/GridMessageService.html":{},"pipes/IsFixedPipe.html":{},"pipes/IsGroupPipe.html":{},"pipes/IsRowVisiblePipe.html":{},"pipes/IsVisiblePipe.html":{},"classes/Cell.html":{},"classes/EmptyFactory.html":{},"classes/FormatterParser.html":{},"classes/HtmlUtil.html":{},"classes/InjectableFactory.html":{},"classes/RowChange.html":{},"classes/SortInfo.html":{},"interfaces/ClickListener.html":{},"interfaces/DblClickListener.html":{},"interfaces/Dictionary.html":{},"interfaces/EmptyConstructor.html":{},"interfaces/EventListenerArg.html":{},"interfaces/InjectableConstructor.html":{},"interfaces/MouseDownListener.html":{},"interfaces/MouseDragListener.html":{},"interfaces/MouseOverListener.html":{},"interfaces/MouseUpListener.html":{}}}],["specif",{"_index":92,"title":{},"body":{"index.html":{}}}],["specifi",{"_index":182,"title":{},"body":{"index.html":{}}}],["speed",{"_index":251,"title":{},"body":{"index.html":{}}}],["spinner",{"_index":346,"title":{},"body":{"changelog.html":{}}}],["spinner.eventlisten",{"_index":204,"title":{},"body":{"index.html":{}}}],["spreadsheet",{"_index":160,"title":{},"body":{"index.html":{}}}],["src/grid/cell/cell.t",{"_index":526,"title":{},"body":{"classes/Cell.html":{}}}],["src/grid/cell/cell.ts:5",{"_index":536,"title":{},"body":{"classes/Cell.html":{}}}],["src/grid/cell/cell.ts:6",{"_index":535,"title":{},"body":{"classes/Cell.html":{}}}],["src/grid/cell/cell.ts:7",{"_index":533,"title":{},"body":{"classes/Cell.html":{}}}],["src/grid/column/formatters/formatt",{"_index":551,"title":{},"body":{"classes/FormatterParser.html":{}}}],["src/grid/event/click.interface.t",{"_index":632,"title":{},"body":{"interfaces/ClickListener.html":{}}}],["src/grid/event/click.interface.ts:3",{"_index":635,"title":{},"body":{"interfaces/ClickListener.html":{}}}],["src/grid/event/dbl",{"_index":637,"title":{},"body":{"interfaces/DblClickListener.html":{}}}],["src/grid/event/ev",{"_index":646,"title":{},"body":{"interfaces/EventListenerArg.html":{}}}],["src/grid/event/mous",{"_index":651,"title":{},"body":{"interfaces/MouseDownListener.html":{},"interfaces/MouseDragListener.html":{},"interfaces/MouseOverListener.html":{},"interfaces/MouseUpListener.html":{}}}],["src/grid/grid.component.t",{"_index":679,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/grid/grid.module.t",{"_index":435,"title":{},"body":{"modules/GridModule.html":{}}}],["src/grid/model/dictionary.interface.t",{"_index":643,"title":{},"body":{"interfaces/Dictionary.html":{}}}],["src/grid/model/dictionary.interface.ts:2",{"_index":645,"title":{},"body":{"interfaces/Dictionary.html":{}}}],["src/grid/model/dictionary.interface.ts:3",{"_index":644,"title":{},"body":{"interfaces/Dictionary.html":{}}}],["src/grid/services/grid",{"_index":477,"title":{},"body":{"injectables/GridMessageService.html":{},"miscellaneous/variables.html":{}}}],["src/grid/utils/empty.factory.t",{"_index":539,"title":{},"body":{"classes/EmptyFactory.html":{},"interfaces/EmptyConstructor.html":{}}}],["src/grid/utils/empty.factory.ts:4",{"_index":545,"title":{},"body":{"classes/EmptyFactory.html":{}}}],["src/grid/utils/empty.factory.ts:7",{"_index":546,"title":{},"body":{"classes/EmptyFactory.html":{}}}],["src/grid/utils/html",{"_index":567,"title":{},"body":{"classes/HtmlUtil.html":{}}}],["src/grid/utils/i",{"_index":505,"title":{},"body":{"pipes/IsFixedPipe.html":{},"pipes/IsGroupPipe.html":{},"pipes/IsRowVisiblePipe.html":{},"pipes/IsVisiblePipe.html":{}}}],["src/grid/utils/injectable.factory.t",{"_index":592,"title":{},"body":{"classes/InjectableFactory.html":{},"interfaces/InjectableConstructor.html":{}}}],["src/grid/utils/injectable.factory.ts:10",{"_index":599,"title":{},"body":{"classes/InjectableFactory.html":{}}}],["src/grid/utils/injectable.factory.ts:7",{"_index":597,"title":{},"body":{"classes/InjectableFactory.html":{}}}],["src/grid/utils/row",{"_index":603,"title":{},"body":{"classes/RowChange.html":{}}}],["src/grid/utils/sort",{"_index":613,"title":{},"body":{"classes/SortInfo.html":{}}}],["start",{"_index":12,"title":{"index.html":{},"changelog.html":{},"license.html":{}},"body":{}}],["state",{"_index":172,"title":{},"body":{"index.html":{}}}],["static",{"_index":473,"title":{},"body":{"modules/GridModule.html":{},"classes/HtmlUtil.html":{}}}],["string",{"_index":68,"title":{},"body":{"index.html":{},"injectables/GridMessageService.html":{},"classes/HtmlUtil.html":{},"classes/SortInfo.html":{},"interfaces/Dictionary.html":{}}}],["subject",{"_index":405,"title":{},"body":{"license.html":{},"injectables/GridMessageService.html":{}}}],["sublicens",{"_index":400,"title":{},"body":{"license.html":{}}}],["substanti",{"_index":409,"title":{},"body":{"license.html":{}}}],["such",{"_index":571,"title":{},"body":{"classes/HtmlUtil.html":{}}}],["support",{"_index":32,"title":{},"body":{"index.html":{},"changelog.html":{},"modules.html":{}}}],["svg",{"_index":432,"title":{},"body":{"modules.html":{}}}],["syntax",{"_index":103,"title":{},"body":{"index.html":{}}}],["t",{"_index":547,"title":{},"body":{"classes/EmptyFactory.html":{},"classes/InjectableFactory.html":{},"interfaces/EmptyConstructor.html":{},"interfaces/InjectableConstructor.html":{}}}],["tab",{"_index":676,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tabl",{"_index":30,"title":{},"body":{"index.html":{}}}],["taken",{"_index":94,"title":{},"body":{"index.html":{}}}],["templat",{"_index":201,"title":{},"body":{"index.html":{}}}],["templateref",{"_index":200,"title":{},"body":{"index.html":{}}}],["texteditrender",{"_index":322,"title":{},"body":{"overview.html":{},"modules/GridModule.html":{}}}],["textfilterrender",{"_index":283,"title":{},"body":{"index.html":{},"overview.html":{},"modules/GridModule.html":{}}}],["them.pages",{"_index":183,"title":{},"body":{"index.html":{}}}],["theme",{"_index":162,"title":{},"body":{"index.html":{}}}],["thing",{"_index":252,"title":{},"body":{"index.html":{},"classes/HtmlUtil.html":{}}}],["this._message.asobserv",{"_index":497,"title":{},"body":{"injectables/GridMessageService.html":{}}}],["this._message.next(\"error",{"_index":502,"title":{},"body":{"injectables/GridMessageService.html":{}}}],["this._message.next(\"warn",{"_index":503,"title":{},"body":{"injectables/GridMessageService.html":{}}}],["this._messageobserv",{"_index":504,"title":{},"body":{"injectables/GridMessageService.html":{}}}],["this.asc",{"_index":629,"title":{},"body":{"classes/SortInfo.html":{}}}],["this.config",{"_index":565,"title":{},"body":{"classes/FormatterParser.html":{}}}],["this.datageneratorservice.getexternaldata1(externalinfo).subscribe((externaldata",{"_index":116,"title":{},"body":{"index.html":{}}}],["this.emptyconstructor",{"_index":549,"title":{},"body":{"classes/EmptyFactory.html":{},"interfaces/EmptyConstructor.html":{}}}],["this.field",{"_index":630,"title":{},"body":{"classes/SortInfo.html":{}}}],["this.ic(this.injector",{"_index":600,"title":{},"body":{"classes/InjectableFactory.html":{},"interfaces/InjectableConstructor.html":{}}}],["this.newrownum",{"_index":611,"title":{},"body":{"classes/RowChange.html":{}}}],["this.oldrownum",{"_index":610,"title":{},"body":{"classes/RowChange.html":{}}}],["those",{"_index":173,"title":{},"body":{"index.html":{}}}],["through",{"_index":37,"title":{},"body":{"index.html":{}}}],["titl",{"_index":156,"title":{},"body":{"index.html":{}}}],["to.configur",{"_index":143,"title":{},"body":{"index.html":{}}}],["toast",{"_index":241,"title":{},"body":{"index.html":{}}}],["todo",{"_index":304,"title":{},"body":{"index.html":{}}}],["togeth",{"_index":168,"title":{},"body":{"index.html":{}}}],["tort",{"_index":428,"title":{},"body":{"license.html":{}}}],["transform",{"_index":509,"title":{},"body":{"pipes/IsFixedPipe.html":{},"pipes/IsGroupPipe.html":{},"pipes/IsRowVisiblePipe.html":{},"pipes/IsVisiblePipe.html":{}}}],["transform(list",{"_index":510,"title":{},"body":{"pipes/IsFixedPipe.html":{},"pipes/IsGroupPipe.html":{},"pipes/IsRowVisiblePipe.html":{},"pipes/IsVisiblePipe.html":{}}}],["true",{"_index":171,"title":{},"body":{"index.html":{},"classes/SortInfo.html":{}}}],["two",{"_index":126,"title":{},"body":{"index.html":{}}}],["type",{"_index":122,"title":{},"body":{"index.html":{},"injectables/GridMessageService.html":{},"pipes/IsFixedPipe.html":{},"classes/Cell.html":{},"classes/EmptyFactory.html":{},"classes/FormatterParser.html":{},"classes/HtmlUtil.html":{},"classes/InjectableFactory.html":{},"classes/RowChange.html":{},"classes/SortInfo.html":{},"interfaces/ClickListener.html":{},"interfaces/DblClickListener.html":{},"interfaces/Dictionary.html":{},"interfaces/EventListenerArg.html":{},"interfaces/InjectableConstructor.html":{},"interfaces/MouseDownListener.html":{},"interfaces/MouseDragListener.html":{},"interfaces/MouseOverListener.html":{},"interfaces/MouseUpListener.html":{},"miscellaneous/variables.html":{}}}],["undefin",{"_index":124,"title":{},"body":{"index.html":{},"pipes/IsFixedPipe.html":{},"pipes/IsGroupPipe.html":{},"pipes/IsRowVisiblePipe.html":{},"pipes/IsVisiblePipe.html":{},"classes/FormatterParser.html":{}}}],["univers",{"_index":381,"title":{},"body":{"license.html":{},"modules/GridModule.html":{}}}],["up",{"_index":253,"title":{},"body":{"index.html":{}}}],["up.interface.t",{"_index":667,"title":{},"body":{"interfaces/MouseUpListener.html":{}}}],["up.interface.ts:3",{"_index":670,"title":{},"body":{"interfaces/MouseUpListener.html":{}}}],["upon",{"_index":301,"title":{},"body":{"index.html":{}}}],["us",{"_index":55,"title":{},"body":{"index.html":{},"license.html":{}}}],["usag",{"_index":95,"title":{},"body":{"index.html":{}}}],["user",{"_index":147,"title":{},"body":{"index.html":{},"changelog.html":{}}}],["usevalu",{"_index":476,"title":{},"body":{"modules/GridModule.html":{}}}],["usual",{"_index":59,"title":{},"body":{"index.html":{}}}],["utah",{"_index":382,"title":{},"body":{"license.html":{},"modules/GridModule.html":{}}}],["util.t",{"_index":568,"title":{},"body":{"classes/HtmlUtil.html":{}}}],["util.ts:23",{"_index":582,"title":{},"body":{"classes/HtmlUtil.html":{}}}],["util.ts:38",{"_index":584,"title":{},"body":{"classes/HtmlUtil.html":{}}}],["util.ts:8",{"_index":578,"title":{},"body":{"classes/HtmlUtil.html":{}}}],["utils/i",{"_index":451,"title":{},"body":{"modules/GridModule.html":{}}}],["valid",{"_index":362,"title":{},"body":{"changelog.html":{}}}],["valu",{"_index":225,"title":{},"body":{"index.html":{},"injectables/GridMessageService.html":{},"classes/Cell.html":{},"classes/FormatterParser.html":{},"classes/SortInfo.html":{},"interfaces/Dictionary.html":{},"miscellaneous/variables.html":{}}}],["values.busytempl",{"_index":199,"title":{},"body":{"index.html":{}}}],["variabl",{"_index":672,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["variou",{"_index":73,"title":{},"body":{"index.html":{}}}],["vertic",{"_index":249,"title":{},"body":{"index.html":{}}}],["view",{"_index":276,"title":{},"body":{"index.html":{},"changelog.html":{}}}],["viewconfig",{"_index":270,"title":{},"body":{"index.html":{}}}],["viewrender",{"_index":268,"title":{},"body":{"index.html":{}}}],["visibl",{"_index":153,"title":{},"body":{"index.html":{}}}],["visible.pip",{"_index":452,"title":{},"body":{"modules/GridModule.html":{}}}],["visible.pipe.t",{"_index":520,"title":{},"body":{"pipes/IsRowVisiblePipe.html":{},"pipes/IsVisiblePipe.html":{}}}],["visible.pipe.ts:9",{"_index":522,"title":{},"body":{"pipes/IsRowVisiblePipe.html":{},"pipes/IsVisiblePipe.html":{}}}],["void",{"_index":491,"title":{},"body":{"injectables/GridMessageService.html":{},"classes/FormatterParser.html":{},"classes/SortInfo.html":{}}}],["wait",{"_index":343,"title":{},"body":{"changelog.html":{}}}],["want",{"_index":213,"title":{},"body":{"index.html":{}}}],["warn",{"_index":214,"title":{},"body":{"index.html":{},"injectables/GridMessageService.html":{}}}],["warn(messag",{"_index":492,"title":{},"body":{"injectables/GridMessageService.html":{}}}],["warranti",{"_index":411,"title":{},"body":{"license.html":{}}}],["way",{"_index":127,"title":{},"body":{"index.html":{}}}],["whether",{"_index":426,"title":{},"body":{"license.html":{}}}],["width",{"_index":351,"title":{},"body":{"changelog.html":{}}}],["wish",{"_index":240,"title":{},"body":{"index.html":{}}}],["without",{"_index":395,"title":{},"body":{"license.html":{},"classes/FormatterParser.html":{}}}],["work",{"_index":91,"title":{},"body":{"index.html":{}}}],["ye",{"_index":580,"title":{},"body":{"classes/HtmlUtil.html":{}}}],["you.logwarn",{"_index":212,"title":{},"body":{"index.html":{}}}],["zoom",{"_index":329,"title":{},"body":{"overview.html":{},"modules/GridModule.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n    Dependencies\n\n\n    \n        @ng-bootstrap/ng-bootstrap : 1.1.x\n    \n        moment : >=2.19.3\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nHCI's Angular Grid Library\nhci-ng-grid Demo on Github\nIntro\nThis grid is designed to be a full featured grid that can handle nearly anything that complex data tables may\nbe expected to support.  By default, the grid is simple and basic, but becomes full featured through\nconfiguration.Install\n\"dependencies\": {\n    \"hci-ng-grid\": \"2.0.x\"\n}import {GridModule} from \"hci-ng-grid\";@NgModule({\n    imports: [\n        GridModule.forRoot()\n    ]\n})Publishing\nCompiled code gets moved to the dist folder with a copy of the package.json.  Custom commands are required for\npackaging and publishing.  Use npmPack and npmPublish instead of the usual pack and publish.Basic Features\n\nSorting: Change sorting by clicking on column header.\nFiltering: String, select, range filtering with the possibility for custom filters.\nPaging: Paging with various page sizes, first, last, previous and next.\nRow Grouping: Rows can be grouped by one or more columns.\nExternal Data Call: Callback to retrieve data from external source.\nCustom Events: Listeners can be added to work for specific events and custom actions can be taken.\n\nUsage\nNote, there are so many features to this grid that not all are currently listed here.  See the demo for full examples.\nThe basic syntax for data provided by the implementing component.\n\nThe basic syntax for an external data call.\n\nAnd a function using mocked external data call.\ndataRequest(externalInfo: ExternalInfo): Promise {\n  return new Promise((resolve, reject) => {\n    this.dataGeneratorService.getExternalData1(externalInfo).subscribe((externalData: ExternalData) => {\n      setTimeout(() =>\n        resolve(externalData), 1000\n      );\n    });\n  });\n}Inputs\ndata\ntype: Object[]\ndefault: undefined\nProvide the grid with an array of rows as objects.  Two way binding to this data.dataCall\ntype: Function\ndefault: undefined\nA function that is called to retrieve data.  The function is passed filtering, sorting and paging info.id\ntype: string\ndefault: undefined\nThe html id for the grid and the id that can be used to get the grid from the global grid service.config\ntype: any\ndefault: {}\nA json object that contains configuration options for the grid.linkedGroups\ntype: string[]\ndefault: undefined\nThe group names that this grid should be linked to.configurable\ntype: boolean\ndefault: false\nFlag if the user should be allowed to modify the grid's configuration (e.g. what colums are visible and how big).title\ntype: string\ndefault: undefined\nShows this title in a title bar above the grid.theme\ntype: string\ndefault: \"spreadsheet\"\noptions: \"spreadsheet\", \"report\", or your own\nThe name of the theme to use.  columns\ntype: Column[]\ndefault: undefined\nAn array of column configuration objects.fixedColumns\ntype: string[]\ndefault: undefined\nA list of column names that should be fixed to the left side of the grid.groupBy\ntype: string[]\ndefault: undefined\nA list of column names that should be used to group rows together.* Currently disabled *\ngroupByCollapsed\ntype: boolean\ndefault: true\nThe state for grouped rows if those rows in a group should be hidden or shown by default.externalFiltering\ntype: boolean\ndefault: false\nTrue if filtering should be handled by the external data call.externalSorting\ntype: boolean\ndefault: false\nTrue if sorting should be handled by the external data call.externalPaging\ntype: boolean\ndefault: false\nTrue if paging should be handled by the external data call.pageSize\ntype: number\ndefault: undefined\nThe number of rows per page.  If not specified it will show all of them.pageSizes\ntype: number[]\ndefault: [10, 25, 50]\nAn array of possible page sizes that the user can choose from.nVisibleRows\ntype: number\ndefault: -1\nThe number of visible rows.  A page might have 100 rows, but you can limit the size of the grid to 10 rows which would be scrolling for the user.  The default is -1 which is the same as the page size.saveOnDirtyRowChange\ntype: boolean\ndefault: false\nIf true, will emit a (onRowSave) event if you navigate to a new row and the previous row has dirty values.busyTemplate\ntype: TemplateRef\ndefault: undefined\nA custom template shown when data is loaded.  If you don't like the default spinner.eventListeners\ntype: EventListenerArg[]\ndefault: []\nAn array of listeners that can perform actions on any sort of click or key events.mode\ntype: string\ndefault: undefined\nA shortcut for creating listeners.  Rather than passing in your own listeners, specify a mode and the required listeners will be created for you.logWarnings\ntype: boolean\ndefault: true\nTrue if you want warnings to show in the console.Outputs\nonCellSave\ntype: any\n$event: { key: rows[i].key,\n          i: i,\n          j: j,\n          field: columns[j].field,\n          oldValue: oldValue,\n          newValue: newValue }\nThe row key, location, field, old and new value of the cell.onRowSave\ntype: any\n$event: { key: rows[i].key,\n          rowNum: i,\n          row: originalRowData }\nEmits the key, row number and the data for the row in the format originally passed in.onConfigChange\ntype: any\n$event: config\nEmits the current configuration for the grid.cellClick\ntype: any\n$event: any\nDetermined by the event listener which can emit any type of data.cellDblClick\ntype: any\n$event: any\nDetermined by the event listener which can emit any type of data.rowClick\ntype: any\n$event: any\nDetermined by the event listener which can emit any type of data.rowDblClick\ntype: any\n$event: any\nDetermined by the event listener which can emit any type of data.warning\ntype: string\n$event: warning message as a string\nListen to this to handle warnings from the grid as you wish (e.g. as a toast popup).selectedRows\ntype: any[]\n$event: [key1, key2, ...]\nThis is an array of any instead of number because the row key could be anything.Advanced Features\nRendering Cells\nEvery refresh of data and every vertical scroll will re-render the visible rows and cells.  To speed things\nup, each cell is limited to rendering pure HTML.  However, there are several options of how to render and\nthe option of custom rendering.\nEvery cell is rendering with a class that implements the CellViewRenderer interface.  The two methods\nrequired to implement are\nsetConfig(config: any);\n\ncreateElement(renderer: Renderer2, column: Column, value: any, i: number, j: number): HTMLElement;As an example, the following is an example of a number range renderer.\n{\n    field: \"nLabs\",\n    name: \"# Labs\",\n    viewRenderer: CellNumberRangeView,\n    viewConfig: { low: 15, high: 85, showIcon: true }\n}The class is passed in as the viewRenderer and any config is passed in through the viewConfig.\nFiltering\nLike view rendering, built in and custom components can be used to render the filter.  The difference\nis rather than pure HTML, a filter is a component that extends a base class FilterRenderer.  The\nfollowing are examples of built in filters.\n{\n    field: \"firstName\",\n    name: \"First Name\",\n    filterRenderer: TextFilterRenderer\n},\n{\n    field: \"dob\",\n    name: \"Date of Birth\",\n    dataType: \"date\",\n    format: \"MM/DD/YYYY\",\n    editRenderer: DateEditRenderer,\n    filterRenderer: CompareFilterRenderer\n},\n{\n    field: \"gender\",\n    name: \"Gender\",\n    editRenderer: ChoiceEditRenderer,\n    choices: [ {value: \"Female\", display: \"Female\"}, {value: \"Male\", display: \"Male\"} ],\n    filterRenderer: SelectFilterRenderer\n}Known Issues\n\nRow Groups works upon load, but breaks when filtering is introduced.\n\nTODOs\n\nThere are only left fixed colums, but some have requested right fixed columns.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n            \n                \n                    \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_GridModule\n\n\n\ncluster_GridModule_declarations\n\n\n\ncluster_GridModule_GridComponent_providers\n\n\n\ncluster_GridModule_exports\n\n\n\n\nGridComponent\n\nGridComponent\n\n\n\nGridModule\n\nGridModule\n\nGridModule -->\n\nGridComponent->GridModule\n\n\n\n\n\nColumnHeaderComponent\n\nColumnHeaderComponent\n\nGridModule -->\n\nColumnHeaderComponent->GridModule\n\n\n\n\n\nIsVisiblePipe\n\nIsVisiblePipe\n\nGridModule -->\n\nIsVisiblePipe->GridModule\n\n\n\n\n\nIsGroupPipe\n\nIsGroupPipe\n\nGridModule -->\n\nIsGroupPipe->GridModule\n\n\n\n\n\nIsFixedPipe\n\nIsFixedPipe\n\nGridModule -->\n\nIsFixedPipe->GridModule\n\n\n\n\n\nIsRowVisiblePipe\n\nIsRowVisiblePipe\n\nGridModule -->\n\nIsRowVisiblePipe->GridModule\n\n\n\n\n\nTextEditRenderer\n\nTextEditRenderer\n\nGridModule -->\n\nTextEditRenderer->GridModule\n\n\n\n\n\nDateEditRenderer\n\nDateEditRenderer\n\nGridModule -->\n\nDateEditRenderer->GridModule\n\n\n\n\n\nChoiceEditRenderer\n\nChoiceEditRenderer\n\nGridModule -->\n\nChoiceEditRenderer->GridModule\n\n\n\n\n\nTextFilterRenderer\n\nTextFilterRenderer\n\nGridModule -->\n\nTextFilterRenderer->GridModule\n\n\n\n\n\nSelectFilterRenderer\n\nSelectFilterRenderer\n\nGridModule -->\n\nSelectFilterRenderer->GridModule\n\n\n\n\n\nCompareFilterRenderer\n\nCompareFilterRenderer\n\nGridModule -->\n\nCompareFilterRenderer->GridModule\n\n\n\n\n\nBigTextPopup\n\nBigTextPopup\n\nGridModule -->\n\nBigTextPopup->GridModule\n\n\n\n\n\nConfigMenuComponent\n\nConfigMenuComponent\n\nGridModule -->\n\nConfigMenuComponent->GridModule\n\n\n\n\n\nConfigMultiChoiceComponent\n\nConfigMultiChoiceComponent\n\nGridModule -->\n\nConfigMultiChoiceComponent->GridModule\n\n\n\n\n\nGridComponent \n\nGridComponent \n\nGridComponent  -->\n\nGridModule->GridComponent \n\n\n\n\n\nGridService\n\nGridService\n\nGridComponent -->\n\nGridService->GridComponent\n\n\n\n\n\nGridEventService\n\nGridEventService\n\nGridComponent -->\n\nGridEventService->GridComponent\n\n\n\n\n\nGridMessageService\n\nGridMessageService\n\nGridComponent -->\n\nGridMessageService->GridComponent\n\n\n\n\n\n\n                \n                \n                \n                    Zoom in\n                    Reset\n                    Zoom out\n                \n            \n\n    \n            \n                \n                    \n                        \n                        \n                            1 module\n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                        11 components\n                    \n                \n            \n            \n                \n                    \n                        \n                        4 injectables\n                    \n                \n            \n            \n                \n                    \n                        \n                        4 pipes\n                    \n                \n            \n            \n                \n                    \n                        \n                        33 classes\n                    \n                \n            \n            \n                \n                    \n                        \n                        11 interfaces\n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"changelog.html":{"url":"changelog.html","title":"getting-started - changelog","body":"\n                   \n\nChange Log\n2.1.0\n- Removed allowing auto column generation when no columns configured.\n- Added wait listeners to pause configuration while waiting on any requests.\n- Add spinner for loading and prevent data display if no columns.\n- Bump height if view has scrollbar.\n- Fix column width calculation.2.0.2\n- Fix keywords and add .npmignore.2.0.1\n- Fix readme and license in artifact.2.0.0\n- Refactor of rendering and how data/config/events are listened to.\n- Listeners for saving cells and rows.\n- Customization of busy, and view renderers.\n- Validation support and improved formatting/parsing especially for dates.\n- User configuration added.\n- Global grid service for referencing and connecting grids.\n- Row selection improved.\n- External data calls from Promise to Observable.\n- Numerous fixes.1.0.0\n- Initial Release.  See README.md for features.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nCopyright (c) 2018 Huntsman Cancer Institute at the University of Utah\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        GridModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/GridModule.html":{"url":"modules/GridModule.html","title":"module - GridModule","body":"\n                   \n\n\n\n\n  Modules\n  GridModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_GridModule\n\n\n\ncluster_GridModule_declarations\n\n\n\ncluster_GridModule_GridComponent_providers\n\n\n\ncluster_GridModule_exports\n\n\n\n\nGridComponent\n\nGridComponent\n\n\n\nGridModule\n\nGridModule\n\nGridModule -->\n\nGridComponent->GridModule\n\n\n\n\n\nColumnHeaderComponent\n\nColumnHeaderComponent\n\nGridModule -->\n\nColumnHeaderComponent->GridModule\n\n\n\n\n\nIsVisiblePipe\n\nIsVisiblePipe\n\nGridModule -->\n\nIsVisiblePipe->GridModule\n\n\n\n\n\nIsGroupPipe\n\nIsGroupPipe\n\nGridModule -->\n\nIsGroupPipe->GridModule\n\n\n\n\n\nIsFixedPipe\n\nIsFixedPipe\n\nGridModule -->\n\nIsFixedPipe->GridModule\n\n\n\n\n\nIsRowVisiblePipe\n\nIsRowVisiblePipe\n\nGridModule -->\n\nIsRowVisiblePipe->GridModule\n\n\n\n\n\nTextEditRenderer\n\nTextEditRenderer\n\nGridModule -->\n\nTextEditRenderer->GridModule\n\n\n\n\n\nDateEditRenderer\n\nDateEditRenderer\n\nGridModule -->\n\nDateEditRenderer->GridModule\n\n\n\n\n\nChoiceEditRenderer\n\nChoiceEditRenderer\n\nGridModule -->\n\nChoiceEditRenderer->GridModule\n\n\n\n\n\nTextFilterRenderer\n\nTextFilterRenderer\n\nGridModule -->\n\nTextFilterRenderer->GridModule\n\n\n\n\n\nSelectFilterRenderer\n\nSelectFilterRenderer\n\nGridModule -->\n\nSelectFilterRenderer->GridModule\n\n\n\n\n\nCompareFilterRenderer\n\nCompareFilterRenderer\n\nGridModule -->\n\nCompareFilterRenderer->GridModule\n\n\n\n\n\nBigTextPopup\n\nBigTextPopup\n\nGridModule -->\n\nBigTextPopup->GridModule\n\n\n\n\n\nConfigMenuComponent\n\nConfigMenuComponent\n\nGridModule -->\n\nConfigMenuComponent->GridModule\n\n\n\n\n\nConfigMultiChoiceComponent\n\nConfigMultiChoiceComponent\n\nGridModule -->\n\nConfigMultiChoiceComponent->GridModule\n\n\n\n\n\nGridComponent \n\nGridComponent \n\nGridComponent  -->\n\nGridModule->GridComponent \n\n\n\n\n\nGridService\n\nGridService\n\nGridComponent -->\n\nGridService->GridComponent\n\n\n\n\n\nGridEventService\n\nGridEventService\n\nGridComponent -->\n\nGridEventService->GridComponent\n\n\n\n\n\nGridMessageService\n\nGridMessageService\n\nGridComponent -->\n\nGridMessageService->GridComponent\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/grid/grid.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                GridComponent\n                            \n                            \n                                ColumnHeaderComponent\n                            \n                            \n                                IsVisiblePipe\n                            \n                            \n                                IsGroupPipe\n                            \n                            \n                                IsFixedPipe\n                            \n                            \n                                IsRowVisiblePipe\n                            \n                            \n                                TextEditRenderer\n                            \n                            \n                                DateEditRenderer\n                            \n                            \n                                ChoiceEditRenderer\n                            \n                            \n                                TextFilterRenderer\n                            \n                            \n                                SelectFilterRenderer\n                            \n                            \n                                CompareFilterRenderer\n                            \n                            \n                                BigTextPopup\n                            \n                            \n                                ConfigMenuComponent\n                            \n                            \n                                ConfigMultiChoiceComponent\n                            \n                    \n                \n                \n                    EntryComponents\n                    \n                            \n                                TextEditRenderer\n                            \n                            \n                                DateEditRenderer\n                            \n                            \n                                ChoiceEditRenderer\n                            \n                            \n                                TextFilterRenderer\n                            \n                            \n                                SelectFilterRenderer\n                            \n                            \n                                CompareFilterRenderer\n                            \n                            \n                                BigTextPopup\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    GridComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        /*\n * Copyright (c) 2016 Huntsman Cancer Institute at the University of Utah, Confidential and Proprietary\n */\nimport {ModuleWithProviders, NgModule} from \"@angular/core\";\nimport {CommonModule} from \"@angular/common\";\nimport {FormsModule} from \"@angular/forms\";\n\nimport {NgbModule} from \"@ng-bootstrap/ng-bootstrap\";\n\nimport {GridComponent} from \"./grid.component\";\nimport {ColumnHeaderComponent} from \"./column/column-header.component\";\nimport {IsVisiblePipe} from \"./utils/is-visible.pipe\";\nimport {IsGroupPipe} from \"./utils/is-group.pipe\";\nimport {IsFixedPipe} from \"./utils/is-fixed.pipe\";\nimport {IsRowVisiblePipe} from \"./utils/is-row-visible.pipe\";\nimport {TextEditRenderer} from \"./cell/editRenderers/text-edit-renderer.component\";\nimport {TextFilterRenderer} from \"./column/filterRenderers/text-filter-renderer.component\";\nimport {CompareFilterRenderer} from \"./column/filterRenderers/compare-filter-renderer.component\";\nimport {ChoiceEditRenderer} from \"./cell/editRenderers/choice-edit-renderer.component\";\nimport {DateEditRenderer} from \"./cell/editRenderers/date-edit-renderer.component\";\nimport {SelectFilterRenderer} from \"./column/filterRenderers/select-filter-renderer.component\";\nimport {BigTextPopup} from \"./cell/viewPopupRenderer/bigtext-popup.component\";\nimport {ConfigMenuComponent} from \"./config/config-menu.component\";\nimport {GridGlobalService} from \"./services/grid-global.service\";\nimport {ConfigMultiChoiceComponent} from \"./config/config-multi-choice.component\";\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    NgbModule.forRoot()\n  ],\n  declarations: [\n    GridComponent,\n    ColumnHeaderComponent,\n    IsVisiblePipe,\n    IsGroupPipe,\n    IsFixedPipe,\n    IsRowVisiblePipe,\n    TextEditRenderer,\n    DateEditRenderer,\n    ChoiceEditRenderer,\n    TextFilterRenderer,\n    SelectFilterRenderer,\n    CompareFilterRenderer,\n    BigTextPopup,\n    ConfigMenuComponent,\n    ConfigMultiChoiceComponent\n  ],\n  entryComponents: [\n    TextEditRenderer,\n    DateEditRenderer,\n    ChoiceEditRenderer,\n    TextFilterRenderer,\n    SelectFilterRenderer,\n    CompareFilterRenderer,\n    BigTextPopup\n  ],\n  exports: [\n    GridComponent\n  ]\n})\nexport class GridModule {\n  static forRoot(globalConfig?: any): ModuleWithProviders {\n    return {\n      providers: [\n        GridGlobalService,\n        {provide: \"globalConfig\", useValue: (globalConfig) ? globalConfig : {}}\n      ],\n      ngModule: GridModule\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GridMessageService.html":{"url":"injectables/GridMessageService.html","title":"injectable - GridMessageService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  GridMessageService\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/grid/services/grid-message.service.ts\n        \n\n\n\n            \n                Index\n                \n                    \n                        \n                            \n                                Properties\n                            \n                        \n                        \n                            \n                                \n                                    \n                                            Private\n                                        _level\n                                    \n                                    \n                                            Private\n                                        _message\n                                    \n                                    \n                                            Private\n                                        _messageObservable\n                                    \n                                \n                            \n                        \n                        \n                            \n                                Methods\n                            \n                        \n                        \n                            \n                                \n                                    \n                                        error\n                                    \n                                    \n                                        warn\n                                    \n                                \n                            \n                        \n                        \n                            \n                                Accessors\n                            \n                        \n                        \n                            \n                                \n                                    \n                                        messageObservable\n                                    \n                                \n                            \n                        \n                    \n                \n            \n\n\n            \n                \n                    \n                        Methods\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        error\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            error(message: string)\n                                \n                            \n            \n            \n                                    \n                                        \n                                                Defined in src/grid/services/grid-message.service.ts:12\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                                Type\n                                                            Optional\n                                                        \n                                                    \n                                                    \n                                                            \n                                                                message\n                                                                \n                                                                    \n                                                                                string\n                                                                    \n                                                                \n                                                                \n                                                                        no\n                                                                \n                                                                \n            \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     void\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        warn\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            warn(message: string)\n                                \n                            \n            \n            \n                                    \n                                        \n                                                Defined in src/grid/services/grid-message.service.ts:16\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                                Type\n                                                            Optional\n                                                        \n                                                    \n                                                    \n                                                            \n                                                                message\n                                                                \n                                                                    \n                                                                                string\n                                                                    \n                                                                \n                                                                \n                                                                        no\n                                                                \n                                                                \n            \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     void\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n            \n\n            \n                \n                    \n                        Properties\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                            Private\n                                        _level\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                    _level:     number\n            \n                                \n                            \n                                \n                                    \n                                        Type :     number\n            \n                                    \n                                \n                                \n                                    \n                                        Default value : 2\n                                    \n                                \n                                    \n                                        \n                                                Defined in src/grid/services/grid-message.service.ts:10\n                                        \n                                    \n            \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                            Private\n                                        _message\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                    _message:     Subject\n            \n                                \n                            \n                                \n                                    \n                                        Type :     Subject\n            \n                                    \n                                \n                                \n                                    \n                                        Default value : new Subject()\n                                    \n                                \n                                    \n                                        \n                                                Defined in src/grid/services/grid-message.service.ts:8\n                                        \n                                    \n            \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                            Private\n                                        _messageObservable\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                    _messageObservable:     Observable\n            \n                                \n                            \n                                \n                                    \n                                        Type :     Observable\n            \n                                    \n                                \n                                \n                                    \n                                        Default value : this._message.asObservable()\n                                    \n                                \n                                    \n                                        \n                                                Defined in src/grid/services/grid-message.service.ts:9\n                                        \n                                    \n            \n            \n                        \n                    \n            \n\n            \n                \n                    Accessors\n                \n                    \n                        \n                            \n                                \n                                    \n                                    messageObservable\n                                \n                            \n            \n                            \n                                \n                                    getmessageObservable()\n                                \n                            \n                                        \n                                            \n                                                Defined in src/grid/services/grid-message.service.ts:20\n                                            \n                                        \n            \n                        \n                    \n            \n    \n\n\n    \n        import {Injectable} from \"@angular/core\";\n\nimport {Subject, Observable} from \"rxjs/Rx\";\n\n@Injectable()\nexport class GridMessageService {\n\n  private _message: Subject = new Subject();\n  private _messageObservable: Observable = this._message.asObservable();\n  private _level: number = 2;\n\n  error(message: string) {\n    this._message.next(\"ERROR: \" + message);\n  }\n\n  warn(message: string) {\n    this._message.next(\"WARN: \" + message);\n  }\n\n  get messageObservable(): Observable {\n    return this._messageObservable;\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/IsFixedPipe.html":{"url":"pipes/IsFixedPipe.html","title":"pipe - IsFixedPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Pipes\n  IsFixedPipe\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n\n    \n\n        \n            File\n        \n        \n            src/grid/utils/is-fixed.pipe.ts\n        \n\n\n\n        \n            Metadata\n            \n                \n                    \n                        name\n                        isFixed\n                    \n                \n            \n        \n\n            \n                \n                    \n                        Methods\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        transform\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            transform(list: Array, fixed: boolean)\n                                \n                            \n            \n            \n                                    \n                                        \n                                                Defined in src/grid/utils/is-fixed.pipe.ts:10\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                                Type\n                                                            Optional\n                                                        \n                                                    \n                                                    \n                                                            \n                                                                list\n                                                                \n                                                                    \n                                                                                Array\n                                                                    \n                                                                \n                                                                \n                                                                        no\n                                                                \n                                                                \n            \n                                                            \n                                                            \n                                                                fixed\n                                                                \n                                                                    \n                                                                                boolean\n                                                                    \n                                                                \n                                                                \n                                                                        no\n                                                                \n                                                                \n            \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     any\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n            \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from \"@angular/core\";\n\nimport { Column } from \"../column/column\";\n\n@Pipe({\n  name: \"isFixed\",\n  pure: false\n})\nexport class IsFixedPipe implements PipeTransform {\n  transform(list: Array, fixed: boolean) {\n    if (list === undefined) {\n      return list;\n    } else {\n      return list.filter((o: Column) => o.isFixed === fixed);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/IsGroupPipe.html":{"url":"pipes/IsGroupPipe.html","title":"pipe - IsGroupPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Pipes\n  IsGroupPipe\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n\n    \n\n        \n            File\n        \n        \n            src/grid/utils/is-group.pipe.ts\n        \n\n\n\n        \n            Metadata\n            \n                \n                    \n                        name\n                        isGroup\n                    \n                \n            \n        \n\n            \n                \n                    \n                        Methods\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        transform\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            transform(list: )\n                                \n                            \n            \n            \n                                    \n                                        \n                                                Defined in src/grid/utils/is-group.pipe.ts:9\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Optional\n                                                        \n                                                    \n                                                    \n                                                            \n                                                                list\n                                                                \n                                                                \n                                                                \n                                                                        no\n                                                                \n                                                                \n            \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     any\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n            \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from \"@angular/core\";\n\nimport { Column } from \"../column/column\";\n\n@Pipe({\n  name: \"isGroup\"\n})\nexport class IsGroupPipe implements PipeTransform {\n  transform(list) {\n    if (list === undefined) {\n      return list;\n    } else {\n      return list.filter((o: Column) => o.isGroup || o.isUtility);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/IsRowVisiblePipe.html":{"url":"pipes/IsRowVisiblePipe.html","title":"pipe - IsRowVisiblePipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Pipes\n  IsRowVisiblePipe\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n\n    \n\n        \n            File\n        \n        \n            src/grid/utils/is-row-visible.pipe.ts\n        \n\n\n\n        \n            Metadata\n            \n                \n                    \n                        name\n                        isRowVisible\n                    \n                \n            \n        \n\n            \n                \n                    \n                        Methods\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        transform\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            transform(list: )\n                                \n                            \n            \n            \n                                    \n                                        \n                                                Defined in src/grid/utils/is-row-visible.pipe.ts:9\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Optional\n                                                        \n                                                    \n                                                    \n                                                            \n                                                                list\n                                                                \n                                                                \n                                                                \n                                                                        no\n                                                                \n                                                                \n            \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     any\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n            \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from \"@angular/core\";\n\nimport { Row } from \"../row/row\";\n\n@Pipe({\n  name: \"isRowVisible\"\n})\nexport class IsRowVisiblePipe implements PipeTransform {\n  transform(list) {\n    if (list === undefined) {\n      return list;\n    } else {\n      return list.filter((o: Row) => o.visible);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/IsVisiblePipe.html":{"url":"pipes/IsVisiblePipe.html","title":"pipe - IsVisiblePipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Pipes\n  IsVisiblePipe\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n\n    \n\n        \n            File\n        \n        \n            src/grid/utils/is-visible.pipe.ts\n        \n\n\n\n        \n            Metadata\n            \n                \n                    \n                        name\n                        isVisible\n                    \n                \n            \n        \n\n            \n                \n                    \n                        Methods\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        transform\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            transform(list: )\n                                \n                            \n            \n            \n                                    \n                                        \n                                                Defined in src/grid/utils/is-visible.pipe.ts:9\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Optional\n                                                        \n                                                    \n                                                    \n                                                            \n                                                                list\n                                                                \n                                                                \n                                                                \n                                                                        no\n                                                                \n                                                                \n            \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     any\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n            \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from \"@angular/core\";\n\nimport { Column } from \"../column/column\";\n\n@Pipe({\n  name: \"isVisible\"\n})\nexport class IsVisiblePipe implements PipeTransform {\n  transform(list) {\n    if (list === undefined) {\n      return list;\n    } else {\n      return list.filter((o: Column) => o.visible);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Cell.html":{"url":"classes/Cell.html","title":"class - Cell","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  Cell\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/grid/cell/cell.ts\n        \n\n            \n                Description\n            \n            \n                A holder for the cell's data and other metadata needed for rendering or data management.\n\n            \n\n\n\n\n            \n                Index\n                \n                    \n                        \n                            \n                                Properties\n                            \n                        \n                        \n                            \n                                \n                                    \n                                        dirty\n                                    \n                                    \n                                        key\n                                    \n                                    \n                                        value\n                                    \n                                \n                            \n                        \n                    \n                \n            \n\n            \n                Constructor\n                    \n                        \n                            \n                                \n            constructor(o: Object)\n                                \n                            \n                                    \n                                        \n                                            Defined in src/grid/cell/cell.ts:7\n                                        \n                                    \n            \n                            \n                                \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                                Type\n                                                            Optional\n                                                        \n                                                    \n                                                    \n                                                            \n                                                                o\n                                                              \n                                                                    \n                                                                                Object\n                                                                    \n                                                              \n                                                                \n                                                                        no\n                                                                \n                                                                \n                                                            \n                                                    \n                                                \n                                        \n                                \n                            \n                        \n                    \n            \n\n\n\n            \n                \n                    \n                        Properties\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        dirty\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                    dirty:     boolean\n            \n                                \n                            \n                                \n                                    \n                                        Type :     boolean\n            \n                                    \n                                \n                                \n                                    \n                                        Default value : false\n                                    \n                                \n                                    \n                                        \n                                                Defined in src/grid/cell/cell.ts:7\n                                        \n                                    \n            \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        key\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                    key:     number\n            \n                                \n                            \n                                \n                                    \n                                        Type :     number\n            \n                                    \n                                \n                                    \n                                        \n                                                Defined in src/grid/cell/cell.ts:6\n                                        \n                                    \n            \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        value\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                    value:     any\n            \n                                \n                            \n                                \n                                    \n                                        Type :     any\n            \n                                    \n                                \n                                    \n                                        \n                                                Defined in src/grid/cell/cell.ts:5\n                                        \n                                    \n            \n            \n                        \n                    \n            \n\n    \n\n\n    \n        export class Cell {\n  value: any;\n  key: number;\n  dirty: boolean = false;\n\n  constructor(o: Object) {\n    Object.assign(this, o);\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/EmptyFactory.html":{"url":"classes/EmptyFactory.html","title":"class - EmptyFactory","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  EmptyFactory\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/grid/utils/empty.factory.ts\n        \n\n            \n                Description\n            \n            \n                Allows instantiation of any generic type if the type has no constructor arguments.\n\n            \n\n\n\n\n            \n                Index\n                \n                    \n                        \n                            \n                                Methods\n                            \n                        \n                        \n                            \n                                \n                                    \n                                        getInstance\n                                    \n                                \n                            \n                        \n                    \n                \n            \n\n            \n                Constructor\n                    \n                        \n                            \n                                \n            constructor(emptyConstructor: EmptyConstructor)\n                                \n                            \n                                    \n                                        \n                                            Defined in src/grid/utils/empty.factory.ts:4\n                                        \n                                    \n            \n                            \n                                \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                                Type\n                                                            Optional\n                                                        \n                                                    \n                                                    \n                                                            \n                                                                emptyConstructor\n                                                              \n                                                                    \n                                                                                EmptyConstructor\n                                                                    \n                                                              \n                                                                \n                                                                        no\n                                                                \n                                                                \n                                                            \n                                                    \n                                                \n                                        \n                                \n                            \n                        \n                    \n            \n\n            \n                \n                    \n                        Methods\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        getInstance\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            getInstance()\n                                \n                            \n            \n            \n                                    \n                                        \n                                                Defined in src/grid/utils/empty.factory.ts:7\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                            Returns :     T\n            \n                                        \n                                \n                            \n                        \n                    \n            \n\n\n\n    \n\n\n    \n        export class EmptyFactory {\n  constructor(private emptyConstructor: EmptyConstructor) {}\n\n  getInstance(): T {\n    return new this.emptyConstructor();\n  }\n}\n\nexport interface EmptyConstructor {\n  new(): T;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FormatterParser.html":{"url":"classes/FormatterParser.html","title":"class - FormatterParser","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  FormatterParser\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/grid/column/formatters/formatter-parser.ts\n        \n\n            \n                Description\n            \n            \n                Most simple formatter parser which just returns the value without modification.\n\n            \n\n\n\n\n            \n                Index\n                \n                    \n                        \n                            \n                                Properties\n                            \n                        \n                        \n                            \n                                \n                                    \n                                        config\n                                    \n                                \n                            \n                        \n                        \n                            \n                                Methods\n                            \n                        \n                        \n                            \n                                \n                                    \n                                        formatValue\n                                    \n                                    \n                                        parseValue\n                                    \n                                    \n                                        setConfig\n                                    \n                                \n                            \n                        \n                    \n                \n            \n\n\n            \n                \n                    \n                        Methods\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        formatValue\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            formatValue(value: any)\n                                \n                            \n            \n            \n                                    \n                                        \n                                                Defined in src/grid/column/formatters/formatter-parser.ts:12\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                                Type\n                                                            Optional\n                                                        \n                                                    \n                                                    \n                                                            \n                                                                value\n                                                                \n                                                                    \n                                                                                any\n                                                                    \n                                                                \n                                                                \n                                                                        no\n                                                                \n                                                                \n            \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     any\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        parseValue\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            parseValue(value: any)\n                                \n                            \n            \n            \n                                    \n                                        \n                                                Defined in src/grid/column/formatters/formatter-parser.ts:20\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                                Type\n                                                            Optional\n                                                        \n                                                    \n                                                    \n                                                            \n                                                                value\n                                                                \n                                                                    \n                                                                                any\n                                                                    \n                                                                \n                                                                \n                                                                        no\n                                                                \n                                                                \n            \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     any\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        setConfig\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            setConfig(config: any)\n                                \n                            \n            \n            \n                                    \n                                        \n                                                Defined in src/grid/column/formatters/formatter-parser.ts:8\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                                Type\n                                                            Optional\n                                                        \n                                                    \n                                                    \n                                                            \n                                                                config\n                                                                \n                                                                    \n                                                                                any\n                                                                    \n                                                                \n                                                                \n                                                                        no\n                                                                \n                                                                \n            \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     void\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n            \n\n\n            \n                \n                    \n                        Properties\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        config\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                    config:     any\n            \n                                \n                            \n                                \n                                    \n                                        Type :     any\n            \n                                    \n                                \n                                \n                                    \n                                        Default value : {}\n                                    \n                                \n                                    \n                                        \n                                                Defined in src/grid/column/formatters/formatter-parser.ts:6\n                                        \n                                    \n            \n            \n                        \n                    \n            \n\n    \n\n\n    \n        export class FormatterParser {\n\n  config: any = {};\n\n  setConfig(config: any) {\n    this.config = config;\n  }\n\n  formatValue(value: any): any {\n    if (value !== undefined) {\n      return value;\n    } else {\n      return \"\";\n    }\n  }\n\n  parseValue(value: any): any {\n    if (value !== undefined) {\n      return value;\n    } else {\n      return \"\";\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/HtmlUtil.html":{"url":"classes/HtmlUtil.html","title":"class - HtmlUtil","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  HtmlUtil\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/grid/utils/html-util.ts\n        \n\n            \n                Description\n            \n            \n                Convenience class for pulling things such as id from an element.\n\n            \n\n\n\n\n            \n                Index\n                \n                    \n                        \n                            \n                                Methods\n                            \n                        \n                        \n                            \n                                \n                                    \n                                            Static\n                                        getId\n                                    \n                                    \n                                            Static\n                                        getIdElement\n                                    \n                                    \n                                            Static\n                                        getLocation\n                                    \n                                \n                            \n                        \n                    \n                \n            \n\n\n            \n                \n                    \n                        Methods\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                            Static\n                                        getId\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                        \n                                    getId(e: HTMLElement, id?: string)\n                                \n                            \n            \n            \n                                    \n                                        \n                                                Defined in src/grid/utils/html-util.ts:8\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                                Type\n                                                            Optional\n                                                        \n                                                    \n                                                    \n                                                            \n                                                                e\n                                                                \n                                                                    \n                                                                                HTMLElement\n                                                                    \n                                                                \n                                                                \n                                                                        no\n                                                                \n                                                                \n            \n                                                            \n                                                            \n                                                                id\n                                                                \n                                                                    \n                                                                                string\n                                                                    \n                                                                \n                                                                \n                                                                        yes\n                                                                \n                                                                \n            \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     string\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                            Static\n                                        getIdElement\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                        \n                                    getIdElement(e: HTMLElement)\n                                \n                            \n            \n            \n                                    \n                                        \n                                                Defined in src/grid/utils/html-util.ts:23\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                                Type\n                                                            Optional\n                                                        \n                                                    \n                                                    \n                                                            \n                                                                e\n                                                                \n                                                                    \n                                                                                HTMLElement\n                                                                    \n                                                                \n                                                                \n                                                                        no\n                                                                \n                                                                \n            \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     HTMLElement\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                            Static\n                                        getLocation\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                        \n                                    getLocation(e: HTMLElement)\n                                \n                            \n            \n            \n                                    \n                                        \n                                                Defined in src/grid/utils/html-util.ts:38\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                                Type\n                                                            Optional\n                                                        \n                                                    \n                                                    \n                                                            \n                                                                e\n                                                                \n                                                                    \n                                                                                HTMLElement\n                                                                    \n                                                                \n                                                                \n                                                                        no\n                                                                \n                                                                \n            \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     Point\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n            \n\n\n\n    \n\n\n    \n        import {Point} from \"./point\";\n\n/**\n * Convenience class for pulling things such as id from an element.\n */\nexport class HtmlUtil {\n\n  static getId(e: HTMLElement, id?: string): string {\n    if (!e) {\n      return \"\";\n    }\n    while ((!id && e.id === \"\") || (id && !e.id.startsWith(id))) {\n      if (e.parentElement) {\n        e = e.parentElement;\n      } else {\n        break;\n      }\n    }\n\n    return e.id;\n  }\n\n  static getIdElement(e: HTMLElement): HTMLElement {\n    if (!e) {\n      return null;\n    }\n    while (e.id === \"\") {\n      if (e.parentElement) {\n        e = e.parentElement;\n      } else {\n        break;\n      }\n    }\n\n    return e;\n  }\n\n  static getLocation(e: HTMLElement): Point {\n    return Point.getPoint(this.getId(e));\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/InjectableFactory.html":{"url":"classes/InjectableFactory.html","title":"class - InjectableFactory","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  InjectableFactory\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/grid/utils/injectable.factory.ts\n        \n\n            \n                Description\n            \n            \n                Allows instantiation of any generic type if the type expects an injector argument.  See the implementation of\nthe EventListener.\n\n            \n\n\n\n\n            \n                Index\n                \n                    \n                        \n                            \n                                Methods\n                            \n                        \n                        \n                            \n                                \n                                    \n                                        getInstance\n                                    \n                                \n                            \n                        \n                    \n                \n            \n\n            \n                Constructor\n                    \n                        \n                            \n                                \n            constructor(ic: InjectableConstructor, injector: Injector)\n                                \n                            \n                                    \n                                        \n                                            Defined in src/grid/utils/injectable.factory.ts:7\n                                        \n                                    \n            \n                            \n                                \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                                Type\n                                                            Optional\n                                                        \n                                                    \n                                                    \n                                                            \n                                                                ic\n                                                              \n                                                                    \n                                                                                InjectableConstructor\n                                                                    \n                                                              \n                                                                \n                                                                        no\n                                                                \n                                                                \n                                                            \n                                                            \n                                                                injector\n                                                              \n                                                                    \n                                                                                Injector\n                                                                    \n                                                              \n                                                                \n                                                                        no\n                                                                \n                                                                \n                                                            \n                                                    \n                                                \n                                        \n                                \n                            \n                        \n                    \n            \n\n            \n                \n                    \n                        Methods\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        getInstance\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            getInstance()\n                                \n                            \n            \n            \n                                    \n                                        \n                                                Defined in src/grid/utils/injectable.factory.ts:10\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                            Returns :     T\n            \n                                        \n                                \n                            \n                        \n                    \n            \n\n\n\n    \n\n\n    \n        import {Injector} from \"@angular/core\";\n\n/**\n * Allows instantiation of any generic type if the type expects an injector argument.  See the implementation of\n * the EventListener.\n */\nexport class InjectableFactory {\n  constructor(private ic: InjectableConstructor, private injector: Injector) {}\n\n  getInstance(): T {\n    return new this.ic(this.injector);\n  }\n}\n\nexport interface InjectableConstructor {\n  new(injector: Injector): T;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RowChange.html":{"url":"classes/RowChange.html","title":"class - RowChange","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  RowChange\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/grid/utils/row-change.ts\n        \n\n\n\n\n\n            \n                Index\n                \n                    \n                        \n                            \n                                Properties\n                            \n                        \n                        \n                            \n                                \n                                    \n                                        newRowNum\n                                    \n                                    \n                                        oldRowNum\n                                    \n                                \n                            \n                        \n                    \n                \n            \n\n            \n                Constructor\n                    \n                        \n                            \n                                \n            constructor(oldRowNum: number, newRowNum: number)\n                                \n                            \n                                    \n                                        \n                                            Defined in src/grid/utils/row-change.ts:4\n                                        \n                                    \n            \n                            \n                                \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                                Type\n                                                            Optional\n                                                        \n                                                    \n                                                    \n                                                            \n                                                                oldRowNum\n                                                              \n                                                                    \n                                                                                number\n                                                                    \n                                                              \n                                                                \n                                                                        no\n                                                                \n                                                                \n                                                            \n                                                            \n                                                                newRowNum\n                                                              \n                                                                    \n                                                                                number\n                                                                    \n                                                              \n                                                                \n                                                                        no\n                                                                \n                                                                \n                                                            \n                                                    \n                                                \n                                        \n                                \n                            \n                        \n                    \n            \n\n\n\n            \n                \n                    \n                        Properties\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        newRowNum\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                    newRowNum:     number\n            \n                                \n                            \n                                \n                                    \n                                        Type :     number\n            \n                                    \n                                \n                                    \n                                        \n                                                Defined in src/grid/utils/row-change.ts:4\n                                        \n                                    \n            \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        oldRowNum\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                    oldRowNum:     number\n            \n                                \n                            \n                                \n                                    \n                                        Type :     number\n            \n                                    \n                                \n                                    \n                                        \n                                                Defined in src/grid/utils/row-change.ts:3\n                                        \n                                    \n            \n            \n                        \n                    \n            \n\n    \n\n\n    \n        export class RowChange {\n\n  oldRowNum: number;\n  newRowNum: number;\n\n  constructor(oldRowNum: number, newRowNum: number) {\n    this.oldRowNum = oldRowNum;\n    this.newRowNum = newRowNum;\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SortInfo.html":{"url":"classes/SortInfo.html","title":"class - SortInfo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  SortInfo\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/grid/utils/sort-info.ts\n        \n\n\n\n\n\n            \n                Index\n                \n                    \n                        \n                            \n                                Properties\n                            \n                        \n                        \n                            \n                                \n                                    \n                                            Public\n                                        asc\n                                    \n                                    \n                                            Public\n                                        field\n                                    \n                                \n                            \n                        \n                        \n                            \n                                Methods\n                            \n                        \n                        \n                            \n                                \n                                    \n                                        getAsc\n                                    \n                                    \n                                        getField\n                                    \n                                    \n                                        setAsc\n                                    \n                                    \n                                        setField\n                                    \n                                \n                            \n                        \n                    \n                \n            \n\n\n            \n                \n                    \n                        Methods\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        getAsc\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            getAsc()\n                                \n                            \n            \n            \n                                    \n                                        \n                                                Defined in src/grid/utils/sort-info.ts:5\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                            Returns :     boolean\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        getField\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            getField()\n                                \n                            \n            \n            \n                                    \n                                        \n                                                Defined in src/grid/utils/sort-info.ts:13\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                            Returns :     string\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        setAsc\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            setAsc(asc: boolean)\n                                \n                            \n            \n            \n                                    \n                                        \n                                                Defined in src/grid/utils/sort-info.ts:9\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                                Type\n                                                            Optional\n                                                        \n                                                    \n                                                    \n                                                            \n                                                                asc\n                                                                \n                                                                    \n                                                                                boolean\n                                                                    \n                                                                \n                                                                \n                                                                        no\n                                                                \n                                                                \n            \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     void\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        setField\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            setField(field: string)\n                                \n                            \n            \n            \n                                    \n                                        \n                                                Defined in src/grid/utils/sort-info.ts:17\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                                Type\n                                                            Optional\n                                                        \n                                                    \n                                                    \n                                                            \n                                                                field\n                                                                \n                                                                    \n                                                                                string\n                                                                    \n                                                                \n                                                                \n                                                                        no\n                                                                \n                                                                \n            \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     void\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n            \n\n\n            \n                \n                    \n                        Properties\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                            Public\n                                        asc\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                    asc:     boolean\n            \n                                \n                            \n                                \n                                    \n                                        Type :     boolean\n            \n                                    \n                                \n                                \n                                    \n                                        Default value : true\n                                    \n                                \n                                    \n                                        \n                                                Defined in src/grid/utils/sort-info.ts:2\n                                        \n                                    \n            \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                            Public\n                                        field\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                    field:     string\n            \n                                \n                            \n                                \n                                    \n                                        Type :     string\n            \n                                    \n                                \n                                \n                                    \n                                        Default value : null\n                                    \n                                \n                                    \n                                        \n                                                Defined in src/grid/utils/sort-info.ts:3\n                                        \n                                    \n            \n            \n                        \n                    \n            \n\n    \n\n\n    \n        export class SortInfo {\n  public asc: boolean = true;\n  public field: string = null;\n\n  getAsc(): boolean {\n    return this.asc;\n  }\n\n  setAsc(asc: boolean) {\n    this.asc = asc;\n  }\n\n  getField(): string {\n    return this.field;\n  }\n\n  setField(field: string) {\n    this.field = field;\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ClickListener.html":{"url":"interfaces/ClickListener.html","title":"interface - ClickListener","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ClickListener\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/grid/event/click.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    click\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n                \n                    \n                        Methods\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        click\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            click(event: MouseEvent)\n                                \n                            \n            \n            \n                                    \n                                        \n                                                Defined in src/grid/event/click.interface.ts:3\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                                Type\n                                                            Optional\n                                                        \n                                                    \n                                                    \n                                                            \n                                                                event\n                                                                \n                                                                    \n                                                                                MouseEvent\n                                                                    \n                                                                \n                                                                \n                                                                        no\n                                                                \n                                                                \n            \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     boolean\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n            \n\n\n    \n\n\n    \n        export interface ClickListener {\n\n  click(event: MouseEvent): boolean;\n\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DblClickListener.html":{"url":"interfaces/DblClickListener.html","title":"interface - DblClickListener","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  DblClickListener\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/grid/event/dbl-click.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    dblclick\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n                \n                    \n                        Methods\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        dblclick\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            dblclick(event: MouseEvent)\n                                \n                            \n            \n            \n                                    \n                                        \n                                                Defined in src/grid/event/dbl-click.interface.ts:3\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                                Type\n                                                            Optional\n                                                        \n                                                    \n                                                    \n                                                            \n                                                                event\n                                                                \n                                                                    \n                                                                                MouseEvent\n                                                                    \n                                                                \n                                                                \n                                                                        no\n                                                                \n                                                                \n            \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     boolean\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n            \n\n\n    \n\n\n    \n        export interface DblClickListener {\n\n  dblclick(event: MouseEvent): boolean;\n\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Dictionary.html":{"url":"interfaces/Dictionary.html","title":"interface - Dictionary","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Dictionary\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/grid/model/dictionary.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        display\n                                \n                                \n                                        value\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        display\n                                    \n                                \n                                \n                                    \n                                        display:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n                                    \n                                        \n                                            Defined in src/grid/model/dictionary.interface.ts:3\n                                        \n                                    \n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        value\n                                    \n                                \n                                \n                                    \n                                        value:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n                                    \n                                        \n                                            Defined in src/grid/model/dictionary.interface.ts:2\n                                        \n                                    \n\n                        \n                    \n            \n    \n\n\n    \n        export interface Dictionary {\n  value: string;\n  display: string;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/EmptyConstructor.html":{"url":"interfaces/EmptyConstructor.html","title":"interface - EmptyConstructor","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  EmptyConstructor\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/grid/utils/empty.factory.ts\n        \n\n\n\n\n\n\n    \n\n\n    \n        export class EmptyFactory {\n  constructor(private emptyConstructor: EmptyConstructor) {}\n\n  getInstance(): T {\n    return new this.emptyConstructor();\n  }\n}\n\nexport interface EmptyConstructor {\n  new(): T;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/EventListenerArg.html":{"url":"interfaces/EventListenerArg.html","title":"interface - EventListenerArg","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  EventListenerArg\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/grid/event/event-listener-arg.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        config\n                                \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        config\n                                    \n                                \n                                \n                                    \n                                        config:     any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/grid/event/event-listener-arg.interface.ts:5\n                                        \n                                    \n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     Type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Type\n\n                                        \n                                    \n\n\n\n\n                                    \n                                        \n                                            Defined in src/grid/event/event-listener-arg.interface.ts:4\n                                        \n                                    \n\n                        \n                    \n            \n    \n\n\n    \n        import {Type} from \"@angular/core\";\n\nexport interface EventListenerArg {\n  type: Type;\n  config?: any;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/InjectableConstructor.html":{"url":"interfaces/InjectableConstructor.html","title":"interface - InjectableConstructor","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  InjectableConstructor\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/grid/utils/injectable.factory.ts\n        \n\n\n\n\n\n\n    \n\n\n    \n        import {Injector} from \"@angular/core\";\n\n/**\n * Allows instantiation of any generic type if the type expects an injector argument.  See the implementation of\n * the EventListener.\n */\nexport class InjectableFactory {\n  constructor(private ic: InjectableConstructor, private injector: Injector) {}\n\n  getInstance(): T {\n    return new this.ic(this.injector);\n  }\n}\n\nexport interface InjectableConstructor {\n  new(injector: Injector): T;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MouseDownListener.html":{"url":"interfaces/MouseDownListener.html","title":"interface - MouseDownListener","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  MouseDownListener\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/grid/event/mouse-down.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    mouseDown\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n                \n                    \n                        Methods\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        mouseDown\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            mouseDown(event: MouseEvent)\n                                \n                            \n            \n            \n                                    \n                                        \n                                                Defined in src/grid/event/mouse-down.interface.ts:3\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                                Type\n                                                            Optional\n                                                        \n                                                    \n                                                    \n                                                            \n                                                                event\n                                                                \n                                                                    \n                                                                                MouseEvent\n                                                                    \n                                                                \n                                                                \n                                                                        no\n                                                                \n                                                                \n            \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     boolean\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n            \n\n\n    \n\n\n    \n        export interface MouseDownListener {\n\n  mouseDown(event: MouseEvent): boolean;\n\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MouseDragListener.html":{"url":"interfaces/MouseDragListener.html","title":"interface - MouseDragListener","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  MouseDragListener\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/grid/event/mouse-drag.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    mouseDrag\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n                \n                    \n                        Methods\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        mouseDrag\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            mouseDrag(event: MouseEvent)\n                                \n                            \n            \n            \n                                    \n                                        \n                                                Defined in src/grid/event/mouse-drag.interface.ts:3\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                                Type\n                                                            Optional\n                                                        \n                                                    \n                                                    \n                                                            \n                                                                event\n                                                                \n                                                                    \n                                                                                MouseEvent\n                                                                    \n                                                                \n                                                                \n                                                                        no\n                                                                \n                                                                \n            \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     boolean\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n            \n\n\n    \n\n\n    \n        export interface MouseDragListener {\n\n  mouseDrag(event: MouseEvent): boolean;\n\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MouseOverListener.html":{"url":"interfaces/MouseOverListener.html","title":"interface - MouseOverListener","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  MouseOverListener\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/grid/event/mouse-over.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    mouseOver\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n                \n                    \n                        Methods\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        mouseOver\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            mouseOver(event: MouseEvent)\n                                \n                            \n            \n            \n                                    \n                                        \n                                                Defined in src/grid/event/mouse-over.interface.ts:3\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                                Type\n                                                            Optional\n                                                        \n                                                    \n                                                    \n                                                            \n                                                                event\n                                                                \n                                                                    \n                                                                                MouseEvent\n                                                                    \n                                                                \n                                                                \n                                                                        no\n                                                                \n                                                                \n            \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     boolean\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n            \n\n\n    \n\n\n    \n        export interface MouseOverListener {\n\n  mouseOver(event: MouseEvent): boolean;\n\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MouseUpListener.html":{"url":"interfaces/MouseUpListener.html","title":"interface - MouseUpListener","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  MouseUpListener\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/grid/event/mouse-up.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    mouseUp\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n                \n                    \n                        Methods\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        mouseUp\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            mouseUp(event: MouseEvent)\n                                \n                            \n            \n            \n                                    \n                                        \n                                                Defined in src/grid/event/mouse-up.interface.ts:3\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                                Type\n                                                            Optional\n                                                        \n                                                    \n                                                    \n                                                            \n                                                                event\n                                                                \n                                                                    \n                                                                                MouseEvent\n                                                                    \n                                                                \n                                                                \n                                                                        no\n                                                                \n                                                                \n            \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     boolean\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n            \n\n\n    \n\n\n    \n        export interface MouseUpListener {\n\n  mouseUp(event: MouseEvent): boolean;\n\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ARROW\n                        \n                        \n                            CLICK\n                        \n                        \n                            NO_EVENT\n                        \n                        \n                            RESIZE\n                        \n                        \n                            SCROLL\n                        \n                        \n                            TAB\n                        \n                    \n                \n            \n        \n    \n\n\n    src/grid/services/grid-event.service.ts\n    \n                \n                \n                    \n                        \n                            \n                            \n                                \n                                ARROW\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n                            ARROW:     number\n    \n                        \n                    \n                        \n                            \n                                Type :     number\n    \n                            \n                        \n                        \n                            \n                                Default value : 2\n                            \n                        \n    \n    \n                \n            \n            \n                \n                    \n                        \n                            \n                            \n                                \n                                CLICK\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n                            CLICK:     number\n    \n                        \n                    \n                        \n                            \n                                Type :     number\n    \n                            \n                        \n                        \n                            \n                                Default value : 0\n                            \n                        \n    \n    \n                \n            \n            \n                \n                    \n                        \n                            \n                            \n                                \n                                TAB\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n                            TAB:     number\n    \n                        \n                    \n                        \n                            \n                                Type :     number\n    \n                            \n                        \n                        \n                            \n                                Default value : 1\n                            \n                        \n    \n    \n                \n            \n    \n    src/grid/grid.component.ts\n    \n                \n                \n                    \n                        \n                            \n                            \n                                \n                                NO_EVENT\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n                            NO_EVENT:     number\n    \n                        \n                    \n                        \n                            \n                                Type :     number\n    \n                            \n                        \n                        \n                            \n                                Default value : -1\n                            \n                        \n    \n    \n                \n            \n            \n                \n                    \n                        \n                            \n                            \n                                \n                                RESIZE\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n                            RESIZE:     number\n    \n                        \n                    \n                        \n                            \n                                Type :     number\n    \n                            \n                        \n                        \n                            \n                                Default value : 0\n                            \n                        \n    \n    \n                \n            \n            \n                \n                    \n                        \n                            \n                            \n                                \n                                SCROLL\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n                            SCROLL:     number\n    \n                        \n                    \n                        \n                            \n                                Type :     number\n    \n                            \n                        \n                        \n                            \n                                Default value : 1\n                            \n                        \n    \n    \n                \n            \n    \n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
