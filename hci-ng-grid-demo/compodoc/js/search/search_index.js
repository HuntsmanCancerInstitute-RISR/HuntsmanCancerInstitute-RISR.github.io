var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.1.6","fields":["title","body"],"fieldVectors":[["title/dependencies.html",[0,2.2,1,2.183]],["body/dependencies.html",[1,2.72,2,3.418,3,3.938,4,3.418,5,0.031,6,4.727,7,4.727,8,4.727,9,0.029,10,0.029]],["title/index.html",[11,1.693,12,1.91,13,0.427]],["body/index.html",[0,0.681,1,0.471,2,1.427,5,0.028,9,0.008,10,0.008,11,0.524,14,0.591,15,0.591,16,0.818,17,0.818,18,3.935,19,0.818,20,1.974,21,1.458,22,0.818,23,0.818,24,0.818,25,2.397,26,2.292,27,2.752,28,0.818,29,0.818,30,0.818,31,3.473,32,0.818,33,0.591,34,0.591,35,2.537,36,0.681,37,1.974,38,0.818,39,1.458,40,0.818,41,0.818,42,0.488,43,0.471,44,0.818,45,1.458,46,1.215,47,0.818,48,0.818,49,0.818,50,0.818,51,0.818,52,0.681,53,0.818,54,2.758,55,0.818,56,1.974,57,3.11,58,0.818,59,0.818,60,1.458,61,0.818,62,0.818,63,0.818,64,2.543,65,1.215,66,1.734,67,2.337,68,1.458,69,3.128,70,2.337,71,1.215,72,1.458,73,1.458,74,3.733,75,0.818,76,1.974,77,1.458,78,0.818,79,1.458,80,0.818,81,3.169,82,3.311,83,1.458,84,0.681,85,2.758,86,1.997,87,0.818,88,1.458,89,0.061,90,1.865,91,2.825,92,0.681,93,1.458,94,0.818,95,1.215,96,0.818,97,0.818,98,0.818,99,0.818,100,1.974,101,1.38,102,0.818,103,0.524,104,2.752,105,1.215,106,1.537,107,0.936,108,1.734,109,1.997,110,0.818,111,0.818,112,2.397,113,0.818,114,0.818,115,0.256,116,0.818,117,0.818,118,0.818,119,0.818,120,0.749,121,1.644,122,2.116,123,2.207,124,1.458,125,0.818,126,0.818,127,0.818,128,2.752,129,0.818,130,1.974,131,1.215,132,0.681,133,0.818,134,1.458,135,0.818,136,2.292,137,0.312,138,0.818,139,0.543,140,0.818,141,0.818,142,1.107,143,1.99,144,0.818,145,1.644,146,0.471,147,0.681,148,0.818,149,1.458,150,1.458,151,1.974,152,0.818,153,1.974,154,1.458,155,0.818,156,0.681,157,0.818,158,1.458,159,1.458,160,2.397,161,0.818,162,1.427,163,1.458,164,0.818,165,0.818,166,0.818,167,0.818,168,0.818,169,2.557,170,0.818,171,0.818,172,0.818,173,1.458,174,0.818,175,0.818,176,0.818,177,0.818,178,2.337,179,0.818,180,1.974,181,0.818,182,1.458,183,0.818,184,0.818,185,0.818,186,0.818,187,1.055,188,0.818,189,1.215,190,1.215,191,1.458,192,0.818,193,3.907,194,0.818,195,0.818,196,0.76,197,0.681,198,0.818,199,0.818,200,0.818,201,1.215,202,1.458,203,0.818,204,0.591,205,0.818,206,2.543,207,0.818,208,0.818,209,1.458,210,0.818,211,0.818,212,1.974,213,1.644,214,0.818,215,0.818,216,1.974,217,1.458,218,1.427,219,0.818,220,0.818,221,0.818,222,0.818,223,1.458,224,1.974,225,2.945,226,0.818,227,1.458,228,1.458,229,0.818,230,0.818,231,1.137,232,0.818,233,0.818,234,0.818,235,1.458,236,0.818,237,0.818,238,1.427,239,0.818,240,2.397,241,0.818,242,0.818,243,0.818,244,0.818,245,0.681,246,0.818,247,0.818,248,0.818,249,0.818,250,0.818,251,0.818,252,1.974,253,0.818,254,0.818,255,0.818,256,0.818,257,0.681,258,0.818,259,1.458,260,1.974,261,1.458,262,1.458,263,1.458,264,1.215,265,0.818,266,0.818,267,1.458,268,0.818,269,0.818,270,1.427,271,0.818,272,0.818,273,0.818,274,0.818,275,0.426,276,0.818,277,0.818,278,1.644,279,0.818,280,2.699,281,1.537,282,0.818,283,0.818,284,0.818,285,0.818,286,0.681,287,0.818,288,0.818,289,1.215,290,0.818,291,0.172,292,0.818,293,0.05,294,0.146,295,0.681,296,0.818,297,0.818,298,0.818,299,0.818,300,0.818,301,1.458,302,0.818,303,1.458,304,0.818,305,0.818,306,0.818,307,0.818,308,0.818,309,0.681,310,1.458,311,0.818,312,0.818,313,0.818,314,2.397,315,0.818,316,0.591,317,0.818,318,1.215,319,0.818,320,0.818,321,0.818,322,1.458,323,0.591,324,0.591,325,1.458,326,0.591,327,0.681,328,1.458,329,1.458,330,0.591,331,0.818,332,0.818,333,0.681,334,0.818,335,0.818,336,0.681,337,0.681]],["title/overview.html",[338,3.581]],["body/overview.html",[1,1.523,4,1.914,5,0.032,9,0.02,10,0.02,43,3.701,106,1.696,108,1.914,187,1.914,275,1.979,291,0.231,293,0.163,316,3.214,323,3.214,324,3.214,326,3.214,330,3.214,338,2.205,339,2.205,340,2.205,341,0.196,342,2.205,343,2.205,344,2.205,345,2.205,346,5.013,347,3.703,348,2.849,349,2.849,350,2.849,351,2.849,352,3.703,353,3.703,354,3.703,355,3.703,356,3.703,357,3.703,358,2.849,359,3.165,360,2.205,361,1.914,362,2.646,363,3.799,364,1.914,365,1.05,366,2.646,367,2.646]],["title/changelog.html",[11,1.693,12,1.91,368,2.641]],["body/changelog.html",[5,0.02,9,0.02,10,0.02,18,3.21,26,2.249,31,2.787,34,1.952,35,1.827,54,2.249,64,3.21,65,3.21,67,3.193,69,3.544,71,2.249,81,2.47,84,2.249,85,2.249,86,2.249,90,0.983,91,3.25,92,3.21,103,1.73,105,2.249,109,3.21,122,1.406,123,1.952,132,2.249,136,4.083,145,2.249,146,2.217,162,4.102,201,2.249,218,1.952,280,2.787,281,1.73,309,3.21,318,3.744,327,2.249,336,2.249,369,2.699,370,2.699,371,2.699,372,2.699,373,2.249,374,2.699,375,2.699,376,2.699,377,2.699,378,3.853,379,2.699,380,2.699,381,2.699,382,2.699,383,2.699,384,2.699,385,2.699,386,2.47,387,4.494,388,2.249,389,2.699,390,2.699,391,2.699,392,2.699,393,2.699,394,2.699,395,2.699,396,2.699,397,2.699,398,2.699,399,2.699,400,3.853,401,2.699,402,2.699,403,2.699,404,2.699,405,2.699,406,2.699,407,2.699,408,2.699,409,2.699,410,2.699,411,2.249,412,2.699,413,2.699,414,2.699,415,2.699,416,2.699,417,2.699,418,3.853,419,2.699,420,2.699,421,2.699,422,2.699,423,2.249,424,2.699,425,2.249,426,2.699,427,2.699,428,2.699,429,2.699,430,2.699]],["title/license.html",[11,1.693,12,1.91,411,2.2]],["body/license.html",[5,0.022,9,0.022,10,0.022,14,2.286,15,2.286,46,2.634,52,4.374,57,3.585,90,1.151,95,2.634,106,2.027,147,2.634,156,2.634,189,3.585,257,4.075,278,2.634,337,2.634,361,2.286,373,3.585,423,2.634,431,4.075,432,2.634,433,3.162,434,2.634,435,2.634,436,2.634,437,4.303,438,3.162,439,3.162,440,3.162,441,3.162,442,4.303,443,3.162,444,5.982,445,3.162,446,3.162,447,0.235,448,4.075,449,3.162,450,3.162,451,3.162,452,3.162,453,3.162,454,3.162,455,3.162,456,3.162,457,2.634,458,3.162,459,4.303,460,4.303,461,3.162,462,3.162,463,4.303,464,3.162,465,3.162,466,3.162,467,3.162,468,3.162,469,3.162,470,3.162,471,3.162,472,3.162,473,2.634,474,3.162,475,3.162,476,3.162,477,3.162,478,3.162,479,3.162,480,3.162,481,3.162,482,3.162]],["title/modules.html",[275,2.239]],["body/modules.html",[5,0.029,9,0.029,10,0.029,34,3.479,43,2.768,275,2.506,483,4.811,484,4.811,485,4.811]],["title/modules/GridModule.html",[43,1.816,275,1.644]],["body/modules/GridModule.html",[1,0.894,2,1.123,3,1.294,4,1.825,5,0.033,9,0.013,10,0.013,14,1.123,15,1.123,42,1.943,43,3.554,69,2.305,81,0.995,89,0.115,106,2.774,108,2.305,115,0.328,169,1.825,275,1.314,291,0.136,316,3.436,323,3.436,324,3.436,326,3.436,330,3.436,339,1.294,340,2.656,341,0.272,342,1.294,343,1.294,344,1.294,345,1.294,346,4.732,347,3.605,348,2.774,349,2.774,350,2.774,351,2.774,352,3.958,353,3.958,354,3.605,355,3.605,356,2.656,357,2.656,358,2.044,359,2.102,360,1.294,361,1.123,431,1.294,432,1.294,434,1.294,435,1.294,436,1.294,447,0.115,486,0.136,487,1.553,488,2.524,489,1.553,490,1.553,491,1.553,492,3.188,493,3.188,494,3.671,495,0.616,496,2.524,497,1.553,498,2.524,499,1.553,500,1.553,501,1.553,502,0.995,503,1.553,504,3.671,505,2.524,506,1.553,507,1.553,508,1.553,509,3.188,510,4.327,511,1.553,512,1.553,513,1.553,514,1.553,515,1.553,516,1.553,517,1.553,518,2.524,519,1.553,520,2.524,521,1.553,522,1.553,523,3.188,524,1.553,525,1.553,526,2.102,527,1.553,528,3.188,529,3.188,530,1.553]],["title/injectables/GridMessageService.html",[358,2.023,364,2.283]],["body/injectables/GridMessageService.html",[5,0.033,9,0.019,10,0.019,13,0.415,35,2.069,42,1.242,70,3.048,89,0.19,115,0.567,120,0.66,137,0.482,139,0.54,178,2.512,196,1.934,213,3.093,231,2.069,245,3.987,291,0.224,294,0.665,341,0.19,358,2.38,364,3.157,425,4.232,447,0.19,457,4.412,486,0.224,495,1.017,531,4.551,532,2.563,533,1.76,534,4.123,535,4.786,536,4.786,537,4.786,538,3.712,539,3.712,540,4.365,541,3.712,542,0.688,543,2.563,544,0.601,545,2.685,546,3.712,547,2.563,548,3.093,549,2.563,550,2.563,551,3.712,552,2.563,553,2.563,554,2.563,555,2.563,556,2.563,557,2.563,558,2.563]],["title/pipes/IsFixedPipe.html",[350,2.023,365,1.253]],["body/pipes/IsFixedPipe.html",[5,0.033,9,0.023,10,0.023,42,1.511,67,2.6,89,0.252,101,2.92,107,1.612,115,0.659,120,0.442,122,1.771,123,3.67,137,0.442,139,0.738,142,1.697,143,2.459,162,3.91,289,2.833,291,0.297,294,0.609,341,0.252,350,2.896,365,2.014,447,0.252,486,0.297,495,1.349,502,2.18,542,0.442,544,0.55,559,2.896,560,3.4,561,1.957,562,4.518,563,2.18,564,2.896,565,3.4,566,2.896,567,2.18,568,3.4]],["title/pipes/IsGroupPipe.html",[349,2.023,365,1.253]],["body/pipes/IsGroupPipe.html",[5,0.033,9,0.024,10,0.024,42,1.559,67,2.682,89,0.264,101,2.989,107,1.69,115,0.675,122,1.856,137,0.463,139,0.756,291,0.311,294,0.638,341,0.264,349,2.988,365,2.061,447,0.264,486,0.311,495,1.414,502,2.285,542,0.463,544,0.577,559,2.988,561,2.051,563,2.285,564,2.988,566,2.988,567,2.285,569,3.564,570,4.661,571,3.564,572,3.564,573,3.564]],["title/pipes/IsRowVisiblePipe.html",[351,2.023,365,1.253]],["body/pipes/IsRowVisiblePipe.html",[5,0.033,9,0.024,10,0.024,42,1.559,81,3.531,89,0.264,101,2.989,107,1.69,115,0.675,122,1.856,137,0.463,139,0.756,291,0.311,294,0.638,341,0.264,351,2.988,365,2.061,447,0.264,486,0.311,495,1.414,542,0.463,544,0.577,559,2.988,561,2.051,563,2.285,564,2.988,566,2.988,567,2.285,574,2.969,575,4.661,576,2.969,577,3.564,578,2.969]],["title/pipes/IsVisiblePipe.html",[348,2.023,365,1.253]],["body/pipes/IsVisiblePipe.html",[5,0.033,9,0.024,10,0.024,42,1.568,67,2.698,89,0.267,101,3.001,107,1.705,115,0.678,122,1.873,137,0.467,139,0.759,291,0.314,294,0.644,341,0.267,348,3.005,365,2.07,447,0.267,486,0.314,495,1.427,502,2.305,542,0.467,544,0.582,559,3.005,561,2.069,563,2.305,564,3.005,566,3.005,567,2.305,574,2.996,576,2.996,578,2.996,579,4.688]],["title/classes/Cell.html",[281,2.023,291,0.275]],["body/classes/Cell.html",[5,0.032,9,0.023,10,0.023,13,0.548,31,3.258,35,1.605,89,0.251,120,0.702,121,4.219,137,0.44,139,0.493,142,1.694,143,3.258,178,2.914,197,4.497,206,4.497,231,2.665,280,2.448,281,2.888,291,0.393,341,0.251,447,0.251,473,2.821,486,0.295,533,2.136,542,0.702,544,0.548,561,1.948,580,3.386,581,1.948,582,3.386,583,3.386,584,3.386,585,2.17,586,4.506,587,4.506,588,4.506,589,3.386,590,3.386,591,3.386]],["title/classes/EmptyFactory.html",[291,0.275,592,2.283]],["body/classes/EmptyFactory.html",[5,0.032,9,0.024,10,0.024,13,0.59,89,0.27,115,0.615,120,0.682,137,0.474,139,0.53,146,2.097,196,2.463,291,0.413,293,0.225,294,0.847,341,0.351,386,2.336,447,0.27,486,0.318,542,0.615,544,0.59,581,2.097,585,3.031,592,3.42,593,3.036,594,2.635,595,2.635,596,3.561,597,3.644,598,4.266,599,3.644,600,3.644,601,3.365,602,2.336,603,3.036]],["title/classes/FormatterParser.html",[291,0.275,604,2.63]],["body/classes/FormatterParser.html",[5,0.033,9,0.022,10,0.022,13,0.502,35,1.47,36,2.584,89,0.23,115,0.732,120,0.677,137,0.629,139,0.705,231,2.671,238,4.074,291,0.371,294,0.76,295,3.538,341,0.23,447,0.23,448,2.584,486,0.271,533,2.013,542,0.677,544,0.784,545,2.243,581,1.785,604,3.538,605,5.455,606,3.101,607,3.101,608,3.101,609,3.101,610,4.247,611,4.247,612,4.247,613,4.247,614,3.101,615,4.247,616,3.101,617,3.101,618,3.101,619,3.101]],["title/classes/HtmlUtil.html",[291,0.275,620,2.63]],["body/classes/HtmlUtil.html",[5,0.033,9,0.019,10,0.019,13,0.397,42,0.821,70,2.873,89,0.182,115,0.718,120,0.553,131,4.491,137,0.553,139,0.62,264,3.906,286,2.997,291,0.409,294,0.644,333,2.997,341,0.182,447,0.182,486,0.214,526,4.699,542,0.553,544,0.689,581,1.412,620,2.997,621,4.689,622,2.454,623,3.597,624,3.597,625,3.597,626,3.597,627,3.597,628,3.597,629,3.597,630,3.597,631,5.812,632,2.454,633,5.528,634,2.454,635,3.597,636,2.454,637,3.597,638,2.454,639,4.258,640,2.454,641,4.689,642,2.045,643,2.454]],["title/classes/InjectableFactory.html",[291,0.275,644,2.283]],["body/classes/InjectableFactory.html",[5,0.032,9,0.022,10,0.022,13,0.52,33,3.145,42,1.074,89,0.238,103,2.788,107,2.062,115,0.565,120,0.718,137,0.417,139,0.467,146,2.503,196,1.673,291,0.38,293,0.198,294,0.779,341,0.323,386,2.788,447,0.238,486,0.28,495,1.275,534,2.323,542,0.565,544,0.52,581,1.848,585,2.059,594,3.145,595,3.145,596,3.387,601,3.161,602,2.059,644,3.145,645,2.676,646,5.055,647,3.623,648,3.212,649,3.821,650,3.212,651,3.623,652,3.212,653,2.676,654,2.676]],["title/classes/RowChange.html",[291,0.275,655,2.63]],["body/classes/RowChange.html",[5,0.032,9,0.024,10,0.024,13,0.569,89,0.261,120,0.671,137,0.457,139,0.512,178,3.6,291,0.403,341,0.261,447,0.261,486,0.307,533,2.191,542,0.671,544,0.569,585,2.255,655,3.85,656,5.481,657,3.518,658,6.042,659,5.843,660,4.621,661,4.621,662,3.518,663,3.518,664,3.518]],["title/classes/SortInfo.html",[270,2.283,291,0.275]],["body/classes/SortInfo.html",[5,0.033,9,0.02,10,0.02,13,0.438,35,1.831,70,3.267,89,0.201,115,0.701,120,0.638,137,0.502,139,0.562,142,1.899,169,2.793,225,4.495,231,1.831,270,2.793,291,0.337,294,0.692,341,0.201,388,4.495,447,0.201,486,0.236,533,1.831,542,0.701,544,0.625,545,2.793,642,3.218,665,5.554,666,2.708,667,5.396,668,4.909,669,4.909,670,3.863,671,3.863,672,2.708,673,2.708,674,3.863,675,2.708,676,3.863,677,2.708,678,2.708,679,2.708,680,3.863,681,3.863]],["title/interfaces/ClickListener.html",[293,0.195,682,2.63]],["body/interfaces/ClickListener.html",[5,0.031,9,0.026,10,0.026,13,0.671,66,3.712,89,0.308,90,1.51,115,0.539,120,0.539,137,0.539,139,0.603,142,1.716,293,0.316,294,0.919,341,0.308,447,0.308,486,0.362,542,0.539,544,0.671,682,4.276,683,4.147,684,5.133,685,2.643,686,4.147]],["title/interfaces/DblClickListener.html",[293,0.195,687,2.63]],["body/interfaces/DblClickListener.html",[5,0.031,9,0.026,10,0.026,13,0.664,89,0.305,90,1.495,115,0.533,120,0.533,137,0.533,139,0.597,142,1.706,293,0.314,294,0.913,341,0.305,447,0.305,486,0.358,542,0.533,544,0.664,685,2.631,687,4.249,688,5.1,689,4.105,690,5.1,691,5.1,692,4.105]],["title/interfaces/Dictionary.html",[293,0.195,693,2.63]],["body/interfaces/Dictionary.html",[5,0.031,9,0.026,10,0.026,13,0.661,70,3.496,89,0.303,120,0.661,218,4.189,231,2.747,293,0.313,341,0.303,447,0.303,486,0.356,533,2.41,542,0.661,693,4.236,694,4.084,695,4.084,696,4.084]],["title/interfaces/EmptyConstructor.html",[293,0.195,598,2.283]],["body/interfaces/EmptyConstructor.html",[5,0.033,9,0.027,10,0.027,89,0.314,115,0.55,196,2.708,291,0.369,293,0.32,341,0.386,447,0.314,486,0.369,592,3.061,593,3.527,596,2.714,598,4.242,601,3.332,602,2.714,603,3.527]],["title/interfaces/EventListenerArg.html",[204,2.283,293,0.195]],["body/interfaces/EventListenerArg.html",[5,0.031,9,0.026,10,0.026,13,0.636,42,1.313,89,0.291,91,3.932,120,0.817,137,0.645,204,3.587,238,4.131,293,0.306,341,0.291,447,0.291,486,0.343,495,1.558,533,2.352,542,0.645,697,5.437,698,3.926,699,3.926,700,3.926]],["title/interfaces/InjectableConstructor.html",[293,0.195,649,2.283]],["body/interfaces/InjectableConstructor.html",[5,0.033,9,0.025,10,0.025,33,2.746,42,1.27,89,0.282,103,2.434,107,1.801,115,0.494,120,0.631,146,2.185,196,1.978,291,0.331,293,0.299,341,0.36,386,2.434,447,0.282,486,0.331,495,1.507,534,2.746,594,2.746,595,2.746,596,2.434,601,3.113,602,2.434,644,2.746,645,3.164,646,4.858,647,3.164,649,3.871,651,3.164,653,3.164,654,3.164]],["title/interfaces/MouseDownListener.html",[293,0.195,701,2.63]],["body/interfaces/MouseDownListener.html",[5,0.031,9,0.026,10,0.026,13,0.664,89,0.305,90,1.495,115,0.533,120,0.533,137,0.533,139,0.597,142,1.706,293,0.314,294,0.913,341,0.305,447,0.305,486,0.358,542,0.533,544,0.664,685,2.631,701,4.249,702,2.935,703,4.105,704,5.1,705,5.1,706,4.105]],["title/interfaces/MouseDragListener.html",[293,0.195,707,2.63]],["body/interfaces/MouseDragListener.html",[5,0.031,9,0.026,10,0.026,13,0.664,89,0.305,90,1.495,115,0.533,120,0.533,137,0.533,139,0.597,142,1.706,293,0.314,294,0.913,341,0.305,447,0.305,486,0.358,542,0.533,544,0.664,685,2.631,702,2.935,707,4.249,708,4.105,709,5.1,710,5.1,711,4.105]],["title/interfaces/MouseOutListener.html",[293,0.195,712,2.63]],["body/interfaces/MouseOutListener.html",[5,0.031,9,0.026,10,0.026,13,0.664,89,0.305,90,1.495,115,0.533,120,0.533,137,0.533,139,0.597,142,1.706,293,0.314,294,0.913,341,0.305,447,0.305,486,0.358,542,0.533,544,0.664,685,2.631,702,2.935,712,4.249,713,4.105,714,5.1,715,5.1,716,4.105]],["title/interfaces/MouseOverListener.html",[293,0.195,717,2.63]],["body/interfaces/MouseOverListener.html",[5,0.031,9,0.026,10,0.026,13,0.664,89,0.305,90,1.495,115,0.533,120,0.533,137,0.533,139,0.597,142,1.706,293,0.314,294,0.913,341,0.305,447,0.305,486,0.358,542,0.533,544,0.664,685,2.631,702,2.935,717,4.249,718,4.105,719,5.1,720,5.1,721,4.105]],["title/interfaces/MouseUpListener.html",[293,0.195,722,2.63]],["body/interfaces/MouseUpListener.html",[5,0.031,9,0.026,10,0.026,13,0.664,89,0.305,90,1.495,115,0.533,120,0.533,137,0.533,139,0.597,142,1.706,293,0.314,294,0.913,341,0.305,447,0.305,486,0.358,542,0.533,544,0.664,685,2.631,702,2.935,722,4.249,723,4.105,724,5.1,725,5.1,726,4.105]],["title/miscellaneous/variables.html",[727,2.2,728,3.161]],["body/miscellaneous/variables.html",[5,0.032,9,0.024,10,0.024,13,0.56,35,2.757,66,3.701,120,0.756,178,3.591,187,3.701,190,4.263,231,2.757,531,2.881,548,2.881,727,2.881,728,2.881,729,5.117,730,5.117,731,5.117,732,5.117,733,3.458,734,4.569,735,3.458]]],"invertedIndex":[["",{"_index":5,"title":{},"body":{"dependencies.html":{},"index.html":{},"overview.html":{},"changelog.html":{},"license.html":{},"modules.html":{},"modules/GridModule.html":{},"injectables/GridMessageService.html":{},"pipes/IsFixedPipe.html":{},"pipes/IsGroupPipe.html":{},"pipes/IsRowVisiblePipe.html":{},"pipes/IsVisiblePipe.html":{},"classes/Cell.html":{},"classes/EmptyFactory.html":{},"classes/FormatterParser.html":{},"classes/HtmlUtil.html":{},"classes/InjectableFactory.html":{},"classes/RowChange.html":{},"classes/SortInfo.html":{},"interfaces/ClickListener.html":{},"interfaces/DblClickListener.html":{},"interfaces/Dictionary.html":{},"interfaces/EmptyConstructor.html":{},"interfaces/EventListenerArg.html":{},"interfaces/InjectableConstructor.html":{},"interfaces/MouseDownListener.html":{},"interfaces/MouseDragListener.html":{},"interfaces/MouseOutListener.html":{},"interfaces/MouseOverListener.html":{},"interfaces/MouseUpListener.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":734,"title":{},"body":{"miscellaneous/variables.html":{}}}],["1",{"_index":187,"title":{},"body":{"index.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["1.1.x",{"_index":6,"title":{},"body":{"dependencies.html":{}}}],["10",{"_index":182,"title":{},"body":{"index.html":{}}}],["100",{"_index":188,"title":{},"body":{"index.html":{}}}],["11",{"_index":362,"title":{},"body":{"overview.html":{}}}],["12",{"_index":367,"title":{},"body":{"overview.html":{}}}],["15",{"_index":305,"title":{},"body":{"index.html":{}}}],["2",{"_index":548,"title":{},"body":{"injectables/GridMessageService.html":{},"miscellaneous/variables.html":{}}}],["2.19.3",{"_index":8,"title":{},"body":{"dependencies.html":{}}}],["2016",{"_index":489,"title":{},"body":{"modules/GridModule.html":{}}}],["2018",{"_index":433,"title":{},"body":{"license.html":{}}}],["25",{"_index":183,"title":{},"body":{"index.html":{}}}],["3.1.3",{"_index":370,"title":{},"body":{"changelog.html":{}}}],["3.1.x",{"_index":41,"title":{},"body":{"index.html":{}}}],["34",{"_index":366,"title":{},"body":{"overview.html":{}}}],["4",{"_index":363,"title":{},"body":{"overview.html":{}}}],["50",{"_index":184,"title":{},"body":{"index.html":{}}}],["85",{"_index":307,"title":{},"body":{"index.html":{}}}],["_level",{"_index":535,"title":{},"body":{"injectables/GridMessageService.html":{}}}],["_messag",{"_index":536,"title":{},"body":{"injectables/GridMessageService.html":{}}}],["_messageobserv",{"_index":537,"title":{},"body":{"injectables/GridMessageService.html":{}}}],["abov",{"_index":156,"title":{},"body":{"index.html":{},"license.html":{}}}],["accessor",{"_index":539,"title":{},"body":{"injectables/GridMessageService.html":{}}}],["action",{"_index":95,"title":{},"body":{"index.html":{},"license.html":{}}}],["ad",{"_index":92,"title":{},"body":{"index.html":{},"changelog.html":{}}}],["add",{"_index":400,"title":{},"body":{"changelog.html":{}}}],["advanc",{"_index":279,"title":{},"body":{"index.html":{}}}],["allow",{"_index":146,"title":{},"body":{"index.html":{},"changelog.html":{},"classes/EmptyFactory.html":{},"classes/InjectableFactory.html":{},"interfaces/InjectableConstructor.html":{}}}],["although",{"_index":219,"title":{},"body":{"index.html":{}}}],["analyze_for_entry_compon",{"_index":492,"title":{},"body":{"modules/GridModule.html":{}}}],["and/or",{"_index":453,"title":{},"body":{"license.html":{}}}],["angular",{"_index":17,"title":{},"body":{"index.html":{}}}],["angular/common",{"_index":497,"title":{},"body":{"modules/GridModule.html":{}}}],["angular/cor",{"_index":495,"title":{},"body":{"modules/GridModule.html":{},"injectables/GridMessageService.html":{},"pipes/IsFixedPipe.html":{},"pipes/IsGroupPipe.html":{},"pipes/IsRowVisiblePipe.html":{},"pipes/IsVisiblePipe.html":{},"classes/InjectableFactory.html":{},"interfaces/EventListenerArg.html":{},"interfaces/InjectableConstructor.html":{}}}],["angular/form",{"_index":499,"title":{},"body":{"modules/GridModule.html":{}}}],["anyth",{"_index":29,"title":{},"body":{"index.html":{}}}],["anything.filterev",{"_index":251,"title":{},"body":{"index.html":{}}}],["api",{"_index":389,"title":{},"body":{"changelog.html":{}}}],["appli",{"_index":254,"title":{},"body":{"index.html":{}}}],["applic",{"_index":276,"title":{},"body":{"index.html":{}}}],["arg.interface.t",{"_index":698,"title":{},"body":{"interfaces/EventListenerArg.html":{}}}],["arg.interface.ts:4",{"_index":700,"title":{},"body":{"interfaces/EventListenerArg.html":{}}}],["arg.interface.ts:5",{"_index":699,"title":{},"body":{"interfaces/EventListenerArg.html":{}}}],["argument",{"_index":595,"title":{},"body":{"classes/EmptyFactory.html":{},"classes/InjectableFactory.html":{},"interfaces/InjectableConstructor.html":{}}}],["aris",{"_index":482,"title":{},"body":{"license.html":{}}}],["array",{"_index":123,"title":{},"body":{"index.html":{},"changelog.html":{},"pipes/IsFixedPipe.html":{}}}],["arrow",{"_index":729,"title":{},"body":{"miscellaneous/variables.html":{}}}],["artifact.2.0.0",{"_index":412,"title":{},"body":{"changelog.html":{}}}],["asc",{"_index":667,"title":{},"body":{"classes/SortInfo.html":{}}}],["associ",{"_index":445,"title":{},"body":{"license.html":{}}}],["author",{"_index":472,"title":{},"body":{"license.html":{}}}],["auto",{"_index":398,"title":{},"body":{"changelog.html":{}}}],["back",{"_index":263,"title":{},"body":{"index.html":{}}}],["bar",{"_index":155,"title":{},"body":{"index.html":{}}}],["base",{"_index":313,"title":{},"body":{"index.html":{}}}],["basic",{"_index":37,"title":{},"body":{"index.html":{}}}],["be",{"_index":273,"title":{},"body":{"index.html":{}}}],["becom",{"_index":38,"title":{},"body":{"index.html":{}}}],["behavior",{"_index":391,"title":{},"body":{"changelog.html":{}}}],["big).titl",{"_index":152,"title":{},"body":{"index.html":{}}}],["bigtextpopup",{"_index":353,"title":{},"body":{"overview.html":{},"modules/GridModule.html":{}}}],["bind",{"_index":126,"title":{},"body":{"index.html":{}}}],["birth",{"_index":319,"title":{},"body":{"index.html":{}}}],["boolean",{"_index":142,"title":{},"body":{"index.html":{},"pipes/IsFixedPipe.html":{},"classes/Cell.html":{},"classes/SortInfo.html":{},"interfaces/ClickListener.html":{},"interfaces/DblClickListener.html":{},"interfaces/MouseDownListener.html":{},"interfaces/MouseDragListener.html":{},"interfaces/MouseOutListener.html":{},"interfaces/MouseOverListener.html":{},"interfaces/MouseUpListener.html":{}}}],["bootstrap",{"_index":4,"title":{},"body":{"dependencies.html":{},"overview.html":{},"modules/GridModule.html":{}}}],["bootstrap/ng",{"_index":3,"title":{},"body":{"dependencies.html":{},"modules/GridModule.html":{}}}],["break",{"_index":333,"title":{},"body":{"index.html":{},"classes/HtmlUtil.html":{}}}],["brows",{"_index":485,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":483,"title":{},"body":{"modules.html":{}}}],["built",{"_index":310,"title":{},"body":{"index.html":{}}}],["bump",{"_index":403,"title":{},"body":{"changelog.html":{}}}],["busi",{"_index":416,"title":{},"body":{"changelog.html":{}}}],["button.3.1.0",{"_index":377,"title":{},"body":{"changelog.html":{}}}],["c",{"_index":432,"title":{},"body":{"license.html":{},"modules/GridModule.html":{}}}],["calculation.2.0.2",{"_index":407,"title":{},"body":{"changelog.html":{}}}],["call",{"_index":86,"title":{},"body":{"index.html":{},"changelog.html":{}}}],["call.externalpag",{"_index":176,"title":{},"body":{"index.html":{}}}],["call.externalsort",{"_index":175,"title":{},"body":{"index.html":{}}}],["call.pages",{"_index":177,"title":{},"body":{"index.html":{}}}],["callback",{"_index":87,"title":{},"body":{"index.html":{}}}],["cancer",{"_index":15,"title":{},"body":{"index.html":{},"license.html":{},"modules/GridModule.html":{}}}],["case",{"_index":255,"title":{},"body":{"index.html":{}}}],["cell",{"_index":281,"title":{"classes/Cell.html":{}},"body":{"index.html":{},"changelog.html":{},"classes/Cell.html":{}}}],["cell'",{"_index":582,"title":{},"body":{"classes/Cell.html":{}}}],["cell.onrowsav",{"_index":232,"title":{},"body":{"index.html":{}}}],["cell/editrenderers/choic",{"_index":513,"title":{},"body":{"modules/GridModule.html":{}}}],["cell/editrenderers/d",{"_index":514,"title":{},"body":{"modules/GridModule.html":{}}}],["cell/editrenderers/text",{"_index":508,"title":{},"body":{"modules/GridModule.html":{}}}],["cell/viewpopuprenderer/bigtext",{"_index":516,"title":{},"body":{"modules/GridModule.html":{}}}],["cellnumberrangeview",{"_index":302,"title":{},"body":{"index.html":{}}}],["cellviewrender",{"_index":292,"title":{},"body":{"index.html":{}}}],["chang",{"_index":65,"title":{},"body":{"index.html":{},"changelog.html":{}}}],["change.t",{"_index":657,"title":{},"body":{"classes/RowChange.html":{}}}],["change.ts:3",{"_index":662,"title":{},"body":{"classes/RowChange.html":{}}}],["change.ts:4",{"_index":661,"title":{},"body":{"classes/RowChange.html":{}}}],["changelog",{"_index":368,"title":{"changelog.html":{}},"body":{}}],["charg",{"_index":441,"title":{},"body":{"license.html":{}}}],["choic",{"_index":327,"title":{},"body":{"index.html":{},"changelog.html":{}}}],["choice.compon",{"_index":524,"title":{},"body":{"modules/GridModule.html":{}}}],["choiceeditrender",{"_index":326,"title":{},"body":{"index.html":{},"overview.html":{},"modules/GridModule.html":{}}}],["choos",{"_index":185,"title":{},"body":{"index.html":{}}}],["claim",{"_index":475,"title":{},"body":{"license.html":{}}}],["class",{"_index":291,"title":{"classes/Cell.html":{},"classes/EmptyFactory.html":{},"classes/FormatterParser.html":{},"classes/HtmlUtil.html":{},"classes/InjectableFactory.html":{},"classes/RowChange.html":{},"classes/SortInfo.html":{}},"body":{"index.html":{},"overview.html":{},"modules/GridModule.html":{},"injectables/GridMessageService.html":{},"pipes/IsFixedPipe.html":{},"pipes/IsGroupPipe.html":{},"pipes/IsRowVisiblePipe.html":{},"pipes/IsVisiblePipe.html":{},"classes/Cell.html":{},"classes/EmptyFactory.html":{},"classes/FormatterParser.html":{},"classes/HtmlUtil.html":{},"classes/InjectableFactory.html":{},"classes/RowChange.html":{},"classes/SortInfo.html":{},"interfaces/EmptyConstructor.html":{},"interfaces/InjectableConstructor.html":{}}}],["click",{"_index":66,"title":{},"body":{"index.html":{},"interfaces/ClickListener.html":{},"miscellaneous/variables.html":{}}}],["click(ev",{"_index":684,"title":{},"body":{"interfaces/ClickListener.html":{}}}],["click.interface.t",{"_index":689,"title":{},"body":{"interfaces/DblClickListener.html":{}}}],["click.interface.ts:3",{"_index":692,"title":{},"body":{"interfaces/DblClickListener.html":{}}}],["clicklisten",{"_index":682,"title":{"interfaces/ClickListener.html":{}},"body":{"interfaces/ClickListener.html":{}}}],["cluster_gridmodul",{"_index":342,"title":{},"body":{"overview.html":{},"modules/GridModule.html":{}}}],["cluster_gridmodule_declar",{"_index":343,"title":{},"body":{"overview.html":{},"modules/GridModule.html":{}}}],["cluster_gridmodule_export",{"_index":345,"title":{},"body":{"overview.html":{},"modules/GridModule.html":{}}}],["cluster_gridmodule_gridcomponent_provid",{"_index":344,"title":{},"body":{"overview.html":{},"modules/GridModule.html":{}}}],["code",{"_index":48,"title":{},"body":{"index.html":{}}}],["colum",{"_index":150,"title":{},"body":{"index.html":{}}}],["column",{"_index":67,"title":{},"body":{"index.html":{},"changelog.html":{},"pipes/IsFixedPipe.html":{},"pipes/IsGroupPipe.html":{},"pipes/IsVisiblePipe.html":{}}}],["column'",{"_index":253,"title":{},"body":{"index.html":{}}}],["column/column",{"_index":502,"title":{},"body":{"modules/GridModule.html":{},"pipes/IsFixedPipe.html":{},"pipes/IsGroupPipe.html":{},"pipes/IsVisiblePipe.html":{}}}],["column/filterrenderers/compar",{"_index":512,"title":{},"body":{"modules/GridModule.html":{}}}],["column/filterrenderers/select",{"_index":515,"title":{},"body":{"modules/GridModule.html":{}}}],["column/filterrenderers/text",{"_index":511,"title":{},"body":{"modules/GridModule.html":{}}}],["columnheadercompon",{"_index":347,"title":{},"body":{"overview.html":{},"modules/GridModule.html":{}}}],["columns[j].field",{"_index":226,"title":{},"body":{"index.html":{}}}],["come",{"_index":262,"title":{},"body":{"index.html":{}}}],["command",{"_index":55,"title":{},"body":{"index.html":{}}}],["commonmodul",{"_index":496,"title":{},"body":{"modules/GridModule.html":{}}}],["compare.3.1.2",{"_index":372,"title":{},"body":{"changelog.html":{}}}],["comparefilterrender",{"_index":324,"title":{},"body":{"index.html":{},"overview.html":{},"modules/GridModule.html":{}}}],["compil",{"_index":47,"title":{},"body":{"index.html":{}}}],["complex",{"_index":30,"title":{},"body":{"index.html":{}}}],["compon",{"_index":108,"title":{},"body":{"index.html":{},"overview.html":{},"modules/GridModule.html":{}}}],["condit",{"_index":458,"title":{},"body":{"license.html":{}}}],["confidenti",{"_index":490,"title":{},"body":{"modules/GridModule.html":{}}}],["config",{"_index":238,"title":{},"body":{"index.html":{},"classes/FormatterParser.html":{},"interfaces/EventListenerArg.html":{}}}],["config/config",{"_index":518,"title":{},"body":{"modules/GridModule.html":{}}}],["configmenucompon",{"_index":354,"title":{},"body":{"overview.html":{},"modules/GridModule.html":{}}}],["configmultichoicecompon",{"_index":355,"title":{},"body":{"overview.html":{},"modules/GridModule.html":{}}}],["configur",{"_index":136,"title":{},"body":{"index.html":{},"changelog.html":{}}}],["configuration.instal",{"_index":40,"title":{},"body":{"index.html":{}}}],["connect",{"_index":423,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["console.display",{"_index":214,"title":{},"body":{"index.html":{}}}],["constructor",{"_index":585,"title":{},"body":{"classes/Cell.html":{},"classes/EmptyFactory.html":{},"classes/InjectableFactory.html":{},"classes/RowChange.html":{}}}],["constructor(",{"_index":648,"title":{},"body":{"classes/InjectableFactory.html":{}}}],["constructor(emptyconstructor",{"_index":597,"title":{},"body":{"classes/EmptyFactory.html":{}}}],["constructor(o",{"_index":586,"title":{},"body":{"classes/Cell.html":{}}}],["constructor(oldrownum",{"_index":660,"title":{},"body":{"classes/RowChange.html":{}}}],["constructor(priv",{"_index":602,"title":{},"body":{"classes/EmptyFactory.html":{},"classes/InjectableFactory.html":{},"interfaces/EmptyConstructor.html":{},"interfaces/InjectableConstructor.html":{}}}],["contain",{"_index":135,"title":{},"body":{"index.html":{}}}],["contract",{"_index":479,"title":{},"body":{"license.html":{}}}],["conveni",{"_index":623,"title":{},"body":{"classes/HtmlUtil.html":{}}}],["copi",{"_index":52,"title":{},"body":{"index.html":{},"license.html":{}}}],["copyright",{"_index":431,"title":{},"body":{"license.html":{},"modules/GridModule.html":{}}}],["creat",{"_index":209,"title":{},"body":{"index.html":{}}}],["createelement(render",{"_index":296,"title":{},"body":{"index.html":{}}}],["current",{"_index":100,"title":{},"body":{"index.html":{}}}],["custom",{"_index":54,"title":{},"body":{"index.html":{},"changelog.html":{}}}],["customiz",{"_index":378,"title":{},"body":{"changelog.html":{}}}],["damag",{"_index":476,"title":{},"body":{"license.html":{}}}],["data",{"_index":31,"title":{},"body":{"index.html":{},"changelog.html":{},"classes/Cell.html":{}}}],["data.celldblclick",{"_index":241,"title":{},"body":{"index.html":{}}}],["data.datacal",{"_index":127,"title":{},"body":{"index.html":{}}}],["data.rowclick",{"_index":242,"title":{},"body":{"index.html":{}}}],["data.rowdblclick",{"_index":243,"title":{},"body":{"index.html":{}}}],["data.warn",{"_index":244,"title":{},"body":{"index.html":{}}}],["data/config/ev",{"_index":414,"title":{},"body":{"changelog.html":{}}}],["datarequest",{"_index":111,"title":{},"body":{"index.html":{}}}],["datatyp",{"_index":320,"title":{},"body":{"index.html":{}}}],["date",{"_index":318,"title":{},"body":{"index.html":{},"changelog.html":{}}}],["dateeditrender",{"_index":323,"title":{},"body":{"index.html":{},"overview.html":{},"modules/GridModule.html":{}}}],["dblclick",{"_index":690,"title":{},"body":{"interfaces/DblClickListener.html":{}}}],["dblclick(ev",{"_index":691,"title":{},"body":{"interfaces/DblClickListener.html":{}}}],["dblclicklisten",{"_index":687,"title":{"interfaces/DblClickListener.html":{}},"body":{"interfaces/DblClickListener.html":{}}}],["deal",{"_index":373,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["declar",{"_index":340,"title":{},"body":{"overview.html":{},"modules/GridModule.html":{}}}],["default",{"_index":35,"title":{},"body":{"index.html":{},"changelog.html":{},"injectables/GridMessageService.html":{},"classes/Cell.html":{},"classes/FormatterParser.html":{},"classes/SortInfo.html":{},"miscellaneous/variables.html":{}}}],["default.externalfilt",{"_index":174,"title":{},"body":{"index.html":{}}}],["defin",{"_index":542,"title":{},"body":{"injectables/GridMessageService.html":{},"pipes/IsFixedPipe.html":{},"pipes/IsGroupPipe.html":{},"pipes/IsRowVisiblePipe.html":{},"pipes/IsVisiblePipe.html":{},"classes/Cell.html":{},"classes/EmptyFactory.html":{},"classes/FormatterParser.html":{},"classes/HtmlUtil.html":{},"classes/InjectableFactory.html":{},"classes/RowChange.html":{},"classes/SortInfo.html":{},"interfaces/ClickListener.html":{},"interfaces/DblClickListener.html":{},"interfaces/Dictionary.html":{},"interfaces/EventListenerArg.html":{},"interfaces/MouseDownListener.html":{},"interfaces/MouseDragListener.html":{},"interfaces/MouseOutListener.html":{},"interfaces/MouseOverListener.html":{},"interfaces/MouseUpListener.html":{}}}],["delay",{"_index":261,"title":{},"body":{"index.html":{}}}],["demo",{"_index":21,"title":{},"body":{"index.html":{}}}],["depend",{"_index":1,"title":{"dependencies.html":{}},"body":{"dependencies.html":{},"index.html":{},"overview.html":{},"modules/GridModule.html":{}}}],["descript",{"_index":581,"title":{},"body":{"classes/Cell.html":{},"classes/EmptyFactory.html":{},"classes/FormatterParser.html":{},"classes/HtmlUtil.html":{},"classes/InjectableFactory.html":{}}}],["design",{"_index":24,"title":{},"body":{"index.html":{}}}],["determin",{"_index":240,"title":{},"body":{"index.html":{}}}],["dictionari",{"_index":693,"title":{"interfaces/Dictionary.html":{}},"body":{"interfaces/Dictionary.html":{}}}],["differ",{"_index":311,"title":{},"body":{"index.html":{}}}],["dirti",{"_index":197,"title":{},"body":{"index.html":{},"classes/Cell.html":{}}}],["disabl",{"_index":167,"title":{},"body":{"index.html":{}}}],["display",{"_index":218,"title":{},"body":{"index.html":{},"changelog.html":{},"interfaces/Dictionary.html":{}}}],["dist",{"_index":50,"title":{},"body":{"index.html":{}}}],["distribut",{"_index":451,"title":{},"body":{"license.html":{}}}],["dob",{"_index":317,"title":{},"body":{"index.html":{}}}],["document",{"_index":446,"title":{},"body":{"license.html":{}}}],["don't",{"_index":202,"title":{},"body":{"index.html":{}}}],["down.interface.t",{"_index":703,"title":{},"body":{"interfaces/MouseDownListener.html":{}}}],["down.interface.ts:3",{"_index":706,"title":{},"body":{"interfaces/MouseDownListener.html":{}}}],["drag",{"_index":380,"title":{},"body":{"changelog.html":{}}}],["drag.interface.t",{"_index":708,"title":{},"body":{"interfaces/MouseDragListener.html":{}}}],["drag.interface.ts:3",{"_index":711,"title":{},"body":{"interfaces/MouseDragListener.html":{}}}],["drop",{"_index":382,"title":{},"body":{"changelog.html":{}}}],["e",{"_index":633,"title":{},"body":{"classes/HtmlUtil.html":{}}}],["e.g",{"_index":149,"title":{},"body":{"index.html":{}}}],["e.id",{"_index":639,"title":{},"body":{"classes/HtmlUtil.html":{}}}],["e.id.startswith(id",{"_index":640,"title":{},"body":{"classes/HtmlUtil.html":{}}}],["e.parentel",{"_index":641,"title":{},"body":{"classes/HtmlUtil.html":{}}}],["each",{"_index":288,"title":{},"body":{"index.html":{}}}],["edit",{"_index":509,"title":{},"body":{"modules/GridModule.html":{}}}],["editrender",{"_index":322,"title":{},"body":{"index.html":{}}}],["element",{"_index":626,"title":{},"body":{"classes/HtmlUtil.html":{}}}],["emit",{"_index":193,"title":{},"body":{"index.html":{}}}],["emitt",{"_index":379,"title":{},"body":{"changelog.html":{}}}],["empti",{"_index":383,"title":{},"body":{"changelog.html":{}}}],["emptyconstructor",{"_index":598,"title":{"interfaces/EmptyConstructor.html":{}},"body":{"classes/EmptyFactory.html":{},"interfaces/EmptyConstructor.html":{}}}],["emptyfactori",{"_index":592,"title":{"classes/EmptyFactory.html":{}},"body":{"classes/EmptyFactory.html":{},"interfaces/EmptyConstructor.html":{}}}],["entrycompon",{"_index":488,"title":{},"body":{"modules/GridModule.html":{}}}],["error",{"_index":538,"title":{},"body":{"injectables/GridMessageService.html":{}}}],["error(messag",{"_index":541,"title":{},"body":{"injectables/GridMessageService.html":{}}}],["error.3.0.0",{"_index":385,"title":{},"body":{"changelog.html":{}}}],["especi",{"_index":420,"title":{},"body":{"changelog.html":{}}}],["event",{"_index":90,"title":{},"body":{"index.html":{},"changelog.html":{},"license.html":{},"interfaces/ClickListener.html":{},"interfaces/DblClickListener.html":{},"interfaces/MouseDownListener.html":{},"interfaces/MouseDragListener.html":{},"interfaces/MouseOutListener.html":{},"interfaces/MouseOverListener.html":{},"interfaces/MouseUpListener.html":{}}}],["event.service.t",{"_index":733,"title":{},"body":{"miscellaneous/variables.html":{}}}],["eventlisten",{"_index":647,"title":{},"body":{"classes/InjectableFactory.html":{},"interfaces/InjectableConstructor.html":{}}}],["eventlistenerarg",{"_index":204,"title":{"interfaces/EventListenerArg.html":{}},"body":{"index.html":{},"interfaces/EventListenerArg.html":{}}}],["events.mod",{"_index":207,"title":{},"body":{"index.html":{}}}],["exampl",{"_index":104,"title":{},"body":{"index.html":{}}}],["expect",{"_index":33,"title":{},"body":{"index.html":{},"classes/InjectableFactory.html":{},"interfaces/InjectableConstructor.html":{}}}],["export",{"_index":341,"title":{},"body":{"overview.html":{},"modules/GridModule.html":{},"injectables/GridMessageService.html":{},"pipes/IsFixedPipe.html":{},"pipes/IsGroupPipe.html":{},"pipes/IsRowVisiblePipe.html":{},"pipes/IsVisiblePipe.html":{},"classes/Cell.html":{},"classes/EmptyFactory.html":{},"classes/FormatterParser.html":{},"classes/HtmlUtil.html":{},"classes/InjectableFactory.html":{},"classes/RowChange.html":{},"classes/SortInfo.html":{},"interfaces/ClickListener.html":{},"interfaces/DblClickListener.html":{},"interfaces/Dictionary.html":{},"interfaces/EmptyConstructor.html":{},"interfaces/EventListenerArg.html":{},"interfaces/InjectableConstructor.html":{},"interfaces/MouseDownListener.html":{},"interfaces/MouseDragListener.html":{},"interfaces/MouseOutListener.html":{},"interfaces/MouseOverListener.html":{},"interfaces/MouseUpListener.html":{}}}],["express",{"_index":465,"title":{},"body":{"license.html":{}}}],["extend",{"_index":312,"title":{},"body":{"index.html":{}}}],["extern",{"_index":85,"title":{},"body":{"index.html":{},"changelog.html":{}}}],["externalconfig",{"_index":392,"title":{},"body":{"changelog.html":{}}}],["externaldata(this.datageneratorservice.getdata(250",{"_index":117,"title":{},"body":{"index.html":{}}}],["externalinfo",{"_index":112,"title":{},"body":{"index.html":{}}}],["externalinfo)).delay(500",{"_index":118,"title":{},"body":{"index.html":{}}}],["fals",{"_index":143,"title":{},"body":{"index.html":{},"pipes/IsFixedPipe.html":{},"classes/Cell.html":{}}}],["featur",{"_index":26,"title":{},"body":{"index.html":{},"changelog.html":{}}}],["femal",{"_index":328,"title":{},"body":{"index.html":{}}}],["field",{"_index":225,"title":{},"body":{"index.html":{},"classes/SortInfo.html":{}}}],["file",{"_index":447,"title":{},"body":{"license.html":{},"modules/GridModule.html":{},"injectables/GridMessageService.html":{},"pipes/IsFixedPipe.html":{},"pipes/IsGroupPipe.html":{},"pipes/IsRowVisiblePipe.html":{},"pipes/IsVisiblePipe.html":{},"classes/Cell.html":{},"classes/EmptyFactory.html":{},"classes/FormatterParser.html":{},"classes/HtmlUtil.html":{},"classes/InjectableFactory.html":{},"classes/RowChange.html":{},"classes/SortInfo.html":{},"interfaces/ClickListener.html":{},"interfaces/DblClickListener.html":{},"interfaces/Dictionary.html":{},"interfaces/EmptyConstructor.html":{},"interfaces/EventListenerArg.html":{},"interfaces/InjectableConstructor.html":{},"interfaces/MouseDownListener.html":{},"interfaces/MouseDragListener.html":{},"interfaces/MouseOutListener.html":{},"interfaces/MouseOverListener.html":{},"interfaces/MouseUpListener.html":{}}}],["filter",{"_index":69,"title":{},"body":{"index.html":{},"changelog.html":{},"modules/GridModule.html":{}}}],["filterev",{"_index":265,"title":{},"body":{"index.html":{}}}],["filterinfo",{"_index":252,"title":{},"body":{"index.html":{}}}],["filterrender",{"_index":314,"title":{},"body":{"index.html":{}}}],["fire",{"_index":258,"title":{},"body":{"index.html":{}}}],["fired.datafilt",{"_index":266,"title":{},"body":{"index.html":{}}}],["fired.datasort",{"_index":272,"title":{},"body":{"index.html":{}}}],["first",{"_index":77,"title":{},"body":{"index.html":{}}}],["firstnam",{"_index":315,"title":{},"body":{"index.html":{}}}],["fit",{"_index":468,"title":{},"body":{"license.html":{}}}],["fix",{"_index":162,"title":{},"body":{"index.html":{},"changelog.html":{},"pipes/IsFixedPipe.html":{}}}],["fixed.pip",{"_index":507,"title":{},"body":{"modules/GridModule.html":{}}}],["fixed.pipe.t",{"_index":560,"title":{},"body":{"pipes/IsFixedPipe.html":{}}}],["fixed.pipe.ts:10",{"_index":565,"title":{},"body":{"pipes/IsFixedPipe.html":{}}}],["fixes.1.0.0",{"_index":427,"title":{},"body":{"changelog.html":{}}}],["flag",{"_index":144,"title":{},"body":{"index.html":{}}}],["flow",{"_index":215,"title":{},"body":{"index.html":{}}}],["folder",{"_index":51,"title":{},"body":{"index.html":{}}}],["follow",{"_index":278,"title":{},"body":{"index.html":{},"license.html":{}}}],["format",{"_index":235,"title":{},"body":{"index.html":{}}}],["format/pars",{"_index":394,"title":{},"body":{"changelog.html":{}}}],["formatt",{"_index":607,"title":{},"body":{"classes/FormatterParser.html":{}}}],["formatterpars",{"_index":604,"title":{"classes/FormatterParser.html":{}},"body":{"classes/FormatterParser.html":{}}}],["formatting/pars",{"_index":419,"title":{},"body":{"changelog.html":{}}}],["formatvalu",{"_index":610,"title":{},"body":{"classes/FormatterParser.html":{}}}],["formatvalue(valu",{"_index":613,"title":{},"body":{"classes/FormatterParser.html":{}}}],["formsmodul",{"_index":498,"title":{},"body":{"modules/GridModule.html":{}}}],["forroot(globalconfig",{"_index":527,"title":{},"body":{"modules/GridModule.html":{}}}],["free",{"_index":440,"title":{},"body":{"license.html":{}}}],["from.nvisiblerow",{"_index":186,"title":{},"body":{"index.html":{}}}],["full",{"_index":25,"title":{},"body":{"index.html":{}}}],["function",{"_index":109,"title":{},"body":{"index.html":{},"changelog.html":{}}}],["furnish",{"_index":456,"title":{},"body":{"license.html":{}}}],["gender",{"_index":325,"title":{},"body":{"index.html":{}}}],["gener",{"_index":386,"title":{},"body":{"changelog.html":{},"classes/EmptyFactory.html":{},"classes/InjectableFactory.html":{},"interfaces/InjectableConstructor.html":{}}}],["generic.2.1.1",{"_index":395,"title":{},"body":{"changelog.html":{}}}],["get",{"_index":11,"title":{"index.html":{},"changelog.html":{},"license.html":{}},"body":{"index.html":{}}}],["getasc",{"_index":668,"title":{},"body":{"classes/SortInfo.html":{}}}],["getfield",{"_index":669,"title":{},"body":{"classes/SortInfo.html":{}}}],["getid",{"_index":627,"title":{},"body":{"classes/HtmlUtil.html":{}}}],["getid(",{"_index":630,"title":{},"body":{"classes/HtmlUtil.html":{}}}],["getidel",{"_index":628,"title":{},"body":{"classes/HtmlUtil.html":{}}}],["getidelement(",{"_index":635,"title":{},"body":{"classes/HtmlUtil.html":{}}}],["getinst",{"_index":596,"title":{},"body":{"classes/EmptyFactory.html":{},"classes/InjectableFactory.html":{},"interfaces/EmptyConstructor.html":{},"interfaces/InjectableConstructor.html":{}}}],["getloc",{"_index":629,"title":{},"body":{"classes/HtmlUtil.html":{}}}],["getlocation(",{"_index":637,"title":{},"body":{"classes/HtmlUtil.html":{}}}],["getmessageobserv",{"_index":553,"title":{},"body":{"injectables/GridMessageService.html":{}}}],["github",{"_index":22,"title":{},"body":{"index.html":{}}}],["global",{"_index":132,"title":{},"body":{"index.html":{},"changelog.html":{}}}],["global.servic",{"_index":522,"title":{},"body":{"modules/GridModule.html":{}}}],["globalconfig",{"_index":528,"title":{},"body":{"modules/GridModule.html":{}}}],["grant",{"_index":439,"title":{},"body":{"license.html":{}}}],["grid",{"_index":18,"title":{},"body":{"index.html":{},"changelog.html":{}}}],["grid\";@ngmodul",{"_index":44,"title":{},"body":{"index.html":{}}}],["grid'",{"_index":148,"title":{},"body":{"index.html":{}}}],["grid.cellclick",{"_index":239,"title":{},"body":{"index.html":{}}}],["grid.compon",{"_index":501,"title":{},"body":{"modules/GridModule.html":{}}}],["grid.groupbi",{"_index":165,"title":{},"body":{"index.html":{}}}],["grid.linkedgroup",{"_index":138,"title":{},"body":{"index.html":{}}}],["grid.output",{"_index":221,"title":{},"body":{"index.html":{}}}],["grid.them",{"_index":157,"title":{},"body":{"index.html":{}}}],["gridcompon",{"_index":346,"title":{},"body":{"overview.html":{},"modules/GridModule.html":{}}}],["grideventservic",{"_index":357,"title":{},"body":{"overview.html":{},"modules/GridModule.html":{}}}],["gridglobalservic",{"_index":520,"title":{},"body":{"modules/GridModule.html":{}}}],["gridmessageservic",{"_index":358,"title":{"injectables/GridMessageService.html":{}},"body":{"overview.html":{},"modules/GridModule.html":{},"injectables/GridMessageService.html":{}}}],["gridmodul",{"_index":43,"title":{"modules/GridModule.html":{}},"body":{"index.html":{},"overview.html":{},"modules.html":{},"modules/GridModule.html":{}}}],["gridmodule.forroot",{"_index":45,"title":{},"body":{"index.html":{}}}],["gridservic",{"_index":356,"title":{},"body":{"overview.html":{},"modules/GridModule.html":{}}}],["group",{"_index":82,"title":{},"body":{"index.html":{}}}],["group.pip",{"_index":506,"title":{},"body":{"modules/GridModule.html":{}}}],["group.pipe.t",{"_index":569,"title":{},"body":{"pipes/IsGroupPipe.html":{}}}],["group.pipe.ts:9",{"_index":571,"title":{},"body":{"pipes/IsGroupPipe.html":{}}}],["groupbycollaps",{"_index":168,"title":{},"body":{"index.html":{}}}],["handl",{"_index":27,"title":{},"body":{"index.html":{}}}],["hci",{"_index":20,"title":{},"body":{"index.html":{}}}],["header",{"_index":68,"title":{},"body":{"index.html":{}}}],["header.compon",{"_index":503,"title":{},"body":{"modules/GridModule.html":{}}}],["height",{"_index":404,"title":{},"body":{"changelog.html":{}}}],["here",{"_index":102,"title":{},"body":{"index.html":{}}}],["herebi",{"_index":438,"title":{},"body":{"license.html":{}}}],["hidden",{"_index":172,"title":{},"body":{"index.html":{}}}],["high",{"_index":306,"title":{},"body":{"index.html":{}}}],["holder",{"_index":473,"title":{},"body":{"license.html":{},"classes/Cell.html":{}}}],["html",{"_index":130,"title":{},"body":{"index.html":{}}}],["htmlelement",{"_index":631,"title":{},"body":{"classes/HtmlUtil.html":{}}}],["htmlelement;a",{"_index":298,"title":{},"body":{"index.html":{}}}],["htmlutil",{"_index":620,"title":{"classes/HtmlUtil.html":{}},"body":{"classes/HtmlUtil.html":{}}}],["http",{"_index":384,"title":{},"body":{"changelog.html":{}}}],["huntsman",{"_index":14,"title":{},"body":{"index.html":{},"license.html":{},"modules/GridModule.html":{}}}],["ic",{"_index":651,"title":{},"body":{"classes/InjectableFactory.html":{},"interfaces/InjectableConstructor.html":{}}}],["id",{"_index":131,"title":{},"body":{"index.html":{},"classes/HtmlUtil.html":{}}}],["implement",{"_index":107,"title":{},"body":{"index.html":{},"pipes/IsFixedPipe.html":{},"pipes/IsGroupPipe.html":{},"pipes/IsRowVisiblePipe.html":{},"pipes/IsVisiblePipe.html":{},"classes/InjectableFactory.html":{},"interfaces/InjectableConstructor.html":{}}}],["impli",{"_index":466,"title":{},"body":{"license.html":{}}}],["import",{"_index":42,"title":{},"body":{"index.html":{},"modules/GridModule.html":{},"injectables/GridMessageService.html":{},"pipes/IsFixedPipe.html":{},"pipes/IsGroupPipe.html":{},"pipes/IsRowVisiblePipe.html":{},"pipes/IsVisiblePipe.html":{},"classes/HtmlUtil.html":{},"classes/InjectableFactory.html":{},"interfaces/EventListenerArg.html":{},"interfaces/InjectableConstructor.html":{}}}],["improv",{"_index":418,"title":{},"body":{"changelog.html":{}}}],["in.onconfigchang",{"_index":237,"title":{},"body":{"index.html":{}}}],["includ",{"_index":257,"title":{},"body":{"index.html":{},"license.html":{}}}],["index",{"_index":13,"title":{"index.html":{}},"body":{"injectables/GridMessageService.html":{},"classes/Cell.html":{},"classes/EmptyFactory.html":{},"classes/FormatterParser.html":{},"classes/HtmlUtil.html":{},"classes/InjectableFactory.html":{},"classes/RowChange.html":{},"classes/SortInfo.html":{},"interfaces/ClickListener.html":{},"interfaces/DblClickListener.html":{},"interfaces/Dictionary.html":{},"interfaces/EventListenerArg.html":{},"interfaces/MouseDownListener.html":{},"interfaces/MouseDragListener.html":{},"interfaces/MouseOutListener.html":{},"interfaces/MouseOverListener.html":{},"interfaces/MouseUpListener.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":486,"title":{},"body":{"modules/GridModule.html":{},"injectables/GridMessageService.html":{},"pipes/IsFixedPipe.html":{},"pipes/IsGroupPipe.html":{},"pipes/IsRowVisiblePipe.html":{},"pipes/IsVisiblePipe.html":{},"classes/Cell.html":{},"classes/EmptyFactory.html":{},"classes/FormatterParser.html":{},"classes/HtmlUtil.html":{},"classes/InjectableFactory.html":{},"classes/RowChange.html":{},"classes/SortInfo.html":{},"interfaces/ClickListener.html":{},"interfaces/DblClickListener.html":{},"interfaces/Dictionary.html":{},"interfaces/EmptyConstructor.html":{},"interfaces/EventListenerArg.html":{},"interfaces/InjectableConstructor.html":{},"interfaces/MouseDownListener.html":{},"interfaces/MouseDragListener.html":{},"interfaces/MouseOutListener.html":{},"interfaces/MouseOverListener.html":{},"interfaces/MouseUpListener.html":{}}}],["info.id",{"_index":129,"title":{},"body":{"index.html":{}}}],["info.t",{"_index":666,"title":{},"body":{"classes/SortInfo.html":{}}}],["info.ts:13",{"_index":673,"title":{},"body":{"classes/SortInfo.html":{}}}],["info.ts:17",{"_index":677,"title":{},"body":{"classes/SortInfo.html":{}}}],["info.ts:2",{"_index":678,"title":{},"body":{"classes/SortInfo.html":{}}}],["info.ts:3",{"_index":679,"title":{},"body":{"classes/SortInfo.html":{}}}],["info.ts:5",{"_index":672,"title":{},"body":{"classes/SortInfo.html":{}}}],["info.ts:9",{"_index":675,"title":{},"body":{"classes/SortInfo.html":{}}}],["initi",{"_index":428,"title":{},"body":{"changelog.html":{}}}],["inject",{"_index":364,"title":{"injectables/GridMessageService.html":{}},"body":{"overview.html":{},"injectables/GridMessageService.html":{}}}],["injectableconstructor",{"_index":649,"title":{"interfaces/InjectableConstructor.html":{}},"body":{"classes/InjectableFactory.html":{},"interfaces/InjectableConstructor.html":{}}}],["injectablefactori",{"_index":644,"title":{"classes/InjectableFactory.html":{}},"body":{"classes/InjectableFactory.html":{},"interfaces/InjectableConstructor.html":{}}}],["injector",{"_index":646,"title":{},"body":{"classes/InjectableFactory.html":{},"interfaces/InjectableConstructor.html":{}}}],["input",{"_index":119,"title":{},"body":{"index.html":{}}}],["instanc",{"_index":277,"title":{},"body":{"index.html":{}}}],["instanti",{"_index":594,"title":{},"body":{"classes/EmptyFactory.html":{},"classes/InjectableFactory.html":{},"interfaces/InjectableConstructor.html":{}}}],["instead",{"_index":60,"title":{},"body":{"index.html":{}}}],["institut",{"_index":434,"title":{},"body":{"license.html":{},"modules/GridModule.html":{}}}],["institute'",{"_index":16,"title":{},"body":{"index.html":{}}}],["interfac",{"_index":293,"title":{"interfaces/ClickListener.html":{},"interfaces/DblClickListener.html":{},"interfaces/Dictionary.html":{},"interfaces/EmptyConstructor.html":{},"interfaces/EventListenerArg.html":{},"interfaces/InjectableConstructor.html":{},"interfaces/MouseDownListener.html":{},"interfaces/MouseDragListener.html":{},"interfaces/MouseOutListener.html":{},"interfaces/MouseOverListener.html":{},"interfaces/MouseUpListener.html":{}},"body":{"index.html":{},"overview.html":{},"classes/EmptyFactory.html":{},"classes/InjectableFactory.html":{},"interfaces/ClickListener.html":{},"interfaces/DblClickListener.html":{},"interfaces/Dictionary.html":{},"interfaces/EmptyConstructor.html":{},"interfaces/EventListenerArg.html":{},"interfaces/InjectableConstructor.html":{},"interfaces/MouseDownListener.html":{},"interfaces/MouseDragListener.html":{},"interfaces/MouseOutListener.html":{},"interfaces/MouseOverListener.html":{},"interfaces/MouseUpListener.html":{}}}],["intro",{"_index":23,"title":{},"body":{"index.html":{}}}],["introduc",{"_index":334,"title":{},"body":{"index.html":{}}}],["isfix",{"_index":562,"title":{},"body":{"pipes/IsFixedPipe.html":{}}}],["isfixedpip",{"_index":350,"title":{"pipes/IsFixedPipe.html":{}},"body":{"overview.html":{},"modules/GridModule.html":{},"pipes/IsFixedPipe.html":{}}}],["isgroup",{"_index":570,"title":{},"body":{"pipes/IsGroupPipe.html":{}}}],["isgrouppip",{"_index":349,"title":{"pipes/IsGroupPipe.html":{}},"body":{"overview.html":{},"modules/GridModule.html":{},"pipes/IsGroupPipe.html":{}}}],["isrowvis",{"_index":575,"title":{},"body":{"pipes/IsRowVisiblePipe.html":{}}}],["isrowvisiblepip",{"_index":351,"title":{"pipes/IsRowVisiblePipe.html":{}},"body":{"overview.html":{},"modules/GridModule.html":{},"pipes/IsRowVisiblePipe.html":{}}}],["issu",{"_index":332,"title":{},"body":{"index.html":{}}}],["isvis",{"_index":579,"title":{},"body":{"pipes/IsVisiblePipe.html":{}}}],["isvisiblepip",{"_index":348,"title":{"pipes/IsVisiblePipe.html":{}},"body":{"overview.html":{},"modules/GridModule.html":{},"pipes/IsVisiblePipe.html":{}}}],["j",{"_index":224,"title":{},"body":{"index.html":{}}}],["json",{"_index":134,"title":{},"body":{"index.html":{}}}],["key",{"_index":206,"title":{},"body":{"index.html":{},"classes/Cell.html":{}}}],["key1",{"_index":249,"title":{},"body":{"index.html":{}}}],["key2",{"_index":250,"title":{},"body":{"index.html":{}}}],["keyword",{"_index":408,"title":{},"body":{"changelog.html":{}}}],["kind",{"_index":464,"title":{},"body":{"license.html":{}}}],["known",{"_index":331,"title":{},"body":{"index.html":{}}}],["lab",{"_index":300,"title":{},"body":{"index.html":{}}}],["last",{"_index":78,"title":{},"body":{"index.html":{}}}],["left",{"_index":163,"title":{},"body":{"index.html":{}}}],["legend",{"_index":339,"title":{},"body":{"overview.html":{},"modules/GridModule.html":{}}}],["liabil",{"_index":477,"title":{},"body":{"license.html":{}}}],["liabl",{"_index":474,"title":{},"body":{"license.html":{}}}],["librari",{"_index":19,"title":{},"body":{"index.html":{}}}],["licens",{"_index":411,"title":{"license.html":{}},"body":{"changelog.html":{}}}],["limit",{"_index":189,"title":{},"body":{"index.html":{},"license.html":{}}}],["link",{"_index":140,"title":{},"body":{"index.html":{}}}],["list",{"_index":101,"title":{},"body":{"index.html":{},"pipes/IsFixedPipe.html":{},"pipes/IsGroupPipe.html":{},"pipes/IsRowVisiblePipe.html":{},"pipes/IsVisiblePipe.html":{}}}],["list.filter((o",{"_index":567,"title":{},"body":{"pipes/IsFixedPipe.html":{},"pipes/IsGroupPipe.html":{},"pipes/IsRowVisiblePipe.html":{},"pipes/IsVisiblePipe.html":{}}}],["listen",{"_index":91,"title":{},"body":{"index.html":{},"changelog.html":{},"interfaces/EventListenerArg.html":{}}}],["load",{"_index":201,"title":{},"body":{"index.html":{},"changelog.html":{}}}],["locat",{"_index":229,"title":{},"body":{"index.html":{}}}],["log",{"_index":369,"title":{},"body":{"changelog.html":{}}}],["low",{"_index":304,"title":{},"body":{"index.html":{}}}],["male",{"_index":329,"title":{},"body":{"index.html":{}}}],["manag",{"_index":584,"title":{},"body":{"classes/Cell.html":{}}}],["mani",{"_index":99,"title":{},"body":{"index.html":{}}}],["match",{"_index":10,"title":{},"body":{"dependencies.html":{},"index.html":{},"overview.html":{},"changelog.html":{},"license.html":{},"modules.html":{},"modules/GridModule.html":{},"injectables/GridMessageService.html":{},"pipes/IsFixedPipe.html":{},"pipes/IsGroupPipe.html":{},"pipes/IsRowVisiblePipe.html":{},"pipes/IsVisiblePipe.html":{},"classes/Cell.html":{},"classes/EmptyFactory.html":{},"classes/FormatterParser.html":{},"classes/HtmlUtil.html":{},"classes/InjectableFactory.html":{},"classes/RowChange.html":{},"classes/SortInfo.html":{},"interfaces/ClickListener.html":{},"interfaces/DblClickListener.html":{},"interfaces/Dictionary.html":{},"interfaces/EmptyConstructor.html":{},"interfaces/EventListenerArg.html":{},"interfaces/InjectableConstructor.html":{},"interfaces/MouseDownListener.html":{},"interfaces/MouseDragListener.html":{},"interfaces/MouseOutListener.html":{},"interfaces/MouseOverListener.html":{},"interfaces/MouseUpListener.html":{},"miscellaneous/variables.html":{}}}],["menu.compon",{"_index":519,"title":{},"body":{"modules/GridModule.html":{}}}],["merchant",{"_index":467,"title":{},"body":{"license.html":{}}}],["merg",{"_index":450,"title":{},"body":{"license.html":{}}}],["messag",{"_index":245,"title":{},"body":{"index.html":{},"injectables/GridMessageService.html":{}}}],["message.service.t",{"_index":532,"title":{},"body":{"injectables/GridMessageService.html":{}}}],["message.service.ts:10",{"_index":549,"title":{},"body":{"injectables/GridMessageService.html":{}}}],["message.service.ts:12",{"_index":543,"title":{},"body":{"injectables/GridMessageService.html":{}}}],["message.service.ts:16",{"_index":547,"title":{},"body":{"injectables/GridMessageService.html":{}}}],["message.service.ts:20",{"_index":554,"title":{},"body":{"injectables/GridMessageService.html":{}}}],["message.service.ts:8",{"_index":550,"title":{},"body":{"injectables/GridMessageService.html":{}}}],["message.service.ts:9",{"_index":552,"title":{},"body":{"injectables/GridMessageService.html":{}}}],["messageobserv",{"_index":540,"title":{},"body":{"injectables/GridMessageService.html":{}}}],["metadata",{"_index":561,"title":{},"body":{"pipes/IsFixedPipe.html":{},"pipes/IsGroupPipe.html":{},"pipes/IsRowVisiblePipe.html":{},"pipes/IsVisiblePipe.html":{},"classes/Cell.html":{}}}],["method",{"_index":294,"title":{},"body":{"index.html":{},"injectables/GridMessageService.html":{},"pipes/IsFixedPipe.html":{},"pipes/IsGroupPipe.html":{},"pipes/IsRowVisiblePipe.html":{},"pipes/IsVisiblePipe.html":{},"classes/EmptyFactory.html":{},"classes/FormatterParser.html":{},"classes/HtmlUtil.html":{},"classes/InjectableFactory.html":{},"classes/SortInfo.html":{},"interfaces/ClickListener.html":{},"interfaces/DblClickListener.html":{},"interfaces/MouseDownListener.html":{},"interfaces/MouseDragListener.html":{},"interfaces/MouseOutListener.html":{},"interfaces/MouseOverListener.html":{},"interfaces/MouseUpListener.html":{}}}],["miscellan",{"_index":727,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["mm/dd/yyyi",{"_index":321,"title":{},"body":{"index.html":{}}}],["mock",{"_index":110,"title":{},"body":{"index.html":{}}}],["mode",{"_index":210,"title":{},"body":{"index.html":{}}}],["modif",{"_index":609,"title":{},"body":{"classes/FormatterParser.html":{}}}],["modifi",{"_index":147,"title":{},"body":{"index.html":{},"license.html":{}}}],["modul",{"_index":275,"title":{"modules.html":{},"modules/GridModule.html":{}},"body":{"index.html":{},"overview.html":{},"modules.html":{},"modules/GridModule.html":{}}}],["modulewithprovid",{"_index":493,"title":{},"body":{"modules/GridModule.html":{}}}],["moment",{"_index":7,"title":{},"body":{"dependencies.html":{}}}],["more",{"_index":84,"title":{},"body":{"index.html":{},"changelog.html":{}}}],["mousedown",{"_index":704,"title":{},"body":{"interfaces/MouseDownListener.html":{}}}],["mousedown(ev",{"_index":705,"title":{},"body":{"interfaces/MouseDownListener.html":{}}}],["mousedownlisten",{"_index":701,"title":{"interfaces/MouseDownListener.html":{}},"body":{"interfaces/MouseDownListener.html":{}}}],["mousedrag",{"_index":709,"title":{},"body":{"interfaces/MouseDragListener.html":{}}}],["mousedrag(ev",{"_index":710,"title":{},"body":{"interfaces/MouseDragListener.html":{}}}],["mousedraglisten",{"_index":707,"title":{"interfaces/MouseDragListener.html":{}},"body":{"interfaces/MouseDragListener.html":{}}}],["mouseev",{"_index":685,"title":{},"body":{"interfaces/ClickListener.html":{},"interfaces/DblClickListener.html":{},"interfaces/MouseDownListener.html":{},"interfaces/MouseDragListener.html":{},"interfaces/MouseOutListener.html":{},"interfaces/MouseOverListener.html":{},"interfaces/MouseUpListener.html":{}}}],["mouseout",{"_index":714,"title":{},"body":{"interfaces/MouseOutListener.html":{}}}],["mouseout(ev",{"_index":715,"title":{},"body":{"interfaces/MouseOutListener.html":{}}}],["mouseoutlisten",{"_index":712,"title":{"interfaces/MouseOutListener.html":{}},"body":{"interfaces/MouseOutListener.html":{}}}],["mouseov",{"_index":719,"title":{},"body":{"interfaces/MouseOverListener.html":{}}}],["mouseover(ev",{"_index":720,"title":{},"body":{"interfaces/MouseOverListener.html":{}}}],["mouseoverlisten",{"_index":717,"title":{"interfaces/MouseOverListener.html":{}},"body":{"interfaces/MouseOverListener.html":{}}}],["mouseup",{"_index":724,"title":{},"body":{"interfaces/MouseUpListener.html":{}}}],["mouseup(ev",{"_index":725,"title":{},"body":{"interfaces/MouseUpListener.html":{}}}],["mouseuplisten",{"_index":722,"title":{"interfaces/MouseUpListener.html":{}},"body":{"interfaces/MouseUpListener.html":{}}}],["move",{"_index":49,"title":{},"body":{"index.html":{}}}],["ms",{"_index":371,"title":{},"body":{"changelog.html":{}}}],["multi",{"_index":523,"title":{},"body":{"modules/GridModule.html":{}}}],["multipl",{"_index":256,"title":{},"body":{"index.html":{}}}],["n",{"_index":381,"title":{},"body":{"changelog.html":{}}}],["name",{"_index":139,"title":{},"body":{"index.html":{},"injectables/GridMessageService.html":{},"pipes/IsFixedPipe.html":{},"pipes/IsGroupPipe.html":{},"pipes/IsRowVisiblePipe.html":{},"pipes/IsVisiblePipe.html":{},"classes/Cell.html":{},"classes/EmptyFactory.html":{},"classes/FormatterParser.html":{},"classes/HtmlUtil.html":{},"classes/InjectableFactory.html":{},"classes/RowChange.html":{},"classes/SortInfo.html":{},"interfaces/ClickListener.html":{},"interfaces/DblClickListener.html":{},"interfaces/MouseDownListener.html":{},"interfaces/MouseDragListener.html":{},"interfaces/MouseOutListener.html":{},"interfaces/MouseOverListener.html":{},"interfaces/MouseUpListener.html":{}}}],["navig",{"_index":195,"title":{},"body":{"index.html":{}}}],["ndata",{"_index":268,"title":{},"body":{"index.html":{}}}],["nearli",{"_index":28,"title":{},"body":{"index.html":{}}}],["need",{"_index":583,"title":{},"body":{"classes/Cell.html":{}}}],["new",{"_index":196,"title":{},"body":{"index.html":{},"injectables/GridMessageService.html":{},"classes/EmptyFactory.html":{},"classes/InjectableFactory.html":{},"interfaces/EmptyConstructor.html":{},"interfaces/InjectableConstructor.html":{}}}],["new(injector",{"_index":654,"title":{},"body":{"classes/InjectableFactory.html":{},"interfaces/InjectableConstructor.html":{}}}],["newrownum",{"_index":658,"title":{},"body":{"classes/RowChange.html":{}}}],["newvalu",{"_index":228,"title":{},"body":{"index.html":{}}}],["next",{"_index":80,"title":{},"body":{"index.html":{}}}],["ng",{"_index":2,"title":{},"body":{"dependencies.html":{},"index.html":{},"modules/GridModule.html":{}}}],["ngbmodul",{"_index":500,"title":{},"body":{"modules/GridModule.html":{}}}],["ngbmodule.forroot",{"_index":525,"title":{},"body":{"modules/GridModule.html":{}}}],["ngmodul",{"_index":494,"title":{},"body":{"modules/GridModule.html":{}}}],["ngoninit",{"_index":113,"title":{},"body":{"index.html":{}}}],["nlab",{"_index":299,"title":{},"body":{"index.html":{}}}],["no_ev",{"_index":730,"title":{},"body":{"miscellaneous/variables.html":{}}}],["noninfring",{"_index":471,"title":{},"body":{"license.html":{}}}],["note",{"_index":98,"title":{},"body":{"index.html":{}}}],["notic",{"_index":459,"title":{},"body":{"license.html":{}}}],["npmignore.2.0.1",{"_index":409,"title":{},"body":{"changelog.html":{}}}],["npmpack",{"_index":58,"title":{},"body":{"index.html":{}}}],["npmpublish",{"_index":59,"title":{},"body":{"index.html":{}}}],["null",{"_index":642,"title":{},"body":{"classes/HtmlUtil.html":{},"classes/SortInfo.html":{}}}],["number",{"_index":178,"title":{},"body":{"index.html":{},"injectables/GridMessageService.html":{},"classes/Cell.html":{},"classes/RowChange.html":{},"miscellaneous/variables.html":{}}}],["numer",{"_index":426,"title":{},"body":{"changelog.html":{}}}],["o",{"_index":588,"title":{},"body":{"classes/Cell.html":{}}}],["o.isfix",{"_index":568,"title":{},"body":{"pipes/IsFixedPipe.html":{}}}],["o.isgroup",{"_index":572,"title":{},"body":{"pipes/IsGroupPipe.html":{}}}],["o.isutil",{"_index":573,"title":{},"body":{"pipes/IsGroupPipe.html":{}}}],["o.vis",{"_index":578,"title":{},"body":{"pipes/IsRowVisiblePipe.html":{},"pipes/IsVisiblePipe.html":{}}}],["object",{"_index":121,"title":{},"body":{"index.html":{},"classes/Cell.html":{}}}],["object.assign(thi",{"_index":591,"title":{},"body":{"classes/Cell.html":{}}}],["objects.fixedcolumn",{"_index":161,"title":{},"body":{"index.html":{}}}],["observ",{"_index":425,"title":{},"body":{"changelog.html":{},"injectables/GridMessageService.html":{}}}],["observable.of(new",{"_index":116,"title":{},"body":{"index.html":{}}}],["obtain",{"_index":443,"title":{},"body":{"license.html":{}}}],["old",{"_index":230,"title":{},"body":{"index.html":{}}}],["oldrownum",{"_index":659,"title":{},"body":{"classes/RowChange.html":{}}}],["oldvalu",{"_index":227,"title":{},"body":{"index.html":{}}}],["on",{"_index":83,"title":{},"body":{"index.html":{}}}],["oncellsav",{"_index":222,"title":{},"body":{"index.html":{}}}],["onrowsav",{"_index":194,"title":{},"body":{"index.html":{}}}],["option",{"_index":137,"title":{},"body":{"index.html":{},"injectables/GridMessageService.html":{},"pipes/IsFixedPipe.html":{},"pipes/IsGroupPipe.html":{},"pipes/IsRowVisiblePipe.html":{},"pipes/IsVisiblePipe.html":{},"classes/Cell.html":{},"classes/EmptyFactory.html":{},"classes/FormatterParser.html":{},"classes/HtmlUtil.html":{},"classes/InjectableFactory.html":{},"classes/RowChange.html":{},"classes/SortInfo.html":{},"interfaces/ClickListener.html":{},"interfaces/DblClickListener.html":{},"interfaces/EventListenerArg.html":{},"interfaces/MouseDownListener.html":{},"interfaces/MouseDragListener.html":{},"interfaces/MouseOutListener.html":{},"interfaces/MouseOverListener.html":{},"interfaces/MouseUpListener.html":{}}}],["origin",{"_index":236,"title":{},"body":{"index.html":{}}}],["originalrowdata",{"_index":234,"title":{},"body":{"index.html":{}}}],["otherwis",{"_index":481,"title":{},"body":{"license.html":{}}}],["out",{"_index":361,"title":{},"body":{"overview.html":{},"license.html":{},"modules/GridModule.html":{}}}],["out.interface.t",{"_index":713,"title":{},"body":{"interfaces/MouseOutListener.html":{}}}],["out.interface.ts:3",{"_index":716,"title":{},"body":{"interfaces/MouseOutListener.html":{}}}],["over.interface.t",{"_index":718,"title":{},"body":{"interfaces/MouseOverListener.html":{}}}],["over.interface.ts:3",{"_index":721,"title":{},"body":{"interfaces/MouseOverListener.html":{}}}],["overview",{"_index":338,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["pack",{"_index":62,"title":{},"body":{"index.html":{}}}],["packag",{"_index":0,"title":{"dependencies.html":{}},"body":{"index.html":{}}}],["package.json",{"_index":53,"title":{},"body":{"index.html":{}}}],["page",{"_index":74,"title":{},"body":{"index.html":{}}}],["paramet",{"_index":544,"title":{},"body":{"injectables/GridMessageService.html":{},"pipes/IsFixedPipe.html":{},"pipes/IsGroupPipe.html":{},"pipes/IsRowVisiblePipe.html":{},"pipes/IsVisiblePipe.html":{},"classes/Cell.html":{},"classes/EmptyFactory.html":{},"classes/FormatterParser.html":{},"classes/HtmlUtil.html":{},"classes/InjectableFactory.html":{},"classes/RowChange.html":{},"classes/SortInfo.html":{},"interfaces/ClickListener.html":{},"interfaces/DblClickListener.html":{},"interfaces/MouseDownListener.html":{},"interfaces/MouseDragListener.html":{},"interfaces/MouseOutListener.html":{},"interfaces/MouseOverListener.html":{},"interfaces/MouseUpListener.html":{}}}],["parser",{"_index":608,"title":{},"body":{"classes/FormatterParser.html":{}}}],["parser.t",{"_index":606,"title":{},"body":{"classes/FormatterParser.html":{}}}],["parser.ts:12",{"_index":614,"title":{},"body":{"classes/FormatterParser.html":{}}}],["parser.ts:16",{"_index":616,"title":{},"body":{"classes/FormatterParser.html":{}}}],["parser.ts:6",{"_index":618,"title":{},"body":{"classes/FormatterParser.html":{}}}],["parser.ts:8",{"_index":617,"title":{},"body":{"classes/FormatterParser.html":{}}}],["parsevalu",{"_index":611,"title":{},"body":{"classes/FormatterParser.html":{}}}],["parsevalue(valu",{"_index":615,"title":{},"body":{"classes/FormatterParser.html":{}}}],["particular",{"_index":469,"title":{},"body":{"license.html":{}}}],["pass",{"_index":128,"title":{},"body":{"index.html":{}}}],["paus",{"_index":399,"title":{},"body":{"changelog.html":{}}}],["per",{"_index":179,"title":{},"body":{"index.html":{}}}],["perform",{"_index":205,"title":{},"body":{"index.html":{}}}],["permiss",{"_index":437,"title":{},"body":{"license.html":{}}}],["permit",{"_index":455,"title":{},"body":{"license.html":{}}}],["person",{"_index":442,"title":{},"body":{"license.html":{}}}],["pipe",{"_index":365,"title":{"pipes/IsFixedPipe.html":{},"pipes/IsGroupPipe.html":{},"pipes/IsRowVisiblePipe.html":{},"pipes/IsVisiblePipe.html":{}},"body":{"overview.html":{},"pipes/IsFixedPipe.html":{},"pipes/IsGroupPipe.html":{},"pipes/IsRowVisiblePipe.html":{},"pipes/IsVisiblePipe.html":{}}}],["pipetransform",{"_index":566,"title":{},"body":{"pipes/IsFixedPipe.html":{},"pipes/IsGroupPipe.html":{},"pipes/IsRowVisiblePipe.html":{},"pipes/IsVisiblePipe.html":{}}}],["point",{"_index":264,"title":{},"body":{"index.html":{},"classes/HtmlUtil.html":{}}}],["point.getpoint(this.getid(",{"_index":643,"title":{},"body":{"classes/HtmlUtil.html":{}}}],["popup",{"_index":390,"title":{},"body":{"changelog.html":{}}}],["popup).selectedrow",{"_index":248,"title":{},"body":{"index.html":{}}}],["popup.compon",{"_index":517,"title":{},"body":{"modules/GridModule.html":{}}}],["portion",{"_index":462,"title":{},"body":{"license.html":{}}}],["possibl",{"_index":73,"title":{},"body":{"index.html":{}}}],["prevent",{"_index":402,"title":{},"body":{"changelog.html":{}}}],["previou",{"_index":79,"title":{},"body":{"index.html":{}}}],["privat",{"_index":534,"title":{},"body":{"injectables/GridMessageService.html":{},"classes/InjectableFactory.html":{},"interfaces/InjectableConstructor.html":{}}}],["promis",{"_index":424,"title":{},"body":{"changelog.html":{}}}],["propag",{"_index":376,"title":{},"body":{"changelog.html":{}}}],["properti",{"_index":533,"title":{},"body":{"injectables/GridMessageService.html":{},"classes/Cell.html":{},"classes/FormatterParser.html":{},"classes/RowChange.html":{},"classes/SortInfo.html":{},"interfaces/Dictionary.html":{},"interfaces/EventListenerArg.html":{}}}],["proprietari",{"_index":491,"title":{},"body":{"modules/GridModule.html":{}}}],["provid",{"_index":106,"title":{},"body":{"index.html":{},"overview.html":{},"license.html":{},"modules/GridModule.html":{}}}],["public",{"_index":388,"title":{},"body":{"changelog.html":{},"classes/SortInfo.html":{}}}],["publish",{"_index":46,"title":{},"body":{"index.html":{},"license.html":{}}}],["publish.bas",{"_index":63,"title":{},"body":{"index.html":{}}}],["pull",{"_index":624,"title":{},"body":{"classes/HtmlUtil.html":{}}}],["pure",{"_index":289,"title":{},"body":{"index.html":{},"pipes/IsFixedPipe.html":{}}}],["purpos",{"_index":470,"title":{},"body":{"license.html":{}}}],["rang",{"_index":72,"title":{},"body":{"index.html":{}}}],["re",{"_index":284,"title":{},"body":{"index.html":{}}}],["readm",{"_index":410,"title":{},"body":{"changelog.html":{}}}],["readme.2.1.0",{"_index":396,"title":{},"body":{"changelog.html":{}}}],["readme.md",{"_index":430,"title":{},"body":{"changelog.html":{}}}],["refactor",{"_index":413,"title":{},"body":{"changelog.html":{}}}],["referenc",{"_index":422,"title":{},"body":{"changelog.html":{}}}],["refresh",{"_index":282,"title":{},"body":{"index.html":{}}}],["releas",{"_index":429,"title":{},"body":{"changelog.html":{}}}],["remov",{"_index":397,"title":{},"body":{"changelog.html":{}}}],["render",{"_index":280,"title":{},"body":{"index.html":{},"changelog.html":{},"classes/Cell.html":{}}}],["renderer.compon",{"_index":510,"title":{},"body":{"modules/GridModule.html":{}}}],["renderer2",{"_index":297,"title":{},"body":{"index.html":{}}}],["report",{"_index":159,"title":{},"body":{"index.html":{}}}],["request",{"_index":336,"title":{},"body":{"index.html":{},"changelog.html":{}}}],["requir",{"_index":56,"title":{},"body":{"index.html":{}}}],["reset",{"_index":360,"title":{},"body":{"overview.html":{},"modules/GridModule.html":{}}}],["resiz",{"_index":731,"title":{},"body":{"miscellaneous/variables.html":{}}}],["restrict",{"_index":449,"title":{},"body":{"license.html":{}}}],["result",{"_index":9,"title":{},"body":{"dependencies.html":{},"index.html":{},"overview.html":{},"changelog.html":{},"license.html":{},"modules.html":{},"modules/GridModule.html":{},"injectables/GridMessageService.html":{},"pipes/IsFixedPipe.html":{},"pipes/IsGroupPipe.html":{},"pipes/IsRowVisiblePipe.html":{},"pipes/IsVisiblePipe.html":{},"classes/Cell.html":{},"classes/EmptyFactory.html":{},"classes/FormatterParser.html":{},"classes/HtmlUtil.html":{},"classes/InjectableFactory.html":{},"classes/RowChange.html":{},"classes/SortInfo.html":{},"interfaces/ClickListener.html":{},"interfaces/DblClickListener.html":{},"interfaces/Dictionary.html":{},"interfaces/EmptyConstructor.html":{},"interfaces/EventListenerArg.html":{},"interfaces/InjectableConstructor.html":{},"interfaces/MouseDownListener.html":{},"interfaces/MouseDragListener.html":{},"interfaces/MouseOutListener.html":{},"interfaces/MouseOverListener.html":{},"interfaces/MouseUpListener.html":{},"miscellaneous/variables.html":{}}}],["retriev",{"_index":88,"title":{},"body":{"index.html":{}}}],["return",{"_index":115,"title":{},"body":{"index.html":{},"modules/GridModule.html":{},"injectables/GridMessageService.html":{},"pipes/IsFixedPipe.html":{},"pipes/IsGroupPipe.html":{},"pipes/IsRowVisiblePipe.html":{},"pipes/IsVisiblePipe.html":{},"classes/EmptyFactory.html":{},"classes/FormatterParser.html":{},"classes/HtmlUtil.html":{},"classes/InjectableFactory.html":{},"classes/SortInfo.html":{},"interfaces/ClickListener.html":{},"interfaces/DblClickListener.html":{},"interfaces/EmptyConstructor.html":{},"interfaces/InjectableConstructor.html":{},"interfaces/MouseDownListener.html":{},"interfaces/MouseDragListener.html":{},"interfaces/MouseOutListener.html":{},"interfaces/MouseOverListener.html":{},"interfaces/MouseUpListener.html":{}}}],["returning.sortev",{"_index":269,"title":{},"body":{"index.html":{}}}],["right",{"_index":337,"title":{},"body":{"index.html":{},"license.html":{}}}],["root",{"_index":216,"title":{},"body":{"index.html":{}}}],["row",{"_index":81,"title":{},"body":{"index.html":{},"changelog.html":{},"modules/GridModule.html":{},"pipes/IsRowVisiblePipe.html":{}}}],["row/row",{"_index":577,"title":{},"body":{"pipes/IsRowVisiblePipe.html":{}}}],["rowchang",{"_index":655,"title":{"classes/RowChange.html":{}},"body":{"classes/RowChange.html":{}}}],["rownum",{"_index":233,"title":{},"body":{"index.html":{}}}],["rows[i].key",{"_index":223,"title":{},"body":{"index.html":{}}}],["rxjs/rx",{"_index":555,"title":{},"body":{"injectables/GridMessageService.html":{}}}],["same",{"_index":191,"title":{},"body":{"index.html":{}}}],["save",{"_index":415,"title":{},"body":{"changelog.html":{}}}],["scroll",{"_index":190,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["scrollbar",{"_index":405,"title":{},"body":{"changelog.html":{}}}],["see",{"_index":103,"title":{},"body":{"index.html":{},"changelog.html":{},"classes/InjectableFactory.html":{},"interfaces/InjectableConstructor.html":{}}}],["select",{"_index":71,"title":{},"body":{"index.html":{},"changelog.html":{}}}],["selectfilterrender",{"_index":330,"title":{},"body":{"index.html":{},"overview.html":{},"modules/GridModule.html":{}}}],["sell",{"_index":454,"title":{},"body":{"license.html":{}}}],["servic",{"_index":421,"title":{},"body":{"changelog.html":{}}}],["service.config",{"_index":133,"title":{},"body":{"index.html":{}}}],["services/grid",{"_index":521,"title":{},"body":{"modules/GridModule.html":{}}}],["set",{"_index":217,"title":{},"body":{"index.html":{}}}],["setasc",{"_index":670,"title":{},"body":{"classes/SortInfo.html":{}}}],["setasc(asc",{"_index":674,"title":{},"body":{"classes/SortInfo.html":{}}}],["setconfig",{"_index":612,"title":{},"body":{"classes/FormatterParser.html":{}}}],["setconfig(config",{"_index":295,"title":{},"body":{"index.html":{},"classes/FormatterParser.html":{}}}],["setfield",{"_index":671,"title":{},"body":{"classes/SortInfo.html":{}}}],["setfield(field",{"_index":676,"title":{},"body":{"classes/SortInfo.html":{}}}],["sever",{"_index":290,"title":{},"body":{"index.html":{}}}],["shall",{"_index":460,"title":{},"body":{"license.html":{}}}],["shortcut",{"_index":208,"title":{},"body":{"index.html":{}}}],["show",{"_index":153,"title":{},"body":{"index.html":{}}}],["showicon",{"_index":308,"title":{},"body":{"index.html":{}}}],["shown",{"_index":173,"title":{},"body":{"index.html":{}}}],["side",{"_index":164,"title":{},"body":{"index.html":{}}}],["simpl",{"_index":36,"title":{},"body":{"index.html":{},"classes/FormatterParser.html":{}}}],["size",{"_index":76,"title":{},"body":{"index.html":{}}}],["size.saveondirtyrowchang",{"_index":192,"title":{},"body":{"index.html":{}}}],["softwar",{"_index":444,"title":{},"body":{"license.html":{}}}],["sort",{"_index":64,"title":{},"body":{"index.html":{},"changelog.html":{}}}],["sorted.glob",{"_index":274,"title":{},"body":{"index.html":{}}}],["sortev",{"_index":271,"title":{},"body":{"index.html":{}}}],["sortinfo",{"_index":270,"title":{"classes/SortInfo.html":{}},"body":{"index.html":{},"classes/SortInfo.html":{}}}],["sorting.3.1.1",{"_index":374,"title":{},"body":{"changelog.html":{}}}],["sourc",{"_index":89,"title":{},"body":{"index.html":{},"modules/GridModule.html":{},"injectables/GridMessageService.html":{},"pipes/IsFixedPipe.html":{},"pipes/IsGroupPipe.html":{},"pipes/IsRowVisiblePipe.html":{},"pipes/IsVisiblePipe.html":{},"classes/Cell.html":{},"classes/EmptyFactory.html":{},"classes/FormatterParser.html":{},"classes/HtmlUtil.html":{},"classes/InjectableFactory.html":{},"classes/RowChange.html":{},"classes/SortInfo.html":{},"interfaces/ClickListener.html":{},"interfaces/DblClickListener.html":{},"interfaces/Dictionary.html":{},"interfaces/EmptyConstructor.html":{},"interfaces/EventListenerArg.html":{},"interfaces/InjectableConstructor.html":{},"interfaces/MouseDownListener.html":{},"interfaces/MouseDragListener.html":{},"interfaces/MouseOutListener.html":{},"interfaces/MouseOverListener.html":{},"interfaces/MouseUpListener.html":{}}}],["specif",{"_index":94,"title":{},"body":{"index.html":{}}}],["specifi",{"_index":180,"title":{},"body":{"index.html":{}}}],["speed",{"_index":285,"title":{},"body":{"index.html":{}}}],["spinner",{"_index":401,"title":{},"body":{"changelog.html":{}}}],["spinner.eventlisten",{"_index":203,"title":{},"body":{"index.html":{}}}],["spreadsheet",{"_index":158,"title":{},"body":{"index.html":{}}}],["src/grid/cell/cell.t",{"_index":580,"title":{},"body":{"classes/Cell.html":{}}}],["src/grid/cell/cell.ts:5",{"_index":590,"title":{},"body":{"classes/Cell.html":{}}}],["src/grid/cell/cell.ts:6",{"_index":589,"title":{},"body":{"classes/Cell.html":{}}}],["src/grid/cell/cell.ts:7",{"_index":587,"title":{},"body":{"classes/Cell.html":{}}}],["src/grid/column/formatters/formatt",{"_index":605,"title":{},"body":{"classes/FormatterParser.html":{}}}],["src/grid/event/click.interface.t",{"_index":683,"title":{},"body":{"interfaces/ClickListener.html":{}}}],["src/grid/event/click.interface.ts:3",{"_index":686,"title":{},"body":{"interfaces/ClickListener.html":{}}}],["src/grid/event/dbl",{"_index":688,"title":{},"body":{"interfaces/DblClickListener.html":{}}}],["src/grid/event/ev",{"_index":697,"title":{},"body":{"interfaces/EventListenerArg.html":{}}}],["src/grid/event/mous",{"_index":702,"title":{},"body":{"interfaces/MouseDownListener.html":{},"interfaces/MouseDragListener.html":{},"interfaces/MouseOutListener.html":{},"interfaces/MouseOverListener.html":{},"interfaces/MouseUpListener.html":{}}}],["src/grid/grid.component.t",{"_index":735,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/grid/grid.module.t",{"_index":487,"title":{},"body":{"modules/GridModule.html":{}}}],["src/grid/model/dictionary.interface.t",{"_index":694,"title":{},"body":{"interfaces/Dictionary.html":{}}}],["src/grid/model/dictionary.interface.ts:2",{"_index":696,"title":{},"body":{"interfaces/Dictionary.html":{}}}],["src/grid/model/dictionary.interface.ts:3",{"_index":695,"title":{},"body":{"interfaces/Dictionary.html":{}}}],["src/grid/services/grid",{"_index":531,"title":{},"body":{"injectables/GridMessageService.html":{},"miscellaneous/variables.html":{}}}],["src/grid/utils/empty.factory.t",{"_index":593,"title":{},"body":{"classes/EmptyFactory.html":{},"interfaces/EmptyConstructor.html":{}}}],["src/grid/utils/empty.factory.ts:4",{"_index":599,"title":{},"body":{"classes/EmptyFactory.html":{}}}],["src/grid/utils/empty.factory.ts:7",{"_index":600,"title":{},"body":{"classes/EmptyFactory.html":{}}}],["src/grid/utils/html",{"_index":621,"title":{},"body":{"classes/HtmlUtil.html":{}}}],["src/grid/utils/i",{"_index":559,"title":{},"body":{"pipes/IsFixedPipe.html":{},"pipes/IsGroupPipe.html":{},"pipes/IsRowVisiblePipe.html":{},"pipes/IsVisiblePipe.html":{}}}],["src/grid/utils/injectable.factory.t",{"_index":645,"title":{},"body":{"classes/InjectableFactory.html":{},"interfaces/InjectableConstructor.html":{}}}],["src/grid/utils/injectable.factory.ts:10",{"_index":652,"title":{},"body":{"classes/InjectableFactory.html":{}}}],["src/grid/utils/injectable.factory.ts:7",{"_index":650,"title":{},"body":{"classes/InjectableFactory.html":{}}}],["src/grid/utils/row",{"_index":656,"title":{},"body":{"classes/RowChange.html":{}}}],["src/grid/utils/sort",{"_index":665,"title":{},"body":{"classes/SortInfo.html":{}}}],["start",{"_index":12,"title":{"index.html":{},"changelog.html":{},"license.html":{}},"body":{}}],["state",{"_index":170,"title":{},"body":{"index.html":{}}}],["static",{"_index":526,"title":{},"body":{"modules/GridModule.html":{},"classes/HtmlUtil.html":{}}}],["statu",{"_index":267,"title":{},"body":{"index.html":{}}}],["stop",{"_index":375,"title":{},"body":{"changelog.html":{}}}],["storag",{"_index":393,"title":{},"body":{"changelog.html":{}}}],["string",{"_index":70,"title":{},"body":{"index.html":{},"injectables/GridMessageService.html":{},"classes/HtmlUtil.html":{},"classes/SortInfo.html":{},"interfaces/Dictionary.html":{}}}],["style",{"_index":220,"title":{},"body":{"index.html":{}}}],["subject",{"_index":457,"title":{},"body":{"license.html":{},"injectables/GridMessageService.html":{}}}],["sublicens",{"_index":452,"title":{},"body":{"license.html":{}}}],["substanti",{"_index":461,"title":{},"body":{"license.html":{}}}],["such",{"_index":625,"title":{},"body":{"classes/HtmlUtil.html":{}}}],["support",{"_index":34,"title":{},"body":{"index.html":{},"changelog.html":{},"modules.html":{}}}],["svg",{"_index":484,"title":{},"body":{"modules.html":{}}}],["syntax",{"_index":105,"title":{},"body":{"index.html":{},"changelog.html":{}}}],["t",{"_index":601,"title":{},"body":{"classes/EmptyFactory.html":{},"classes/InjectableFactory.html":{},"interfaces/EmptyConstructor.html":{},"interfaces/InjectableConstructor.html":{}}}],["tab",{"_index":732,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tabl",{"_index":32,"title":{},"body":{"index.html":{}}}],["take",{"_index":260,"title":{},"body":{"index.html":{}}}],["taken",{"_index":96,"title":{},"body":{"index.html":{}}}],["templat",{"_index":200,"title":{},"body":{"index.html":{}}}],["templateref",{"_index":199,"title":{},"body":{"index.html":{}}}],["texteditrender",{"_index":352,"title":{},"body":{"overview.html":{},"modules/GridModule.html":{}}}],["textfilterrender",{"_index":316,"title":{},"body":{"index.html":{},"overview.html":{},"modules/GridModule.html":{}}}],["them.pages",{"_index":181,"title":{},"body":{"index.html":{}}}],["theme",{"_index":160,"title":{},"body":{"index.html":{}}}],["thing",{"_index":286,"title":{},"body":{"index.html":{},"classes/HtmlUtil.html":{}}}],["this._message.asobserv",{"_index":551,"title":{},"body":{"injectables/GridMessageService.html":{}}}],["this._message.next(\"error",{"_index":556,"title":{},"body":{"injectables/GridMessageService.html":{}}}],["this._message.next(\"warn",{"_index":557,"title":{},"body":{"injectables/GridMessageService.html":{}}}],["this._messageobserv",{"_index":558,"title":{},"body":{"injectables/GridMessageService.html":{}}}],["this.asc",{"_index":680,"title":{},"body":{"classes/SortInfo.html":{}}}],["this.config",{"_index":619,"title":{},"body":{"classes/FormatterParser.html":{}}}],["this.datarequest",{"_index":114,"title":{},"body":{"index.html":{}}}],["this.emptyconstructor",{"_index":603,"title":{},"body":{"classes/EmptyFactory.html":{},"interfaces/EmptyConstructor.html":{}}}],["this.field",{"_index":681,"title":{},"body":{"classes/SortInfo.html":{}}}],["this.ic(this.injector",{"_index":653,"title":{},"body":{"classes/InjectableFactory.html":{},"interfaces/InjectableConstructor.html":{}}}],["this.newrownum",{"_index":664,"title":{},"body":{"classes/RowChange.html":{}}}],["this.oldrownum",{"_index":663,"title":{},"body":{"classes/RowChange.html":{}}}],["those",{"_index":171,"title":{},"body":{"index.html":{}}}],["through",{"_index":39,"title":{},"body":{"index.html":{}}}],["titl",{"_index":154,"title":{},"body":{"index.html":{}}}],["to.configur",{"_index":141,"title":{},"body":{"index.html":{}}}],["toast",{"_index":247,"title":{},"body":{"index.html":{}}}],["todo",{"_index":335,"title":{},"body":{"index.html":{}}}],["togeth",{"_index":166,"title":{},"body":{"index.html":{}}}],["tort",{"_index":480,"title":{},"body":{"license.html":{}}}],["transform",{"_index":563,"title":{},"body":{"pipes/IsFixedPipe.html":{},"pipes/IsGroupPipe.html":{},"pipes/IsRowVisiblePipe.html":{},"pipes/IsVisiblePipe.html":{}}}],["transform(list",{"_index":564,"title":{},"body":{"pipes/IsFixedPipe.html":{},"pipes/IsGroupPipe.html":{},"pipes/IsRowVisiblePipe.html":{},"pipes/IsVisiblePipe.html":{}}}],["true",{"_index":169,"title":{},"body":{"index.html":{},"modules/GridModule.html":{},"classes/SortInfo.html":{}}}],["two",{"_index":124,"title":{},"body":{"index.html":{}}}],["type",{"_index":120,"title":{},"body":{"index.html":{},"injectables/GridMessageService.html":{},"pipes/IsFixedPipe.html":{},"classes/Cell.html":{},"classes/EmptyFactory.html":{},"classes/FormatterParser.html":{},"classes/HtmlUtil.html":{},"classes/InjectableFactory.html":{},"classes/RowChange.html":{},"classes/SortInfo.html":{},"interfaces/ClickListener.html":{},"interfaces/DblClickListener.html":{},"interfaces/Dictionary.html":{},"interfaces/EventListenerArg.html":{},"interfaces/InjectableConstructor.html":{},"interfaces/MouseDownListener.html":{},"interfaces/MouseDragListener.html":{},"interfaces/MouseOutListener.html":{},"interfaces/MouseOverListener.html":{},"interfaces/MouseUpListener.html":{},"miscellaneous/variables.html":{}}}],["undefin",{"_index":122,"title":{},"body":{"index.html":{},"changelog.html":{},"pipes/IsFixedPipe.html":{},"pipes/IsGroupPipe.html":{},"pipes/IsRowVisiblePipe.html":{},"pipes/IsVisiblePipe.html":{}}}],["univers",{"_index":435,"title":{},"body":{"license.html":{},"modules/GridModule.html":{}}}],["up",{"_index":287,"title":{},"body":{"index.html":{}}}],["up.interface.t",{"_index":723,"title":{},"body":{"interfaces/MouseUpListener.html":{}}}],["up.interface.ts:3",{"_index":726,"title":{},"body":{"interfaces/MouseUpListener.html":{}}}],["upon",{"_index":259,"title":{},"body":{"index.html":{}}}],["us",{"_index":57,"title":{},"body":{"index.html":{},"license.html":{}}}],["usag",{"_index":97,"title":{},"body":{"index.html":{}}}],["user",{"_index":145,"title":{},"body":{"index.html":{},"changelog.html":{}}}],["usevalu",{"_index":529,"title":{},"body":{"modules/GridModule.html":{}}}],["usual",{"_index":61,"title":{},"body":{"index.html":{}}}],["utah",{"_index":436,"title":{},"body":{"license.html":{},"modules/GridModule.html":{}}}],["util.t",{"_index":622,"title":{},"body":{"classes/HtmlUtil.html":{}}}],["util.ts:23",{"_index":636,"title":{},"body":{"classes/HtmlUtil.html":{}}}],["util.ts:38",{"_index":638,"title":{},"body":{"classes/HtmlUtil.html":{}}}],["util.ts:8",{"_index":632,"title":{},"body":{"classes/HtmlUtil.html":{}}}],["utils/i",{"_index":504,"title":{},"body":{"modules/GridModule.html":{}}}],["valid",{"_index":417,"title":{},"body":{"changelog.html":{}}}],["valu",{"_index":231,"title":{},"body":{"index.html":{},"injectables/GridMessageService.html":{},"classes/Cell.html":{},"classes/FormatterParser.html":{},"classes/SortInfo.html":{},"interfaces/Dictionary.html":{},"miscellaneous/variables.html":{}}}],["values.busytempl",{"_index":198,"title":{},"body":{"index.html":{}}}],["variabl",{"_index":728,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["variou",{"_index":75,"title":{},"body":{"index.html":{}}}],["vertic",{"_index":283,"title":{},"body":{"index.html":{}}}],["view",{"_index":309,"title":{},"body":{"index.html":{},"changelog.html":{}}}],["viewconfig",{"_index":303,"title":{},"body":{"index.html":{}}}],["viewrender",{"_index":301,"title":{},"body":{"index.html":{}}}],["visibl",{"_index":151,"title":{},"body":{"index.html":{}}}],["visible.pip",{"_index":505,"title":{},"body":{"modules/GridModule.html":{}}}],["visible.pipe.t",{"_index":574,"title":{},"body":{"pipes/IsRowVisiblePipe.html":{},"pipes/IsVisiblePipe.html":{}}}],["visible.pipe.ts:9",{"_index":576,"title":{},"body":{"pipes/IsRowVisiblePipe.html":{},"pipes/IsVisiblePipe.html":{}}}],["void",{"_index":545,"title":{},"body":{"injectables/GridMessageService.html":{},"classes/FormatterParser.html":{},"classes/SortInfo.html":{}}}],["wait",{"_index":387,"title":{},"body":{"changelog.html":{}}}],["want",{"_index":212,"title":{},"body":{"index.html":{}}}],["warn",{"_index":213,"title":{},"body":{"index.html":{},"injectables/GridMessageService.html":{}}}],["warn(messag",{"_index":546,"title":{},"body":{"injectables/GridMessageService.html":{}}}],["warranti",{"_index":463,"title":{},"body":{"license.html":{}}}],["way",{"_index":125,"title":{},"body":{"index.html":{}}}],["whether",{"_index":478,"title":{},"body":{"license.html":{}}}],["width",{"_index":406,"title":{},"body":{"changelog.html":{}}}],["wish",{"_index":246,"title":{},"body":{"index.html":{}}}],["withcomponents(compon",{"_index":530,"title":{},"body":{"modules/GridModule.html":{}}}],["without",{"_index":448,"title":{},"body":{"license.html":{},"classes/FormatterParser.html":{}}}],["work",{"_index":93,"title":{},"body":{"index.html":{}}}],["ye",{"_index":634,"title":{},"body":{"classes/HtmlUtil.html":{}}}],["you.logwarn",{"_index":211,"title":{},"body":{"index.html":{}}}],["zoom",{"_index":359,"title":{},"body":{"overview.html":{},"modules/GridModule.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n    Dependencies\n\n\n    \n        @ng-bootstrap/ng-bootstrap : 1.1.x\n    \n        moment : >=2.19.3\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nHuntsman Cancer Institute's Angular Grid Library\nhci-ng-grid Demo on Github\nIntro\nThis grid is designed to be a full featured grid that can handle nearly anything that complex data tables may\nbe expected to support.  By default, the grid is simple and basic, but becomes full featured through\nconfiguration.Install\n\"dependencies\": {\n    \"hci-ng-grid\": \"3.1.x\"\n}import {GridModule} from \"hci-ng-grid\";@NgModule({\n    imports: [\n        GridModule.forRoot()\n    ]\n})Publishing\nCompiled code gets moved to the dist folder with a copy of the package.json.  Custom commands are required for\npackaging and publishing.  Use npmPack and npmPublish instead of the usual pack and publish.Basic Features\n\nSorting: Change sorting by clicking on column header.\nFiltering: String, select, range filtering with the possibility for custom filters.\nPaging: Paging with various page sizes, first, last, previous and next.\nRow Grouping: Rows can be grouped by one or more columns.\nExternal Data Call: Callback to retrieve data from external source.\nCustom Events: Listeners can be added to work for specific events and custom actions can be taken.\n\nUsage\nNote, there are so many features to this grid that not all are currently listed here.  See the demo for full examples.\nThe basic syntax for data provided by the implementing component.\n\nThe basic syntax for an external data call.\n\nAnd a function using mocked external data call.\ndataRequest: (externalInfo: ExternalInfo) => {};\n\nngOnInit() {\n  this.dataRequest = (externalInfo: ExternalInfo) => {\n    return Observable.of(new ExternalData(this.dataGeneratorService.getData(250), externalInfo)).delay(500);\n  };\n}Inputs\ndata\ntype: Object[]\ndefault: undefined\nProvide the grid with an array of rows as objects.  Two way binding to this data.dataCall\ntype: Function\ndefault: undefined\nA function that is called to retrieve data.  The function is passed filtering, sorting and paging info.id\ntype: string\ndefault: undefined\nThe html id for the grid and the id that can be used to get the grid from the global grid service.config\ntype: any\ndefault: {}\nA json object that contains configuration options for the grid.linkedGroups\ntype: string[]\ndefault: undefined\nThe group names that this grid should be linked to.configurable\ntype: boolean\ndefault: false\nFlag if the user should be allowed to modify the grid's configuration (e.g. what colums are visible and how big).title\ntype: string\ndefault: undefined\nShows this title in a title bar above the grid.theme\ntype: string\ndefault: \"spreadsheet\"\noptions: \"spreadsheet\", \"report\", or your own\nThe name of the theme to use.  columns\ntype: Column[]\ndefault: undefined\nAn array of column configuration objects.fixedColumns\ntype: string[]\ndefault: undefined\nA list of column names that should be fixed to the left side of the grid.groupBy\ntype: string[]\ndefault: undefined\nA list of column names that should be used to group rows together.* Currently disabled *\ngroupByCollapsed\ntype: boolean\ndefault: true\nThe state for grouped rows if those rows in a group should be hidden or shown by default.externalFiltering\ntype: boolean\ndefault: false\nTrue if filtering should be handled by the external data call.externalSorting\ntype: boolean\ndefault: false\nTrue if sorting should be handled by the external data call.externalPaging\ntype: boolean\ndefault: false\nTrue if paging should be handled by the external data call.pageSize\ntype: number\ndefault: undefined\nThe number of rows per page.  If not specified it will show all of them.pageSizes\ntype: number[]\ndefault: [10, 25, 50]\nAn array of possible page sizes that the user can choose from.nVisibleRows\ntype: number\ndefault: -1\nThe number of visible rows.  A page might have 100 rows, but you can limit the size of the grid to 10 rows which would be scrolling for the user.  The default is -1 which is the same as the page size.saveOnDirtyRowChange\ntype: boolean\ndefault: false\nIf true, will emit a (onRowSave) event if you navigate to a new row and the previous row has dirty values.busyTemplate\ntype: TemplateRef\ndefault: undefined\nA custom template shown when data is loaded.  If you don't like the default spinner.eventListeners\ntype: EventListenerArg[]\ndefault: []\nAn array of listeners that can perform actions on any sort of click or key events.mode\ntype: string\ndefault: undefined\nA shortcut for creating listeners.  Rather than passing in your own listeners, specify a mode and the required listeners will be created for you.logWarnings\ntype: boolean\ndefault: true\nTrue if you want warnings to show in the console.display\ntype: string\ndefault: flow-root\nSets the display on the root component.  Although you could also do this with style on the grid.Outputs\nonCellSave\ntype: any\n$event: { key: rows[i].key,\n          i: i,\n          j: j,\n          field: columns[j].field,\n          oldValue: oldValue,\n          newValue: newValue }\nThe row key, location, field, old and new value of the cell.onRowSave\ntype: any\n$event: { key: rows[i].key,\n          rowNum: i,\n          row: originalRowData }\nEmits the key, row number and the data for the row in the format originally passed in.onConfigChange\ntype: any\n$event: config\nEmits the current configuration for the grid.cellClick\ntype: any\n$event: any\nDetermined by the event listener which can emit any type of data.cellDblClick\ntype: any\n$event: any\nDetermined by the event listener which can emit any type of data.rowClick\ntype: any\n$event: any\nDetermined by the event listener which can emit any type of data.rowDblClick\ntype: any\n$event: any\nDetermined by the event listener which can emit any type of data.warning\ntype: string\n$event: warning message as a string\nListen to this to handle warnings from the grid as you wish (e.g. as a toast popup).selectedRows\ntype: any[]\n$event: [key1, key2, ...]\nThis is an array of any instead of number because the row key could be anything.filterEvent\ntype: FilterInfo[]\n$event: FilterInfo[]\nThis is the array of filters used when a column's filters are applied.  In the case of a select where there are multiple\nFilterInfos, this includes the full list and not the one that changed.  This event is fired upon click.  It will take\nsome delay for data to come back at which point the filterEvent would be fired.dataFiltered\ntype: any\n$event: {type, status, nData}\nThis is emitted when a filter event returns data.  It will provide the number of rows returning.sortEvent\ntype: SortInfo\n$event: SortInfo\nThis is the sortInfo emitted when a column header is clicked.  It will take\nsome delay for data to come back at which point the sortEvent would be fired.dataSorted\ntype: any\n$event: {type, status, field}\nThis is emitted when a sort event returns data.  It will provide the field being sorted.Global Config\nThe root module can take configuration json that can be used to set defaults for every grid.\nFor example, if you want every grid in your application to use the same theme and you don't want\nto specify that theme in every instance of the grid, you can do the following:\nGridModule.forRoot({\n  theme: \"report\"\n})Advanced Features\nRendering Cells\nEvery refresh of data and every vertical scroll will re-render the visible rows and cells.  To speed things\nup, each cell is limited to rendering pure HTML.  However, there are several options of how to render and\nthe option of custom rendering.\nEvery cell is rendering with a class that implements the CellViewRenderer interface.  The two methods\nrequired to implement are\nsetConfig(config: any);\n\ncreateElement(renderer: Renderer2, column: Column, value: any, i: number, j: number): HTMLElement;As an example, the following is an example of a number range renderer.\n{\n    field: \"nLabs\",\n    name: \"# Labs\",\n    viewRenderer: CellNumberRangeView,\n    viewConfig: { low: 15, high: 85, showIcon: true }\n}The class is passed in as the viewRenderer and any config is passed in through the viewConfig.\nFiltering\nLike view rendering, built in and custom components can be used to render the filter.  The difference\nis rather than pure HTML, a filter is a component that extends a base class FilterRenderer.  The\nfollowing are examples of built in filters.\n{\n    field: \"firstName\",\n    name: \"First Name\",\n    filterRenderer: TextFilterRenderer\n},\n{\n    field: \"dob\",\n    name: \"Date of Birth\",\n    dataType: \"date\",\n    format: \"MM/DD/YYYY\",\n    editRenderer: DateEditRenderer,\n    filterRenderer: CompareFilterRenderer\n},\n{\n    field: \"gender\",\n    name: \"Gender\",\n    editRenderer: ChoiceEditRenderer,\n    choices: [ {value: \"Female\", display: \"Female\"}, {value: \"Male\", display: \"Male\"} ],\n    filterRenderer: SelectFilterRenderer\n}Known Issues\n\nRow Groups works upon load, but breaks when filtering is introduced.\n\nTODOs\n\nThere are only left fixed colums, but some have requested right fixed columns.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n            \n                \n                    \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_GridModule\n\n\n\ncluster_GridModule_declarations\n\n\n\ncluster_GridModule_GridComponent_providers\n\n\n\ncluster_GridModule_exports\n\n\n\n\nGridComponent\n\nGridComponent\n\n\n\nGridModule\n\nGridModule\n\nGridModule -->\n\nGridComponent->GridModule\n\n\n\n\n\nColumnHeaderComponent\n\nColumnHeaderComponent\n\nGridModule -->\n\nColumnHeaderComponent->GridModule\n\n\n\n\n\nIsVisiblePipe\n\nIsVisiblePipe\n\nGridModule -->\n\nIsVisiblePipe->GridModule\n\n\n\n\n\nIsGroupPipe\n\nIsGroupPipe\n\nGridModule -->\n\nIsGroupPipe->GridModule\n\n\n\n\n\nIsFixedPipe\n\nIsFixedPipe\n\nGridModule -->\n\nIsFixedPipe->GridModule\n\n\n\n\n\nIsRowVisiblePipe\n\nIsRowVisiblePipe\n\nGridModule -->\n\nIsRowVisiblePipe->GridModule\n\n\n\n\n\nTextEditRenderer\n\nTextEditRenderer\n\nGridModule -->\n\nTextEditRenderer->GridModule\n\n\n\n\n\nDateEditRenderer\n\nDateEditRenderer\n\nGridModule -->\n\nDateEditRenderer->GridModule\n\n\n\n\n\nChoiceEditRenderer\n\nChoiceEditRenderer\n\nGridModule -->\n\nChoiceEditRenderer->GridModule\n\n\n\n\n\nTextFilterRenderer\n\nTextFilterRenderer\n\nGridModule -->\n\nTextFilterRenderer->GridModule\n\n\n\n\n\nSelectFilterRenderer\n\nSelectFilterRenderer\n\nGridModule -->\n\nSelectFilterRenderer->GridModule\n\n\n\n\n\nCompareFilterRenderer\n\nCompareFilterRenderer\n\nGridModule -->\n\nCompareFilterRenderer->GridModule\n\n\n\n\n\nBigTextPopup\n\nBigTextPopup\n\nGridModule -->\n\nBigTextPopup->GridModule\n\n\n\n\n\nConfigMenuComponent\n\nConfigMenuComponent\n\nGridModule -->\n\nConfigMenuComponent->GridModule\n\n\n\n\n\nConfigMultiChoiceComponent\n\nConfigMultiChoiceComponent\n\nGridModule -->\n\nConfigMultiChoiceComponent->GridModule\n\n\n\n\n\nGridComponent \n\nGridComponent \n\nGridComponent  -->\n\nGridModule->GridComponent \n\n\n\n\n\nGridService\n\nGridService\n\nGridComponent -->\n\nGridService->GridComponent\n\n\n\n\n\nGridEventService\n\nGridEventService\n\nGridComponent -->\n\nGridEventService->GridComponent\n\n\n\n\n\nGridMessageService\n\nGridMessageService\n\nGridComponent -->\n\nGridMessageService->GridComponent\n\n\n\n\n\n\n                \n                \n                \n                    Zoom in\n                    Reset\n                    Zoom out\n                \n            \n\n    \n            \n                \n                    \n                        \n                        \n                            1 module\n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                        11 components\n                    \n                \n            \n            \n                \n                    \n                        \n                        4 injectables\n                    \n                \n            \n            \n                \n                    \n                        \n                        4 pipes\n                    \n                \n            \n            \n                \n                    \n                        \n                        34 classes\n                    \n                \n            \n            \n                \n                    \n                        \n                        12 interfaces\n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"changelog.html":{"url":"changelog.html","title":"getting-started - changelog","body":"\n                   \n\nChange Log\n3.1.3\n- Fix date filtering and date-ms compare.3.1.2\n- Fix dealing with undefined in default sorting.3.1.1\n- Stop propagation on filter button.3.1.0\n- Filter to customizable function.\n- Sort to customizable function.\n- Emitters for filter and sort events.\n- Column drag n drop.\n- Fix: Empty choice array on http error.3.0.0\n- Generalize column wait configuration.  Changes public api.\n- Fixes to popup behavior.\n- Column allows externalConfig storage.\n- Default format/parser more generic.2.1.1\n- Fix syntax in README.2.1.0\n- Removed allowing auto column generation when no columns configured.\n- Added wait listeners to pause configuration while waiting on any requests.\n- Add spinner for loading and prevent data display if no columns.\n- Bump height if view has scrollbar.\n- Fix column width calculation.2.0.2\n- Fix keywords and add .npmignore.2.0.1\n- Fix readme and license in artifact.2.0.0\n- Refactor of rendering and how data/config/events are listened to.\n- Listeners for saving cells and rows.\n- Customization of busy, and view renderers.\n- Validation support and improved formatting/parsing especially for dates.\n- User configuration added.\n- Global grid service for referencing and connecting grids.\n- Row selection improved.\n- External data calls from Promise to Observable.\n- Numerous fixes.1.0.0\n- Initial Release.  See README.md for features.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nCopyright (c) 2018 Huntsman Cancer Institute at the University of Utah\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        GridModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/GridModule.html":{"url":"modules/GridModule.html","title":"module - GridModule","body":"\n                   \n\n\n\n\n  Modules\n  GridModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_GridModule\n\n\n\ncluster_GridModule_declarations\n\n\n\ncluster_GridModule_GridComponent_providers\n\n\n\ncluster_GridModule_exports\n\n\n\n\nGridComponent\n\nGridComponent\n\n\n\nGridModule\n\nGridModule\n\nGridModule -->\n\nGridComponent->GridModule\n\n\n\n\n\nColumnHeaderComponent\n\nColumnHeaderComponent\n\nGridModule -->\n\nColumnHeaderComponent->GridModule\n\n\n\n\n\nIsVisiblePipe\n\nIsVisiblePipe\n\nGridModule -->\n\nIsVisiblePipe->GridModule\n\n\n\n\n\nIsGroupPipe\n\nIsGroupPipe\n\nGridModule -->\n\nIsGroupPipe->GridModule\n\n\n\n\n\nIsFixedPipe\n\nIsFixedPipe\n\nGridModule -->\n\nIsFixedPipe->GridModule\n\n\n\n\n\nIsRowVisiblePipe\n\nIsRowVisiblePipe\n\nGridModule -->\n\nIsRowVisiblePipe->GridModule\n\n\n\n\n\nTextEditRenderer\n\nTextEditRenderer\n\nGridModule -->\n\nTextEditRenderer->GridModule\n\n\n\n\n\nDateEditRenderer\n\nDateEditRenderer\n\nGridModule -->\n\nDateEditRenderer->GridModule\n\n\n\n\n\nChoiceEditRenderer\n\nChoiceEditRenderer\n\nGridModule -->\n\nChoiceEditRenderer->GridModule\n\n\n\n\n\nTextFilterRenderer\n\nTextFilterRenderer\n\nGridModule -->\n\nTextFilterRenderer->GridModule\n\n\n\n\n\nSelectFilterRenderer\n\nSelectFilterRenderer\n\nGridModule -->\n\nSelectFilterRenderer->GridModule\n\n\n\n\n\nCompareFilterRenderer\n\nCompareFilterRenderer\n\nGridModule -->\n\nCompareFilterRenderer->GridModule\n\n\n\n\n\nBigTextPopup\n\nBigTextPopup\n\nGridModule -->\n\nBigTextPopup->GridModule\n\n\n\n\n\nConfigMenuComponent\n\nConfigMenuComponent\n\nGridModule -->\n\nConfigMenuComponent->GridModule\n\n\n\n\n\nConfigMultiChoiceComponent\n\nConfigMultiChoiceComponent\n\nGridModule -->\n\nConfigMultiChoiceComponent->GridModule\n\n\n\n\n\nGridComponent \n\nGridComponent \n\nGridComponent  -->\n\nGridModule->GridComponent \n\n\n\n\n\nGridService\n\nGridService\n\nGridComponent -->\n\nGridService->GridComponent\n\n\n\n\n\nGridEventService\n\nGridEventService\n\nGridComponent -->\n\nGridEventService->GridComponent\n\n\n\n\n\nGridMessageService\n\nGridMessageService\n\nGridComponent -->\n\nGridMessageService->GridComponent\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/grid/grid.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                GridComponent\n                            \n                            \n                                ColumnHeaderComponent\n                            \n                            \n                                IsVisiblePipe\n                            \n                            \n                                IsGroupPipe\n                            \n                            \n                                IsFixedPipe\n                            \n                            \n                                IsRowVisiblePipe\n                            \n                            \n                                TextEditRenderer\n                            \n                            \n                                DateEditRenderer\n                            \n                            \n                                ChoiceEditRenderer\n                            \n                            \n                                TextFilterRenderer\n                            \n                            \n                                SelectFilterRenderer\n                            \n                            \n                                CompareFilterRenderer\n                            \n                            \n                                BigTextPopup\n                            \n                            \n                                ConfigMenuComponent\n                            \n                            \n                                ConfigMultiChoiceComponent\n                            \n                    \n                \n                \n                    EntryComponents\n                    \n                            \n                                TextEditRenderer\n                            \n                            \n                                DateEditRenderer\n                            \n                            \n                                ChoiceEditRenderer\n                            \n                            \n                                TextFilterRenderer\n                            \n                            \n                                SelectFilterRenderer\n                            \n                            \n                                CompareFilterRenderer\n                            \n                            \n                                BigTextPopup\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    GridComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        /*\n * Copyright (c) 2016 Huntsman Cancer Institute at the University of Utah, Confidential and Proprietary\n */\nimport {ANALYZE_FOR_ENTRY_COMPONENTS, ModuleWithProviders, NgModule} from \"@angular/core\";\nimport {CommonModule} from \"@angular/common\";\nimport {FormsModule} from \"@angular/forms\";\n\nimport {NgbModule} from \"@ng-bootstrap/ng-bootstrap\";\n\nimport {GridComponent} from \"./grid.component\";\nimport {ColumnHeaderComponent} from \"./column/column-header.component\";\nimport {IsVisiblePipe} from \"./utils/is-visible.pipe\";\nimport {IsGroupPipe} from \"./utils/is-group.pipe\";\nimport {IsFixedPipe} from \"./utils/is-fixed.pipe\";\nimport {IsRowVisiblePipe} from \"./utils/is-row-visible.pipe\";\nimport {TextEditRenderer} from \"./cell/editRenderers/text-edit-renderer.component\";\nimport {TextFilterRenderer} from \"./column/filterRenderers/text-filter-renderer.component\";\nimport {CompareFilterRenderer} from \"./column/filterRenderers/compare-filter-renderer.component\";\nimport {ChoiceEditRenderer} from \"./cell/editRenderers/choice-edit-renderer.component\";\nimport {DateEditRenderer} from \"./cell/editRenderers/date-edit-renderer.component\";\nimport {SelectFilterRenderer} from \"./column/filterRenderers/select-filter-renderer.component\";\nimport {BigTextPopup} from \"./cell/viewPopupRenderer/bigtext-popup.component\";\nimport {ConfigMenuComponent} from \"./config/config-menu.component\";\nimport {GridGlobalService} from \"./services/grid-global.service\";\nimport {ConfigMultiChoiceComponent} from \"./config/config-multi-choice.component\";\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    NgbModule.forRoot()\n  ],\n  declarations: [\n    GridComponent,\n    ColumnHeaderComponent,\n    IsVisiblePipe,\n    IsGroupPipe,\n    IsFixedPipe,\n    IsRowVisiblePipe,\n    TextEditRenderer,\n    DateEditRenderer,\n    ChoiceEditRenderer,\n    TextFilterRenderer,\n    SelectFilterRenderer,\n    CompareFilterRenderer,\n    BigTextPopup,\n    ConfigMenuComponent,\n    ConfigMultiChoiceComponent\n  ],\n  entryComponents: [\n    TextEditRenderer,\n    DateEditRenderer,\n    ChoiceEditRenderer,\n    TextFilterRenderer,\n    SelectFilterRenderer,\n    CompareFilterRenderer,\n    BigTextPopup\n  ],\n  exports: [\n    GridComponent\n  ]\n})\nexport class GridModule {\n\n  static forRoot(globalConfig?: any, components?: any[]): ModuleWithProviders {\n    return {\n      providers: [\n        GridGlobalService,\n        {provide: \"globalConfig\", useValue: (globalConfig) ? globalConfig : {}},\n        {\n          provide: ANALYZE_FOR_ENTRY_COMPONENTS,\n          useValue: components,\n          multi: true\n        }\n      ],\n      ngModule: GridModule\n    };\n  }\n\n  static withComponents(components: any[]): ModuleWithProviders {\n    return {\n      ngModule: GridModule,\n      providers: [\n        {\n          provide: ANALYZE_FOR_ENTRY_COMPONENTS,\n          useValue: components,\n          multi: true\n        }\n      ]\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GridMessageService.html":{"url":"injectables/GridMessageService.html","title":"injectable - GridMessageService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  GridMessageService\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/grid/services/grid-message.service.ts\n        \n\n\n\n            \n                Index\n                \n                    \n                        \n                            \n                                Properties\n                            \n                        \n                        \n                            \n                                \n                                    \n                                            Private\n                                        _level\n                                    \n                                    \n                                            Private\n                                        _message\n                                    \n                                    \n                                            Private\n                                        _messageObservable\n                                    \n                                \n                            \n                        \n                        \n                            \n                                Methods\n                            \n                        \n                        \n                            \n                                \n                                    \n                                        error\n                                    \n                                    \n                                        warn\n                                    \n                                \n                            \n                        \n                        \n                            \n                                Accessors\n                            \n                        \n                        \n                            \n                                \n                                    \n                                        messageObservable\n                                    \n                                \n                            \n                        \n                    \n                \n            \n\n\n            \n                \n                    \n                        Methods\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        error\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            error(message: string)\n                                \n                            \n            \n            \n                                    \n                                        \n                                                Defined in src/grid/services/grid-message.service.ts:12\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                                Type\n                                                            Optional\n                                                        \n                                                    \n                                                    \n                                                            \n                                                                message\n                                                                \n                                                                    \n                                                                                string\n                                                                    \n                                                                \n                                                                \n                                                                        no\n                                                                \n                                                                \n            \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     void\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        warn\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            warn(message: string)\n                                \n                            \n            \n            \n                                    \n                                        \n                                                Defined in src/grid/services/grid-message.service.ts:16\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                                Type\n                                                            Optional\n                                                        \n                                                    \n                                                    \n                                                            \n                                                                message\n                                                                \n                                                                    \n                                                                                string\n                                                                    \n                                                                \n                                                                \n                                                                        no\n                                                                \n                                                                \n            \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     void\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n            \n\n            \n                \n                    \n                        Properties\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                            Private\n                                        _level\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                    _level:     number\n            \n                                \n                            \n                                \n                                    \n                                        Type :     number\n            \n                                    \n                                \n                                \n                                    \n                                        Default value : 2\n                                    \n                                \n                                    \n                                        \n                                                Defined in src/grid/services/grid-message.service.ts:10\n                                        \n                                    \n            \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                            Private\n                                        _message\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                    _message:     Subject\n            \n                                \n                            \n                                \n                                    \n                                        Type :     Subject\n            \n                                    \n                                \n                                \n                                    \n                                        Default value : new Subject()\n                                    \n                                \n                                    \n                                        \n                                                Defined in src/grid/services/grid-message.service.ts:8\n                                        \n                                    \n            \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                            Private\n                                        _messageObservable\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                    _messageObservable:     Observable\n            \n                                \n                            \n                                \n                                    \n                                        Type :     Observable\n            \n                                    \n                                \n                                \n                                    \n                                        Default value : this._message.asObservable()\n                                    \n                                \n                                    \n                                        \n                                                Defined in src/grid/services/grid-message.service.ts:9\n                                        \n                                    \n            \n            \n                        \n                    \n            \n\n            \n                \n                    Accessors\n                \n                    \n                        \n                            \n                                \n                                    \n                                    messageObservable\n                                \n                            \n            \n                            \n                                \n                                    getmessageObservable()\n                                \n                            \n                                        \n                                            \n                                                Defined in src/grid/services/grid-message.service.ts:20\n                                            \n                                        \n            \n                        \n                    \n            \n    \n\n\n    \n        import {Injectable} from \"@angular/core\";\n\nimport {Subject, Observable} from \"rxjs/Rx\";\n\n@Injectable()\nexport class GridMessageService {\n\n  private _message: Subject = new Subject();\n  private _messageObservable: Observable = this._message.asObservable();\n  private _level: number = 2;\n\n  error(message: string) {\n    this._message.next(\"ERROR: \" + message);\n  }\n\n  warn(message: string) {\n    this._message.next(\"WARN: \" + message);\n  }\n\n  get messageObservable(): Observable {\n    return this._messageObservable;\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/IsFixedPipe.html":{"url":"pipes/IsFixedPipe.html","title":"pipe - IsFixedPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Pipes\n  IsFixedPipe\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n\n    \n\n        \n            File\n        \n        \n            src/grid/utils/is-fixed.pipe.ts\n        \n\n\n\n        \n            Metadata\n            \n                \n                    \n                        name\n                        isFixed\n                    \n                \n            \n        \n\n            \n                \n                    \n                        Methods\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        transform\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            transform(list: Array, fixed: boolean)\n                                \n                            \n            \n            \n                                    \n                                        \n                                                Defined in src/grid/utils/is-fixed.pipe.ts:10\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                                Type\n                                                            Optional\n                                                        \n                                                    \n                                                    \n                                                            \n                                                                list\n                                                                \n                                                                    \n                                                                                Array\n                                                                    \n                                                                \n                                                                \n                                                                        no\n                                                                \n                                                                \n            \n                                                            \n                                                            \n                                                                fixed\n                                                                \n                                                                    \n                                                                                boolean\n                                                                    \n                                                                \n                                                                \n                                                                        no\n                                                                \n                                                                \n            \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     any\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n            \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from \"@angular/core\";\n\nimport { Column } from \"../column/column\";\n\n@Pipe({\n  name: \"isFixed\",\n  pure: false\n})\nexport class IsFixedPipe implements PipeTransform {\n  transform(list: Array, fixed: boolean) {\n    if (list === undefined) {\n      return list;\n    } else {\n      return list.filter((o: Column) => o.isFixed === fixed);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/IsGroupPipe.html":{"url":"pipes/IsGroupPipe.html","title":"pipe - IsGroupPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Pipes\n  IsGroupPipe\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n\n    \n\n        \n            File\n        \n        \n            src/grid/utils/is-group.pipe.ts\n        \n\n\n\n        \n            Metadata\n            \n                \n                    \n                        name\n                        isGroup\n                    \n                \n            \n        \n\n            \n                \n                    \n                        Methods\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        transform\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            transform(list: )\n                                \n                            \n            \n            \n                                    \n                                        \n                                                Defined in src/grid/utils/is-group.pipe.ts:9\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Optional\n                                                        \n                                                    \n                                                    \n                                                            \n                                                                list\n                                                                \n                                                                \n                                                                \n                                                                        no\n                                                                \n                                                                \n            \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     any\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n            \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from \"@angular/core\";\n\nimport { Column } from \"../column/column\";\n\n@Pipe({\n  name: \"isGroup\"\n})\nexport class IsGroupPipe implements PipeTransform {\n  transform(list) {\n    if (list === undefined) {\n      return list;\n    } else {\n      return list.filter((o: Column) => o.isGroup || o.isUtility);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/IsRowVisiblePipe.html":{"url":"pipes/IsRowVisiblePipe.html","title":"pipe - IsRowVisiblePipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Pipes\n  IsRowVisiblePipe\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n\n    \n\n        \n            File\n        \n        \n            src/grid/utils/is-row-visible.pipe.ts\n        \n\n\n\n        \n            Metadata\n            \n                \n                    \n                        name\n                        isRowVisible\n                    \n                \n            \n        \n\n            \n                \n                    \n                        Methods\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        transform\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            transform(list: )\n                                \n                            \n            \n            \n                                    \n                                        \n                                                Defined in src/grid/utils/is-row-visible.pipe.ts:9\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Optional\n                                                        \n                                                    \n                                                    \n                                                            \n                                                                list\n                                                                \n                                                                \n                                                                \n                                                                        no\n                                                                \n                                                                \n            \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     any\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n            \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from \"@angular/core\";\n\nimport { Row } from \"../row/row\";\n\n@Pipe({\n  name: \"isRowVisible\"\n})\nexport class IsRowVisiblePipe implements PipeTransform {\n  transform(list) {\n    if (list === undefined) {\n      return list;\n    } else {\n      return list.filter((o: Row) => o.visible);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/IsVisiblePipe.html":{"url":"pipes/IsVisiblePipe.html","title":"pipe - IsVisiblePipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Pipes\n  IsVisiblePipe\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n\n    \n\n        \n            File\n        \n        \n            src/grid/utils/is-visible.pipe.ts\n        \n\n\n\n        \n            Metadata\n            \n                \n                    \n                        name\n                        isVisible\n                    \n                \n            \n        \n\n            \n                \n                    \n                        Methods\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        transform\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            transform(list: )\n                                \n                            \n            \n            \n                                    \n                                        \n                                                Defined in src/grid/utils/is-visible.pipe.ts:9\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Optional\n                                                        \n                                                    \n                                                    \n                                                            \n                                                                list\n                                                                \n                                                                \n                                                                \n                                                                        no\n                                                                \n                                                                \n            \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     any\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n            \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from \"@angular/core\";\n\nimport { Column } from \"../column/column\";\n\n@Pipe({\n  name: \"isVisible\"\n})\nexport class IsVisiblePipe implements PipeTransform {\n  transform(list) {\n    if (list === undefined) {\n      return list;\n    } else {\n      return list.filter((o: Column) => o.visible);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Cell.html":{"url":"classes/Cell.html","title":"class - Cell","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  Cell\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/grid/cell/cell.ts\n        \n\n            \n                Description\n            \n            \n                A holder for the cell's data and other metadata needed for rendering or data management.\n\n            \n\n\n\n\n            \n                Index\n                \n                    \n                        \n                            \n                                Properties\n                            \n                        \n                        \n                            \n                                \n                                    \n                                        dirty\n                                    \n                                    \n                                        key\n                                    \n                                    \n                                        value\n                                    \n                                \n                            \n                        \n                    \n                \n            \n\n            \n                Constructor\n                    \n                        \n                            \n                                \n            constructor(o: Object)\n                                \n                            \n                                    \n                                        \n                                            Defined in src/grid/cell/cell.ts:7\n                                        \n                                    \n            \n                            \n                                \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                                Type\n                                                            Optional\n                                                        \n                                                    \n                                                    \n                                                            \n                                                                o\n                                                              \n                                                                    \n                                                                                Object\n                                                                    \n                                                              \n                                                                \n                                                                        no\n                                                                \n                                                                \n                                                            \n                                                    \n                                                \n                                        \n                                \n                            \n                        \n                    \n            \n\n\n\n            \n                \n                    \n                        Properties\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        dirty\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                    dirty:     boolean\n            \n                                \n                            \n                                \n                                    \n                                        Type :     boolean\n            \n                                    \n                                \n                                \n                                    \n                                        Default value : false\n                                    \n                                \n                                    \n                                        \n                                                Defined in src/grid/cell/cell.ts:7\n                                        \n                                    \n            \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        key\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                    key:     number\n            \n                                \n                            \n                                \n                                    \n                                        Type :     number\n            \n                                    \n                                \n                                    \n                                        \n                                                Defined in src/grid/cell/cell.ts:6\n                                        \n                                    \n            \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        value\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                    value:     any\n            \n                                \n                            \n                                \n                                    \n                                        Type :     any\n            \n                                    \n                                \n                                    \n                                        \n                                                Defined in src/grid/cell/cell.ts:5\n                                        \n                                    \n            \n            \n                        \n                    \n            \n\n    \n\n\n    \n        export class Cell {\n  value: any;\n  key: number;\n  dirty: boolean = false;\n\n  constructor(o: Object) {\n    Object.assign(this, o);\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/EmptyFactory.html":{"url":"classes/EmptyFactory.html","title":"class - EmptyFactory","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  EmptyFactory\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/grid/utils/empty.factory.ts\n        \n\n            \n                Description\n            \n            \n                Allows instantiation of any generic type if the type has no constructor arguments.\n\n            \n\n\n\n\n            \n                Index\n                \n                    \n                        \n                            \n                                Methods\n                            \n                        \n                        \n                            \n                                \n                                    \n                                        getInstance\n                                    \n                                \n                            \n                        \n                    \n                \n            \n\n            \n                Constructor\n                    \n                        \n                            \n                                \n            constructor(emptyConstructor: EmptyConstructor)\n                                \n                            \n                                    \n                                        \n                                            Defined in src/grid/utils/empty.factory.ts:4\n                                        \n                                    \n            \n                            \n                                \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                                Type\n                                                            Optional\n                                                        \n                                                    \n                                                    \n                                                            \n                                                                emptyConstructor\n                                                              \n                                                                    \n                                                                                EmptyConstructor\n                                                                    \n                                                              \n                                                                \n                                                                        no\n                                                                \n                                                                \n                                                            \n                                                    \n                                                \n                                        \n                                \n                            \n                        \n                    \n            \n\n            \n                \n                    \n                        Methods\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        getInstance\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            getInstance()\n                                \n                            \n            \n            \n                                    \n                                        \n                                                Defined in src/grid/utils/empty.factory.ts:7\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                            Returns :     T\n            \n                                        \n                                \n                            \n                        \n                    \n            \n\n\n\n    \n\n\n    \n        export class EmptyFactory {\n  constructor(private emptyConstructor: EmptyConstructor) {}\n\n  getInstance(): T {\n    return new this.emptyConstructor();\n  }\n}\n\nexport interface EmptyConstructor {\n  new(): T;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FormatterParser.html":{"url":"classes/FormatterParser.html","title":"class - FormatterParser","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  FormatterParser\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/grid/column/formatters/formatter-parser.ts\n        \n\n            \n                Description\n            \n            \n                Most simple formatter parser which just returns the value without modification.\n\n            \n\n\n\n\n            \n                Index\n                \n                    \n                        \n                            \n                                Properties\n                            \n                        \n                        \n                            \n                                \n                                    \n                                        config\n                                    \n                                \n                            \n                        \n                        \n                            \n                                Methods\n                            \n                        \n                        \n                            \n                                \n                                    \n                                        formatValue\n                                    \n                                    \n                                        parseValue\n                                    \n                                    \n                                        setConfig\n                                    \n                                \n                            \n                        \n                    \n                \n            \n\n\n            \n                \n                    \n                        Methods\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        formatValue\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            formatValue(value: any)\n                                \n                            \n            \n            \n                                    \n                                        \n                                                Defined in src/grid/column/formatters/formatter-parser.ts:12\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                                Type\n                                                            Optional\n                                                        \n                                                    \n                                                    \n                                                            \n                                                                value\n                                                                \n                                                                    \n                                                                                any\n                                                                    \n                                                                \n                                                                \n                                                                        no\n                                                                \n                                                                \n            \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     any\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        parseValue\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            parseValue(value: any)\n                                \n                            \n            \n            \n                                    \n                                        \n                                                Defined in src/grid/column/formatters/formatter-parser.ts:16\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                                Type\n                                                            Optional\n                                                        \n                                                    \n                                                    \n                                                            \n                                                                value\n                                                                \n                                                                    \n                                                                                any\n                                                                    \n                                                                \n                                                                \n                                                                        no\n                                                                \n                                                                \n            \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     any\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        setConfig\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            setConfig(config: any)\n                                \n                            \n            \n            \n                                    \n                                        \n                                                Defined in src/grid/column/formatters/formatter-parser.ts:8\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                                Type\n                                                            Optional\n                                                        \n                                                    \n                                                    \n                                                            \n                                                                config\n                                                                \n                                                                    \n                                                                                any\n                                                                    \n                                                                \n                                                                \n                                                                        no\n                                                                \n                                                                \n            \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     void\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n            \n\n\n            \n                \n                    \n                        Properties\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        config\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                    config:     any\n            \n                                \n                            \n                                \n                                    \n                                        Type :     any\n            \n                                    \n                                \n                                \n                                    \n                                        Default value : {}\n                                    \n                                \n                                    \n                                        \n                                                Defined in src/grid/column/formatters/formatter-parser.ts:6\n                                        \n                                    \n            \n            \n                        \n                    \n            \n\n    \n\n\n    \n        export class FormatterParser {\n\n  config: any = {};\n\n  setConfig(config: any) {\n    this.config = config;\n  }\n\n  formatValue(value: any): any {\n    return value;\n  }\n\n  parseValue(value: any): any {\n    return value;\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/HtmlUtil.html":{"url":"classes/HtmlUtil.html","title":"class - HtmlUtil","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  HtmlUtil\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/grid/utils/html-util.ts\n        \n\n            \n                Description\n            \n            \n                Convenience class for pulling things such as id from an element.\n\n            \n\n\n\n\n            \n                Index\n                \n                    \n                        \n                            \n                                Methods\n                            \n                        \n                        \n                            \n                                \n                                    \n                                            Static\n                                        getId\n                                    \n                                    \n                                            Static\n                                        getIdElement\n                                    \n                                    \n                                            Static\n                                        getLocation\n                                    \n                                \n                            \n                        \n                    \n                \n            \n\n\n            \n                \n                    \n                        Methods\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                            Static\n                                        getId\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                        \n                                    getId(e: HTMLElement, id?: string)\n                                \n                            \n            \n            \n                                    \n                                        \n                                                Defined in src/grid/utils/html-util.ts:8\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                                Type\n                                                            Optional\n                                                        \n                                                    \n                                                    \n                                                            \n                                                                e\n                                                                \n                                                                    \n                                                                                HTMLElement\n                                                                    \n                                                                \n                                                                \n                                                                        no\n                                                                \n                                                                \n            \n                                                            \n                                                            \n                                                                id\n                                                                \n                                                                    \n                                                                                string\n                                                                    \n                                                                \n                                                                \n                                                                        yes\n                                                                \n                                                                \n            \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     string\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                            Static\n                                        getIdElement\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                        \n                                    getIdElement(e: HTMLElement)\n                                \n                            \n            \n            \n                                    \n                                        \n                                                Defined in src/grid/utils/html-util.ts:23\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                                Type\n                                                            Optional\n                                                        \n                                                    \n                                                    \n                                                            \n                                                                e\n                                                                \n                                                                    \n                                                                                HTMLElement\n                                                                    \n                                                                \n                                                                \n                                                                        no\n                                                                \n                                                                \n            \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     HTMLElement\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                            Static\n                                        getLocation\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                        \n                                    getLocation(e: HTMLElement)\n                                \n                            \n            \n            \n                                    \n                                        \n                                                Defined in src/grid/utils/html-util.ts:38\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                                Type\n                                                            Optional\n                                                        \n                                                    \n                                                    \n                                                            \n                                                                e\n                                                                \n                                                                    \n                                                                                HTMLElement\n                                                                    \n                                                                \n                                                                \n                                                                        no\n                                                                \n                                                                \n            \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     Point\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n            \n\n\n\n    \n\n\n    \n        import {Point} from \"./point\";\n\n/**\n * Convenience class for pulling things such as id from an element.\n */\nexport class HtmlUtil {\n\n  static getId(e: HTMLElement, id?: string): string {\n    if (!e) {\n      return \"\";\n    }\n    while ((!id && e.id === \"\") || (id && !e.id.startsWith(id))) {\n      if (e.parentElement) {\n        e = e.parentElement;\n      } else {\n        break;\n      }\n    }\n\n    return e.id;\n  }\n\n  static getIdElement(e: HTMLElement): HTMLElement {\n    if (!e) {\n      return null;\n    }\n    while (e.id === \"\") {\n      if (e.parentElement) {\n        e = e.parentElement;\n      } else {\n        break;\n      }\n    }\n\n    return e;\n  }\n\n  static getLocation(e: HTMLElement): Point {\n    return Point.getPoint(this.getId(e));\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/InjectableFactory.html":{"url":"classes/InjectableFactory.html","title":"class - InjectableFactory","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  InjectableFactory\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/grid/utils/injectable.factory.ts\n        \n\n            \n                Description\n            \n            \n                Allows instantiation of any generic type if the type expects an injector argument.  See the implementation of\nthe EventListener.\n\n            \n\n\n\n\n            \n                Index\n                \n                    \n                        \n                            \n                                Methods\n                            \n                        \n                        \n                            \n                                \n                                    \n                                        getInstance\n                                    \n                                \n                            \n                        \n                    \n                \n            \n\n            \n                Constructor\n                    \n                        \n                            \n                                \n            constructor(ic: InjectableConstructor, injector: Injector)\n                                \n                            \n                                    \n                                        \n                                            Defined in src/grid/utils/injectable.factory.ts:7\n                                        \n                                    \n            \n                            \n                                \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                                Type\n                                                            Optional\n                                                        \n                                                    \n                                                    \n                                                            \n                                                                ic\n                                                              \n                                                                    \n                                                                                InjectableConstructor\n                                                                    \n                                                              \n                                                                \n                                                                        no\n                                                                \n                                                                \n                                                            \n                                                            \n                                                                injector\n                                                              \n                                                                    \n                                                                                Injector\n                                                                    \n                                                              \n                                                                \n                                                                        no\n                                                                \n                                                                \n                                                            \n                                                    \n                                                \n                                        \n                                \n                            \n                        \n                    \n            \n\n            \n                \n                    \n                        Methods\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        getInstance\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            getInstance()\n                                \n                            \n            \n            \n                                    \n                                        \n                                                Defined in src/grid/utils/injectable.factory.ts:10\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                            Returns :     T\n            \n                                        \n                                \n                            \n                        \n                    \n            \n\n\n\n    \n\n\n    \n        import {Injector} from \"@angular/core\";\n\n/**\n * Allows instantiation of any generic type if the type expects an injector argument.  See the implementation of\n * the EventListener.\n */\nexport class InjectableFactory {\n  constructor(private ic: InjectableConstructor, private injector: Injector) {}\n\n  getInstance(): T {\n    return new this.ic(this.injector);\n  }\n}\n\nexport interface InjectableConstructor {\n  new(injector: Injector): T;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RowChange.html":{"url":"classes/RowChange.html","title":"class - RowChange","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  RowChange\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/grid/utils/row-change.ts\n        \n\n\n\n\n\n            \n                Index\n                \n                    \n                        \n                            \n                                Properties\n                            \n                        \n                        \n                            \n                                \n                                    \n                                        newRowNum\n                                    \n                                    \n                                        oldRowNum\n                                    \n                                \n                            \n                        \n                    \n                \n            \n\n            \n                Constructor\n                    \n                        \n                            \n                                \n            constructor(oldRowNum: number, newRowNum: number)\n                                \n                            \n                                    \n                                        \n                                            Defined in src/grid/utils/row-change.ts:4\n                                        \n                                    \n            \n                            \n                                \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                                Type\n                                                            Optional\n                                                        \n                                                    \n                                                    \n                                                            \n                                                                oldRowNum\n                                                              \n                                                                    \n                                                                                number\n                                                                    \n                                                              \n                                                                \n                                                                        no\n                                                                \n                                                                \n                                                            \n                                                            \n                                                                newRowNum\n                                                              \n                                                                    \n                                                                                number\n                                                                    \n                                                              \n                                                                \n                                                                        no\n                                                                \n                                                                \n                                                            \n                                                    \n                                                \n                                        \n                                \n                            \n                        \n                    \n            \n\n\n\n            \n                \n                    \n                        Properties\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        newRowNum\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                    newRowNum:     number\n            \n                                \n                            \n                                \n                                    \n                                        Type :     number\n            \n                                    \n                                \n                                    \n                                        \n                                                Defined in src/grid/utils/row-change.ts:4\n                                        \n                                    \n            \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        oldRowNum\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                    oldRowNum:     number\n            \n                                \n                            \n                                \n                                    \n                                        Type :     number\n            \n                                    \n                                \n                                    \n                                        \n                                                Defined in src/grid/utils/row-change.ts:3\n                                        \n                                    \n            \n            \n                        \n                    \n            \n\n    \n\n\n    \n        export class RowChange {\n\n  oldRowNum: number;\n  newRowNum: number;\n\n  constructor(oldRowNum: number, newRowNum: number) {\n    this.oldRowNum = oldRowNum;\n    this.newRowNum = newRowNum;\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SortInfo.html":{"url":"classes/SortInfo.html","title":"class - SortInfo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  SortInfo\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/grid/utils/sort-info.ts\n        \n\n\n\n\n\n            \n                Index\n                \n                    \n                        \n                            \n                                Properties\n                            \n                        \n                        \n                            \n                                \n                                    \n                                            Public\n                                        asc\n                                    \n                                    \n                                            Public\n                                        field\n                                    \n                                \n                            \n                        \n                        \n                            \n                                Methods\n                            \n                        \n                        \n                            \n                                \n                                    \n                                        getAsc\n                                    \n                                    \n                                        getField\n                                    \n                                    \n                                        setAsc\n                                    \n                                    \n                                        setField\n                                    \n                                \n                            \n                        \n                    \n                \n            \n\n\n            \n                \n                    \n                        Methods\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        getAsc\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            getAsc()\n                                \n                            \n            \n            \n                                    \n                                        \n                                                Defined in src/grid/utils/sort-info.ts:5\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                            Returns :     boolean\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        getField\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            getField()\n                                \n                            \n            \n            \n                                    \n                                        \n                                                Defined in src/grid/utils/sort-info.ts:13\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                            Returns :     string\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        setAsc\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            setAsc(asc: boolean)\n                                \n                            \n            \n            \n                                    \n                                        \n                                                Defined in src/grid/utils/sort-info.ts:9\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                                Type\n                                                            Optional\n                                                        \n                                                    \n                                                    \n                                                            \n                                                                asc\n                                                                \n                                                                    \n                                                                                boolean\n                                                                    \n                                                                \n                                                                \n                                                                        no\n                                                                \n                                                                \n            \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     void\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        setField\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            setField(field: string)\n                                \n                            \n            \n            \n                                    \n                                        \n                                                Defined in src/grid/utils/sort-info.ts:17\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                                Type\n                                                            Optional\n                                                        \n                                                    \n                                                    \n                                                            \n                                                                field\n                                                                \n                                                                    \n                                                                                string\n                                                                    \n                                                                \n                                                                \n                                                                        no\n                                                                \n                                                                \n            \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     void\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n            \n\n\n            \n                \n                    \n                        Properties\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                            Public\n                                        asc\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                    asc:     boolean\n            \n                                \n                            \n                                \n                                    \n                                        Type :     boolean\n            \n                                    \n                                \n                                \n                                    \n                                        Default value : true\n                                    \n                                \n                                    \n                                        \n                                                Defined in src/grid/utils/sort-info.ts:2\n                                        \n                                    \n            \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                            Public\n                                        field\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                    field:     string\n            \n                                \n                            \n                                \n                                    \n                                        Type :     string\n            \n                                    \n                                \n                                \n                                    \n                                        Default value : null\n                                    \n                                \n                                    \n                                        \n                                                Defined in src/grid/utils/sort-info.ts:3\n                                        \n                                    \n            \n            \n                        \n                    \n            \n\n    \n\n\n    \n        export class SortInfo {\n  public asc: boolean = true;\n  public field: string = null;\n\n  getAsc(): boolean {\n    return this.asc;\n  }\n\n  setAsc(asc: boolean) {\n    this.asc = asc;\n  }\n\n  getField(): string {\n    return this.field;\n  }\n\n  setField(field: string) {\n    this.field = field;\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ClickListener.html":{"url":"interfaces/ClickListener.html","title":"interface - ClickListener","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ClickListener\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/grid/event/click.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    click\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n                \n                    \n                        Methods\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        click\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            click(event: MouseEvent)\n                                \n                            \n            \n            \n                                    \n                                        \n                                                Defined in src/grid/event/click.interface.ts:3\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                                Type\n                                                            Optional\n                                                        \n                                                    \n                                                    \n                                                            \n                                                                event\n                                                                \n                                                                    \n                                                                                MouseEvent\n                                                                    \n                                                                \n                                                                \n                                                                        no\n                                                                \n                                                                \n            \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     boolean\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n            \n\n\n    \n\n\n    \n        export interface ClickListener {\n\n  click(event: MouseEvent): boolean;\n\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DblClickListener.html":{"url":"interfaces/DblClickListener.html","title":"interface - DblClickListener","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  DblClickListener\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/grid/event/dbl-click.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    dblclick\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n                \n                    \n                        Methods\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        dblclick\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            dblclick(event: MouseEvent)\n                                \n                            \n            \n            \n                                    \n                                        \n                                                Defined in src/grid/event/dbl-click.interface.ts:3\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                                Type\n                                                            Optional\n                                                        \n                                                    \n                                                    \n                                                            \n                                                                event\n                                                                \n                                                                    \n                                                                                MouseEvent\n                                                                    \n                                                                \n                                                                \n                                                                        no\n                                                                \n                                                                \n            \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     boolean\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n            \n\n\n    \n\n\n    \n        export interface DblClickListener {\n\n  dblclick(event: MouseEvent): boolean;\n\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Dictionary.html":{"url":"interfaces/Dictionary.html","title":"interface - Dictionary","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Dictionary\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/grid/model/dictionary.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        display\n                                \n                                \n                                        value\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        display\n                                    \n                                \n                                \n                                    \n                                        display:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n                                    \n                                        \n                                            Defined in src/grid/model/dictionary.interface.ts:3\n                                        \n                                    \n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        value\n                                    \n                                \n                                \n                                    \n                                        value:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n                                    \n                                        \n                                            Defined in src/grid/model/dictionary.interface.ts:2\n                                        \n                                    \n\n                        \n                    \n            \n    \n\n\n    \n        export interface Dictionary {\n  value: string;\n  display: string;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/EmptyConstructor.html":{"url":"interfaces/EmptyConstructor.html","title":"interface - EmptyConstructor","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  EmptyConstructor\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/grid/utils/empty.factory.ts\n        \n\n\n\n\n\n\n    \n\n\n    \n        export class EmptyFactory {\n  constructor(private emptyConstructor: EmptyConstructor) {}\n\n  getInstance(): T {\n    return new this.emptyConstructor();\n  }\n}\n\nexport interface EmptyConstructor {\n  new(): T;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/EventListenerArg.html":{"url":"interfaces/EventListenerArg.html","title":"interface - EventListenerArg","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  EventListenerArg\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/grid/event/event-listener-arg.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        config\n                                \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        config\n                                    \n                                \n                                \n                                    \n                                        config:     any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/grid/event/event-listener-arg.interface.ts:5\n                                        \n                                    \n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     Type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Type\n\n                                        \n                                    \n\n\n\n\n                                    \n                                        \n                                            Defined in src/grid/event/event-listener-arg.interface.ts:4\n                                        \n                                    \n\n                        \n                    \n            \n    \n\n\n    \n        import {Type} from \"@angular/core\";\n\nexport interface EventListenerArg {\n  type: Type;\n  config?: any;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/InjectableConstructor.html":{"url":"interfaces/InjectableConstructor.html","title":"interface - InjectableConstructor","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  InjectableConstructor\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/grid/utils/injectable.factory.ts\n        \n\n\n\n\n\n\n    \n\n\n    \n        import {Injector} from \"@angular/core\";\n\n/**\n * Allows instantiation of any generic type if the type expects an injector argument.  See the implementation of\n * the EventListener.\n */\nexport class InjectableFactory {\n  constructor(private ic: InjectableConstructor, private injector: Injector) {}\n\n  getInstance(): T {\n    return new this.ic(this.injector);\n  }\n}\n\nexport interface InjectableConstructor {\n  new(injector: Injector): T;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MouseDownListener.html":{"url":"interfaces/MouseDownListener.html","title":"interface - MouseDownListener","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  MouseDownListener\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/grid/event/mouse-down.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    mouseDown\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n                \n                    \n                        Methods\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        mouseDown\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            mouseDown(event: MouseEvent)\n                                \n                            \n            \n            \n                                    \n                                        \n                                                Defined in src/grid/event/mouse-down.interface.ts:3\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                                Type\n                                                            Optional\n                                                        \n                                                    \n                                                    \n                                                            \n                                                                event\n                                                                \n                                                                    \n                                                                                MouseEvent\n                                                                    \n                                                                \n                                                                \n                                                                        no\n                                                                \n                                                                \n            \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     boolean\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n            \n\n\n    \n\n\n    \n        export interface MouseDownListener {\n\n  mouseDown(event: MouseEvent): boolean;\n\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MouseDragListener.html":{"url":"interfaces/MouseDragListener.html","title":"interface - MouseDragListener","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  MouseDragListener\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/grid/event/mouse-drag.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    mouseDrag\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n                \n                    \n                        Methods\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        mouseDrag\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            mouseDrag(event: MouseEvent)\n                                \n                            \n            \n            \n                                    \n                                        \n                                                Defined in src/grid/event/mouse-drag.interface.ts:3\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                                Type\n                                                            Optional\n                                                        \n                                                    \n                                                    \n                                                            \n                                                                event\n                                                                \n                                                                    \n                                                                                MouseEvent\n                                                                    \n                                                                \n                                                                \n                                                                        no\n                                                                \n                                                                \n            \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     boolean\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n            \n\n\n    \n\n\n    \n        export interface MouseDragListener {\n\n  mouseDrag(event: MouseEvent): boolean;\n\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MouseOutListener.html":{"url":"interfaces/MouseOutListener.html","title":"interface - MouseOutListener","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  MouseOutListener\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/grid/event/mouse-out.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    mouseOut\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n                \n                    \n                        Methods\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        mouseOut\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            mouseOut(event: MouseEvent)\n                                \n                            \n            \n            \n                                    \n                                        \n                                                Defined in src/grid/event/mouse-out.interface.ts:3\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                                Type\n                                                            Optional\n                                                        \n                                                    \n                                                    \n                                                            \n                                                                event\n                                                                \n                                                                    \n                                                                                MouseEvent\n                                                                    \n                                                                \n                                                                \n                                                                        no\n                                                                \n                                                                \n            \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     boolean\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n            \n\n\n    \n\n\n    \n        export interface MouseOutListener {\n\n  mouseOut(event: MouseEvent): boolean;\n\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MouseOverListener.html":{"url":"interfaces/MouseOverListener.html","title":"interface - MouseOverListener","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  MouseOverListener\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/grid/event/mouse-over.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    mouseOver\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n                \n                    \n                        Methods\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        mouseOver\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            mouseOver(event: MouseEvent)\n                                \n                            \n            \n            \n                                    \n                                        \n                                                Defined in src/grid/event/mouse-over.interface.ts:3\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                                Type\n                                                            Optional\n                                                        \n                                                    \n                                                    \n                                                            \n                                                                event\n                                                                \n                                                                    \n                                                                                MouseEvent\n                                                                    \n                                                                \n                                                                \n                                                                        no\n                                                                \n                                                                \n            \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     boolean\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n            \n\n\n    \n\n\n    \n        export interface MouseOverListener {\n\n  mouseOver(event: MouseEvent): boolean;\n\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MouseUpListener.html":{"url":"interfaces/MouseUpListener.html","title":"interface - MouseUpListener","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  MouseUpListener\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/grid/event/mouse-up.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    mouseUp\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n                \n                    \n                        Methods\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        mouseUp\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            mouseUp(event: MouseEvent)\n                                \n                            \n            \n            \n                                    \n                                        \n                                                Defined in src/grid/event/mouse-up.interface.ts:3\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                                Type\n                                                            Optional\n                                                        \n                                                    \n                                                    \n                                                            \n                                                                event\n                                                                \n                                                                    \n                                                                                MouseEvent\n                                                                    \n                                                                \n                                                                \n                                                                        no\n                                                                \n                                                                \n            \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     boolean\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n            \n\n\n    \n\n\n    \n        export interface MouseUpListener {\n\n  mouseUp(event: MouseEvent): boolean;\n\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ARROW\n                        \n                        \n                            CLICK\n                        \n                        \n                            NO_EVENT\n                        \n                        \n                            RESIZE\n                        \n                        \n                            SCROLL\n                        \n                        \n                            TAB\n                        \n                    \n                \n            \n        \n    \n\n\n    src/grid/services/grid-event.service.ts\n    \n                \n                \n                    \n                        \n                            \n                            \n                                \n                                ARROW\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n                            ARROW:     number\n    \n                        \n                    \n                        \n                            \n                                Type :     number\n    \n                            \n                        \n                        \n                            \n                                Default value : 2\n                            \n                        \n    \n    \n                \n            \n            \n                \n                    \n                        \n                            \n                            \n                                \n                                CLICK\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n                            CLICK:     number\n    \n                        \n                    \n                        \n                            \n                                Type :     number\n    \n                            \n                        \n                        \n                            \n                                Default value : 0\n                            \n                        \n    \n    \n                \n            \n            \n                \n                    \n                        \n                            \n                            \n                                \n                                TAB\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n                            TAB:     number\n    \n                        \n                    \n                        \n                            \n                                Type :     number\n    \n                            \n                        \n                        \n                            \n                                Default value : 1\n                            \n                        \n    \n    \n                \n            \n    \n    src/grid/grid.component.ts\n    \n                \n                \n                    \n                        \n                            \n                            \n                                \n                                NO_EVENT\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n                            NO_EVENT:     number\n    \n                        \n                    \n                        \n                            \n                                Type :     number\n    \n                            \n                        \n                        \n                            \n                                Default value : -1\n                            \n                        \n    \n    \n                \n            \n            \n                \n                    \n                        \n                            \n                            \n                                \n                                RESIZE\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n                            RESIZE:     number\n    \n                        \n                    \n                        \n                            \n                                Type :     number\n    \n                            \n                        \n                        \n                            \n                                Default value : 0\n                            \n                        \n    \n    \n                \n            \n            \n                \n                    \n                        \n                            \n                            \n                                \n                                SCROLL\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n                            SCROLL:     number\n    \n                        \n                    \n                        \n                            \n                                Type :     number\n    \n                            \n                        \n                        \n                            \n                                Default value : 1\n                            \n                        \n    \n    \n                \n            \n    \n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
