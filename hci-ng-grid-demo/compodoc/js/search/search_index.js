var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.1.6","fields":["title","body"],"fieldVectors":[["title/dependencies.html",[0,2.2,1,2.183]],["body/dependencies.html",[1,2.719,2,3.417,3,3.937,4,3.417,5,0.031,6,4.725,7,4.725,8,4.725,9,0.029,10,0.029]],["title/index.html",[11,1.693,12,1.91,13,0.427]],["body/index.html",[0,0.679,1,0.469,2,1.424,5,0.028,9,0.007,10,0.007,11,0.523,14,0.59,15,0.59,16,0.815,17,0.815,18,3.931,19,0.815,20,1.969,21,1.455,22,0.815,23,0.815,24,0.815,25,2.392,26,2.288,27,2.747,28,0.815,29,0.815,30,0.815,31,3.47,32,0.815,33,0.59,34,0.59,35,2.535,36,0.679,37,1.969,38,0.815,39,1.455,40,0.815,41,0.815,42,0.486,43,0.469,44,0.815,45,1.455,46,1.212,47,0.815,48,0.815,49,0.815,50,0.815,51,0.815,52,0.679,53,0.815,54,2.754,55,0.815,56,1.969,57,3.105,58,0.815,59,0.815,60,1.455,61,0.815,62,0.815,63,0.815,64,2.539,65,1.212,66,1.73,67,2.334,68,1.455,69,3.125,70,2.334,71,1.212,72,1.455,73,1.455,74,3.727,75,0.815,76,1.969,77,1.455,78,0.815,79,1.455,80,0.815,81,3.167,82,3.306,83,1.455,84,0.679,85,2.754,86,1.993,87,0.815,88,1.455,89,0.061,90,1.864,91,2.821,92,0.679,93,1.455,94,0.815,95,1.212,96,0.815,97,0.815,98,0.815,99,0.815,100,1.969,101,1.377,102,0.815,103,0.523,104,2.747,105,1.212,106,1.534,107,0.934,108,1.73,109,1.993,110,0.815,111,0.815,112,2.392,113,0.815,114,0.815,115,0.256,116,0.815,117,0.815,118,0.815,119,0.815,120,0.749,121,1.641,122,2.334,123,2.204,124,1.455,125,0.815,126,0.815,127,0.815,128,2.747,129,0.815,130,1.969,131,1.212,132,0.679,133,0.815,134,1.455,135,0.815,136,2.288,137,0.311,138,0.815,139,0.542,140,0.815,141,0.815,142,1.105,143,1.986,144,0.815,145,1.641,146,0.469,147,0.679,148,0.815,149,1.455,150,1.455,151,1.969,152,0.815,153,1.969,154,1.455,155,0.815,156,0.679,157,0.815,158,1.455,159,1.455,160,2.392,161,0.815,162,1.424,163,1.455,164,0.815,165,0.815,166,0.815,167,0.815,168,0.815,169,2.553,170,0.815,171,0.815,172,0.815,173,1.455,174,0.815,175,0.815,176,0.815,177,0.815,178,2.334,179,0.815,180,1.969,181,0.815,182,1.455,183,0.815,184,0.815,185,0.815,186,0.815,187,1.052,188,0.815,189,1.212,190,1.212,191,1.455,192,0.815,193,3.902,194,0.815,195,0.815,196,0.758,197,0.679,198,0.815,199,0.815,200,0.815,201,1.212,202,1.455,203,0.815,204,0.59,205,0.815,206,2.539,207,0.815,208,0.815,209,1.455,210,0.815,211,0.815,212,1.969,213,1.641,214,0.815,215,0.815,216,1.969,217,1.455,218,1.424,219,0.815,220,0.815,221,0.815,222,0.815,223,1.455,224,1.969,225,2.941,226,0.815,227,1.455,228,1.455,229,0.815,230,0.815,231,1.134,232,0.815,233,0.815,234,0.815,235,1.455,236,0.815,237,0.815,238,1.424,239,0.815,240,2.392,241,0.815,242,0.815,243,0.815,244,0.815,245,0.679,246,0.815,247,0.815,248,0.815,249,0.815,250,0.815,251,0.815,252,1.969,253,0.815,254,0.815,255,0.815,256,0.815,257,0.679,258,0.815,259,1.455,260,1.969,261,1.455,262,1.455,263,1.455,264,1.212,265,0.815,266,0.815,267,1.455,268,0.815,269,0.815,270,1.424,271,0.815,272,0.815,273,0.815,274,0.815,275,0.425,276,0.815,277,0.815,278,1.641,279,0.815,280,2.695,281,1.534,282,0.815,283,0.815,284,0.815,285,0.815,286,0.679,287,0.815,288,0.815,289,1.212,290,0.815,291,0.172,292,0.815,293,0.05,294,0.146,295,0.679,296,0.815,297,0.815,298,0.815,299,0.815,300,0.815,301,1.455,302,0.815,303,1.455,304,0.815,305,0.815,306,0.815,307,0.815,308,0.815,309,0.679,310,1.455,311,0.815,312,0.815,313,0.815,314,2.392,315,0.815,316,0.59,317,0.815,318,1.212,319,0.815,320,0.815,321,0.815,322,1.455,323,0.59,324,0.59,325,1.455,326,0.59,327,0.679,328,1.455,329,1.455,330,0.59,331,0.815,332,0.815,333,0.679,334,0.815,335,0.815,336,0.679,337,0.679]],["title/overview.html",[338,3.581]],["body/overview.html",[1,1.52,4,1.911,5,0.032,9,0.02,10,0.02,43,3.701,106,1.694,108,1.911,187,1.911,275,1.977,291,0.231,293,0.163,316,3.211,323,3.211,324,3.211,326,3.211,330,3.211,338,2.201,339,2.201,340,2.201,341,0.196,342,2.201,343,2.201,344,2.201,345,2.201,346,5.012,347,3.7,348,2.847,349,2.847,350,2.847,351,2.847,352,3.7,353,3.7,354,3.7,355,3.7,356,3.7,357,3.7,358,2.847,359,3.162,360,2.201,361,1.911,362,2.642,363,3.795,364,1.911,365,1.049,366,2.642,367,2.642]],["title/changelog.html",[11,1.693,12,1.91,368,2.641]],["body/changelog.html",[5,0.02,9,0.02,10,0.02,18,3.293,26,2.331,31,2.858,34,2.023,35,1.326,54,2.331,64,3.293,65,3.293,67,3.226,69,3.314,71,2.331,81,2.534,84,2.331,85,2.331,86,2.331,90,1.019,91,3.314,92,3.293,103,1.793,105,2.331,109,3.293,123,2.023,132,2.331,136,4.15,145,2.331,146,2.274,162,3.944,201,2.331,218,2.023,280,2.858,281,1.793,309,3.293,318,2.331,327,2.331,336,2.331,369,2.797,370,2.797,371,2.797,372,2.797,373,2.797,374,3.953,375,2.797,376,2.797,377,2.797,378,2.797,379,2.797,380,2.797,381,2.797,382,2.534,383,4.583,384,2.331,385,2.797,386,2.797,387,2.797,388,2.797,389,2.797,390,2.797,391,2.797,392,2.797,393,2.797,394,2.797,395,2.797,396,3.953,397,2.797,398,2.797,399,2.797,400,2.797,401,2.797,402,2.797,403,2.797,404,2.797,405,2.797,406,2.797,407,2.331,408,2.797,409,2.797,410,2.797,411,2.797,412,2.797,413,2.797,414,3.953,415,2.797,416,2.797,417,2.797,418,2.797,419,2.331,420,2.797,421,2.331,422,2.797,423,2.797,424,2.797,425,2.797,426,2.797]],["title/license.html",[11,1.693,12,1.91,407,2.2]],["body/license.html",[5,0.022,9,0.022,10,0.022,14,2.283,15,2.283,46,2.631,52,4.372,57,3.581,90,1.15,95,2.631,106,2.024,147,2.631,156,2.631,189,3.581,257,4.072,278,2.631,337,2.631,361,2.283,419,2.631,427,4.072,428,2.631,429,3.158,430,2.631,431,2.631,432,2.631,433,4.299,434,3.158,435,3.158,436,3.158,437,3.158,438,4.299,439,3.158,440,5.98,441,3.158,442,3.158,443,0.234,444,4.299,445,4.072,446,3.158,447,3.158,448,3.158,449,3.158,450,3.158,451,3.158,452,3.158,453,3.158,454,2.631,455,3.158,456,4.299,457,4.299,458,3.158,459,3.158,460,4.299,461,3.158,462,3.158,463,3.158,464,3.158,465,3.158,466,3.158,467,3.158,468,3.158,469,3.158,470,2.631,471,3.158,472,3.158,473,3.158,474,3.158,475,3.158,476,3.158,477,3.158,478,3.158,479,3.158]],["title/modules.html",[275,2.239]],["body/modules.html",[5,0.029,9,0.029,10,0.029,34,3.478,43,2.768,275,2.505,480,4.81,481,4.81,482,4.81]],["title/modules/GridModule.html",[43,1.816,275,1.644]],["body/modules/GridModule.html",[1,0.892,2,1.12,3,1.291,4,1.822,5,0.033,9,0.013,10,0.013,14,1.12,15,1.12,42,1.942,43,3.553,69,2.302,81,0.993,89,0.115,106,2.771,108,2.302,115,0.327,169,1.822,275,1.312,291,0.135,316,3.433,323,3.433,324,3.433,326,3.433,330,3.433,339,1.291,340,2.652,341,0.272,342,1.291,343,1.291,344,1.291,345,1.291,346,4.73,347,3.601,348,2.771,349,2.771,350,2.771,351,2.771,352,3.955,353,3.955,354,3.601,355,3.601,356,2.652,357,2.652,358,2.04,359,2.099,360,1.291,361,1.12,427,1.291,428,1.291,430,1.291,431,1.291,432,1.291,443,0.115,483,0.135,484,1.549,485,2.519,486,1.549,487,1.549,488,1.549,489,3.183,490,3.183,491,3.666,492,0.615,493,2.519,494,1.549,495,2.519,496,1.549,497,1.549,498,1.549,499,0.993,500,1.549,501,3.666,502,2.519,503,1.549,504,1.549,505,1.549,506,3.183,507,4.322,508,1.549,509,1.549,510,1.549,511,1.549,512,1.549,513,1.549,514,1.549,515,2.519,516,1.549,517,2.519,518,1.549,519,1.549,520,3.183,521,1.549,522,1.549,523,2.099,524,1.549,525,3.183,526,3.183,527,1.549]],["title/injectables/GridMessageService.html",[358,2.023,364,2.283]],["body/injectables/GridMessageService.html",[5,0.033,9,0.019,10,0.019,13,0.414,35,2.068,42,1.24,70,3.046,89,0.19,115,0.567,120,0.66,137,0.482,139,0.54,178,2.51,196,1.931,213,3.089,231,2.068,245,3.984,291,0.223,294,0.664,341,0.19,358,2.377,364,3.154,421,4.229,443,0.19,454,4.41,483,0.223,492,1.015,528,4.549,529,2.559,530,1.758,531,4.121,532,4.782,533,4.782,534,4.782,535,3.708,536,3.708,537,4.361,538,3.708,539,0.688,540,2.559,541,0.6,542,2.681,543,3.708,544,2.559,545,3.089,546,2.559,547,2.559,548,3.708,549,2.559,550,2.559,551,2.559,552,2.559,553,2.559,554,2.559,555,2.559]],["title/pipes/IsFixedPipe.html",[350,2.023,365,1.253]],["body/pipes/IsFixedPipe.html",[5,0.033,9,0.023,10,0.023,42,1.51,67,2.598,89,0.252,101,2.919,107,1.61,115,0.659,120,0.441,122,1.954,123,3.668,137,0.441,139,0.738,142,1.696,143,2.456,162,3.909,289,2.829,291,0.296,294,0.608,341,0.252,350,2.894,365,2.013,443,0.252,483,0.296,492,1.348,499,2.177,539,0.441,541,0.55,556,2.894,557,3.396,558,1.954,559,4.515,560,2.177,561,2.894,562,3.396,563,2.894,564,2.177,565,3.396]],["title/pipes/IsGroupPipe.html",[349,2.023,365,1.253]],["body/pipes/IsGroupPipe.html",[5,0.033,9,0.024,10,0.024,42,1.558,67,2.68,89,0.264,101,2.987,107,1.688,115,0.675,122,2.049,137,0.463,139,0.755,291,0.311,294,0.638,341,0.264,349,2.986,365,2.06,443,0.264,483,0.311,492,1.413,499,2.282,539,0.463,541,0.576,556,2.986,558,2.049,560,2.282,561,2.986,563,2.986,564,2.282,566,3.561,567,4.658,568,3.561,569,3.561,570,3.561]],["title/pipes/IsRowVisiblePipe.html",[351,2.023,365,1.253]],["body/pipes/IsRowVisiblePipe.html",[5,0.033,9,0.024,10,0.024,42,1.558,81,3.53,89,0.264,101,2.987,107,1.688,115,0.675,122,2.049,137,0.463,139,0.755,291,0.311,294,0.638,341,0.264,351,2.986,365,2.06,443,0.264,483,0.311,492,1.413,539,0.463,541,0.576,556,2.986,558,2.049,560,2.282,561,2.986,563,2.986,564,2.282,571,2.966,572,4.658,573,2.966,574,3.561,575,2.966]],["title/pipes/IsVisiblePipe.html",[348,2.023,365,1.253]],["body/pipes/IsVisiblePipe.html",[5,0.033,9,0.024,10,0.024,42,1.567,67,2.696,89,0.267,101,3,107,1.703,115,0.677,122,2.067,137,0.467,139,0.759,291,0.313,294,0.643,341,0.267,348,3.003,365,2.069,443,0.267,483,0.313,492,1.426,499,2.303,539,0.467,541,0.581,556,3.003,558,2.067,560,2.303,561,3.003,563,3.003,564,2.303,571,2.993,573,2.993,575,2.993,576,4.685]],["title/classes/Cell.html",[281,2.023,291,0.275]],["body/classes/Cell.html",[5,0.032,9,0.023,10,0.023,13,0.547,31,3.256,35,1.603,89,0.251,120,0.701,121,4.216,137,0.44,139,0.492,142,1.693,143,3.256,178,2.912,197,4.495,206,4.495,231,2.664,280,2.446,281,2.886,291,0.393,341,0.251,443,0.251,470,2.818,483,0.295,530,2.135,539,0.701,541,0.547,558,1.946,577,3.382,578,1.946,579,3.382,580,3.382,581,3.382,582,2.168,583,4.502,584,4.502,585,4.502,586,3.382,587,3.382,588,3.382]],["title/classes/EmptyFactory.html",[291,0.275,589,2.283]],["body/classes/EmptyFactory.html",[5,0.032,9,0.024,10,0.024,13,0.589,89,0.27,115,0.614,120,0.682,137,0.473,139,0.53,146,2.095,196,2.462,291,0.412,293,0.224,294,0.846,341,0.351,382,2.334,443,0.27,483,0.318,539,0.614,541,0.589,578,2.095,582,3.029,589,3.418,590,3.033,591,2.633,592,2.633,593,3.56,594,3.641,595,4.265,596,3.641,597,3.641,598,3.364,599,2.334,600,3.033]],["title/classes/FormatterParser.html",[291,0.275,601,2.63]],["body/classes/FormatterParser.html",[5,0.033,9,0.022,10,0.022,13,0.501,35,1.468,36,2.58,89,0.23,115,0.732,120,0.676,137,0.629,139,0.704,231,2.67,238,4.072,291,0.37,294,0.76,295,3.535,341,0.23,443,0.23,445,2.58,483,0.27,530,2.011,539,0.676,541,0.783,542,2.24,578,1.782,601,3.535,602,5.453,603,3.097,604,3.097,605,3.097,606,3.097,607,4.243,608,4.243,609,4.243,610,4.243,611,3.097,612,4.243,613,3.097,614,3.097,615,3.097,616,3.097]],["title/classes/HtmlUtil.html",[291,0.275,617,2.63]],["body/classes/HtmlUtil.html",[5,0.033,9,0.018,10,0.018,13,0.397,42,0.819,70,2.871,89,0.182,115,0.718,120,0.553,131,4.488,137,0.553,139,0.619,264,3.903,286,2.993,291,0.409,294,0.643,333,2.993,341,0.182,443,0.182,483,0.214,523,4.697,539,0.553,541,0.689,578,1.41,617,2.993,618,4.685,619,2.45,620,3.593,621,3.593,622,3.593,623,3.593,624,3.593,625,3.593,626,3.593,627,3.593,628,5.809,629,2.45,630,5.525,631,2.45,632,3.593,633,2.45,634,3.593,635,2.45,636,4.254,637,2.45,638,4.685,639,2.041,640,2.45]],["title/classes/InjectableFactory.html",[291,0.275,641,2.283]],["body/classes/InjectableFactory.html",[5,0.032,9,0.022,10,0.022,13,0.519,33,3.142,42,1.073,89,0.238,103,2.785,107,2.06,115,0.565,120,0.717,137,0.417,139,0.467,146,2.5,196,1.671,291,0.379,293,0.198,294,0.778,341,0.322,382,2.785,443,0.238,483,0.28,492,1.273,531,2.32,539,0.565,541,0.519,578,1.846,582,2.056,591,3.142,592,3.142,593,3.386,598,3.159,599,2.056,641,3.142,642,2.672,643,5.053,644,3.62,645,3.208,646,3.819,647,3.208,648,3.62,649,3.208,650,2.672,651,2.672]],["title/classes/RowChange.html",[291,0.275,652,2.63]],["body/classes/RowChange.html",[5,0.032,9,0.024,10,0.024,13,0.569,89,0.261,120,0.67,137,0.457,139,0.511,178,3.599,291,0.403,341,0.261,443,0.261,483,0.307,530,2.189,539,0.67,541,0.569,582,2.253,652,3.847,653,5.478,654,3.514,655,6.041,656,5.841,657,4.618,658,4.618,659,3.514,660,3.514,661,3.514]],["title/classes/SortInfo.html",[270,2.283,291,0.275]],["body/classes/SortInfo.html",[5,0.033,9,0.02,10,0.02,13,0.438,35,1.829,70,3.266,89,0.201,115,0.701,120,0.637,137,0.501,139,0.561,142,1.898,169,2.79,225,4.493,231,1.829,270,2.79,291,0.337,294,0.691,341,0.201,384,4.493,443,0.201,483,0.236,530,1.829,539,0.701,541,0.624,542,2.79,639,3.214,662,5.551,663,2.704,664,5.393,665,4.905,666,4.905,667,3.858,668,3.858,669,2.704,670,2.704,671,3.858,672,2.704,673,3.858,674,2.704,675,2.704,676,2.704,677,3.858,678,3.858]],["title/interfaces/ClickListener.html",[293,0.195,679,2.63]],["body/interfaces/ClickListener.html",[5,0.031,9,0.026,10,0.026,13,0.671,66,3.71,89,0.307,90,1.509,115,0.539,120,0.539,137,0.539,139,0.603,142,1.716,293,0.316,294,0.919,341,0.307,443,0.307,483,0.362,539,0.539,541,0.671,679,4.274,680,4.144,681,5.131,682,2.642,683,4.144]],["title/interfaces/DblClickListener.html",[293,0.195,684,2.63]],["body/interfaces/DblClickListener.html",[5,0.031,9,0.026,10,0.026,13,0.664,89,0.304,90,1.494,115,0.533,120,0.533,137,0.533,139,0.597,142,1.705,293,0.314,294,0.913,341,0.304,443,0.304,483,0.358,539,0.533,541,0.664,682,2.63,684,4.247,685,5.098,686,4.102,687,5.098,688,5.098,689,4.102]],["title/interfaces/Dictionary.html",[293,0.195,690,2.63]],["body/interfaces/Dictionary.html",[5,0.031,9,0.026,10,0.026,13,0.661,70,3.496,89,0.303,120,0.66,218,4.188,231,2.746,293,0.313,341,0.303,443,0.303,483,0.356,530,2.409,539,0.66,690,4.234,691,4.082,692,4.082,693,4.082]],["title/interfaces/EmptyConstructor.html",[293,0.195,595,2.283]],["body/interfaces/EmptyConstructor.html",[5,0.033,9,0.027,10,0.027,89,0.314,115,0.55,196,2.707,291,0.369,293,0.32,341,0.386,443,0.314,483,0.369,589,3.06,590,3.525,593,2.712,595,4.242,598,3.331,599,2.712,600,3.525]],["title/interfaces/EventListenerArg.html",[204,2.283,293,0.195]],["body/interfaces/EventListenerArg.html",[5,0.031,9,0.026,10,0.026,13,0.635,42,1.312,89,0.291,91,3.93,120,0.816,137,0.644,204,3.585,238,4.129,293,0.306,341,0.291,443,0.291,483,0.342,492,1.557,530,2.35,539,0.644,694,5.435,695,3.923,696,3.923,697,3.923]],["title/interfaces/InjectableConstructor.html",[293,0.195,646,2.283]],["body/interfaces/InjectableConstructor.html",[5,0.033,9,0.025,10,0.025,33,2.744,42,1.269,89,0.282,103,2.432,107,1.799,115,0.493,120,0.631,146,2.184,196,1.976,291,0.331,293,0.299,341,0.36,382,2.432,443,0.282,483,0.331,492,1.506,531,2.744,591,2.744,592,2.744,593,2.432,598,3.111,599,2.432,641,2.744,642,3.161,643,4.857,644,3.161,646,3.87,648,3.161,650,3.161,651,3.161]],["title/interfaces/MouseDownListener.html",[293,0.195,698,2.63]],["body/interfaces/MouseDownListener.html",[5,0.031,9,0.026,10,0.026,13,0.664,89,0.304,90,1.494,115,0.533,120,0.533,137,0.533,139,0.597,142,1.705,293,0.314,294,0.913,341,0.304,443,0.304,483,0.358,539,0.533,541,0.664,682,2.63,698,4.247,699,2.934,700,4.102,701,5.098,702,5.098,703,4.102]],["title/interfaces/MouseDragListener.html",[293,0.195,704,2.63]],["body/interfaces/MouseDragListener.html",[5,0.031,9,0.026,10,0.026,13,0.664,89,0.304,90,1.494,115,0.533,120,0.533,137,0.533,139,0.597,142,1.705,293,0.314,294,0.913,341,0.304,443,0.304,483,0.358,539,0.533,541,0.664,682,2.63,699,2.934,704,4.247,705,4.102,706,5.098,707,5.098,708,4.102]],["title/interfaces/MouseOutListener.html",[293,0.195,709,2.63]],["body/interfaces/MouseOutListener.html",[5,0.031,9,0.026,10,0.026,13,0.664,89,0.304,90,1.494,115,0.533,120,0.533,137,0.533,139,0.597,142,1.705,293,0.314,294,0.913,341,0.304,443,0.304,483,0.358,539,0.533,541,0.664,682,2.63,699,2.934,709,4.247,710,4.102,711,5.098,712,5.098,713,4.102]],["title/interfaces/MouseOverListener.html",[293,0.195,714,2.63]],["body/interfaces/MouseOverListener.html",[5,0.031,9,0.026,10,0.026,13,0.664,89,0.304,90,1.494,115,0.533,120,0.533,137,0.533,139,0.597,142,1.705,293,0.314,294,0.913,341,0.304,443,0.304,483,0.358,539,0.533,541,0.664,682,2.63,699,2.934,714,4.247,715,4.102,716,5.098,717,5.098,718,4.102]],["title/interfaces/MouseUpListener.html",[293,0.195,719,2.63]],["body/interfaces/MouseUpListener.html",[5,0.031,9,0.026,10,0.026,13,0.664,89,0.304,90,1.494,115,0.533,120,0.533,137,0.533,139,0.597,142,1.705,293,0.314,294,0.913,341,0.304,443,0.304,483,0.358,539,0.533,541,0.664,682,2.63,699,2.934,719,4.247,720,4.102,721,5.098,722,5.098,723,4.102]],["title/miscellaneous/variables.html",[724,2.2,725,3.161]],["body/miscellaneous/variables.html",[5,0.032,9,0.023,10,0.023,13,0.559,35,2.756,66,3.699,120,0.755,178,3.59,187,3.699,190,4.261,231,2.756,528,2.878,545,2.878,724,2.878,725,2.878,726,5.115,727,5.115,728,5.115,729,5.115,730,3.454,731,4.566,732,3.454]]],"invertedIndex":[["",{"_index":5,"title":{},"body":{"dependencies.html":{},"index.html":{},"overview.html":{},"changelog.html":{},"license.html":{},"modules.html":{},"modules/GridModule.html":{},"injectables/GridMessageService.html":{},"pipes/IsFixedPipe.html":{},"pipes/IsGroupPipe.html":{},"pipes/IsRowVisiblePipe.html":{},"pipes/IsVisiblePipe.html":{},"classes/Cell.html":{},"classes/EmptyFactory.html":{},"classes/FormatterParser.html":{},"classes/HtmlUtil.html":{},"classes/InjectableFactory.html":{},"classes/RowChange.html":{},"classes/SortInfo.html":{},"interfaces/ClickListener.html":{},"interfaces/DblClickListener.html":{},"interfaces/Dictionary.html":{},"interfaces/EmptyConstructor.html":{},"interfaces/EventListenerArg.html":{},"interfaces/InjectableConstructor.html":{},"interfaces/MouseDownListener.html":{},"interfaces/MouseDragListener.html":{},"interfaces/MouseOutListener.html":{},"interfaces/MouseOverListener.html":{},"interfaces/MouseUpListener.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":731,"title":{},"body":{"miscellaneous/variables.html":{}}}],["1",{"_index":187,"title":{},"body":{"index.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["1.1.x",{"_index":6,"title":{},"body":{"dependencies.html":{}}}],["10",{"_index":182,"title":{},"body":{"index.html":{}}}],["100",{"_index":188,"title":{},"body":{"index.html":{}}}],["11",{"_index":362,"title":{},"body":{"overview.html":{}}}],["12",{"_index":367,"title":{},"body":{"overview.html":{}}}],["15",{"_index":305,"title":{},"body":{"index.html":{}}}],["2",{"_index":545,"title":{},"body":{"injectables/GridMessageService.html":{},"miscellaneous/variables.html":{}}}],["2.19.3",{"_index":8,"title":{},"body":{"dependencies.html":{}}}],["2016",{"_index":486,"title":{},"body":{"modules/GridModule.html":{}}}],["2018",{"_index":429,"title":{},"body":{"license.html":{}}}],["25",{"_index":183,"title":{},"body":{"index.html":{}}}],["3.1.1",{"_index":370,"title":{},"body":{"changelog.html":{}}}],["3.1.x",{"_index":41,"title":{},"body":{"index.html":{}}}],["34",{"_index":366,"title":{},"body":{"overview.html":{}}}],["4",{"_index":363,"title":{},"body":{"overview.html":{}}}],["50",{"_index":184,"title":{},"body":{"index.html":{}}}],["85",{"_index":307,"title":{},"body":{"index.html":{}}}],["_level",{"_index":532,"title":{},"body":{"injectables/GridMessageService.html":{}}}],["_messag",{"_index":533,"title":{},"body":{"injectables/GridMessageService.html":{}}}],["_messageobserv",{"_index":534,"title":{},"body":{"injectables/GridMessageService.html":{}}}],["abov",{"_index":156,"title":{},"body":{"index.html":{},"license.html":{}}}],["accessor",{"_index":536,"title":{},"body":{"injectables/GridMessageService.html":{}}}],["action",{"_index":95,"title":{},"body":{"index.html":{},"license.html":{}}}],["ad",{"_index":92,"title":{},"body":{"index.html":{},"changelog.html":{}}}],["add",{"_index":396,"title":{},"body":{"changelog.html":{}}}],["advanc",{"_index":279,"title":{},"body":{"index.html":{}}}],["allow",{"_index":146,"title":{},"body":{"index.html":{},"changelog.html":{},"classes/EmptyFactory.html":{},"classes/InjectableFactory.html":{},"interfaces/InjectableConstructor.html":{}}}],["although",{"_index":219,"title":{},"body":{"index.html":{}}}],["analyze_for_entry_compon",{"_index":489,"title":{},"body":{"modules/GridModule.html":{}}}],["and/or",{"_index":450,"title":{},"body":{"license.html":{}}}],["angular",{"_index":17,"title":{},"body":{"index.html":{}}}],["angular/common",{"_index":494,"title":{},"body":{"modules/GridModule.html":{}}}],["angular/cor",{"_index":492,"title":{},"body":{"modules/GridModule.html":{},"injectables/GridMessageService.html":{},"pipes/IsFixedPipe.html":{},"pipes/IsGroupPipe.html":{},"pipes/IsRowVisiblePipe.html":{},"pipes/IsVisiblePipe.html":{},"classes/InjectableFactory.html":{},"interfaces/EventListenerArg.html":{},"interfaces/InjectableConstructor.html":{}}}],["angular/form",{"_index":496,"title":{},"body":{"modules/GridModule.html":{}}}],["anyth",{"_index":29,"title":{},"body":{"index.html":{}}}],["anything.filterev",{"_index":251,"title":{},"body":{"index.html":{}}}],["api",{"_index":385,"title":{},"body":{"changelog.html":{}}}],["appli",{"_index":254,"title":{},"body":{"index.html":{}}}],["applic",{"_index":276,"title":{},"body":{"index.html":{}}}],["arg.interface.t",{"_index":695,"title":{},"body":{"interfaces/EventListenerArg.html":{}}}],["arg.interface.ts:4",{"_index":697,"title":{},"body":{"interfaces/EventListenerArg.html":{}}}],["arg.interface.ts:5",{"_index":696,"title":{},"body":{"interfaces/EventListenerArg.html":{}}}],["argument",{"_index":592,"title":{},"body":{"classes/EmptyFactory.html":{},"classes/InjectableFactory.html":{},"interfaces/InjectableConstructor.html":{}}}],["aris",{"_index":479,"title":{},"body":{"license.html":{}}}],["array",{"_index":123,"title":{},"body":{"index.html":{},"changelog.html":{},"pipes/IsFixedPipe.html":{}}}],["arrow",{"_index":726,"title":{},"body":{"miscellaneous/variables.html":{}}}],["artifact.2.0.0",{"_index":408,"title":{},"body":{"changelog.html":{}}}],["asc",{"_index":664,"title":{},"body":{"classes/SortInfo.html":{}}}],["associ",{"_index":441,"title":{},"body":{"license.html":{}}}],["author",{"_index":469,"title":{},"body":{"license.html":{}}}],["auto",{"_index":394,"title":{},"body":{"changelog.html":{}}}],["back",{"_index":263,"title":{},"body":{"index.html":{}}}],["bar",{"_index":155,"title":{},"body":{"index.html":{}}}],["base",{"_index":313,"title":{},"body":{"index.html":{}}}],["basic",{"_index":37,"title":{},"body":{"index.html":{}}}],["be",{"_index":273,"title":{},"body":{"index.html":{}}}],["becom",{"_index":38,"title":{},"body":{"index.html":{}}}],["behavior",{"_index":387,"title":{},"body":{"changelog.html":{}}}],["big).titl",{"_index":152,"title":{},"body":{"index.html":{}}}],["bigtextpopup",{"_index":353,"title":{},"body":{"overview.html":{},"modules/GridModule.html":{}}}],["bind",{"_index":126,"title":{},"body":{"index.html":{}}}],["birth",{"_index":319,"title":{},"body":{"index.html":{}}}],["boolean",{"_index":142,"title":{},"body":{"index.html":{},"pipes/IsFixedPipe.html":{},"classes/Cell.html":{},"classes/SortInfo.html":{},"interfaces/ClickListener.html":{},"interfaces/DblClickListener.html":{},"interfaces/MouseDownListener.html":{},"interfaces/MouseDragListener.html":{},"interfaces/MouseOutListener.html":{},"interfaces/MouseOverListener.html":{},"interfaces/MouseUpListener.html":{}}}],["bootstrap",{"_index":4,"title":{},"body":{"dependencies.html":{},"overview.html":{},"modules/GridModule.html":{}}}],["bootstrap/ng",{"_index":3,"title":{},"body":{"dependencies.html":{},"modules/GridModule.html":{}}}],["break",{"_index":333,"title":{},"body":{"index.html":{},"classes/HtmlUtil.html":{}}}],["brows",{"_index":482,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":480,"title":{},"body":{"modules.html":{}}}],["built",{"_index":310,"title":{},"body":{"index.html":{}}}],["bump",{"_index":399,"title":{},"body":{"changelog.html":{}}}],["busi",{"_index":412,"title":{},"body":{"changelog.html":{}}}],["button.3.1.0",{"_index":373,"title":{},"body":{"changelog.html":{}}}],["c",{"_index":428,"title":{},"body":{"license.html":{},"modules/GridModule.html":{}}}],["calculation.2.0.2",{"_index":403,"title":{},"body":{"changelog.html":{}}}],["call",{"_index":86,"title":{},"body":{"index.html":{},"changelog.html":{}}}],["call.externalpag",{"_index":176,"title":{},"body":{"index.html":{}}}],["call.externalsort",{"_index":175,"title":{},"body":{"index.html":{}}}],["call.pages",{"_index":177,"title":{},"body":{"index.html":{}}}],["callback",{"_index":87,"title":{},"body":{"index.html":{}}}],["cancer",{"_index":15,"title":{},"body":{"index.html":{},"license.html":{},"modules/GridModule.html":{}}}],["case",{"_index":255,"title":{},"body":{"index.html":{}}}],["cell",{"_index":281,"title":{"classes/Cell.html":{}},"body":{"index.html":{},"changelog.html":{},"classes/Cell.html":{}}}],["cell'",{"_index":579,"title":{},"body":{"classes/Cell.html":{}}}],["cell.onrowsav",{"_index":232,"title":{},"body":{"index.html":{}}}],["cell/editrenderers/choic",{"_index":510,"title":{},"body":{"modules/GridModule.html":{}}}],["cell/editrenderers/d",{"_index":511,"title":{},"body":{"modules/GridModule.html":{}}}],["cell/editrenderers/text",{"_index":505,"title":{},"body":{"modules/GridModule.html":{}}}],["cell/viewpopuprenderer/bigtext",{"_index":513,"title":{},"body":{"modules/GridModule.html":{}}}],["cellnumberrangeview",{"_index":302,"title":{},"body":{"index.html":{}}}],["cellviewrender",{"_index":292,"title":{},"body":{"index.html":{}}}],["chang",{"_index":65,"title":{},"body":{"index.html":{},"changelog.html":{}}}],["change.t",{"_index":654,"title":{},"body":{"classes/RowChange.html":{}}}],["change.ts:3",{"_index":659,"title":{},"body":{"classes/RowChange.html":{}}}],["change.ts:4",{"_index":658,"title":{},"body":{"classes/RowChange.html":{}}}],["changelog",{"_index":368,"title":{"changelog.html":{}},"body":{}}],["charg",{"_index":437,"title":{},"body":{"license.html":{}}}],["choic",{"_index":327,"title":{},"body":{"index.html":{},"changelog.html":{}}}],["choice.compon",{"_index":521,"title":{},"body":{"modules/GridModule.html":{}}}],["choiceeditrender",{"_index":326,"title":{},"body":{"index.html":{},"overview.html":{},"modules/GridModule.html":{}}}],["choos",{"_index":185,"title":{},"body":{"index.html":{}}}],["claim",{"_index":472,"title":{},"body":{"license.html":{}}}],["class",{"_index":291,"title":{"classes/Cell.html":{},"classes/EmptyFactory.html":{},"classes/FormatterParser.html":{},"classes/HtmlUtil.html":{},"classes/InjectableFactory.html":{},"classes/RowChange.html":{},"classes/SortInfo.html":{}},"body":{"index.html":{},"overview.html":{},"modules/GridModule.html":{},"injectables/GridMessageService.html":{},"pipes/IsFixedPipe.html":{},"pipes/IsGroupPipe.html":{},"pipes/IsRowVisiblePipe.html":{},"pipes/IsVisiblePipe.html":{},"classes/Cell.html":{},"classes/EmptyFactory.html":{},"classes/FormatterParser.html":{},"classes/HtmlUtil.html":{},"classes/InjectableFactory.html":{},"classes/RowChange.html":{},"classes/SortInfo.html":{},"interfaces/EmptyConstructor.html":{},"interfaces/InjectableConstructor.html":{}}}],["click",{"_index":66,"title":{},"body":{"index.html":{},"interfaces/ClickListener.html":{},"miscellaneous/variables.html":{}}}],["click(ev",{"_index":681,"title":{},"body":{"interfaces/ClickListener.html":{}}}],["click.interface.t",{"_index":686,"title":{},"body":{"interfaces/DblClickListener.html":{}}}],["click.interface.ts:3",{"_index":689,"title":{},"body":{"interfaces/DblClickListener.html":{}}}],["clicklisten",{"_index":679,"title":{"interfaces/ClickListener.html":{}},"body":{"interfaces/ClickListener.html":{}}}],["cluster_gridmodul",{"_index":342,"title":{},"body":{"overview.html":{},"modules/GridModule.html":{}}}],["cluster_gridmodule_declar",{"_index":343,"title":{},"body":{"overview.html":{},"modules/GridModule.html":{}}}],["cluster_gridmodule_export",{"_index":345,"title":{},"body":{"overview.html":{},"modules/GridModule.html":{}}}],["cluster_gridmodule_gridcomponent_provid",{"_index":344,"title":{},"body":{"overview.html":{},"modules/GridModule.html":{}}}],["code",{"_index":48,"title":{},"body":{"index.html":{}}}],["colum",{"_index":150,"title":{},"body":{"index.html":{}}}],["column",{"_index":67,"title":{},"body":{"index.html":{},"changelog.html":{},"pipes/IsFixedPipe.html":{},"pipes/IsGroupPipe.html":{},"pipes/IsVisiblePipe.html":{}}}],["column'",{"_index":253,"title":{},"body":{"index.html":{}}}],["column/column",{"_index":499,"title":{},"body":{"modules/GridModule.html":{},"pipes/IsFixedPipe.html":{},"pipes/IsGroupPipe.html":{},"pipes/IsVisiblePipe.html":{}}}],["column/filterrenderers/compar",{"_index":509,"title":{},"body":{"modules/GridModule.html":{}}}],["column/filterrenderers/select",{"_index":512,"title":{},"body":{"modules/GridModule.html":{}}}],["column/filterrenderers/text",{"_index":508,"title":{},"body":{"modules/GridModule.html":{}}}],["columnheadercompon",{"_index":347,"title":{},"body":{"overview.html":{},"modules/GridModule.html":{}}}],["columns[j].field",{"_index":226,"title":{},"body":{"index.html":{}}}],["come",{"_index":262,"title":{},"body":{"index.html":{}}}],["command",{"_index":55,"title":{},"body":{"index.html":{}}}],["commonmodul",{"_index":493,"title":{},"body":{"modules/GridModule.html":{}}}],["comparefilterrender",{"_index":324,"title":{},"body":{"index.html":{},"overview.html":{},"modules/GridModule.html":{}}}],["compil",{"_index":47,"title":{},"body":{"index.html":{}}}],["complex",{"_index":30,"title":{},"body":{"index.html":{}}}],["compon",{"_index":108,"title":{},"body":{"index.html":{},"overview.html":{},"modules/GridModule.html":{}}}],["condit",{"_index":455,"title":{},"body":{"license.html":{}}}],["confidenti",{"_index":487,"title":{},"body":{"modules/GridModule.html":{}}}],["config",{"_index":238,"title":{},"body":{"index.html":{},"classes/FormatterParser.html":{},"interfaces/EventListenerArg.html":{}}}],["config/config",{"_index":515,"title":{},"body":{"modules/GridModule.html":{}}}],["configmenucompon",{"_index":354,"title":{},"body":{"overview.html":{},"modules/GridModule.html":{}}}],["configmultichoicecompon",{"_index":355,"title":{},"body":{"overview.html":{},"modules/GridModule.html":{}}}],["configur",{"_index":136,"title":{},"body":{"index.html":{},"changelog.html":{}}}],["configuration.instal",{"_index":40,"title":{},"body":{"index.html":{}}}],["connect",{"_index":419,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["console.display",{"_index":214,"title":{},"body":{"index.html":{}}}],["constructor",{"_index":582,"title":{},"body":{"classes/Cell.html":{},"classes/EmptyFactory.html":{},"classes/InjectableFactory.html":{},"classes/RowChange.html":{}}}],["constructor(",{"_index":645,"title":{},"body":{"classes/InjectableFactory.html":{}}}],["constructor(emptyconstructor",{"_index":594,"title":{},"body":{"classes/EmptyFactory.html":{}}}],["constructor(o",{"_index":583,"title":{},"body":{"classes/Cell.html":{}}}],["constructor(oldrownum",{"_index":657,"title":{},"body":{"classes/RowChange.html":{}}}],["constructor(priv",{"_index":599,"title":{},"body":{"classes/EmptyFactory.html":{},"classes/InjectableFactory.html":{},"interfaces/EmptyConstructor.html":{},"interfaces/InjectableConstructor.html":{}}}],["contain",{"_index":135,"title":{},"body":{"index.html":{}}}],["contract",{"_index":476,"title":{},"body":{"license.html":{}}}],["conveni",{"_index":620,"title":{},"body":{"classes/HtmlUtil.html":{}}}],["copi",{"_index":52,"title":{},"body":{"index.html":{},"license.html":{}}}],["copyright",{"_index":427,"title":{},"body":{"license.html":{},"modules/GridModule.html":{}}}],["creat",{"_index":209,"title":{},"body":{"index.html":{}}}],["createelement(render",{"_index":296,"title":{},"body":{"index.html":{}}}],["current",{"_index":100,"title":{},"body":{"index.html":{}}}],["custom",{"_index":54,"title":{},"body":{"index.html":{},"changelog.html":{}}}],["customiz",{"_index":374,"title":{},"body":{"changelog.html":{}}}],["damag",{"_index":473,"title":{},"body":{"license.html":{}}}],["data",{"_index":31,"title":{},"body":{"index.html":{},"changelog.html":{},"classes/Cell.html":{}}}],["data.celldblclick",{"_index":241,"title":{},"body":{"index.html":{}}}],["data.datacal",{"_index":127,"title":{},"body":{"index.html":{}}}],["data.rowclick",{"_index":242,"title":{},"body":{"index.html":{}}}],["data.rowdblclick",{"_index":243,"title":{},"body":{"index.html":{}}}],["data.warn",{"_index":244,"title":{},"body":{"index.html":{}}}],["data/config/ev",{"_index":410,"title":{},"body":{"changelog.html":{}}}],["datarequest",{"_index":111,"title":{},"body":{"index.html":{}}}],["datatyp",{"_index":320,"title":{},"body":{"index.html":{}}}],["date",{"_index":318,"title":{},"body":{"index.html":{},"changelog.html":{}}}],["dateeditrender",{"_index":323,"title":{},"body":{"index.html":{},"overview.html":{},"modules/GridModule.html":{}}}],["dblclick",{"_index":687,"title":{},"body":{"interfaces/DblClickListener.html":{}}}],["dblclick(ev",{"_index":688,"title":{},"body":{"interfaces/DblClickListener.html":{}}}],["dblclicklisten",{"_index":684,"title":{"interfaces/DblClickListener.html":{}},"body":{"interfaces/DblClickListener.html":{}}}],["deal",{"_index":444,"title":{},"body":{"license.html":{}}}],["declar",{"_index":340,"title":{},"body":{"overview.html":{},"modules/GridModule.html":{}}}],["default",{"_index":35,"title":{},"body":{"index.html":{},"changelog.html":{},"injectables/GridMessageService.html":{},"classes/Cell.html":{},"classes/FormatterParser.html":{},"classes/SortInfo.html":{},"miscellaneous/variables.html":{}}}],["default.externalfilt",{"_index":174,"title":{},"body":{"index.html":{}}}],["defin",{"_index":539,"title":{},"body":{"injectables/GridMessageService.html":{},"pipes/IsFixedPipe.html":{},"pipes/IsGroupPipe.html":{},"pipes/IsRowVisiblePipe.html":{},"pipes/IsVisiblePipe.html":{},"classes/Cell.html":{},"classes/EmptyFactory.html":{},"classes/FormatterParser.html":{},"classes/HtmlUtil.html":{},"classes/InjectableFactory.html":{},"classes/RowChange.html":{},"classes/SortInfo.html":{},"interfaces/ClickListener.html":{},"interfaces/DblClickListener.html":{},"interfaces/Dictionary.html":{},"interfaces/EventListenerArg.html":{},"interfaces/MouseDownListener.html":{},"interfaces/MouseDragListener.html":{},"interfaces/MouseOutListener.html":{},"interfaces/MouseOverListener.html":{},"interfaces/MouseUpListener.html":{}}}],["delay",{"_index":261,"title":{},"body":{"index.html":{}}}],["demo",{"_index":21,"title":{},"body":{"index.html":{}}}],["depend",{"_index":1,"title":{"dependencies.html":{}},"body":{"dependencies.html":{},"index.html":{},"overview.html":{},"modules/GridModule.html":{}}}],["descript",{"_index":578,"title":{},"body":{"classes/Cell.html":{},"classes/EmptyFactory.html":{},"classes/FormatterParser.html":{},"classes/HtmlUtil.html":{},"classes/InjectableFactory.html":{}}}],["design",{"_index":24,"title":{},"body":{"index.html":{}}}],["determin",{"_index":240,"title":{},"body":{"index.html":{}}}],["dictionari",{"_index":690,"title":{"interfaces/Dictionary.html":{}},"body":{"interfaces/Dictionary.html":{}}}],["differ",{"_index":311,"title":{},"body":{"index.html":{}}}],["dirti",{"_index":197,"title":{},"body":{"index.html":{},"classes/Cell.html":{}}}],["disabl",{"_index":167,"title":{},"body":{"index.html":{}}}],["display",{"_index":218,"title":{},"body":{"index.html":{},"changelog.html":{},"interfaces/Dictionary.html":{}}}],["dist",{"_index":50,"title":{},"body":{"index.html":{}}}],["distribut",{"_index":448,"title":{},"body":{"license.html":{}}}],["dob",{"_index":317,"title":{},"body":{"index.html":{}}}],["document",{"_index":442,"title":{},"body":{"license.html":{}}}],["don't",{"_index":202,"title":{},"body":{"index.html":{}}}],["down.interface.t",{"_index":700,"title":{},"body":{"interfaces/MouseDownListener.html":{}}}],["down.interface.ts:3",{"_index":703,"title":{},"body":{"interfaces/MouseDownListener.html":{}}}],["drag",{"_index":376,"title":{},"body":{"changelog.html":{}}}],["drag.interface.t",{"_index":705,"title":{},"body":{"interfaces/MouseDragListener.html":{}}}],["drag.interface.ts:3",{"_index":708,"title":{},"body":{"interfaces/MouseDragListener.html":{}}}],["drop",{"_index":378,"title":{},"body":{"changelog.html":{}}}],["e",{"_index":630,"title":{},"body":{"classes/HtmlUtil.html":{}}}],["e.g",{"_index":149,"title":{},"body":{"index.html":{}}}],["e.id",{"_index":636,"title":{},"body":{"classes/HtmlUtil.html":{}}}],["e.id.startswith(id",{"_index":637,"title":{},"body":{"classes/HtmlUtil.html":{}}}],["e.parentel",{"_index":638,"title":{},"body":{"classes/HtmlUtil.html":{}}}],["each",{"_index":288,"title":{},"body":{"index.html":{}}}],["edit",{"_index":506,"title":{},"body":{"modules/GridModule.html":{}}}],["editrender",{"_index":322,"title":{},"body":{"index.html":{}}}],["element",{"_index":623,"title":{},"body":{"classes/HtmlUtil.html":{}}}],["emit",{"_index":193,"title":{},"body":{"index.html":{}}}],["emitt",{"_index":375,"title":{},"body":{"changelog.html":{}}}],["empti",{"_index":379,"title":{},"body":{"changelog.html":{}}}],["emptyconstructor",{"_index":595,"title":{"interfaces/EmptyConstructor.html":{}},"body":{"classes/EmptyFactory.html":{},"interfaces/EmptyConstructor.html":{}}}],["emptyfactori",{"_index":589,"title":{"classes/EmptyFactory.html":{}},"body":{"classes/EmptyFactory.html":{},"interfaces/EmptyConstructor.html":{}}}],["entrycompon",{"_index":485,"title":{},"body":{"modules/GridModule.html":{}}}],["error",{"_index":535,"title":{},"body":{"injectables/GridMessageService.html":{}}}],["error(messag",{"_index":538,"title":{},"body":{"injectables/GridMessageService.html":{}}}],["error.3.0.0",{"_index":381,"title":{},"body":{"changelog.html":{}}}],["especi",{"_index":416,"title":{},"body":{"changelog.html":{}}}],["event",{"_index":90,"title":{},"body":{"index.html":{},"changelog.html":{},"license.html":{},"interfaces/ClickListener.html":{},"interfaces/DblClickListener.html":{},"interfaces/MouseDownListener.html":{},"interfaces/MouseDragListener.html":{},"interfaces/MouseOutListener.html":{},"interfaces/MouseOverListener.html":{},"interfaces/MouseUpListener.html":{}}}],["event.service.t",{"_index":730,"title":{},"body":{"miscellaneous/variables.html":{}}}],["eventlisten",{"_index":644,"title":{},"body":{"classes/InjectableFactory.html":{},"interfaces/InjectableConstructor.html":{}}}],["eventlistenerarg",{"_index":204,"title":{"interfaces/EventListenerArg.html":{}},"body":{"index.html":{},"interfaces/EventListenerArg.html":{}}}],["events.mod",{"_index":207,"title":{},"body":{"index.html":{}}}],["exampl",{"_index":104,"title":{},"body":{"index.html":{}}}],["expect",{"_index":33,"title":{},"body":{"index.html":{},"classes/InjectableFactory.html":{},"interfaces/InjectableConstructor.html":{}}}],["export",{"_index":341,"title":{},"body":{"overview.html":{},"modules/GridModule.html":{},"injectables/GridMessageService.html":{},"pipes/IsFixedPipe.html":{},"pipes/IsGroupPipe.html":{},"pipes/IsRowVisiblePipe.html":{},"pipes/IsVisiblePipe.html":{},"classes/Cell.html":{},"classes/EmptyFactory.html":{},"classes/FormatterParser.html":{},"classes/HtmlUtil.html":{},"classes/InjectableFactory.html":{},"classes/RowChange.html":{},"classes/SortInfo.html":{},"interfaces/ClickListener.html":{},"interfaces/DblClickListener.html":{},"interfaces/Dictionary.html":{},"interfaces/EmptyConstructor.html":{},"interfaces/EventListenerArg.html":{},"interfaces/InjectableConstructor.html":{},"interfaces/MouseDownListener.html":{},"interfaces/MouseDragListener.html":{},"interfaces/MouseOutListener.html":{},"interfaces/MouseOverListener.html":{},"interfaces/MouseUpListener.html":{}}}],["express",{"_index":462,"title":{},"body":{"license.html":{}}}],["extend",{"_index":312,"title":{},"body":{"index.html":{}}}],["extern",{"_index":85,"title":{},"body":{"index.html":{},"changelog.html":{}}}],["externalconfig",{"_index":388,"title":{},"body":{"changelog.html":{}}}],["externaldata(this.datageneratorservice.getdata(250",{"_index":117,"title":{},"body":{"index.html":{}}}],["externalinfo",{"_index":112,"title":{},"body":{"index.html":{}}}],["externalinfo)).delay(500",{"_index":118,"title":{},"body":{"index.html":{}}}],["fals",{"_index":143,"title":{},"body":{"index.html":{},"pipes/IsFixedPipe.html":{},"classes/Cell.html":{}}}],["featur",{"_index":26,"title":{},"body":{"index.html":{},"changelog.html":{}}}],["femal",{"_index":328,"title":{},"body":{"index.html":{}}}],["field",{"_index":225,"title":{},"body":{"index.html":{},"classes/SortInfo.html":{}}}],["file",{"_index":443,"title":{},"body":{"license.html":{},"modules/GridModule.html":{},"injectables/GridMessageService.html":{},"pipes/IsFixedPipe.html":{},"pipes/IsGroupPipe.html":{},"pipes/IsRowVisiblePipe.html":{},"pipes/IsVisiblePipe.html":{},"classes/Cell.html":{},"classes/EmptyFactory.html":{},"classes/FormatterParser.html":{},"classes/HtmlUtil.html":{},"classes/InjectableFactory.html":{},"classes/RowChange.html":{},"classes/SortInfo.html":{},"interfaces/ClickListener.html":{},"interfaces/DblClickListener.html":{},"interfaces/Dictionary.html":{},"interfaces/EmptyConstructor.html":{},"interfaces/EventListenerArg.html":{},"interfaces/InjectableConstructor.html":{},"interfaces/MouseDownListener.html":{},"interfaces/MouseDragListener.html":{},"interfaces/MouseOutListener.html":{},"interfaces/MouseOverListener.html":{},"interfaces/MouseUpListener.html":{}}}],["filter",{"_index":69,"title":{},"body":{"index.html":{},"changelog.html":{},"modules/GridModule.html":{}}}],["filterev",{"_index":265,"title":{},"body":{"index.html":{}}}],["filterinfo",{"_index":252,"title":{},"body":{"index.html":{}}}],["filterrender",{"_index":314,"title":{},"body":{"index.html":{}}}],["fire",{"_index":258,"title":{},"body":{"index.html":{}}}],["fired.datafilt",{"_index":266,"title":{},"body":{"index.html":{}}}],["fired.datasort",{"_index":272,"title":{},"body":{"index.html":{}}}],["first",{"_index":77,"title":{},"body":{"index.html":{}}}],["firstnam",{"_index":315,"title":{},"body":{"index.html":{}}}],["fit",{"_index":465,"title":{},"body":{"license.html":{}}}],["fix",{"_index":162,"title":{},"body":{"index.html":{},"changelog.html":{},"pipes/IsFixedPipe.html":{}}}],["fixed.pip",{"_index":504,"title":{},"body":{"modules/GridModule.html":{}}}],["fixed.pipe.t",{"_index":557,"title":{},"body":{"pipes/IsFixedPipe.html":{}}}],["fixed.pipe.ts:10",{"_index":562,"title":{},"body":{"pipes/IsFixedPipe.html":{}}}],["fixes.1.0.0",{"_index":423,"title":{},"body":{"changelog.html":{}}}],["flag",{"_index":144,"title":{},"body":{"index.html":{}}}],["flow",{"_index":215,"title":{},"body":{"index.html":{}}}],["folder",{"_index":51,"title":{},"body":{"index.html":{}}}],["follow",{"_index":278,"title":{},"body":{"index.html":{},"license.html":{}}}],["format",{"_index":235,"title":{},"body":{"index.html":{}}}],["format/pars",{"_index":390,"title":{},"body":{"changelog.html":{}}}],["formatt",{"_index":604,"title":{},"body":{"classes/FormatterParser.html":{}}}],["formatterpars",{"_index":601,"title":{"classes/FormatterParser.html":{}},"body":{"classes/FormatterParser.html":{}}}],["formatting/pars",{"_index":415,"title":{},"body":{"changelog.html":{}}}],["formatvalu",{"_index":607,"title":{},"body":{"classes/FormatterParser.html":{}}}],["formatvalue(valu",{"_index":610,"title":{},"body":{"classes/FormatterParser.html":{}}}],["formsmodul",{"_index":495,"title":{},"body":{"modules/GridModule.html":{}}}],["forroot(globalconfig",{"_index":524,"title":{},"body":{"modules/GridModule.html":{}}}],["free",{"_index":436,"title":{},"body":{"license.html":{}}}],["from.nvisiblerow",{"_index":186,"title":{},"body":{"index.html":{}}}],["full",{"_index":25,"title":{},"body":{"index.html":{}}}],["function",{"_index":109,"title":{},"body":{"index.html":{},"changelog.html":{}}}],["furnish",{"_index":453,"title":{},"body":{"license.html":{}}}],["gender",{"_index":325,"title":{},"body":{"index.html":{}}}],["gener",{"_index":382,"title":{},"body":{"changelog.html":{},"classes/EmptyFactory.html":{},"classes/InjectableFactory.html":{},"interfaces/InjectableConstructor.html":{}}}],["generic.2.1.1",{"_index":391,"title":{},"body":{"changelog.html":{}}}],["get",{"_index":11,"title":{"index.html":{},"changelog.html":{},"license.html":{}},"body":{"index.html":{}}}],["getasc",{"_index":665,"title":{},"body":{"classes/SortInfo.html":{}}}],["getfield",{"_index":666,"title":{},"body":{"classes/SortInfo.html":{}}}],["getid",{"_index":624,"title":{},"body":{"classes/HtmlUtil.html":{}}}],["getid(",{"_index":627,"title":{},"body":{"classes/HtmlUtil.html":{}}}],["getidel",{"_index":625,"title":{},"body":{"classes/HtmlUtil.html":{}}}],["getidelement(",{"_index":632,"title":{},"body":{"classes/HtmlUtil.html":{}}}],["getinst",{"_index":593,"title":{},"body":{"classes/EmptyFactory.html":{},"classes/InjectableFactory.html":{},"interfaces/EmptyConstructor.html":{},"interfaces/InjectableConstructor.html":{}}}],["getloc",{"_index":626,"title":{},"body":{"classes/HtmlUtil.html":{}}}],["getlocation(",{"_index":634,"title":{},"body":{"classes/HtmlUtil.html":{}}}],["getmessageobserv",{"_index":550,"title":{},"body":{"injectables/GridMessageService.html":{}}}],["github",{"_index":22,"title":{},"body":{"index.html":{}}}],["global",{"_index":132,"title":{},"body":{"index.html":{},"changelog.html":{}}}],["global.servic",{"_index":519,"title":{},"body":{"modules/GridModule.html":{}}}],["globalconfig",{"_index":525,"title":{},"body":{"modules/GridModule.html":{}}}],["grant",{"_index":435,"title":{},"body":{"license.html":{}}}],["grid",{"_index":18,"title":{},"body":{"index.html":{},"changelog.html":{}}}],["grid\";@ngmodul",{"_index":44,"title":{},"body":{"index.html":{}}}],["grid'",{"_index":148,"title":{},"body":{"index.html":{}}}],["grid.cellclick",{"_index":239,"title":{},"body":{"index.html":{}}}],["grid.compon",{"_index":498,"title":{},"body":{"modules/GridModule.html":{}}}],["grid.groupbi",{"_index":165,"title":{},"body":{"index.html":{}}}],["grid.linkedgroup",{"_index":138,"title":{},"body":{"index.html":{}}}],["grid.output",{"_index":221,"title":{},"body":{"index.html":{}}}],["grid.them",{"_index":157,"title":{},"body":{"index.html":{}}}],["gridcompon",{"_index":346,"title":{},"body":{"overview.html":{},"modules/GridModule.html":{}}}],["grideventservic",{"_index":357,"title":{},"body":{"overview.html":{},"modules/GridModule.html":{}}}],["gridglobalservic",{"_index":517,"title":{},"body":{"modules/GridModule.html":{}}}],["gridmessageservic",{"_index":358,"title":{"injectables/GridMessageService.html":{}},"body":{"overview.html":{},"modules/GridModule.html":{},"injectables/GridMessageService.html":{}}}],["gridmodul",{"_index":43,"title":{"modules/GridModule.html":{}},"body":{"index.html":{},"overview.html":{},"modules.html":{},"modules/GridModule.html":{}}}],["gridmodule.forroot",{"_index":45,"title":{},"body":{"index.html":{}}}],["gridservic",{"_index":356,"title":{},"body":{"overview.html":{},"modules/GridModule.html":{}}}],["group",{"_index":82,"title":{},"body":{"index.html":{}}}],["group.pip",{"_index":503,"title":{},"body":{"modules/GridModule.html":{}}}],["group.pipe.t",{"_index":566,"title":{},"body":{"pipes/IsGroupPipe.html":{}}}],["group.pipe.ts:9",{"_index":568,"title":{},"body":{"pipes/IsGroupPipe.html":{}}}],["groupbycollaps",{"_index":168,"title":{},"body":{"index.html":{}}}],["handl",{"_index":27,"title":{},"body":{"index.html":{}}}],["hci",{"_index":20,"title":{},"body":{"index.html":{}}}],["header",{"_index":68,"title":{},"body":{"index.html":{}}}],["header.compon",{"_index":500,"title":{},"body":{"modules/GridModule.html":{}}}],["height",{"_index":400,"title":{},"body":{"changelog.html":{}}}],["here",{"_index":102,"title":{},"body":{"index.html":{}}}],["herebi",{"_index":434,"title":{},"body":{"license.html":{}}}],["hidden",{"_index":172,"title":{},"body":{"index.html":{}}}],["high",{"_index":306,"title":{},"body":{"index.html":{}}}],["holder",{"_index":470,"title":{},"body":{"license.html":{},"classes/Cell.html":{}}}],["html",{"_index":130,"title":{},"body":{"index.html":{}}}],["htmlelement",{"_index":628,"title":{},"body":{"classes/HtmlUtil.html":{}}}],["htmlelement;a",{"_index":298,"title":{},"body":{"index.html":{}}}],["htmlutil",{"_index":617,"title":{"classes/HtmlUtil.html":{}},"body":{"classes/HtmlUtil.html":{}}}],["http",{"_index":380,"title":{},"body":{"changelog.html":{}}}],["huntsman",{"_index":14,"title":{},"body":{"index.html":{},"license.html":{},"modules/GridModule.html":{}}}],["ic",{"_index":648,"title":{},"body":{"classes/InjectableFactory.html":{},"interfaces/InjectableConstructor.html":{}}}],["id",{"_index":131,"title":{},"body":{"index.html":{},"classes/HtmlUtil.html":{}}}],["implement",{"_index":107,"title":{},"body":{"index.html":{},"pipes/IsFixedPipe.html":{},"pipes/IsGroupPipe.html":{},"pipes/IsRowVisiblePipe.html":{},"pipes/IsVisiblePipe.html":{},"classes/InjectableFactory.html":{},"interfaces/InjectableConstructor.html":{}}}],["impli",{"_index":463,"title":{},"body":{"license.html":{}}}],["import",{"_index":42,"title":{},"body":{"index.html":{},"modules/GridModule.html":{},"injectables/GridMessageService.html":{},"pipes/IsFixedPipe.html":{},"pipes/IsGroupPipe.html":{},"pipes/IsRowVisiblePipe.html":{},"pipes/IsVisiblePipe.html":{},"classes/HtmlUtil.html":{},"classes/InjectableFactory.html":{},"interfaces/EventListenerArg.html":{},"interfaces/InjectableConstructor.html":{}}}],["improv",{"_index":414,"title":{},"body":{"changelog.html":{}}}],["in.onconfigchang",{"_index":237,"title":{},"body":{"index.html":{}}}],["includ",{"_index":257,"title":{},"body":{"index.html":{},"license.html":{}}}],["index",{"_index":13,"title":{"index.html":{}},"body":{"injectables/GridMessageService.html":{},"classes/Cell.html":{},"classes/EmptyFactory.html":{},"classes/FormatterParser.html":{},"classes/HtmlUtil.html":{},"classes/InjectableFactory.html":{},"classes/RowChange.html":{},"classes/SortInfo.html":{},"interfaces/ClickListener.html":{},"interfaces/DblClickListener.html":{},"interfaces/Dictionary.html":{},"interfaces/EventListenerArg.html":{},"interfaces/MouseDownListener.html":{},"interfaces/MouseDragListener.html":{},"interfaces/MouseOutListener.html":{},"interfaces/MouseOverListener.html":{},"interfaces/MouseUpListener.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":483,"title":{},"body":{"modules/GridModule.html":{},"injectables/GridMessageService.html":{},"pipes/IsFixedPipe.html":{},"pipes/IsGroupPipe.html":{},"pipes/IsRowVisiblePipe.html":{},"pipes/IsVisiblePipe.html":{},"classes/Cell.html":{},"classes/EmptyFactory.html":{},"classes/FormatterParser.html":{},"classes/HtmlUtil.html":{},"classes/InjectableFactory.html":{},"classes/RowChange.html":{},"classes/SortInfo.html":{},"interfaces/ClickListener.html":{},"interfaces/DblClickListener.html":{},"interfaces/Dictionary.html":{},"interfaces/EmptyConstructor.html":{},"interfaces/EventListenerArg.html":{},"interfaces/InjectableConstructor.html":{},"interfaces/MouseDownListener.html":{},"interfaces/MouseDragListener.html":{},"interfaces/MouseOutListener.html":{},"interfaces/MouseOverListener.html":{},"interfaces/MouseUpListener.html":{}}}],["info.id",{"_index":129,"title":{},"body":{"index.html":{}}}],["info.t",{"_index":663,"title":{},"body":{"classes/SortInfo.html":{}}}],["info.ts:13",{"_index":670,"title":{},"body":{"classes/SortInfo.html":{}}}],["info.ts:17",{"_index":674,"title":{},"body":{"classes/SortInfo.html":{}}}],["info.ts:2",{"_index":675,"title":{},"body":{"classes/SortInfo.html":{}}}],["info.ts:3",{"_index":676,"title":{},"body":{"classes/SortInfo.html":{}}}],["info.ts:5",{"_index":669,"title":{},"body":{"classes/SortInfo.html":{}}}],["info.ts:9",{"_index":672,"title":{},"body":{"classes/SortInfo.html":{}}}],["initi",{"_index":424,"title":{},"body":{"changelog.html":{}}}],["inject",{"_index":364,"title":{"injectables/GridMessageService.html":{}},"body":{"overview.html":{},"injectables/GridMessageService.html":{}}}],["injectableconstructor",{"_index":646,"title":{"interfaces/InjectableConstructor.html":{}},"body":{"classes/InjectableFactory.html":{},"interfaces/InjectableConstructor.html":{}}}],["injectablefactori",{"_index":641,"title":{"classes/InjectableFactory.html":{}},"body":{"classes/InjectableFactory.html":{},"interfaces/InjectableConstructor.html":{}}}],["injector",{"_index":643,"title":{},"body":{"classes/InjectableFactory.html":{},"interfaces/InjectableConstructor.html":{}}}],["input",{"_index":119,"title":{},"body":{"index.html":{}}}],["instanc",{"_index":277,"title":{},"body":{"index.html":{}}}],["instanti",{"_index":591,"title":{},"body":{"classes/EmptyFactory.html":{},"classes/InjectableFactory.html":{},"interfaces/InjectableConstructor.html":{}}}],["instead",{"_index":60,"title":{},"body":{"index.html":{}}}],["institut",{"_index":430,"title":{},"body":{"license.html":{},"modules/GridModule.html":{}}}],["institute'",{"_index":16,"title":{},"body":{"index.html":{}}}],["interfac",{"_index":293,"title":{"interfaces/ClickListener.html":{},"interfaces/DblClickListener.html":{},"interfaces/Dictionary.html":{},"interfaces/EmptyConstructor.html":{},"interfaces/EventListenerArg.html":{},"interfaces/InjectableConstructor.html":{},"interfaces/MouseDownListener.html":{},"interfaces/MouseDragListener.html":{},"interfaces/MouseOutListener.html":{},"interfaces/MouseOverListener.html":{},"interfaces/MouseUpListener.html":{}},"body":{"index.html":{},"overview.html":{},"classes/EmptyFactory.html":{},"classes/InjectableFactory.html":{},"interfaces/ClickListener.html":{},"interfaces/DblClickListener.html":{},"interfaces/Dictionary.html":{},"interfaces/EmptyConstructor.html":{},"interfaces/EventListenerArg.html":{},"interfaces/InjectableConstructor.html":{},"interfaces/MouseDownListener.html":{},"interfaces/MouseDragListener.html":{},"interfaces/MouseOutListener.html":{},"interfaces/MouseOverListener.html":{},"interfaces/MouseUpListener.html":{}}}],["intro",{"_index":23,"title":{},"body":{"index.html":{}}}],["introduc",{"_index":334,"title":{},"body":{"index.html":{}}}],["isfix",{"_index":559,"title":{},"body":{"pipes/IsFixedPipe.html":{}}}],["isfixedpip",{"_index":350,"title":{"pipes/IsFixedPipe.html":{}},"body":{"overview.html":{},"modules/GridModule.html":{},"pipes/IsFixedPipe.html":{}}}],["isgroup",{"_index":567,"title":{},"body":{"pipes/IsGroupPipe.html":{}}}],["isgrouppip",{"_index":349,"title":{"pipes/IsGroupPipe.html":{}},"body":{"overview.html":{},"modules/GridModule.html":{},"pipes/IsGroupPipe.html":{}}}],["isrowvis",{"_index":572,"title":{},"body":{"pipes/IsRowVisiblePipe.html":{}}}],["isrowvisiblepip",{"_index":351,"title":{"pipes/IsRowVisiblePipe.html":{}},"body":{"overview.html":{},"modules/GridModule.html":{},"pipes/IsRowVisiblePipe.html":{}}}],["issu",{"_index":332,"title":{},"body":{"index.html":{}}}],["isvis",{"_index":576,"title":{},"body":{"pipes/IsVisiblePipe.html":{}}}],["isvisiblepip",{"_index":348,"title":{"pipes/IsVisiblePipe.html":{}},"body":{"overview.html":{},"modules/GridModule.html":{},"pipes/IsVisiblePipe.html":{}}}],["j",{"_index":224,"title":{},"body":{"index.html":{}}}],["json",{"_index":134,"title":{},"body":{"index.html":{}}}],["key",{"_index":206,"title":{},"body":{"index.html":{},"classes/Cell.html":{}}}],["key1",{"_index":249,"title":{},"body":{"index.html":{}}}],["key2",{"_index":250,"title":{},"body":{"index.html":{}}}],["keyword",{"_index":404,"title":{},"body":{"changelog.html":{}}}],["kind",{"_index":461,"title":{},"body":{"license.html":{}}}],["known",{"_index":331,"title":{},"body":{"index.html":{}}}],["lab",{"_index":300,"title":{},"body":{"index.html":{}}}],["last",{"_index":78,"title":{},"body":{"index.html":{}}}],["left",{"_index":163,"title":{},"body":{"index.html":{}}}],["legend",{"_index":339,"title":{},"body":{"overview.html":{},"modules/GridModule.html":{}}}],["liabil",{"_index":474,"title":{},"body":{"license.html":{}}}],["liabl",{"_index":471,"title":{},"body":{"license.html":{}}}],["librari",{"_index":19,"title":{},"body":{"index.html":{}}}],["licens",{"_index":407,"title":{"license.html":{}},"body":{"changelog.html":{}}}],["limit",{"_index":189,"title":{},"body":{"index.html":{},"license.html":{}}}],["link",{"_index":140,"title":{},"body":{"index.html":{}}}],["list",{"_index":101,"title":{},"body":{"index.html":{},"pipes/IsFixedPipe.html":{},"pipes/IsGroupPipe.html":{},"pipes/IsRowVisiblePipe.html":{},"pipes/IsVisiblePipe.html":{}}}],["list.filter((o",{"_index":564,"title":{},"body":{"pipes/IsFixedPipe.html":{},"pipes/IsGroupPipe.html":{},"pipes/IsRowVisiblePipe.html":{},"pipes/IsVisiblePipe.html":{}}}],["listen",{"_index":91,"title":{},"body":{"index.html":{},"changelog.html":{},"interfaces/EventListenerArg.html":{}}}],["load",{"_index":201,"title":{},"body":{"index.html":{},"changelog.html":{}}}],["locat",{"_index":229,"title":{},"body":{"index.html":{}}}],["log",{"_index":369,"title":{},"body":{"changelog.html":{}}}],["low",{"_index":304,"title":{},"body":{"index.html":{}}}],["male",{"_index":329,"title":{},"body":{"index.html":{}}}],["manag",{"_index":581,"title":{},"body":{"classes/Cell.html":{}}}],["mani",{"_index":99,"title":{},"body":{"index.html":{}}}],["match",{"_index":10,"title":{},"body":{"dependencies.html":{},"index.html":{},"overview.html":{},"changelog.html":{},"license.html":{},"modules.html":{},"modules/GridModule.html":{},"injectables/GridMessageService.html":{},"pipes/IsFixedPipe.html":{},"pipes/IsGroupPipe.html":{},"pipes/IsRowVisiblePipe.html":{},"pipes/IsVisiblePipe.html":{},"classes/Cell.html":{},"classes/EmptyFactory.html":{},"classes/FormatterParser.html":{},"classes/HtmlUtil.html":{},"classes/InjectableFactory.html":{},"classes/RowChange.html":{},"classes/SortInfo.html":{},"interfaces/ClickListener.html":{},"interfaces/DblClickListener.html":{},"interfaces/Dictionary.html":{},"interfaces/EmptyConstructor.html":{},"interfaces/EventListenerArg.html":{},"interfaces/InjectableConstructor.html":{},"interfaces/MouseDownListener.html":{},"interfaces/MouseDragListener.html":{},"interfaces/MouseOutListener.html":{},"interfaces/MouseOverListener.html":{},"interfaces/MouseUpListener.html":{},"miscellaneous/variables.html":{}}}],["menu.compon",{"_index":516,"title":{},"body":{"modules/GridModule.html":{}}}],["merchant",{"_index":464,"title":{},"body":{"license.html":{}}}],["merg",{"_index":447,"title":{},"body":{"license.html":{}}}],["messag",{"_index":245,"title":{},"body":{"index.html":{},"injectables/GridMessageService.html":{}}}],["message.service.t",{"_index":529,"title":{},"body":{"injectables/GridMessageService.html":{}}}],["message.service.ts:10",{"_index":546,"title":{},"body":{"injectables/GridMessageService.html":{}}}],["message.service.ts:12",{"_index":540,"title":{},"body":{"injectables/GridMessageService.html":{}}}],["message.service.ts:16",{"_index":544,"title":{},"body":{"injectables/GridMessageService.html":{}}}],["message.service.ts:20",{"_index":551,"title":{},"body":{"injectables/GridMessageService.html":{}}}],["message.service.ts:8",{"_index":547,"title":{},"body":{"injectables/GridMessageService.html":{}}}],["message.service.ts:9",{"_index":549,"title":{},"body":{"injectables/GridMessageService.html":{}}}],["messageobserv",{"_index":537,"title":{},"body":{"injectables/GridMessageService.html":{}}}],["metadata",{"_index":558,"title":{},"body":{"pipes/IsFixedPipe.html":{},"pipes/IsGroupPipe.html":{},"pipes/IsRowVisiblePipe.html":{},"pipes/IsVisiblePipe.html":{},"classes/Cell.html":{}}}],["method",{"_index":294,"title":{},"body":{"index.html":{},"injectables/GridMessageService.html":{},"pipes/IsFixedPipe.html":{},"pipes/IsGroupPipe.html":{},"pipes/IsRowVisiblePipe.html":{},"pipes/IsVisiblePipe.html":{},"classes/EmptyFactory.html":{},"classes/FormatterParser.html":{},"classes/HtmlUtil.html":{},"classes/InjectableFactory.html":{},"classes/SortInfo.html":{},"interfaces/ClickListener.html":{},"interfaces/DblClickListener.html":{},"interfaces/MouseDownListener.html":{},"interfaces/MouseDragListener.html":{},"interfaces/MouseOutListener.html":{},"interfaces/MouseOverListener.html":{},"interfaces/MouseUpListener.html":{}}}],["miscellan",{"_index":724,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["mm/dd/yyyi",{"_index":321,"title":{},"body":{"index.html":{}}}],["mock",{"_index":110,"title":{},"body":{"index.html":{}}}],["mode",{"_index":210,"title":{},"body":{"index.html":{}}}],["modif",{"_index":606,"title":{},"body":{"classes/FormatterParser.html":{}}}],["modifi",{"_index":147,"title":{},"body":{"index.html":{},"license.html":{}}}],["modul",{"_index":275,"title":{"modules.html":{},"modules/GridModule.html":{}},"body":{"index.html":{},"overview.html":{},"modules.html":{},"modules/GridModule.html":{}}}],["modulewithprovid",{"_index":490,"title":{},"body":{"modules/GridModule.html":{}}}],["moment",{"_index":7,"title":{},"body":{"dependencies.html":{}}}],["more",{"_index":84,"title":{},"body":{"index.html":{},"changelog.html":{}}}],["mousedown",{"_index":701,"title":{},"body":{"interfaces/MouseDownListener.html":{}}}],["mousedown(ev",{"_index":702,"title":{},"body":{"interfaces/MouseDownListener.html":{}}}],["mousedownlisten",{"_index":698,"title":{"interfaces/MouseDownListener.html":{}},"body":{"interfaces/MouseDownListener.html":{}}}],["mousedrag",{"_index":706,"title":{},"body":{"interfaces/MouseDragListener.html":{}}}],["mousedrag(ev",{"_index":707,"title":{},"body":{"interfaces/MouseDragListener.html":{}}}],["mousedraglisten",{"_index":704,"title":{"interfaces/MouseDragListener.html":{}},"body":{"interfaces/MouseDragListener.html":{}}}],["mouseev",{"_index":682,"title":{},"body":{"interfaces/ClickListener.html":{},"interfaces/DblClickListener.html":{},"interfaces/MouseDownListener.html":{},"interfaces/MouseDragListener.html":{},"interfaces/MouseOutListener.html":{},"interfaces/MouseOverListener.html":{},"interfaces/MouseUpListener.html":{}}}],["mouseout",{"_index":711,"title":{},"body":{"interfaces/MouseOutListener.html":{}}}],["mouseout(ev",{"_index":712,"title":{},"body":{"interfaces/MouseOutListener.html":{}}}],["mouseoutlisten",{"_index":709,"title":{"interfaces/MouseOutListener.html":{}},"body":{"interfaces/MouseOutListener.html":{}}}],["mouseov",{"_index":716,"title":{},"body":{"interfaces/MouseOverListener.html":{}}}],["mouseover(ev",{"_index":717,"title":{},"body":{"interfaces/MouseOverListener.html":{}}}],["mouseoverlisten",{"_index":714,"title":{"interfaces/MouseOverListener.html":{}},"body":{"interfaces/MouseOverListener.html":{}}}],["mouseup",{"_index":721,"title":{},"body":{"interfaces/MouseUpListener.html":{}}}],["mouseup(ev",{"_index":722,"title":{},"body":{"interfaces/MouseUpListener.html":{}}}],["mouseuplisten",{"_index":719,"title":{"interfaces/MouseUpListener.html":{}},"body":{"interfaces/MouseUpListener.html":{}}}],["move",{"_index":49,"title":{},"body":{"index.html":{}}}],["multi",{"_index":520,"title":{},"body":{"modules/GridModule.html":{}}}],["multipl",{"_index":256,"title":{},"body":{"index.html":{}}}],["n",{"_index":377,"title":{},"body":{"changelog.html":{}}}],["name",{"_index":139,"title":{},"body":{"index.html":{},"injectables/GridMessageService.html":{},"pipes/IsFixedPipe.html":{},"pipes/IsGroupPipe.html":{},"pipes/IsRowVisiblePipe.html":{},"pipes/IsVisiblePipe.html":{},"classes/Cell.html":{},"classes/EmptyFactory.html":{},"classes/FormatterParser.html":{},"classes/HtmlUtil.html":{},"classes/InjectableFactory.html":{},"classes/RowChange.html":{},"classes/SortInfo.html":{},"interfaces/ClickListener.html":{},"interfaces/DblClickListener.html":{},"interfaces/MouseDownListener.html":{},"interfaces/MouseDragListener.html":{},"interfaces/MouseOutListener.html":{},"interfaces/MouseOverListener.html":{},"interfaces/MouseUpListener.html":{}}}],["navig",{"_index":195,"title":{},"body":{"index.html":{}}}],["ndata",{"_index":268,"title":{},"body":{"index.html":{}}}],["nearli",{"_index":28,"title":{},"body":{"index.html":{}}}],["need",{"_index":580,"title":{},"body":{"classes/Cell.html":{}}}],["new",{"_index":196,"title":{},"body":{"index.html":{},"injectables/GridMessageService.html":{},"classes/EmptyFactory.html":{},"classes/InjectableFactory.html":{},"interfaces/EmptyConstructor.html":{},"interfaces/InjectableConstructor.html":{}}}],["new(injector",{"_index":651,"title":{},"body":{"classes/InjectableFactory.html":{},"interfaces/InjectableConstructor.html":{}}}],["newrownum",{"_index":655,"title":{},"body":{"classes/RowChange.html":{}}}],["newvalu",{"_index":228,"title":{},"body":{"index.html":{}}}],["next",{"_index":80,"title":{},"body":{"index.html":{}}}],["ng",{"_index":2,"title":{},"body":{"dependencies.html":{},"index.html":{},"modules/GridModule.html":{}}}],["ngbmodul",{"_index":497,"title":{},"body":{"modules/GridModule.html":{}}}],["ngbmodule.forroot",{"_index":522,"title":{},"body":{"modules/GridModule.html":{}}}],["ngmodul",{"_index":491,"title":{},"body":{"modules/GridModule.html":{}}}],["ngoninit",{"_index":113,"title":{},"body":{"index.html":{}}}],["nlab",{"_index":299,"title":{},"body":{"index.html":{}}}],["no_ev",{"_index":727,"title":{},"body":{"miscellaneous/variables.html":{}}}],["noninfring",{"_index":468,"title":{},"body":{"license.html":{}}}],["note",{"_index":98,"title":{},"body":{"index.html":{}}}],["notic",{"_index":456,"title":{},"body":{"license.html":{}}}],["npmignore.2.0.1",{"_index":405,"title":{},"body":{"changelog.html":{}}}],["npmpack",{"_index":58,"title":{},"body":{"index.html":{}}}],["npmpublish",{"_index":59,"title":{},"body":{"index.html":{}}}],["null",{"_index":639,"title":{},"body":{"classes/HtmlUtil.html":{},"classes/SortInfo.html":{}}}],["number",{"_index":178,"title":{},"body":{"index.html":{},"injectables/GridMessageService.html":{},"classes/Cell.html":{},"classes/RowChange.html":{},"miscellaneous/variables.html":{}}}],["numer",{"_index":422,"title":{},"body":{"changelog.html":{}}}],["o",{"_index":585,"title":{},"body":{"classes/Cell.html":{}}}],["o.isfix",{"_index":565,"title":{},"body":{"pipes/IsFixedPipe.html":{}}}],["o.isgroup",{"_index":569,"title":{},"body":{"pipes/IsGroupPipe.html":{}}}],["o.isutil",{"_index":570,"title":{},"body":{"pipes/IsGroupPipe.html":{}}}],["o.vis",{"_index":575,"title":{},"body":{"pipes/IsRowVisiblePipe.html":{},"pipes/IsVisiblePipe.html":{}}}],["object",{"_index":121,"title":{},"body":{"index.html":{},"classes/Cell.html":{}}}],["object.assign(thi",{"_index":588,"title":{},"body":{"classes/Cell.html":{}}}],["objects.fixedcolumn",{"_index":161,"title":{},"body":{"index.html":{}}}],["observ",{"_index":421,"title":{},"body":{"changelog.html":{},"injectables/GridMessageService.html":{}}}],["observable.of(new",{"_index":116,"title":{},"body":{"index.html":{}}}],["obtain",{"_index":439,"title":{},"body":{"license.html":{}}}],["old",{"_index":230,"title":{},"body":{"index.html":{}}}],["oldrownum",{"_index":656,"title":{},"body":{"classes/RowChange.html":{}}}],["oldvalu",{"_index":227,"title":{},"body":{"index.html":{}}}],["on",{"_index":83,"title":{},"body":{"index.html":{}}}],["oncellsav",{"_index":222,"title":{},"body":{"index.html":{}}}],["onrowsav",{"_index":194,"title":{},"body":{"index.html":{}}}],["option",{"_index":137,"title":{},"body":{"index.html":{},"injectables/GridMessageService.html":{},"pipes/IsFixedPipe.html":{},"pipes/IsGroupPipe.html":{},"pipes/IsRowVisiblePipe.html":{},"pipes/IsVisiblePipe.html":{},"classes/Cell.html":{},"classes/EmptyFactory.html":{},"classes/FormatterParser.html":{},"classes/HtmlUtil.html":{},"classes/InjectableFactory.html":{},"classes/RowChange.html":{},"classes/SortInfo.html":{},"interfaces/ClickListener.html":{},"interfaces/DblClickListener.html":{},"interfaces/EventListenerArg.html":{},"interfaces/MouseDownListener.html":{},"interfaces/MouseDragListener.html":{},"interfaces/MouseOutListener.html":{},"interfaces/MouseOverListener.html":{},"interfaces/MouseUpListener.html":{}}}],["origin",{"_index":236,"title":{},"body":{"index.html":{}}}],["originalrowdata",{"_index":234,"title":{},"body":{"index.html":{}}}],["otherwis",{"_index":478,"title":{},"body":{"license.html":{}}}],["out",{"_index":361,"title":{},"body":{"overview.html":{},"license.html":{},"modules/GridModule.html":{}}}],["out.interface.t",{"_index":710,"title":{},"body":{"interfaces/MouseOutListener.html":{}}}],["out.interface.ts:3",{"_index":713,"title":{},"body":{"interfaces/MouseOutListener.html":{}}}],["over.interface.t",{"_index":715,"title":{},"body":{"interfaces/MouseOverListener.html":{}}}],["over.interface.ts:3",{"_index":718,"title":{},"body":{"interfaces/MouseOverListener.html":{}}}],["overview",{"_index":338,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["pack",{"_index":62,"title":{},"body":{"index.html":{}}}],["packag",{"_index":0,"title":{"dependencies.html":{}},"body":{"index.html":{}}}],["package.json",{"_index":53,"title":{},"body":{"index.html":{}}}],["page",{"_index":74,"title":{},"body":{"index.html":{}}}],["paramet",{"_index":541,"title":{},"body":{"injectables/GridMessageService.html":{},"pipes/IsFixedPipe.html":{},"pipes/IsGroupPipe.html":{},"pipes/IsRowVisiblePipe.html":{},"pipes/IsVisiblePipe.html":{},"classes/Cell.html":{},"classes/EmptyFactory.html":{},"classes/FormatterParser.html":{},"classes/HtmlUtil.html":{},"classes/InjectableFactory.html":{},"classes/RowChange.html":{},"classes/SortInfo.html":{},"interfaces/ClickListener.html":{},"interfaces/DblClickListener.html":{},"interfaces/MouseDownListener.html":{},"interfaces/MouseDragListener.html":{},"interfaces/MouseOutListener.html":{},"interfaces/MouseOverListener.html":{},"interfaces/MouseUpListener.html":{}}}],["parser",{"_index":605,"title":{},"body":{"classes/FormatterParser.html":{}}}],["parser.t",{"_index":603,"title":{},"body":{"classes/FormatterParser.html":{}}}],["parser.ts:12",{"_index":611,"title":{},"body":{"classes/FormatterParser.html":{}}}],["parser.ts:16",{"_index":613,"title":{},"body":{"classes/FormatterParser.html":{}}}],["parser.ts:6",{"_index":615,"title":{},"body":{"classes/FormatterParser.html":{}}}],["parser.ts:8",{"_index":614,"title":{},"body":{"classes/FormatterParser.html":{}}}],["parsevalu",{"_index":608,"title":{},"body":{"classes/FormatterParser.html":{}}}],["parsevalue(valu",{"_index":612,"title":{},"body":{"classes/FormatterParser.html":{}}}],["particular",{"_index":466,"title":{},"body":{"license.html":{}}}],["pass",{"_index":128,"title":{},"body":{"index.html":{}}}],["paus",{"_index":395,"title":{},"body":{"changelog.html":{}}}],["per",{"_index":179,"title":{},"body":{"index.html":{}}}],["perform",{"_index":205,"title":{},"body":{"index.html":{}}}],["permiss",{"_index":433,"title":{},"body":{"license.html":{}}}],["permit",{"_index":452,"title":{},"body":{"license.html":{}}}],["person",{"_index":438,"title":{},"body":{"license.html":{}}}],["pipe",{"_index":365,"title":{"pipes/IsFixedPipe.html":{},"pipes/IsGroupPipe.html":{},"pipes/IsRowVisiblePipe.html":{},"pipes/IsVisiblePipe.html":{}},"body":{"overview.html":{},"pipes/IsFixedPipe.html":{},"pipes/IsGroupPipe.html":{},"pipes/IsRowVisiblePipe.html":{},"pipes/IsVisiblePipe.html":{}}}],["pipetransform",{"_index":563,"title":{},"body":{"pipes/IsFixedPipe.html":{},"pipes/IsGroupPipe.html":{},"pipes/IsRowVisiblePipe.html":{},"pipes/IsVisiblePipe.html":{}}}],["point",{"_index":264,"title":{},"body":{"index.html":{},"classes/HtmlUtil.html":{}}}],["point.getpoint(this.getid(",{"_index":640,"title":{},"body":{"classes/HtmlUtil.html":{}}}],["popup",{"_index":386,"title":{},"body":{"changelog.html":{}}}],["popup).selectedrow",{"_index":248,"title":{},"body":{"index.html":{}}}],["popup.compon",{"_index":514,"title":{},"body":{"modules/GridModule.html":{}}}],["portion",{"_index":459,"title":{},"body":{"license.html":{}}}],["possibl",{"_index":73,"title":{},"body":{"index.html":{}}}],["prevent",{"_index":398,"title":{},"body":{"changelog.html":{}}}],["previou",{"_index":79,"title":{},"body":{"index.html":{}}}],["privat",{"_index":531,"title":{},"body":{"injectables/GridMessageService.html":{},"classes/InjectableFactory.html":{},"interfaces/InjectableConstructor.html":{}}}],["promis",{"_index":420,"title":{},"body":{"changelog.html":{}}}],["propag",{"_index":372,"title":{},"body":{"changelog.html":{}}}],["properti",{"_index":530,"title":{},"body":{"injectables/GridMessageService.html":{},"classes/Cell.html":{},"classes/FormatterParser.html":{},"classes/RowChange.html":{},"classes/SortInfo.html":{},"interfaces/Dictionary.html":{},"interfaces/EventListenerArg.html":{}}}],["proprietari",{"_index":488,"title":{},"body":{"modules/GridModule.html":{}}}],["provid",{"_index":106,"title":{},"body":{"index.html":{},"overview.html":{},"license.html":{},"modules/GridModule.html":{}}}],["public",{"_index":384,"title":{},"body":{"changelog.html":{},"classes/SortInfo.html":{}}}],["publish",{"_index":46,"title":{},"body":{"index.html":{},"license.html":{}}}],["publish.bas",{"_index":63,"title":{},"body":{"index.html":{}}}],["pull",{"_index":621,"title":{},"body":{"classes/HtmlUtil.html":{}}}],["pure",{"_index":289,"title":{},"body":{"index.html":{},"pipes/IsFixedPipe.html":{}}}],["purpos",{"_index":467,"title":{},"body":{"license.html":{}}}],["rang",{"_index":72,"title":{},"body":{"index.html":{}}}],["re",{"_index":284,"title":{},"body":{"index.html":{}}}],["readm",{"_index":406,"title":{},"body":{"changelog.html":{}}}],["readme.2.1.0",{"_index":392,"title":{},"body":{"changelog.html":{}}}],["readme.md",{"_index":426,"title":{},"body":{"changelog.html":{}}}],["refactor",{"_index":409,"title":{},"body":{"changelog.html":{}}}],["referenc",{"_index":418,"title":{},"body":{"changelog.html":{}}}],["refresh",{"_index":282,"title":{},"body":{"index.html":{}}}],["releas",{"_index":425,"title":{},"body":{"changelog.html":{}}}],["remov",{"_index":393,"title":{},"body":{"changelog.html":{}}}],["render",{"_index":280,"title":{},"body":{"index.html":{},"changelog.html":{},"classes/Cell.html":{}}}],["renderer.compon",{"_index":507,"title":{},"body":{"modules/GridModule.html":{}}}],["renderer2",{"_index":297,"title":{},"body":{"index.html":{}}}],["report",{"_index":159,"title":{},"body":{"index.html":{}}}],["request",{"_index":336,"title":{},"body":{"index.html":{},"changelog.html":{}}}],["requir",{"_index":56,"title":{},"body":{"index.html":{}}}],["reset",{"_index":360,"title":{},"body":{"overview.html":{},"modules/GridModule.html":{}}}],["resiz",{"_index":728,"title":{},"body":{"miscellaneous/variables.html":{}}}],["restrict",{"_index":446,"title":{},"body":{"license.html":{}}}],["result",{"_index":9,"title":{},"body":{"dependencies.html":{},"index.html":{},"overview.html":{},"changelog.html":{},"license.html":{},"modules.html":{},"modules/GridModule.html":{},"injectables/GridMessageService.html":{},"pipes/IsFixedPipe.html":{},"pipes/IsGroupPipe.html":{},"pipes/IsRowVisiblePipe.html":{},"pipes/IsVisiblePipe.html":{},"classes/Cell.html":{},"classes/EmptyFactory.html":{},"classes/FormatterParser.html":{},"classes/HtmlUtil.html":{},"classes/InjectableFactory.html":{},"classes/RowChange.html":{},"classes/SortInfo.html":{},"interfaces/ClickListener.html":{},"interfaces/DblClickListener.html":{},"interfaces/Dictionary.html":{},"interfaces/EmptyConstructor.html":{},"interfaces/EventListenerArg.html":{},"interfaces/InjectableConstructor.html":{},"interfaces/MouseDownListener.html":{},"interfaces/MouseDragListener.html":{},"interfaces/MouseOutListener.html":{},"interfaces/MouseOverListener.html":{},"interfaces/MouseUpListener.html":{},"miscellaneous/variables.html":{}}}],["retriev",{"_index":88,"title":{},"body":{"index.html":{}}}],["return",{"_index":115,"title":{},"body":{"index.html":{},"modules/GridModule.html":{},"injectables/GridMessageService.html":{},"pipes/IsFixedPipe.html":{},"pipes/IsGroupPipe.html":{},"pipes/IsRowVisiblePipe.html":{},"pipes/IsVisiblePipe.html":{},"classes/EmptyFactory.html":{},"classes/FormatterParser.html":{},"classes/HtmlUtil.html":{},"classes/InjectableFactory.html":{},"classes/SortInfo.html":{},"interfaces/ClickListener.html":{},"interfaces/DblClickListener.html":{},"interfaces/EmptyConstructor.html":{},"interfaces/InjectableConstructor.html":{},"interfaces/MouseDownListener.html":{},"interfaces/MouseDragListener.html":{},"interfaces/MouseOutListener.html":{},"interfaces/MouseOverListener.html":{},"interfaces/MouseUpListener.html":{}}}],["returning.sortev",{"_index":269,"title":{},"body":{"index.html":{}}}],["right",{"_index":337,"title":{},"body":{"index.html":{},"license.html":{}}}],["root",{"_index":216,"title":{},"body":{"index.html":{}}}],["row",{"_index":81,"title":{},"body":{"index.html":{},"changelog.html":{},"modules/GridModule.html":{},"pipes/IsRowVisiblePipe.html":{}}}],["row/row",{"_index":574,"title":{},"body":{"pipes/IsRowVisiblePipe.html":{}}}],["rowchang",{"_index":652,"title":{"classes/RowChange.html":{}},"body":{"classes/RowChange.html":{}}}],["rownum",{"_index":233,"title":{},"body":{"index.html":{}}}],["rows[i].key",{"_index":223,"title":{},"body":{"index.html":{}}}],["rxjs/rx",{"_index":552,"title":{},"body":{"injectables/GridMessageService.html":{}}}],["same",{"_index":191,"title":{},"body":{"index.html":{}}}],["save",{"_index":411,"title":{},"body":{"changelog.html":{}}}],["scroll",{"_index":190,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["scrollbar",{"_index":401,"title":{},"body":{"changelog.html":{}}}],["see",{"_index":103,"title":{},"body":{"index.html":{},"changelog.html":{},"classes/InjectableFactory.html":{},"interfaces/InjectableConstructor.html":{}}}],["select",{"_index":71,"title":{},"body":{"index.html":{},"changelog.html":{}}}],["selectfilterrender",{"_index":330,"title":{},"body":{"index.html":{},"overview.html":{},"modules/GridModule.html":{}}}],["sell",{"_index":451,"title":{},"body":{"license.html":{}}}],["servic",{"_index":417,"title":{},"body":{"changelog.html":{}}}],["service.config",{"_index":133,"title":{},"body":{"index.html":{}}}],["services/grid",{"_index":518,"title":{},"body":{"modules/GridModule.html":{}}}],["set",{"_index":217,"title":{},"body":{"index.html":{}}}],["setasc",{"_index":667,"title":{},"body":{"classes/SortInfo.html":{}}}],["setasc(asc",{"_index":671,"title":{},"body":{"classes/SortInfo.html":{}}}],["setconfig",{"_index":609,"title":{},"body":{"classes/FormatterParser.html":{}}}],["setconfig(config",{"_index":295,"title":{},"body":{"index.html":{},"classes/FormatterParser.html":{}}}],["setfield",{"_index":668,"title":{},"body":{"classes/SortInfo.html":{}}}],["setfield(field",{"_index":673,"title":{},"body":{"classes/SortInfo.html":{}}}],["sever",{"_index":290,"title":{},"body":{"index.html":{}}}],["shall",{"_index":457,"title":{},"body":{"license.html":{}}}],["shortcut",{"_index":208,"title":{},"body":{"index.html":{}}}],["show",{"_index":153,"title":{},"body":{"index.html":{}}}],["showicon",{"_index":308,"title":{},"body":{"index.html":{}}}],["shown",{"_index":173,"title":{},"body":{"index.html":{}}}],["side",{"_index":164,"title":{},"body":{"index.html":{}}}],["simpl",{"_index":36,"title":{},"body":{"index.html":{},"classes/FormatterParser.html":{}}}],["size",{"_index":76,"title":{},"body":{"index.html":{}}}],["size.saveondirtyrowchang",{"_index":192,"title":{},"body":{"index.html":{}}}],["softwar",{"_index":440,"title":{},"body":{"license.html":{}}}],["sort",{"_index":64,"title":{},"body":{"index.html":{},"changelog.html":{}}}],["sorted.glob",{"_index":274,"title":{},"body":{"index.html":{}}}],["sortev",{"_index":271,"title":{},"body":{"index.html":{}}}],["sortinfo",{"_index":270,"title":{"classes/SortInfo.html":{}},"body":{"index.html":{},"classes/SortInfo.html":{}}}],["sourc",{"_index":89,"title":{},"body":{"index.html":{},"modules/GridModule.html":{},"injectables/GridMessageService.html":{},"pipes/IsFixedPipe.html":{},"pipes/IsGroupPipe.html":{},"pipes/IsRowVisiblePipe.html":{},"pipes/IsVisiblePipe.html":{},"classes/Cell.html":{},"classes/EmptyFactory.html":{},"classes/FormatterParser.html":{},"classes/HtmlUtil.html":{},"classes/InjectableFactory.html":{},"classes/RowChange.html":{},"classes/SortInfo.html":{},"interfaces/ClickListener.html":{},"interfaces/DblClickListener.html":{},"interfaces/Dictionary.html":{},"interfaces/EmptyConstructor.html":{},"interfaces/EventListenerArg.html":{},"interfaces/InjectableConstructor.html":{},"interfaces/MouseDownListener.html":{},"interfaces/MouseDragListener.html":{},"interfaces/MouseOutListener.html":{},"interfaces/MouseOverListener.html":{},"interfaces/MouseUpListener.html":{}}}],["specif",{"_index":94,"title":{},"body":{"index.html":{}}}],["specifi",{"_index":180,"title":{},"body":{"index.html":{}}}],["speed",{"_index":285,"title":{},"body":{"index.html":{}}}],["spinner",{"_index":397,"title":{},"body":{"changelog.html":{}}}],["spinner.eventlisten",{"_index":203,"title":{},"body":{"index.html":{}}}],["spreadsheet",{"_index":158,"title":{},"body":{"index.html":{}}}],["src/grid/cell/cell.t",{"_index":577,"title":{},"body":{"classes/Cell.html":{}}}],["src/grid/cell/cell.ts:5",{"_index":587,"title":{},"body":{"classes/Cell.html":{}}}],["src/grid/cell/cell.ts:6",{"_index":586,"title":{},"body":{"classes/Cell.html":{}}}],["src/grid/cell/cell.ts:7",{"_index":584,"title":{},"body":{"classes/Cell.html":{}}}],["src/grid/column/formatters/formatt",{"_index":602,"title":{},"body":{"classes/FormatterParser.html":{}}}],["src/grid/event/click.interface.t",{"_index":680,"title":{},"body":{"interfaces/ClickListener.html":{}}}],["src/grid/event/click.interface.ts:3",{"_index":683,"title":{},"body":{"interfaces/ClickListener.html":{}}}],["src/grid/event/dbl",{"_index":685,"title":{},"body":{"interfaces/DblClickListener.html":{}}}],["src/grid/event/ev",{"_index":694,"title":{},"body":{"interfaces/EventListenerArg.html":{}}}],["src/grid/event/mous",{"_index":699,"title":{},"body":{"interfaces/MouseDownListener.html":{},"interfaces/MouseDragListener.html":{},"interfaces/MouseOutListener.html":{},"interfaces/MouseOverListener.html":{},"interfaces/MouseUpListener.html":{}}}],["src/grid/grid.component.t",{"_index":732,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/grid/grid.module.t",{"_index":484,"title":{},"body":{"modules/GridModule.html":{}}}],["src/grid/model/dictionary.interface.t",{"_index":691,"title":{},"body":{"interfaces/Dictionary.html":{}}}],["src/grid/model/dictionary.interface.ts:2",{"_index":693,"title":{},"body":{"interfaces/Dictionary.html":{}}}],["src/grid/model/dictionary.interface.ts:3",{"_index":692,"title":{},"body":{"interfaces/Dictionary.html":{}}}],["src/grid/services/grid",{"_index":528,"title":{},"body":{"injectables/GridMessageService.html":{},"miscellaneous/variables.html":{}}}],["src/grid/utils/empty.factory.t",{"_index":590,"title":{},"body":{"classes/EmptyFactory.html":{},"interfaces/EmptyConstructor.html":{}}}],["src/grid/utils/empty.factory.ts:4",{"_index":596,"title":{},"body":{"classes/EmptyFactory.html":{}}}],["src/grid/utils/empty.factory.ts:7",{"_index":597,"title":{},"body":{"classes/EmptyFactory.html":{}}}],["src/grid/utils/html",{"_index":618,"title":{},"body":{"classes/HtmlUtil.html":{}}}],["src/grid/utils/i",{"_index":556,"title":{},"body":{"pipes/IsFixedPipe.html":{},"pipes/IsGroupPipe.html":{},"pipes/IsRowVisiblePipe.html":{},"pipes/IsVisiblePipe.html":{}}}],["src/grid/utils/injectable.factory.t",{"_index":642,"title":{},"body":{"classes/InjectableFactory.html":{},"interfaces/InjectableConstructor.html":{}}}],["src/grid/utils/injectable.factory.ts:10",{"_index":649,"title":{},"body":{"classes/InjectableFactory.html":{}}}],["src/grid/utils/injectable.factory.ts:7",{"_index":647,"title":{},"body":{"classes/InjectableFactory.html":{}}}],["src/grid/utils/row",{"_index":653,"title":{},"body":{"classes/RowChange.html":{}}}],["src/grid/utils/sort",{"_index":662,"title":{},"body":{"classes/SortInfo.html":{}}}],["start",{"_index":12,"title":{"index.html":{},"changelog.html":{},"license.html":{}},"body":{}}],["state",{"_index":170,"title":{},"body":{"index.html":{}}}],["static",{"_index":523,"title":{},"body":{"modules/GridModule.html":{},"classes/HtmlUtil.html":{}}}],["statu",{"_index":267,"title":{},"body":{"index.html":{}}}],["stop",{"_index":371,"title":{},"body":{"changelog.html":{}}}],["storag",{"_index":389,"title":{},"body":{"changelog.html":{}}}],["string",{"_index":70,"title":{},"body":{"index.html":{},"injectables/GridMessageService.html":{},"classes/HtmlUtil.html":{},"classes/SortInfo.html":{},"interfaces/Dictionary.html":{}}}],["style",{"_index":220,"title":{},"body":{"index.html":{}}}],["subject",{"_index":454,"title":{},"body":{"license.html":{},"injectables/GridMessageService.html":{}}}],["sublicens",{"_index":449,"title":{},"body":{"license.html":{}}}],["substanti",{"_index":458,"title":{},"body":{"license.html":{}}}],["such",{"_index":622,"title":{},"body":{"classes/HtmlUtil.html":{}}}],["support",{"_index":34,"title":{},"body":{"index.html":{},"changelog.html":{},"modules.html":{}}}],["svg",{"_index":481,"title":{},"body":{"modules.html":{}}}],["syntax",{"_index":105,"title":{},"body":{"index.html":{},"changelog.html":{}}}],["t",{"_index":598,"title":{},"body":{"classes/EmptyFactory.html":{},"classes/InjectableFactory.html":{},"interfaces/EmptyConstructor.html":{},"interfaces/InjectableConstructor.html":{}}}],["tab",{"_index":729,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tabl",{"_index":32,"title":{},"body":{"index.html":{}}}],["take",{"_index":260,"title":{},"body":{"index.html":{}}}],["taken",{"_index":96,"title":{},"body":{"index.html":{}}}],["templat",{"_index":200,"title":{},"body":{"index.html":{}}}],["templateref",{"_index":199,"title":{},"body":{"index.html":{}}}],["texteditrender",{"_index":352,"title":{},"body":{"overview.html":{},"modules/GridModule.html":{}}}],["textfilterrender",{"_index":316,"title":{},"body":{"index.html":{},"overview.html":{},"modules/GridModule.html":{}}}],["them.pages",{"_index":181,"title":{},"body":{"index.html":{}}}],["theme",{"_index":160,"title":{},"body":{"index.html":{}}}],["thing",{"_index":286,"title":{},"body":{"index.html":{},"classes/HtmlUtil.html":{}}}],["this._message.asobserv",{"_index":548,"title":{},"body":{"injectables/GridMessageService.html":{}}}],["this._message.next(\"error",{"_index":553,"title":{},"body":{"injectables/GridMessageService.html":{}}}],["this._message.next(\"warn",{"_index":554,"title":{},"body":{"injectables/GridMessageService.html":{}}}],["this._messageobserv",{"_index":555,"title":{},"body":{"injectables/GridMessageService.html":{}}}],["this.asc",{"_index":677,"title":{},"body":{"classes/SortInfo.html":{}}}],["this.config",{"_index":616,"title":{},"body":{"classes/FormatterParser.html":{}}}],["this.datarequest",{"_index":114,"title":{},"body":{"index.html":{}}}],["this.emptyconstructor",{"_index":600,"title":{},"body":{"classes/EmptyFactory.html":{},"interfaces/EmptyConstructor.html":{}}}],["this.field",{"_index":678,"title":{},"body":{"classes/SortInfo.html":{}}}],["this.ic(this.injector",{"_index":650,"title":{},"body":{"classes/InjectableFactory.html":{},"interfaces/InjectableConstructor.html":{}}}],["this.newrownum",{"_index":661,"title":{},"body":{"classes/RowChange.html":{}}}],["this.oldrownum",{"_index":660,"title":{},"body":{"classes/RowChange.html":{}}}],["those",{"_index":171,"title":{},"body":{"index.html":{}}}],["through",{"_index":39,"title":{},"body":{"index.html":{}}}],["titl",{"_index":154,"title":{},"body":{"index.html":{}}}],["to.configur",{"_index":141,"title":{},"body":{"index.html":{}}}],["toast",{"_index":247,"title":{},"body":{"index.html":{}}}],["todo",{"_index":335,"title":{},"body":{"index.html":{}}}],["togeth",{"_index":166,"title":{},"body":{"index.html":{}}}],["tort",{"_index":477,"title":{},"body":{"license.html":{}}}],["transform",{"_index":560,"title":{},"body":{"pipes/IsFixedPipe.html":{},"pipes/IsGroupPipe.html":{},"pipes/IsRowVisiblePipe.html":{},"pipes/IsVisiblePipe.html":{}}}],["transform(list",{"_index":561,"title":{},"body":{"pipes/IsFixedPipe.html":{},"pipes/IsGroupPipe.html":{},"pipes/IsRowVisiblePipe.html":{},"pipes/IsVisiblePipe.html":{}}}],["true",{"_index":169,"title":{},"body":{"index.html":{},"modules/GridModule.html":{},"classes/SortInfo.html":{}}}],["two",{"_index":124,"title":{},"body":{"index.html":{}}}],["type",{"_index":120,"title":{},"body":{"index.html":{},"injectables/GridMessageService.html":{},"pipes/IsFixedPipe.html":{},"classes/Cell.html":{},"classes/EmptyFactory.html":{},"classes/FormatterParser.html":{},"classes/HtmlUtil.html":{},"classes/InjectableFactory.html":{},"classes/RowChange.html":{},"classes/SortInfo.html":{},"interfaces/ClickListener.html":{},"interfaces/DblClickListener.html":{},"interfaces/Dictionary.html":{},"interfaces/EventListenerArg.html":{},"interfaces/InjectableConstructor.html":{},"interfaces/MouseDownListener.html":{},"interfaces/MouseDragListener.html":{},"interfaces/MouseOutListener.html":{},"interfaces/MouseOverListener.html":{},"interfaces/MouseUpListener.html":{},"miscellaneous/variables.html":{}}}],["undefin",{"_index":122,"title":{},"body":{"index.html":{},"pipes/IsFixedPipe.html":{},"pipes/IsGroupPipe.html":{},"pipes/IsRowVisiblePipe.html":{},"pipes/IsVisiblePipe.html":{}}}],["univers",{"_index":431,"title":{},"body":{"license.html":{},"modules/GridModule.html":{}}}],["up",{"_index":287,"title":{},"body":{"index.html":{}}}],["up.interface.t",{"_index":720,"title":{},"body":{"interfaces/MouseUpListener.html":{}}}],["up.interface.ts:3",{"_index":723,"title":{},"body":{"interfaces/MouseUpListener.html":{}}}],["upon",{"_index":259,"title":{},"body":{"index.html":{}}}],["us",{"_index":57,"title":{},"body":{"index.html":{},"license.html":{}}}],["usag",{"_index":97,"title":{},"body":{"index.html":{}}}],["user",{"_index":145,"title":{},"body":{"index.html":{},"changelog.html":{}}}],["usevalu",{"_index":526,"title":{},"body":{"modules/GridModule.html":{}}}],["usual",{"_index":61,"title":{},"body":{"index.html":{}}}],["utah",{"_index":432,"title":{},"body":{"license.html":{},"modules/GridModule.html":{}}}],["util.t",{"_index":619,"title":{},"body":{"classes/HtmlUtil.html":{}}}],["util.ts:23",{"_index":633,"title":{},"body":{"classes/HtmlUtil.html":{}}}],["util.ts:38",{"_index":635,"title":{},"body":{"classes/HtmlUtil.html":{}}}],["util.ts:8",{"_index":629,"title":{},"body":{"classes/HtmlUtil.html":{}}}],["utils/i",{"_index":501,"title":{},"body":{"modules/GridModule.html":{}}}],["valid",{"_index":413,"title":{},"body":{"changelog.html":{}}}],["valu",{"_index":231,"title":{},"body":{"index.html":{},"injectables/GridMessageService.html":{},"classes/Cell.html":{},"classes/FormatterParser.html":{},"classes/SortInfo.html":{},"interfaces/Dictionary.html":{},"miscellaneous/variables.html":{}}}],["values.busytempl",{"_index":198,"title":{},"body":{"index.html":{}}}],["variabl",{"_index":725,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["variou",{"_index":75,"title":{},"body":{"index.html":{}}}],["vertic",{"_index":283,"title":{},"body":{"index.html":{}}}],["view",{"_index":309,"title":{},"body":{"index.html":{},"changelog.html":{}}}],["viewconfig",{"_index":303,"title":{},"body":{"index.html":{}}}],["viewrender",{"_index":301,"title":{},"body":{"index.html":{}}}],["visibl",{"_index":151,"title":{},"body":{"index.html":{}}}],["visible.pip",{"_index":502,"title":{},"body":{"modules/GridModule.html":{}}}],["visible.pipe.t",{"_index":571,"title":{},"body":{"pipes/IsRowVisiblePipe.html":{},"pipes/IsVisiblePipe.html":{}}}],["visible.pipe.ts:9",{"_index":573,"title":{},"body":{"pipes/IsRowVisiblePipe.html":{},"pipes/IsVisiblePipe.html":{}}}],["void",{"_index":542,"title":{},"body":{"injectables/GridMessageService.html":{},"classes/FormatterParser.html":{},"classes/SortInfo.html":{}}}],["wait",{"_index":383,"title":{},"body":{"changelog.html":{}}}],["want",{"_index":212,"title":{},"body":{"index.html":{}}}],["warn",{"_index":213,"title":{},"body":{"index.html":{},"injectables/GridMessageService.html":{}}}],["warn(messag",{"_index":543,"title":{},"body":{"injectables/GridMessageService.html":{}}}],["warranti",{"_index":460,"title":{},"body":{"license.html":{}}}],["way",{"_index":125,"title":{},"body":{"index.html":{}}}],["whether",{"_index":475,"title":{},"body":{"license.html":{}}}],["width",{"_index":402,"title":{},"body":{"changelog.html":{}}}],["wish",{"_index":246,"title":{},"body":{"index.html":{}}}],["withcomponents(compon",{"_index":527,"title":{},"body":{"modules/GridModule.html":{}}}],["without",{"_index":445,"title":{},"body":{"license.html":{},"classes/FormatterParser.html":{}}}],["work",{"_index":93,"title":{},"body":{"index.html":{}}}],["ye",{"_index":631,"title":{},"body":{"classes/HtmlUtil.html":{}}}],["you.logwarn",{"_index":211,"title":{},"body":{"index.html":{}}}],["zoom",{"_index":359,"title":{},"body":{"overview.html":{},"modules/GridModule.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n    Dependencies\n\n\n    \n        @ng-bootstrap/ng-bootstrap : 1.1.x\n    \n        moment : >=2.19.3\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nHuntsman Cancer Institute's Angular Grid Library\nhci-ng-grid Demo on Github\nIntro\nThis grid is designed to be a full featured grid that can handle nearly anything that complex data tables may\nbe expected to support.  By default, the grid is simple and basic, but becomes full featured through\nconfiguration.Install\n\"dependencies\": {\n    \"hci-ng-grid\": \"3.1.x\"\n}import {GridModule} from \"hci-ng-grid\";@NgModule({\n    imports: [\n        GridModule.forRoot()\n    ]\n})Publishing\nCompiled code gets moved to the dist folder with a copy of the package.json.  Custom commands are required for\npackaging and publishing.  Use npmPack and npmPublish instead of the usual pack and publish.Basic Features\n\nSorting: Change sorting by clicking on column header.\nFiltering: String, select, range filtering with the possibility for custom filters.\nPaging: Paging with various page sizes, first, last, previous and next.\nRow Grouping: Rows can be grouped by one or more columns.\nExternal Data Call: Callback to retrieve data from external source.\nCustom Events: Listeners can be added to work for specific events and custom actions can be taken.\n\nUsage\nNote, there are so many features to this grid that not all are currently listed here.  See the demo for full examples.\nThe basic syntax for data provided by the implementing component.\n\nThe basic syntax for an external data call.\n\nAnd a function using mocked external data call.\ndataRequest: (externalInfo: ExternalInfo) => {};\n\nngOnInit() {\n  this.dataRequest = (externalInfo: ExternalInfo) => {\n    return Observable.of(new ExternalData(this.dataGeneratorService.getData(250), externalInfo)).delay(500);\n  };\n}Inputs\ndata\ntype: Object[]\ndefault: undefined\nProvide the grid with an array of rows as objects.  Two way binding to this data.dataCall\ntype: Function\ndefault: undefined\nA function that is called to retrieve data.  The function is passed filtering, sorting and paging info.id\ntype: string\ndefault: undefined\nThe html id for the grid and the id that can be used to get the grid from the global grid service.config\ntype: any\ndefault: {}\nA json object that contains configuration options for the grid.linkedGroups\ntype: string[]\ndefault: undefined\nThe group names that this grid should be linked to.configurable\ntype: boolean\ndefault: false\nFlag if the user should be allowed to modify the grid's configuration (e.g. what colums are visible and how big).title\ntype: string\ndefault: undefined\nShows this title in a title bar above the grid.theme\ntype: string\ndefault: \"spreadsheet\"\noptions: \"spreadsheet\", \"report\", or your own\nThe name of the theme to use.  columns\ntype: Column[]\ndefault: undefined\nAn array of column configuration objects.fixedColumns\ntype: string[]\ndefault: undefined\nA list of column names that should be fixed to the left side of the grid.groupBy\ntype: string[]\ndefault: undefined\nA list of column names that should be used to group rows together.* Currently disabled *\ngroupByCollapsed\ntype: boolean\ndefault: true\nThe state for grouped rows if those rows in a group should be hidden or shown by default.externalFiltering\ntype: boolean\ndefault: false\nTrue if filtering should be handled by the external data call.externalSorting\ntype: boolean\ndefault: false\nTrue if sorting should be handled by the external data call.externalPaging\ntype: boolean\ndefault: false\nTrue if paging should be handled by the external data call.pageSize\ntype: number\ndefault: undefined\nThe number of rows per page.  If not specified it will show all of them.pageSizes\ntype: number[]\ndefault: [10, 25, 50]\nAn array of possible page sizes that the user can choose from.nVisibleRows\ntype: number\ndefault: -1\nThe number of visible rows.  A page might have 100 rows, but you can limit the size of the grid to 10 rows which would be scrolling for the user.  The default is -1 which is the same as the page size.saveOnDirtyRowChange\ntype: boolean\ndefault: false\nIf true, will emit a (onRowSave) event if you navigate to a new row and the previous row has dirty values.busyTemplate\ntype: TemplateRef\ndefault: undefined\nA custom template shown when data is loaded.  If you don't like the default spinner.eventListeners\ntype: EventListenerArg[]\ndefault: []\nAn array of listeners that can perform actions on any sort of click or key events.mode\ntype: string\ndefault: undefined\nA shortcut for creating listeners.  Rather than passing in your own listeners, specify a mode and the required listeners will be created for you.logWarnings\ntype: boolean\ndefault: true\nTrue if you want warnings to show in the console.display\ntype: string\ndefault: flow-root\nSets the display on the root component.  Although you could also do this with style on the grid.Outputs\nonCellSave\ntype: any\n$event: { key: rows[i].key,\n          i: i,\n          j: j,\n          field: columns[j].field,\n          oldValue: oldValue,\n          newValue: newValue }\nThe row key, location, field, old and new value of the cell.onRowSave\ntype: any\n$event: { key: rows[i].key,\n          rowNum: i,\n          row: originalRowData }\nEmits the key, row number and the data for the row in the format originally passed in.onConfigChange\ntype: any\n$event: config\nEmits the current configuration for the grid.cellClick\ntype: any\n$event: any\nDetermined by the event listener which can emit any type of data.cellDblClick\ntype: any\n$event: any\nDetermined by the event listener which can emit any type of data.rowClick\ntype: any\n$event: any\nDetermined by the event listener which can emit any type of data.rowDblClick\ntype: any\n$event: any\nDetermined by the event listener which can emit any type of data.warning\ntype: string\n$event: warning message as a string\nListen to this to handle warnings from the grid as you wish (e.g. as a toast popup).selectedRows\ntype: any[]\n$event: [key1, key2, ...]\nThis is an array of any instead of number because the row key could be anything.filterEvent\ntype: FilterInfo[]\n$event: FilterInfo[]\nThis is the array of filters used when a column's filters are applied.  In the case of a select where there are multiple\nFilterInfos, this includes the full list and not the one that changed.  This event is fired upon click.  It will take\nsome delay for data to come back at which point the filterEvent would be fired.dataFiltered\ntype: any\n$event: {type, status, nData}\nThis is emitted when a filter event returns data.  It will provide the number of rows returning.sortEvent\ntype: SortInfo\n$event: SortInfo\nThis is the sortInfo emitted when a column header is clicked.  It will take\nsome delay for data to come back at which point the sortEvent would be fired.dataSorted\ntype: any\n$event: {type, status, field}\nThis is emitted when a sort event returns data.  It will provide the field being sorted.Global Config\nThe root module can take configuration json that can be used to set defaults for every grid.\nFor example, if you want every grid in your application to use the same theme and you don't want\nto specify that theme in every instance of the grid, you can do the following:\nGridModule.forRoot({\n  theme: \"report\"\n})Advanced Features\nRendering Cells\nEvery refresh of data and every vertical scroll will re-render the visible rows and cells.  To speed things\nup, each cell is limited to rendering pure HTML.  However, there are several options of how to render and\nthe option of custom rendering.\nEvery cell is rendering with a class that implements the CellViewRenderer interface.  The two methods\nrequired to implement are\nsetConfig(config: any);\n\ncreateElement(renderer: Renderer2, column: Column, value: any, i: number, j: number): HTMLElement;As an example, the following is an example of a number range renderer.\n{\n    field: \"nLabs\",\n    name: \"# Labs\",\n    viewRenderer: CellNumberRangeView,\n    viewConfig: { low: 15, high: 85, showIcon: true }\n}The class is passed in as the viewRenderer and any config is passed in through the viewConfig.\nFiltering\nLike view rendering, built in and custom components can be used to render the filter.  The difference\nis rather than pure HTML, a filter is a component that extends a base class FilterRenderer.  The\nfollowing are examples of built in filters.\n{\n    field: \"firstName\",\n    name: \"First Name\",\n    filterRenderer: TextFilterRenderer\n},\n{\n    field: \"dob\",\n    name: \"Date of Birth\",\n    dataType: \"date\",\n    format: \"MM/DD/YYYY\",\n    editRenderer: DateEditRenderer,\n    filterRenderer: CompareFilterRenderer\n},\n{\n    field: \"gender\",\n    name: \"Gender\",\n    editRenderer: ChoiceEditRenderer,\n    choices: [ {value: \"Female\", display: \"Female\"}, {value: \"Male\", display: \"Male\"} ],\n    filterRenderer: SelectFilterRenderer\n}Known Issues\n\nRow Groups works upon load, but breaks when filtering is introduced.\n\nTODOs\n\nThere are only left fixed colums, but some have requested right fixed columns.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n            \n                \n                    \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_GridModule\n\n\n\ncluster_GridModule_declarations\n\n\n\ncluster_GridModule_GridComponent_providers\n\n\n\ncluster_GridModule_exports\n\n\n\n\nGridComponent\n\nGridComponent\n\n\n\nGridModule\n\nGridModule\n\nGridModule -->\n\nGridComponent->GridModule\n\n\n\n\n\nColumnHeaderComponent\n\nColumnHeaderComponent\n\nGridModule -->\n\nColumnHeaderComponent->GridModule\n\n\n\n\n\nIsVisiblePipe\n\nIsVisiblePipe\n\nGridModule -->\n\nIsVisiblePipe->GridModule\n\n\n\n\n\nIsGroupPipe\n\nIsGroupPipe\n\nGridModule -->\n\nIsGroupPipe->GridModule\n\n\n\n\n\nIsFixedPipe\n\nIsFixedPipe\n\nGridModule -->\n\nIsFixedPipe->GridModule\n\n\n\n\n\nIsRowVisiblePipe\n\nIsRowVisiblePipe\n\nGridModule -->\n\nIsRowVisiblePipe->GridModule\n\n\n\n\n\nTextEditRenderer\n\nTextEditRenderer\n\nGridModule -->\n\nTextEditRenderer->GridModule\n\n\n\n\n\nDateEditRenderer\n\nDateEditRenderer\n\nGridModule -->\n\nDateEditRenderer->GridModule\n\n\n\n\n\nChoiceEditRenderer\n\nChoiceEditRenderer\n\nGridModule -->\n\nChoiceEditRenderer->GridModule\n\n\n\n\n\nTextFilterRenderer\n\nTextFilterRenderer\n\nGridModule -->\n\nTextFilterRenderer->GridModule\n\n\n\n\n\nSelectFilterRenderer\n\nSelectFilterRenderer\n\nGridModule -->\n\nSelectFilterRenderer->GridModule\n\n\n\n\n\nCompareFilterRenderer\n\nCompareFilterRenderer\n\nGridModule -->\n\nCompareFilterRenderer->GridModule\n\n\n\n\n\nBigTextPopup\n\nBigTextPopup\n\nGridModule -->\n\nBigTextPopup->GridModule\n\n\n\n\n\nConfigMenuComponent\n\nConfigMenuComponent\n\nGridModule -->\n\nConfigMenuComponent->GridModule\n\n\n\n\n\nConfigMultiChoiceComponent\n\nConfigMultiChoiceComponent\n\nGridModule -->\n\nConfigMultiChoiceComponent->GridModule\n\n\n\n\n\nGridComponent \n\nGridComponent \n\nGridComponent  -->\n\nGridModule->GridComponent \n\n\n\n\n\nGridService\n\nGridService\n\nGridComponent -->\n\nGridService->GridComponent\n\n\n\n\n\nGridEventService\n\nGridEventService\n\nGridComponent -->\n\nGridEventService->GridComponent\n\n\n\n\n\nGridMessageService\n\nGridMessageService\n\nGridComponent -->\n\nGridMessageService->GridComponent\n\n\n\n\n\n\n                \n                \n                \n                    Zoom in\n                    Reset\n                    Zoom out\n                \n            \n\n    \n            \n                \n                    \n                        \n                        \n                            1 module\n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                        11 components\n                    \n                \n            \n            \n                \n                    \n                        \n                        4 injectables\n                    \n                \n            \n            \n                \n                    \n                        \n                        4 pipes\n                    \n                \n            \n            \n                \n                    \n                        \n                        34 classes\n                    \n                \n            \n            \n                \n                    \n                        \n                        12 interfaces\n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"changelog.html":{"url":"changelog.html","title":"getting-started - changelog","body":"\n                   \n\nChange Log\n3.1.1\n- Stop propagation on filter button.3.1.0\n- Filter to customizable function.\n- Sort to customizable function.\n- Emitters for filter and sort events.\n- Column drag n drop.\n- Fix: Empty choice array on http error.3.0.0\n- Generalize column wait configuration.  Changes public api.\n- Fixes to popup behavior.\n- Column allows externalConfig storage.\n- Default format/parser more generic.2.1.1\n- Fix syntax in README.2.1.0\n- Removed allowing auto column generation when no columns configured.\n- Added wait listeners to pause configuration while waiting on any requests.\n- Add spinner for loading and prevent data display if no columns.\n- Bump height if view has scrollbar.\n- Fix column width calculation.2.0.2\n- Fix keywords and add .npmignore.2.0.1\n- Fix readme and license in artifact.2.0.0\n- Refactor of rendering and how data/config/events are listened to.\n- Listeners for saving cells and rows.\n- Customization of busy, and view renderers.\n- Validation support and improved formatting/parsing especially for dates.\n- User configuration added.\n- Global grid service for referencing and connecting grids.\n- Row selection improved.\n- External data calls from Promise to Observable.\n- Numerous fixes.1.0.0\n- Initial Release.  See README.md for features.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nCopyright (c) 2018 Huntsman Cancer Institute at the University of Utah\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        GridModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/GridModule.html":{"url":"modules/GridModule.html","title":"module - GridModule","body":"\n                   \n\n\n\n\n  Modules\n  GridModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_GridModule\n\n\n\ncluster_GridModule_declarations\n\n\n\ncluster_GridModule_GridComponent_providers\n\n\n\ncluster_GridModule_exports\n\n\n\n\nGridComponent\n\nGridComponent\n\n\n\nGridModule\n\nGridModule\n\nGridModule -->\n\nGridComponent->GridModule\n\n\n\n\n\nColumnHeaderComponent\n\nColumnHeaderComponent\n\nGridModule -->\n\nColumnHeaderComponent->GridModule\n\n\n\n\n\nIsVisiblePipe\n\nIsVisiblePipe\n\nGridModule -->\n\nIsVisiblePipe->GridModule\n\n\n\n\n\nIsGroupPipe\n\nIsGroupPipe\n\nGridModule -->\n\nIsGroupPipe->GridModule\n\n\n\n\n\nIsFixedPipe\n\nIsFixedPipe\n\nGridModule -->\n\nIsFixedPipe->GridModule\n\n\n\n\n\nIsRowVisiblePipe\n\nIsRowVisiblePipe\n\nGridModule -->\n\nIsRowVisiblePipe->GridModule\n\n\n\n\n\nTextEditRenderer\n\nTextEditRenderer\n\nGridModule -->\n\nTextEditRenderer->GridModule\n\n\n\n\n\nDateEditRenderer\n\nDateEditRenderer\n\nGridModule -->\n\nDateEditRenderer->GridModule\n\n\n\n\n\nChoiceEditRenderer\n\nChoiceEditRenderer\n\nGridModule -->\n\nChoiceEditRenderer->GridModule\n\n\n\n\n\nTextFilterRenderer\n\nTextFilterRenderer\n\nGridModule -->\n\nTextFilterRenderer->GridModule\n\n\n\n\n\nSelectFilterRenderer\n\nSelectFilterRenderer\n\nGridModule -->\n\nSelectFilterRenderer->GridModule\n\n\n\n\n\nCompareFilterRenderer\n\nCompareFilterRenderer\n\nGridModule -->\n\nCompareFilterRenderer->GridModule\n\n\n\n\n\nBigTextPopup\n\nBigTextPopup\n\nGridModule -->\n\nBigTextPopup->GridModule\n\n\n\n\n\nConfigMenuComponent\n\nConfigMenuComponent\n\nGridModule -->\n\nConfigMenuComponent->GridModule\n\n\n\n\n\nConfigMultiChoiceComponent\n\nConfigMultiChoiceComponent\n\nGridModule -->\n\nConfigMultiChoiceComponent->GridModule\n\n\n\n\n\nGridComponent \n\nGridComponent \n\nGridComponent  -->\n\nGridModule->GridComponent \n\n\n\n\n\nGridService\n\nGridService\n\nGridComponent -->\n\nGridService->GridComponent\n\n\n\n\n\nGridEventService\n\nGridEventService\n\nGridComponent -->\n\nGridEventService->GridComponent\n\n\n\n\n\nGridMessageService\n\nGridMessageService\n\nGridComponent -->\n\nGridMessageService->GridComponent\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/grid/grid.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                GridComponent\n                            \n                            \n                                ColumnHeaderComponent\n                            \n                            \n                                IsVisiblePipe\n                            \n                            \n                                IsGroupPipe\n                            \n                            \n                                IsFixedPipe\n                            \n                            \n                                IsRowVisiblePipe\n                            \n                            \n                                TextEditRenderer\n                            \n                            \n                                DateEditRenderer\n                            \n                            \n                                ChoiceEditRenderer\n                            \n                            \n                                TextFilterRenderer\n                            \n                            \n                                SelectFilterRenderer\n                            \n                            \n                                CompareFilterRenderer\n                            \n                            \n                                BigTextPopup\n                            \n                            \n                                ConfigMenuComponent\n                            \n                            \n                                ConfigMultiChoiceComponent\n                            \n                    \n                \n                \n                    EntryComponents\n                    \n                            \n                                TextEditRenderer\n                            \n                            \n                                DateEditRenderer\n                            \n                            \n                                ChoiceEditRenderer\n                            \n                            \n                                TextFilterRenderer\n                            \n                            \n                                SelectFilterRenderer\n                            \n                            \n                                CompareFilterRenderer\n                            \n                            \n                                BigTextPopup\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    GridComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        /*\n * Copyright (c) 2016 Huntsman Cancer Institute at the University of Utah, Confidential and Proprietary\n */\nimport {ANALYZE_FOR_ENTRY_COMPONENTS, ModuleWithProviders, NgModule} from \"@angular/core\";\nimport {CommonModule} from \"@angular/common\";\nimport {FormsModule} from \"@angular/forms\";\n\nimport {NgbModule} from \"@ng-bootstrap/ng-bootstrap\";\n\nimport {GridComponent} from \"./grid.component\";\nimport {ColumnHeaderComponent} from \"./column/column-header.component\";\nimport {IsVisiblePipe} from \"./utils/is-visible.pipe\";\nimport {IsGroupPipe} from \"./utils/is-group.pipe\";\nimport {IsFixedPipe} from \"./utils/is-fixed.pipe\";\nimport {IsRowVisiblePipe} from \"./utils/is-row-visible.pipe\";\nimport {TextEditRenderer} from \"./cell/editRenderers/text-edit-renderer.component\";\nimport {TextFilterRenderer} from \"./column/filterRenderers/text-filter-renderer.component\";\nimport {CompareFilterRenderer} from \"./column/filterRenderers/compare-filter-renderer.component\";\nimport {ChoiceEditRenderer} from \"./cell/editRenderers/choice-edit-renderer.component\";\nimport {DateEditRenderer} from \"./cell/editRenderers/date-edit-renderer.component\";\nimport {SelectFilterRenderer} from \"./column/filterRenderers/select-filter-renderer.component\";\nimport {BigTextPopup} from \"./cell/viewPopupRenderer/bigtext-popup.component\";\nimport {ConfigMenuComponent} from \"./config/config-menu.component\";\nimport {GridGlobalService} from \"./services/grid-global.service\";\nimport {ConfigMultiChoiceComponent} from \"./config/config-multi-choice.component\";\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    NgbModule.forRoot()\n  ],\n  declarations: [\n    GridComponent,\n    ColumnHeaderComponent,\n    IsVisiblePipe,\n    IsGroupPipe,\n    IsFixedPipe,\n    IsRowVisiblePipe,\n    TextEditRenderer,\n    DateEditRenderer,\n    ChoiceEditRenderer,\n    TextFilterRenderer,\n    SelectFilterRenderer,\n    CompareFilterRenderer,\n    BigTextPopup,\n    ConfigMenuComponent,\n    ConfigMultiChoiceComponent\n  ],\n  entryComponents: [\n    TextEditRenderer,\n    DateEditRenderer,\n    ChoiceEditRenderer,\n    TextFilterRenderer,\n    SelectFilterRenderer,\n    CompareFilterRenderer,\n    BigTextPopup\n  ],\n  exports: [\n    GridComponent\n  ]\n})\nexport class GridModule {\n\n  static forRoot(globalConfig?: any, components?: any[]): ModuleWithProviders {\n    return {\n      providers: [\n        GridGlobalService,\n        {provide: \"globalConfig\", useValue: (globalConfig) ? globalConfig : {}},\n        {\n          provide: ANALYZE_FOR_ENTRY_COMPONENTS,\n          useValue: components,\n          multi: true\n        }\n      ],\n      ngModule: GridModule\n    };\n  }\n\n  static withComponents(components: any[]): ModuleWithProviders {\n    return {\n      ngModule: GridModule,\n      providers: [\n        {\n          provide: ANALYZE_FOR_ENTRY_COMPONENTS,\n          useValue: components,\n          multi: true\n        }\n      ]\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GridMessageService.html":{"url":"injectables/GridMessageService.html","title":"injectable - GridMessageService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  GridMessageService\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/grid/services/grid-message.service.ts\n        \n\n\n\n            \n                Index\n                \n                    \n                        \n                            \n                                Properties\n                            \n                        \n                        \n                            \n                                \n                                    \n                                            Private\n                                        _level\n                                    \n                                    \n                                            Private\n                                        _message\n                                    \n                                    \n                                            Private\n                                        _messageObservable\n                                    \n                                \n                            \n                        \n                        \n                            \n                                Methods\n                            \n                        \n                        \n                            \n                                \n                                    \n                                        error\n                                    \n                                    \n                                        warn\n                                    \n                                \n                            \n                        \n                        \n                            \n                                Accessors\n                            \n                        \n                        \n                            \n                                \n                                    \n                                        messageObservable\n                                    \n                                \n                            \n                        \n                    \n                \n            \n\n\n            \n                \n                    \n                        Methods\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        error\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            error(message: string)\n                                \n                            \n            \n            \n                                    \n                                        \n                                                Defined in src/grid/services/grid-message.service.ts:12\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                                Type\n                                                            Optional\n                                                        \n                                                    \n                                                    \n                                                            \n                                                                message\n                                                                \n                                                                    \n                                                                                string\n                                                                    \n                                                                \n                                                                \n                                                                        no\n                                                                \n                                                                \n            \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     void\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        warn\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            warn(message: string)\n                                \n                            \n            \n            \n                                    \n                                        \n                                                Defined in src/grid/services/grid-message.service.ts:16\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                                Type\n                                                            Optional\n                                                        \n                                                    \n                                                    \n                                                            \n                                                                message\n                                                                \n                                                                    \n                                                                                string\n                                                                    \n                                                                \n                                                                \n                                                                        no\n                                                                \n                                                                \n            \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     void\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n            \n\n            \n                \n                    \n                        Properties\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                            Private\n                                        _level\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                    _level:     number\n            \n                                \n                            \n                                \n                                    \n                                        Type :     number\n            \n                                    \n                                \n                                \n                                    \n                                        Default value : 2\n                                    \n                                \n                                    \n                                        \n                                                Defined in src/grid/services/grid-message.service.ts:10\n                                        \n                                    \n            \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                            Private\n                                        _message\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                    _message:     Subject\n            \n                                \n                            \n                                \n                                    \n                                        Type :     Subject\n            \n                                    \n                                \n                                \n                                    \n                                        Default value : new Subject()\n                                    \n                                \n                                    \n                                        \n                                                Defined in src/grid/services/grid-message.service.ts:8\n                                        \n                                    \n            \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                            Private\n                                        _messageObservable\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                    _messageObservable:     Observable\n            \n                                \n                            \n                                \n                                    \n                                        Type :     Observable\n            \n                                    \n                                \n                                \n                                    \n                                        Default value : this._message.asObservable()\n                                    \n                                \n                                    \n                                        \n                                                Defined in src/grid/services/grid-message.service.ts:9\n                                        \n                                    \n            \n            \n                        \n                    \n            \n\n            \n                \n                    Accessors\n                \n                    \n                        \n                            \n                                \n                                    \n                                    messageObservable\n                                \n                            \n            \n                            \n                                \n                                    getmessageObservable()\n                                \n                            \n                                        \n                                            \n                                                Defined in src/grid/services/grid-message.service.ts:20\n                                            \n                                        \n            \n                        \n                    \n            \n    \n\n\n    \n        import {Injectable} from \"@angular/core\";\n\nimport {Subject, Observable} from \"rxjs/Rx\";\n\n@Injectable()\nexport class GridMessageService {\n\n  private _message: Subject = new Subject();\n  private _messageObservable: Observable = this._message.asObservable();\n  private _level: number = 2;\n\n  error(message: string) {\n    this._message.next(\"ERROR: \" + message);\n  }\n\n  warn(message: string) {\n    this._message.next(\"WARN: \" + message);\n  }\n\n  get messageObservable(): Observable {\n    return this._messageObservable;\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/IsFixedPipe.html":{"url":"pipes/IsFixedPipe.html","title":"pipe - IsFixedPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Pipes\n  IsFixedPipe\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n\n    \n\n        \n            File\n        \n        \n            src/grid/utils/is-fixed.pipe.ts\n        \n\n\n\n        \n            Metadata\n            \n                \n                    \n                        name\n                        isFixed\n                    \n                \n            \n        \n\n            \n                \n                    \n                        Methods\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        transform\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            transform(list: Array, fixed: boolean)\n                                \n                            \n            \n            \n                                    \n                                        \n                                                Defined in src/grid/utils/is-fixed.pipe.ts:10\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                                Type\n                                                            Optional\n                                                        \n                                                    \n                                                    \n                                                            \n                                                                list\n                                                                \n                                                                    \n                                                                                Array\n                                                                    \n                                                                \n                                                                \n                                                                        no\n                                                                \n                                                                \n            \n                                                            \n                                                            \n                                                                fixed\n                                                                \n                                                                    \n                                                                                boolean\n                                                                    \n                                                                \n                                                                \n                                                                        no\n                                                                \n                                                                \n            \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     any\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n            \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from \"@angular/core\";\n\nimport { Column } from \"../column/column\";\n\n@Pipe({\n  name: \"isFixed\",\n  pure: false\n})\nexport class IsFixedPipe implements PipeTransform {\n  transform(list: Array, fixed: boolean) {\n    if (list === undefined) {\n      return list;\n    } else {\n      return list.filter((o: Column) => o.isFixed === fixed);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/IsGroupPipe.html":{"url":"pipes/IsGroupPipe.html","title":"pipe - IsGroupPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Pipes\n  IsGroupPipe\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n\n    \n\n        \n            File\n        \n        \n            src/grid/utils/is-group.pipe.ts\n        \n\n\n\n        \n            Metadata\n            \n                \n                    \n                        name\n                        isGroup\n                    \n                \n            \n        \n\n            \n                \n                    \n                        Methods\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        transform\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            transform(list: )\n                                \n                            \n            \n            \n                                    \n                                        \n                                                Defined in src/grid/utils/is-group.pipe.ts:9\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Optional\n                                                        \n                                                    \n                                                    \n                                                            \n                                                                list\n                                                                \n                                                                \n                                                                \n                                                                        no\n                                                                \n                                                                \n            \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     any\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n            \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from \"@angular/core\";\n\nimport { Column } from \"../column/column\";\n\n@Pipe({\n  name: \"isGroup\"\n})\nexport class IsGroupPipe implements PipeTransform {\n  transform(list) {\n    if (list === undefined) {\n      return list;\n    } else {\n      return list.filter((o: Column) => o.isGroup || o.isUtility);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/IsRowVisiblePipe.html":{"url":"pipes/IsRowVisiblePipe.html","title":"pipe - IsRowVisiblePipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Pipes\n  IsRowVisiblePipe\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n\n    \n\n        \n            File\n        \n        \n            src/grid/utils/is-row-visible.pipe.ts\n        \n\n\n\n        \n            Metadata\n            \n                \n                    \n                        name\n                        isRowVisible\n                    \n                \n            \n        \n\n            \n                \n                    \n                        Methods\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        transform\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            transform(list: )\n                                \n                            \n            \n            \n                                    \n                                        \n                                                Defined in src/grid/utils/is-row-visible.pipe.ts:9\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Optional\n                                                        \n                                                    \n                                                    \n                                                            \n                                                                list\n                                                                \n                                                                \n                                                                \n                                                                        no\n                                                                \n                                                                \n            \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     any\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n            \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from \"@angular/core\";\n\nimport { Row } from \"../row/row\";\n\n@Pipe({\n  name: \"isRowVisible\"\n})\nexport class IsRowVisiblePipe implements PipeTransform {\n  transform(list) {\n    if (list === undefined) {\n      return list;\n    } else {\n      return list.filter((o: Row) => o.visible);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/IsVisiblePipe.html":{"url":"pipes/IsVisiblePipe.html","title":"pipe - IsVisiblePipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Pipes\n  IsVisiblePipe\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n\n    \n\n        \n            File\n        \n        \n            src/grid/utils/is-visible.pipe.ts\n        \n\n\n\n        \n            Metadata\n            \n                \n                    \n                        name\n                        isVisible\n                    \n                \n            \n        \n\n            \n                \n                    \n                        Methods\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        transform\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            transform(list: )\n                                \n                            \n            \n            \n                                    \n                                        \n                                                Defined in src/grid/utils/is-visible.pipe.ts:9\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Optional\n                                                        \n                                                    \n                                                    \n                                                            \n                                                                list\n                                                                \n                                                                \n                                                                \n                                                                        no\n                                                                \n                                                                \n            \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     any\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n            \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from \"@angular/core\";\n\nimport { Column } from \"../column/column\";\n\n@Pipe({\n  name: \"isVisible\"\n})\nexport class IsVisiblePipe implements PipeTransform {\n  transform(list) {\n    if (list === undefined) {\n      return list;\n    } else {\n      return list.filter((o: Column) => o.visible);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Cell.html":{"url":"classes/Cell.html","title":"class - Cell","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  Cell\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/grid/cell/cell.ts\n        \n\n            \n                Description\n            \n            \n                A holder for the cell's data and other metadata needed for rendering or data management.\n\n            \n\n\n\n\n            \n                Index\n                \n                    \n                        \n                            \n                                Properties\n                            \n                        \n                        \n                            \n                                \n                                    \n                                        dirty\n                                    \n                                    \n                                        key\n                                    \n                                    \n                                        value\n                                    \n                                \n                            \n                        \n                    \n                \n            \n\n            \n                Constructor\n                    \n                        \n                            \n                                \n            constructor(o: Object)\n                                \n                            \n                                    \n                                        \n                                            Defined in src/grid/cell/cell.ts:7\n                                        \n                                    \n            \n                            \n                                \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                                Type\n                                                            Optional\n                                                        \n                                                    \n                                                    \n                                                            \n                                                                o\n                                                              \n                                                                    \n                                                                                Object\n                                                                    \n                                                              \n                                                                \n                                                                        no\n                                                                \n                                                                \n                                                            \n                                                    \n                                                \n                                        \n                                \n                            \n                        \n                    \n            \n\n\n\n            \n                \n                    \n                        Properties\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        dirty\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                    dirty:     boolean\n            \n                                \n                            \n                                \n                                    \n                                        Type :     boolean\n            \n                                    \n                                \n                                \n                                    \n                                        Default value : false\n                                    \n                                \n                                    \n                                        \n                                                Defined in src/grid/cell/cell.ts:7\n                                        \n                                    \n            \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        key\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                    key:     number\n            \n                                \n                            \n                                \n                                    \n                                        Type :     number\n            \n                                    \n                                \n                                    \n                                        \n                                                Defined in src/grid/cell/cell.ts:6\n                                        \n                                    \n            \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        value\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                    value:     any\n            \n                                \n                            \n                                \n                                    \n                                        Type :     any\n            \n                                    \n                                \n                                    \n                                        \n                                                Defined in src/grid/cell/cell.ts:5\n                                        \n                                    \n            \n            \n                        \n                    \n            \n\n    \n\n\n    \n        export class Cell {\n  value: any;\n  key: number;\n  dirty: boolean = false;\n\n  constructor(o: Object) {\n    Object.assign(this, o);\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/EmptyFactory.html":{"url":"classes/EmptyFactory.html","title":"class - EmptyFactory","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  EmptyFactory\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/grid/utils/empty.factory.ts\n        \n\n            \n                Description\n            \n            \n                Allows instantiation of any generic type if the type has no constructor arguments.\n\n            \n\n\n\n\n            \n                Index\n                \n                    \n                        \n                            \n                                Methods\n                            \n                        \n                        \n                            \n                                \n                                    \n                                        getInstance\n                                    \n                                \n                            \n                        \n                    \n                \n            \n\n            \n                Constructor\n                    \n                        \n                            \n                                \n            constructor(emptyConstructor: EmptyConstructor)\n                                \n                            \n                                    \n                                        \n                                            Defined in src/grid/utils/empty.factory.ts:4\n                                        \n                                    \n            \n                            \n                                \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                                Type\n                                                            Optional\n                                                        \n                                                    \n                                                    \n                                                            \n                                                                emptyConstructor\n                                                              \n                                                                    \n                                                                                EmptyConstructor\n                                                                    \n                                                              \n                                                                \n                                                                        no\n                                                                \n                                                                \n                                                            \n                                                    \n                                                \n                                        \n                                \n                            \n                        \n                    \n            \n\n            \n                \n                    \n                        Methods\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        getInstance\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            getInstance()\n                                \n                            \n            \n            \n                                    \n                                        \n                                                Defined in src/grid/utils/empty.factory.ts:7\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                            Returns :     T\n            \n                                        \n                                \n                            \n                        \n                    \n            \n\n\n\n    \n\n\n    \n        export class EmptyFactory {\n  constructor(private emptyConstructor: EmptyConstructor) {}\n\n  getInstance(): T {\n    return new this.emptyConstructor();\n  }\n}\n\nexport interface EmptyConstructor {\n  new(): T;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FormatterParser.html":{"url":"classes/FormatterParser.html","title":"class - FormatterParser","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  FormatterParser\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/grid/column/formatters/formatter-parser.ts\n        \n\n            \n                Description\n            \n            \n                Most simple formatter parser which just returns the value without modification.\n\n            \n\n\n\n\n            \n                Index\n                \n                    \n                        \n                            \n                                Properties\n                            \n                        \n                        \n                            \n                                \n                                    \n                                        config\n                                    \n                                \n                            \n                        \n                        \n                            \n                                Methods\n                            \n                        \n                        \n                            \n                                \n                                    \n                                        formatValue\n                                    \n                                    \n                                        parseValue\n                                    \n                                    \n                                        setConfig\n                                    \n                                \n                            \n                        \n                    \n                \n            \n\n\n            \n                \n                    \n                        Methods\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        formatValue\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            formatValue(value: any)\n                                \n                            \n            \n            \n                                    \n                                        \n                                                Defined in src/grid/column/formatters/formatter-parser.ts:12\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                                Type\n                                                            Optional\n                                                        \n                                                    \n                                                    \n                                                            \n                                                                value\n                                                                \n                                                                    \n                                                                                any\n                                                                    \n                                                                \n                                                                \n                                                                        no\n                                                                \n                                                                \n            \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     any\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        parseValue\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            parseValue(value: any)\n                                \n                            \n            \n            \n                                    \n                                        \n                                                Defined in src/grid/column/formatters/formatter-parser.ts:16\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                                Type\n                                                            Optional\n                                                        \n                                                    \n                                                    \n                                                            \n                                                                value\n                                                                \n                                                                    \n                                                                                any\n                                                                    \n                                                                \n                                                                \n                                                                        no\n                                                                \n                                                                \n            \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     any\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        setConfig\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            setConfig(config: any)\n                                \n                            \n            \n            \n                                    \n                                        \n                                                Defined in src/grid/column/formatters/formatter-parser.ts:8\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                                Type\n                                                            Optional\n                                                        \n                                                    \n                                                    \n                                                            \n                                                                config\n                                                                \n                                                                    \n                                                                                any\n                                                                    \n                                                                \n                                                                \n                                                                        no\n                                                                \n                                                                \n            \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     void\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n            \n\n\n            \n                \n                    \n                        Properties\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        config\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                    config:     any\n            \n                                \n                            \n                                \n                                    \n                                        Type :     any\n            \n                                    \n                                \n                                \n                                    \n                                        Default value : {}\n                                    \n                                \n                                    \n                                        \n                                                Defined in src/grid/column/formatters/formatter-parser.ts:6\n                                        \n                                    \n            \n            \n                        \n                    \n            \n\n    \n\n\n    \n        export class FormatterParser {\n\n  config: any = {};\n\n  setConfig(config: any) {\n    this.config = config;\n  }\n\n  formatValue(value: any): any {\n    return value;\n  }\n\n  parseValue(value: any): any {\n    return value;\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/HtmlUtil.html":{"url":"classes/HtmlUtil.html","title":"class - HtmlUtil","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  HtmlUtil\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/grid/utils/html-util.ts\n        \n\n            \n                Description\n            \n            \n                Convenience class for pulling things such as id from an element.\n\n            \n\n\n\n\n            \n                Index\n                \n                    \n                        \n                            \n                                Methods\n                            \n                        \n                        \n                            \n                                \n                                    \n                                            Static\n                                        getId\n                                    \n                                    \n                                            Static\n                                        getIdElement\n                                    \n                                    \n                                            Static\n                                        getLocation\n                                    \n                                \n                            \n                        \n                    \n                \n            \n\n\n            \n                \n                    \n                        Methods\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                            Static\n                                        getId\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                        \n                                    getId(e: HTMLElement, id?: string)\n                                \n                            \n            \n            \n                                    \n                                        \n                                                Defined in src/grid/utils/html-util.ts:8\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                                Type\n                                                            Optional\n                                                        \n                                                    \n                                                    \n                                                            \n                                                                e\n                                                                \n                                                                    \n                                                                                HTMLElement\n                                                                    \n                                                                \n                                                                \n                                                                        no\n                                                                \n                                                                \n            \n                                                            \n                                                            \n                                                                id\n                                                                \n                                                                    \n                                                                                string\n                                                                    \n                                                                \n                                                                \n                                                                        yes\n                                                                \n                                                                \n            \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     string\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                            Static\n                                        getIdElement\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                        \n                                    getIdElement(e: HTMLElement)\n                                \n                            \n            \n            \n                                    \n                                        \n                                                Defined in src/grid/utils/html-util.ts:23\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                                Type\n                                                            Optional\n                                                        \n                                                    \n                                                    \n                                                            \n                                                                e\n                                                                \n                                                                    \n                                                                                HTMLElement\n                                                                    \n                                                                \n                                                                \n                                                                        no\n                                                                \n                                                                \n            \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     HTMLElement\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                            Static\n                                        getLocation\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                        \n                                    getLocation(e: HTMLElement)\n                                \n                            \n            \n            \n                                    \n                                        \n                                                Defined in src/grid/utils/html-util.ts:38\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                                Type\n                                                            Optional\n                                                        \n                                                    \n                                                    \n                                                            \n                                                                e\n                                                                \n                                                                    \n                                                                                HTMLElement\n                                                                    \n                                                                \n                                                                \n                                                                        no\n                                                                \n                                                                \n            \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     Point\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n            \n\n\n\n    \n\n\n    \n        import {Point} from \"./point\";\n\n/**\n * Convenience class for pulling things such as id from an element.\n */\nexport class HtmlUtil {\n\n  static getId(e: HTMLElement, id?: string): string {\n    if (!e) {\n      return \"\";\n    }\n    while ((!id && e.id === \"\") || (id && !e.id.startsWith(id))) {\n      if (e.parentElement) {\n        e = e.parentElement;\n      } else {\n        break;\n      }\n    }\n\n    return e.id;\n  }\n\n  static getIdElement(e: HTMLElement): HTMLElement {\n    if (!e) {\n      return null;\n    }\n    while (e.id === \"\") {\n      if (e.parentElement) {\n        e = e.parentElement;\n      } else {\n        break;\n      }\n    }\n\n    return e;\n  }\n\n  static getLocation(e: HTMLElement): Point {\n    return Point.getPoint(this.getId(e));\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/InjectableFactory.html":{"url":"classes/InjectableFactory.html","title":"class - InjectableFactory","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  InjectableFactory\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/grid/utils/injectable.factory.ts\n        \n\n            \n                Description\n            \n            \n                Allows instantiation of any generic type if the type expects an injector argument.  See the implementation of\nthe EventListener.\n\n            \n\n\n\n\n            \n                Index\n                \n                    \n                        \n                            \n                                Methods\n                            \n                        \n                        \n                            \n                                \n                                    \n                                        getInstance\n                                    \n                                \n                            \n                        \n                    \n                \n            \n\n            \n                Constructor\n                    \n                        \n                            \n                                \n            constructor(ic: InjectableConstructor, injector: Injector)\n                                \n                            \n                                    \n                                        \n                                            Defined in src/grid/utils/injectable.factory.ts:7\n                                        \n                                    \n            \n                            \n                                \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                                Type\n                                                            Optional\n                                                        \n                                                    \n                                                    \n                                                            \n                                                                ic\n                                                              \n                                                                    \n                                                                                InjectableConstructor\n                                                                    \n                                                              \n                                                                \n                                                                        no\n                                                                \n                                                                \n                                                            \n                                                            \n                                                                injector\n                                                              \n                                                                    \n                                                                                Injector\n                                                                    \n                                                              \n                                                                \n                                                                        no\n                                                                \n                                                                \n                                                            \n                                                    \n                                                \n                                        \n                                \n                            \n                        \n                    \n            \n\n            \n                \n                    \n                        Methods\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        getInstance\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            getInstance()\n                                \n                            \n            \n            \n                                    \n                                        \n                                                Defined in src/grid/utils/injectable.factory.ts:10\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                            Returns :     T\n            \n                                        \n                                \n                            \n                        \n                    \n            \n\n\n\n    \n\n\n    \n        import {Injector} from \"@angular/core\";\n\n/**\n * Allows instantiation of any generic type if the type expects an injector argument.  See the implementation of\n * the EventListener.\n */\nexport class InjectableFactory {\n  constructor(private ic: InjectableConstructor, private injector: Injector) {}\n\n  getInstance(): T {\n    return new this.ic(this.injector);\n  }\n}\n\nexport interface InjectableConstructor {\n  new(injector: Injector): T;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RowChange.html":{"url":"classes/RowChange.html","title":"class - RowChange","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  RowChange\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/grid/utils/row-change.ts\n        \n\n\n\n\n\n            \n                Index\n                \n                    \n                        \n                            \n                                Properties\n                            \n                        \n                        \n                            \n                                \n                                    \n                                        newRowNum\n                                    \n                                    \n                                        oldRowNum\n                                    \n                                \n                            \n                        \n                    \n                \n            \n\n            \n                Constructor\n                    \n                        \n                            \n                                \n            constructor(oldRowNum: number, newRowNum: number)\n                                \n                            \n                                    \n                                        \n                                            Defined in src/grid/utils/row-change.ts:4\n                                        \n                                    \n            \n                            \n                                \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                                Type\n                                                            Optional\n                                                        \n                                                    \n                                                    \n                                                            \n                                                                oldRowNum\n                                                              \n                                                                    \n                                                                                number\n                                                                    \n                                                              \n                                                                \n                                                                        no\n                                                                \n                                                                \n                                                            \n                                                            \n                                                                newRowNum\n                                                              \n                                                                    \n                                                                                number\n                                                                    \n                                                              \n                                                                \n                                                                        no\n                                                                \n                                                                \n                                                            \n                                                    \n                                                \n                                        \n                                \n                            \n                        \n                    \n            \n\n\n\n            \n                \n                    \n                        Properties\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        newRowNum\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                    newRowNum:     number\n            \n                                \n                            \n                                \n                                    \n                                        Type :     number\n            \n                                    \n                                \n                                    \n                                        \n                                                Defined in src/grid/utils/row-change.ts:4\n                                        \n                                    \n            \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        oldRowNum\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                    oldRowNum:     number\n            \n                                \n                            \n                                \n                                    \n                                        Type :     number\n            \n                                    \n                                \n                                    \n                                        \n                                                Defined in src/grid/utils/row-change.ts:3\n                                        \n                                    \n            \n            \n                        \n                    \n            \n\n    \n\n\n    \n        export class RowChange {\n\n  oldRowNum: number;\n  newRowNum: number;\n\n  constructor(oldRowNum: number, newRowNum: number) {\n    this.oldRowNum = oldRowNum;\n    this.newRowNum = newRowNum;\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SortInfo.html":{"url":"classes/SortInfo.html","title":"class - SortInfo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  SortInfo\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/grid/utils/sort-info.ts\n        \n\n\n\n\n\n            \n                Index\n                \n                    \n                        \n                            \n                                Properties\n                            \n                        \n                        \n                            \n                                \n                                    \n                                            Public\n                                        asc\n                                    \n                                    \n                                            Public\n                                        field\n                                    \n                                \n                            \n                        \n                        \n                            \n                                Methods\n                            \n                        \n                        \n                            \n                                \n                                    \n                                        getAsc\n                                    \n                                    \n                                        getField\n                                    \n                                    \n                                        setAsc\n                                    \n                                    \n                                        setField\n                                    \n                                \n                            \n                        \n                    \n                \n            \n\n\n            \n                \n                    \n                        Methods\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        getAsc\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            getAsc()\n                                \n                            \n            \n            \n                                    \n                                        \n                                                Defined in src/grid/utils/sort-info.ts:5\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                            Returns :     boolean\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        getField\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            getField()\n                                \n                            \n            \n            \n                                    \n                                        \n                                                Defined in src/grid/utils/sort-info.ts:13\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                            Returns :     string\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        setAsc\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            setAsc(asc: boolean)\n                                \n                            \n            \n            \n                                    \n                                        \n                                                Defined in src/grid/utils/sort-info.ts:9\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                                Type\n                                                            Optional\n                                                        \n                                                    \n                                                    \n                                                            \n                                                                asc\n                                                                \n                                                                    \n                                                                                boolean\n                                                                    \n                                                                \n                                                                \n                                                                        no\n                                                                \n                                                                \n            \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     void\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        setField\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            setField(field: string)\n                                \n                            \n            \n            \n                                    \n                                        \n                                                Defined in src/grid/utils/sort-info.ts:17\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                                Type\n                                                            Optional\n                                                        \n                                                    \n                                                    \n                                                            \n                                                                field\n                                                                \n                                                                    \n                                                                                string\n                                                                    \n                                                                \n                                                                \n                                                                        no\n                                                                \n                                                                \n            \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     void\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n            \n\n\n            \n                \n                    \n                        Properties\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                            Public\n                                        asc\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                    asc:     boolean\n            \n                                \n                            \n                                \n                                    \n                                        Type :     boolean\n            \n                                    \n                                \n                                \n                                    \n                                        Default value : true\n                                    \n                                \n                                    \n                                        \n                                                Defined in src/grid/utils/sort-info.ts:2\n                                        \n                                    \n            \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                            Public\n                                        field\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                    field:     string\n            \n                                \n                            \n                                \n                                    \n                                        Type :     string\n            \n                                    \n                                \n                                \n                                    \n                                        Default value : null\n                                    \n                                \n                                    \n                                        \n                                                Defined in src/grid/utils/sort-info.ts:3\n                                        \n                                    \n            \n            \n                        \n                    \n            \n\n    \n\n\n    \n        export class SortInfo {\n  public asc: boolean = true;\n  public field: string = null;\n\n  getAsc(): boolean {\n    return this.asc;\n  }\n\n  setAsc(asc: boolean) {\n    this.asc = asc;\n  }\n\n  getField(): string {\n    return this.field;\n  }\n\n  setField(field: string) {\n    this.field = field;\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ClickListener.html":{"url":"interfaces/ClickListener.html","title":"interface - ClickListener","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ClickListener\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/grid/event/click.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    click\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n                \n                    \n                        Methods\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        click\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            click(event: MouseEvent)\n                                \n                            \n            \n            \n                                    \n                                        \n                                                Defined in src/grid/event/click.interface.ts:3\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                                Type\n                                                            Optional\n                                                        \n                                                    \n                                                    \n                                                            \n                                                                event\n                                                                \n                                                                    \n                                                                                MouseEvent\n                                                                    \n                                                                \n                                                                \n                                                                        no\n                                                                \n                                                                \n            \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     boolean\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n            \n\n\n    \n\n\n    \n        export interface ClickListener {\n\n  click(event: MouseEvent): boolean;\n\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DblClickListener.html":{"url":"interfaces/DblClickListener.html","title":"interface - DblClickListener","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  DblClickListener\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/grid/event/dbl-click.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    dblclick\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n                \n                    \n                        Methods\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        dblclick\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            dblclick(event: MouseEvent)\n                                \n                            \n            \n            \n                                    \n                                        \n                                                Defined in src/grid/event/dbl-click.interface.ts:3\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                                Type\n                                                            Optional\n                                                        \n                                                    \n                                                    \n                                                            \n                                                                event\n                                                                \n                                                                    \n                                                                                MouseEvent\n                                                                    \n                                                                \n                                                                \n                                                                        no\n                                                                \n                                                                \n            \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     boolean\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n            \n\n\n    \n\n\n    \n        export interface DblClickListener {\n\n  dblclick(event: MouseEvent): boolean;\n\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Dictionary.html":{"url":"interfaces/Dictionary.html","title":"interface - Dictionary","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Dictionary\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/grid/model/dictionary.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        display\n                                \n                                \n                                        value\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        display\n                                    \n                                \n                                \n                                    \n                                        display:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n                                    \n                                        \n                                            Defined in src/grid/model/dictionary.interface.ts:3\n                                        \n                                    \n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        value\n                                    \n                                \n                                \n                                    \n                                        value:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n                                    \n                                        \n                                            Defined in src/grid/model/dictionary.interface.ts:2\n                                        \n                                    \n\n                        \n                    \n            \n    \n\n\n    \n        export interface Dictionary {\n  value: string;\n  display: string;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/EmptyConstructor.html":{"url":"interfaces/EmptyConstructor.html","title":"interface - EmptyConstructor","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  EmptyConstructor\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/grid/utils/empty.factory.ts\n        \n\n\n\n\n\n\n    \n\n\n    \n        export class EmptyFactory {\n  constructor(private emptyConstructor: EmptyConstructor) {}\n\n  getInstance(): T {\n    return new this.emptyConstructor();\n  }\n}\n\nexport interface EmptyConstructor {\n  new(): T;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/EventListenerArg.html":{"url":"interfaces/EventListenerArg.html","title":"interface - EventListenerArg","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  EventListenerArg\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/grid/event/event-listener-arg.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        config\n                                \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        config\n                                    \n                                \n                                \n                                    \n                                        config:     any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/grid/event/event-listener-arg.interface.ts:5\n                                        \n                                    \n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     Type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Type\n\n                                        \n                                    \n\n\n\n\n                                    \n                                        \n                                            Defined in src/grid/event/event-listener-arg.interface.ts:4\n                                        \n                                    \n\n                        \n                    \n            \n    \n\n\n    \n        import {Type} from \"@angular/core\";\n\nexport interface EventListenerArg {\n  type: Type;\n  config?: any;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/InjectableConstructor.html":{"url":"interfaces/InjectableConstructor.html","title":"interface - InjectableConstructor","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  InjectableConstructor\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/grid/utils/injectable.factory.ts\n        \n\n\n\n\n\n\n    \n\n\n    \n        import {Injector} from \"@angular/core\";\n\n/**\n * Allows instantiation of any generic type if the type expects an injector argument.  See the implementation of\n * the EventListener.\n */\nexport class InjectableFactory {\n  constructor(private ic: InjectableConstructor, private injector: Injector) {}\n\n  getInstance(): T {\n    return new this.ic(this.injector);\n  }\n}\n\nexport interface InjectableConstructor {\n  new(injector: Injector): T;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MouseDownListener.html":{"url":"interfaces/MouseDownListener.html","title":"interface - MouseDownListener","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  MouseDownListener\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/grid/event/mouse-down.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    mouseDown\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n                \n                    \n                        Methods\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        mouseDown\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            mouseDown(event: MouseEvent)\n                                \n                            \n            \n            \n                                    \n                                        \n                                                Defined in src/grid/event/mouse-down.interface.ts:3\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                                Type\n                                                            Optional\n                                                        \n                                                    \n                                                    \n                                                            \n                                                                event\n                                                                \n                                                                    \n                                                                                MouseEvent\n                                                                    \n                                                                \n                                                                \n                                                                        no\n                                                                \n                                                                \n            \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     boolean\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n            \n\n\n    \n\n\n    \n        export interface MouseDownListener {\n\n  mouseDown(event: MouseEvent): boolean;\n\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MouseDragListener.html":{"url":"interfaces/MouseDragListener.html","title":"interface - MouseDragListener","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  MouseDragListener\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/grid/event/mouse-drag.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    mouseDrag\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n                \n                    \n                        Methods\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        mouseDrag\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            mouseDrag(event: MouseEvent)\n                                \n                            \n            \n            \n                                    \n                                        \n                                                Defined in src/grid/event/mouse-drag.interface.ts:3\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                                Type\n                                                            Optional\n                                                        \n                                                    \n                                                    \n                                                            \n                                                                event\n                                                                \n                                                                    \n                                                                                MouseEvent\n                                                                    \n                                                                \n                                                                \n                                                                        no\n                                                                \n                                                                \n            \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     boolean\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n            \n\n\n    \n\n\n    \n        export interface MouseDragListener {\n\n  mouseDrag(event: MouseEvent): boolean;\n\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MouseOutListener.html":{"url":"interfaces/MouseOutListener.html","title":"interface - MouseOutListener","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  MouseOutListener\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/grid/event/mouse-out.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    mouseOut\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n                \n                    \n                        Methods\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        mouseOut\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            mouseOut(event: MouseEvent)\n                                \n                            \n            \n            \n                                    \n                                        \n                                                Defined in src/grid/event/mouse-out.interface.ts:3\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                                Type\n                                                            Optional\n                                                        \n                                                    \n                                                    \n                                                            \n                                                                event\n                                                                \n                                                                    \n                                                                                MouseEvent\n                                                                    \n                                                                \n                                                                \n                                                                        no\n                                                                \n                                                                \n            \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     boolean\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n            \n\n\n    \n\n\n    \n        export interface MouseOutListener {\n\n  mouseOut(event: MouseEvent): boolean;\n\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MouseOverListener.html":{"url":"interfaces/MouseOverListener.html","title":"interface - MouseOverListener","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  MouseOverListener\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/grid/event/mouse-over.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    mouseOver\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n                \n                    \n                        Methods\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        mouseOver\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            mouseOver(event: MouseEvent)\n                                \n                            \n            \n            \n                                    \n                                        \n                                                Defined in src/grid/event/mouse-over.interface.ts:3\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                                Type\n                                                            Optional\n                                                        \n                                                    \n                                                    \n                                                            \n                                                                event\n                                                                \n                                                                    \n                                                                                MouseEvent\n                                                                    \n                                                                \n                                                                \n                                                                        no\n                                                                \n                                                                \n            \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     boolean\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n            \n\n\n    \n\n\n    \n        export interface MouseOverListener {\n\n  mouseOver(event: MouseEvent): boolean;\n\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MouseUpListener.html":{"url":"interfaces/MouseUpListener.html","title":"interface - MouseUpListener","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  MouseUpListener\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/grid/event/mouse-up.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    mouseUp\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n                \n                    \n                        Methods\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        mouseUp\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            mouseUp(event: MouseEvent)\n                                \n                            \n            \n            \n                                    \n                                        \n                                                Defined in src/grid/event/mouse-up.interface.ts:3\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                                Type\n                                                            Optional\n                                                        \n                                                    \n                                                    \n                                                            \n                                                                event\n                                                                \n                                                                    \n                                                                                MouseEvent\n                                                                    \n                                                                \n                                                                \n                                                                        no\n                                                                \n                                                                \n            \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     boolean\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n            \n\n\n    \n\n\n    \n        export interface MouseUpListener {\n\n  mouseUp(event: MouseEvent): boolean;\n\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ARROW\n                        \n                        \n                            CLICK\n                        \n                        \n                            NO_EVENT\n                        \n                        \n                            RESIZE\n                        \n                        \n                            SCROLL\n                        \n                        \n                            TAB\n                        \n                    \n                \n            \n        \n    \n\n\n    src/grid/services/grid-event.service.ts\n    \n                \n                \n                    \n                        \n                            \n                            \n                                \n                                ARROW\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n                            ARROW:     number\n    \n                        \n                    \n                        \n                            \n                                Type :     number\n    \n                            \n                        \n                        \n                            \n                                Default value : 2\n                            \n                        \n    \n    \n                \n            \n            \n                \n                    \n                        \n                            \n                            \n                                \n                                CLICK\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n                            CLICK:     number\n    \n                        \n                    \n                        \n                            \n                                Type :     number\n    \n                            \n                        \n                        \n                            \n                                Default value : 0\n                            \n                        \n    \n    \n                \n            \n            \n                \n                    \n                        \n                            \n                            \n                                \n                                TAB\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n                            TAB:     number\n    \n                        \n                    \n                        \n                            \n                                Type :     number\n    \n                            \n                        \n                        \n                            \n                                Default value : 1\n                            \n                        \n    \n    \n                \n            \n    \n    src/grid/grid.component.ts\n    \n                \n                \n                    \n                        \n                            \n                            \n                                \n                                NO_EVENT\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n                            NO_EVENT:     number\n    \n                        \n                    \n                        \n                            \n                                Type :     number\n    \n                            \n                        \n                        \n                            \n                                Default value : -1\n                            \n                        \n    \n    \n                \n            \n            \n                \n                    \n                        \n                            \n                            \n                                \n                                RESIZE\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n                            RESIZE:     number\n    \n                        \n                    \n                        \n                            \n                                Type :     number\n    \n                            \n                        \n                        \n                            \n                                Default value : 0\n                            \n                        \n    \n    \n                \n            \n            \n                \n                    \n                        \n                            \n                            \n                                \n                                SCROLL\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n                            SCROLL:     number\n    \n                        \n                    \n                        \n                            \n                                Type :     number\n    \n                            \n                        \n                        \n                            \n                                Default value : 1\n                            \n                        \n    \n    \n                \n            \n    \n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
