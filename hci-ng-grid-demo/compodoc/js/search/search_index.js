var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.1.6","fields":["title","body"],"fieldVectors":[["title/dependencies.html",[0,2.2,1,2.183]],["body/dependencies.html",[1,2.686,2,3.375,3,3.888,4,3.986,5,0.032,6,4.667,7,4.667,8,4.667,9,4.667,10,0.028,11,0.028]],["title/index.html",[12,1.693,13,1.91,14,0.427]],["body/index.html",[0,0.628,1,1.063,2,1.631,5,0.028,10,0.007,11,0.007,12,0.869,15,0.545,16,0.545,17,0.753,18,0.753,19,4.015,20,0.753,21,1.847,22,3.155,23,0.753,24,0.753,25,0.753,26,2.256,27,2.168,28,2.899,29,0.753,30,0.753,31,0.753,32,3.434,33,0.753,34,0.545,35,0.545,36,2.573,37,0.628,38,1.847,39,0.753,40,1.355,41,0.753,42,0.753,43,0.453,44,0.434,45,0.753,46,1.355,47,1.129,48,0.753,49,0.753,50,0.753,51,0.753,52,0.753,53,1.129,54,1.355,55,3.127,56,2.602,57,1.847,58,3.127,59,0.753,60,0.753,61,1.355,62,0.753,63,0.753,64,0.753,65,2.415,66,1.88,67,1.631,68,2.25,69,1.355,70,3.023,71,2.332,72,1.129,73,1.355,74,1.355,75,3.578,76,0.753,77,1.847,78,1.847,79,0.753,80,1.355,81,0.753,82,3.172,83,3.155,84,1.355,85,0.628,86,2.629,87,2.168,88,0.753,89,1.355,90,0.056,91,1.823,92,2.714,93,0.628,94,1.355,95,0.753,96,1.129,97,0.753,98,0.753,99,0.753,100,0.753,101,1.847,102,1.298,103,0.753,104,0.483,105,2.899,106,1.129,107,1.446,108,1.07,109,1.631,110,1.88,111,0.753,112,0.753,113,2.256,114,0.753,115,0.753,116,0.24,117,0.753,118,0.753,119,0.753,120,0.753,121,0.751,122,1.539,123,2.344,124,2.096,125,1.355,126,0.753,127,0.753,128,0.753,129,2.602,130,0.753,131,1.847,132,1.539,133,0.628,134,0.753,135,1.355,136,0.753,137,2.168,138,0.293,139,0.753,140,0.521,141,0.753,142,0.753,143,1.055,144,1.882,145,0.753,146,1.539,147,0.434,148,0.628,149,0.753,150,1.355,151,1.355,152,1.847,153,0.753,154,1.847,155,1.847,156,1.355,157,0.628,158,0.753,159,1.355,160,1.355,161,2.256,162,0.753,163,1.335,164,1.129,165,0.753,166,0.753,167,0.753,168,0.753,169,0.753,170,2.444,171,0.753,172,0.753,173,0.753,174,1.355,175,0.753,176,0.753,177,0.753,178,0.753,179,2.25,180,0.753,181,1.847,182,0.753,183,1.355,184,0.753,185,0.753,186,0.753,187,0.753,188,0.98,189,0.753,190,1.129,191,1.129,192,1.355,193,0.753,194,3.754,195,0.753,196,0.753,197,1.234,198,0.628,199,0.753,200,0.753,201,0.753,202,1.129,203,1.355,204,0.753,205,0.545,206,0.753,207,2.415,208,0.753,209,0.753,210,2.256,211,0.753,212,0.753,213,2.256,214,1.539,215,0.753,216,0.753,217,1.847,218,1.355,219,1.335,220,0.753,221,0.753,222,0.753,223,0.753,224,0.628,225,0.753,226,0.753,227,1.355,228,0.545,229,0.753,230,0.753,231,1.184,232,2.256,233,1.355,234,0.753,235,1.88,236,0.753,237,0.753,238,0.753,239,0.753,240,0.753,241,1.355,242,1.847,243,2.444,244,0.753,245,1.355,246,1.355,247,0.753,248,0.753,249,0.977,250,0.753,251,0.753,252,0.753,253,1.355,254,0.753,255,0.753,256,1.335,257,0.753,258,2.256,259,0.753,260,0.753,261,0.753,262,0.753,263,0.628,264,0.753,265,0.753,266,0.753,267,0.753,268,0.753,269,0.753,270,1.847,271,0.753,272,0.753,273,0.753,274,0.753,275,0.628,276,0.753,277,1.847,278,1.355,279,1.355,280,1.355,281,1.129,282,0.753,283,0.753,284,1.355,285,0.753,286,0.753,287,1.335,288,0.753,289,0.753,290,0.753,291,0.753,292,0.392,293,0.753,294,0.753,295,1.88,296,0.753,297,2.587,298,1.446,299,0.753,300,0.753,301,0.753,302,0.753,303,0.628,304,0.753,305,0.753,306,1.129,307,0.753,308,0.161,309,0.753,310,0.046,311,0.135,312,0.628,313,0.753,314,0.753,315,0.753,316,0.753,317,0.753,318,1.355,319,0.753,320,1.355,321,0.753,322,0.753,323,0.753,324,0.753,325,0.753,326,0.628,327,1.355,328,0.753,329,0.753,330,0.753,331,2.256,332,0.753,333,0.545,334,0.753,335,1.129,336,0.753,337,0.753,338,0.753,339,1.355,340,0.545,341,0.545,342,1.355,343,0.545,344,0.628,345,1.355,346,1.355,347,0.545,348,0.753,349,0.753,350,0.628,351,0.753,352,0.753,353,0.628,354,0.545,355,2.256,356,4.052,357,0.753,358,3.155,359,1.355,360,0.753,361,0.753,362,0.753,363,0.753,364,0.753,365,0.753,366,0.046,367,0.753,368,1.355,369,0.628,370,0.753,371,0.753,372,0.753]],["title/overview.html",[373,3.581]],["body/overview.html",[1,1.557,4,1.957,5,0.032,10,0.02,11,0.02,44,3.707,107,1.734,109,1.957,188,1.957,292,2.011,308,0.236,310,0.167,333,3.254,340,3.254,341,3.254,343,3.254,347,3.254,373,2.254,374,2.254,375,2.254,376,0.201,377,2.254,378,2.254,379,2.254,380,2.254,381,5.033,382,3.749,383,2.885,384,2.885,385,2.885,386,2.885,387,3.749,388,3.749,389,3.749,390,3.749,391,3.749,392,3.749,393,2.885,394,3.216,395,2.254,396,1.957,397,2.706,398,3.86,399,1.957,400,1.074,401,2.706,402,2.706]],["title/changelog.html",[12,1.693,13,1.91,403,2.641]],["body/changelog.html",[5,0.019,10,0.019,11,0.019,19,3.069,27,2.113,32,3.138,35,1.834,36,1.747,55,2.113,65,3.069,66,3.069,68,3.273,70,3.816,72,2.113,82,2.782,85,2.113,86,2.113,87,2.113,91,0.924,92,3.138,93,3.069,104,1.626,106,2.113,110,3.069,123,1.919,124,1.834,133,2.113,137,3.968,146,2.113,147,2.12,163,4.232,164,2.113,197,1.202,202,2.113,219,1.834,224,3.615,228,1.834,243,1.834,249,1.099,297,2.664,298,1.626,326,3.069,335,3.615,344,3.069,353,2.113,354,1.834,404,2.536,405,2.536,406,2.536,407,2.536,408,2.536,409,2.536,410,2.536,411,2.536,412,2.536,413,2.536,414,2.536,415,2.536,416,2.536,417,2.536,418,2.113,419,2.536,420,2.536,421,2.536,422,2.536,423,3.684,424,2.536,425,2.536,426,2.536,427,2.536,428,2.536,429,2.536,430,2.536,431,2.362,432,4.339,433,2.113,434,2.536,435,2.536,436,2.536,437,2.536,438,2.536,439,2.536,440,2.536,441,2.536,442,2.536,443,2.536,444,2.536,445,2.536,446,2.536,447,2.536,448,2.536,449,2.536,450,2.536,451,2.536,452,2.536,453,2.536,454,2.536,455,2.113,456,2.536,457,2.536,458,2.536,459,2.536,460,2.536,461,2.536,462,3.684,463,2.536,464,2.536,465,2.536,466,2.536,467,2.113,468,2.536,469,2.536,470,2.536,471,2.536,472,2.536,473,2.536]],["title/license.html",[12,1.693,13,1.91,455,2.2]],["body/license.html",[5,0.022,10,0.022,11,0.022,15,2.327,16,2.327,47,2.681,53,4.406,58,3.628,91,1.172,96,2.681,107,2.063,148,2.681,157,2.681,190,3.628,275,4.112,295,2.681,354,2.327,366,0.198,396,2.327,418,3.628,467,2.681,474,4.112,475,2.681,476,3.218,477,2.681,478,2.681,479,2.681,480,4.355,481,3.218,482,3.218,483,3.218,484,3.218,485,4.355,486,3.218,487,6.004,488,3.218,489,3.218,490,4.112,491,3.218,492,3.218,493,3.218,494,3.218,495,3.218,496,3.218,497,3.218,498,3.218,499,2.681,500,3.218,501,4.355,502,4.355,503,3.218,504,3.218,505,4.355,506,3.218,507,3.218,508,3.218,509,3.218,510,3.218,511,3.218,512,3.218,513,3.218,514,3.218,515,2.681,516,3.218,517,3.218,518,3.218,519,3.218,520,3.218,521,3.218,522,3.218,523,3.218,524,3.218]],["title/modules.html",[292,2.239]],["body/modules.html",[5,0.029,10,0.029,11,0.029,35,3.49,44,2.777,292,2.514,525,4.826,526,4.826,527,4.826]],["title/modules/GridModule.html",[44,1.816,292,1.644]],["body/modules/GridModule.html",[1,0.923,2,1.159,3,1.336,4,1.873,5,0.033,10,0.013,11,0.013,15,1.159,16,1.159,43,1.954,44,3.566,70,2.356,82,1.028,90,0.119,107,2.815,109,2.356,116,0.337,170,1.873,292,1.349,308,0.14,333,3.478,340,3.478,341,3.478,343,3.478,347,3.478,366,0.099,374,1.336,375,2.714,376,0.278,377,1.336,378,1.336,379,1.336,380,1.336,381,4.762,382,3.658,383,2.815,384,2.815,385,2.815,386,2.815,387,4.007,388,4.007,389,3.658,390,3.658,391,2.714,392,2.714,393,2.088,394,2.158,395,1.336,396,1.159,474,1.336,475,1.336,477,1.336,478,1.336,479,1.336,528,0.14,529,1.603,530,2.59,531,1.603,532,1.603,533,1.603,534,3.258,535,3.258,536,3.741,537,0.636,538,2.59,539,1.603,540,2.59,541,1.603,542,1.603,543,1.603,544,1.028,545,1.603,546,3.741,547,2.59,548,1.603,549,1.603,550,1.603,551,3.258,552,4.391,553,1.603,554,1.603,555,1.603,556,1.603,557,1.603,558,1.603,559,1.603,560,2.59,561,1.603,562,2.59,563,1.603,564,1.603,565,3.258,566,1.603,567,1.603,568,2.158,569,1.603,570,3.258,571,3.258,572,1.603]],["title/injectables/GridMessageService.html",[393,2.023,399,2.283]],["body/injectables/GridMessageService.html",[5,0.033,10,0.019,11,0.019,14,0.424,36,2.096,43,1.262,71,3.072,90,0.195,116,0.575,121,0.666,138,0.49,140,0.549,179,2.545,197,1.789,214,3.144,228,3.707,231,2.419,235,3.144,249,1.916,263,4.03,308,0.229,311,0.676,366,0.162,376,0.195,393,2.419,399,3.198,499,4.447,528,0.229,537,1.041,573,4.583,574,2.622,575,1.789,576,4.146,577,4.837,578,4.837,579,4.837,580,3.774,581,4.422,582,3.774,583,0.694,584,2.622,585,0.611,586,3.774,587,2.622,588,3.144,589,2.622,590,2.622,591,3.774,592,2.622,593,2.622,594,2.622,595,2.622,596,2.622,597,2.622,598,2.622]],["title/pipes/IsFixedPipe.html",[385,2.023,400,1.253]],["body/pipes/IsFixedPipe.html",[5,0.033,10,0.023,11,0.023,43,1.527,68,2.627,90,0.256,102,2.943,108,1.637,116,0.665,121,0.449,123,1.799,124,3.698,138,0.449,140,0.744,143,1.71,144,2.497,163,3.935,306,2.877,308,0.301,311,0.618,366,0.213,376,0.256,385,2.926,400,2.029,528,0.301,537,1.37,544,2.214,583,0.449,585,0.559,599,2.926,600,3.453,601,1.987,602,4.565,603,2.214,604,2.926,605,3.453,606,2.926,607,2.214,608,3.453]],["title/pipes/IsGroupPipe.html",[384,2.023,400,1.253]],["body/pipes/IsGroupPipe.html",[5,0.033,10,0.024,11,0.024,43,1.573,68,2.707,90,0.268,102,3.009,108,1.714,116,0.68,123,1.883,138,0.47,140,0.761,308,0.315,311,0.647,366,0.223,376,0.268,384,3.015,400,2.075,528,0.315,537,1.435,544,2.317,583,0.47,585,0.585,599,3.015,601,2.08,603,2.317,604,3.015,606,3.015,607,2.317,609,3.615,610,4.704,611,3.615,612,3.615,613,3.615]],["title/pipes/IsRowVisiblePipe.html",[386,2.023,400,1.253]],["body/pipes/IsRowVisiblePipe.html",[5,0.033,10,0.024,11,0.024,43,1.573,82,3.55,90,0.268,102,3.009,108,1.714,116,0.68,123,1.883,138,0.47,140,0.761,308,0.315,311,0.647,366,0.223,376,0.268,386,3.015,400,2.075,528,0.315,537,1.435,583,0.47,585,0.585,599,3.015,601,2.08,603,2.317,604,3.015,606,3.015,607,2.317,614,3.012,615,4.704,616,3.012,617,3.615,618,3.012]],["title/pipes/IsVisiblePipe.html",[383,2.023,400,1.253]],["body/pipes/IsVisiblePipe.html",[5,0.033,10,0.024,11,0.024,43,1.582,68,2.722,90,0.271,102,3.022,108,1.728,116,0.682,123,1.899,138,0.474,140,0.764,308,0.318,311,0.653,366,0.225,376,0.271,383,3.032,400,2.084,528,0.318,537,1.447,544,2.337,583,0.474,585,0.59,599,3.032,601,2.098,603,2.337,604,3.032,606,3.032,607,2.337,614,3.037,616,3.037,618,3.037,619,4.73]],["title/classes/Cell.html",[298,2.023,308,0.275]],["body/classes/Cell.html",[5,0.032,10,0.023,11,0.023,14,0.557,32,3.292,36,1.631,90,0.255,121,0.706,122,4.252,138,0.447,140,0.5,143,1.707,144,3.292,179,2.937,198,4.525,207,4.525,249,2.448,297,2.487,298,2.918,308,0.397,366,0.212,376,0.255,515,2.865,528,0.3,575,2.158,583,0.706,585,0.557,601,1.979,620,3.439,621,1.979,622,3.439,623,3.439,624,3.439,625,2.205,626,4.553,627,4.553,628,4.553,629,3.439,630,3.439,631,3.439]],["title/classes/EmptyFactory.html",[308,0.275,632,2.283]],["body/classes/EmptyFactory.html",[5,0.032,10,0.025,11,0.025,14,0.598,90,0.274,116,0.62,121,0.687,138,0.48,140,0.537,147,2.125,197,2.261,308,0.416,310,0.228,311,0.854,366,0.228,376,0.354,431,2.368,528,0.322,583,0.62,585,0.598,621,2.125,625,3.058,632,3.449,633,3.077,634,2.671,635,2.671,636,3.579,637,3.693,638,4.281,639,3.693,640,3.693,641,3.387,642,2.368,643,3.077]],["title/classes/FormatterParser.html",[308,0.275,644,2.63]],["body/classes/FormatterParser.html",[5,0.033,10,0.022,11,0.022,14,0.511,36,1.497,37,2.631,90,0.234,116,0.736,121,0.682,138,0.635,140,0.711,231,2.024,249,2.454,256,4.096,308,0.375,311,0.77,312,3.582,366,0.195,376,0.234,490,2.631,528,0.276,575,2.038,583,0.682,585,0.791,621,1.817,644,3.582,645,5.49,646,3.158,647,3.158,648,3.158,649,3.158,650,4.3,651,4.3,652,4.3,653,4.3,654,3.158,655,4.3,656,3.158,657,3.158,658,3.158,659,3.158]],["title/classes/HtmlUtil.html",[308,0.275,660,2.63]],["body/classes/HtmlUtil.html",[5,0.033,10,0.019,11,0.019,14,0.407,43,0.841,71,2.901,90,0.187,116,0.723,121,0.561,132,4.524,138,0.561,140,0.628,281,3.951,303,3.05,308,0.414,311,0.655,350,3.05,366,0.155,369,3.05,376,0.187,528,0.219,568,4.727,583,0.561,585,0.699,621,1.446,660,3.05,661,4.743,662,2.514,663,3.661,664,3.661,665,3.661,666,3.661,667,3.661,668,3.661,669,3.661,670,5.841,671,2.514,672,5.565,673,2.514,674,3.661,675,2.514,676,3.661,677,2.514,678,4.317,679,2.514,680,4.743,681,2.094,682,2.514]],["title/classes/InjectableFactory.html",[308,0.275,683,2.283]],["body/classes/InjectableFactory.html",[5,0.032,10,0.023,11,0.023,14,0.529,34,3.182,43,1.093,90,0.242,104,2.82,108,2.086,116,0.572,121,0.722,138,0.425,140,0.475,147,2.532,197,1.549,308,0.384,310,0.201,311,0.788,366,0.201,376,0.326,431,2.82,528,0.285,537,1.297,576,2.363,583,0.572,585,0.529,621,1.88,625,2.094,634,3.182,635,3.182,636,3.411,641,3.189,642,2.094,683,3.182,684,2.722,685,5.071,686,3.665,687,3.267,688,3.848,689,3.267,690,3.665,691,3.267,692,2.722,693,2.722]],["title/classes/RowChange.html",[308,0.275,694,2.63]],["body/classes/RowChange.html",[5,0.032,10,0.024,11,0.024,14,0.578,90,0.265,121,0.675,138,0.464,140,0.519,179,3.608,308,0.407,366,0.22,376,0.265,528,0.311,575,2.212,583,0.675,585,0.578,625,2.288,694,3.887,695,5.512,696,3.569,697,6.061,698,5.866,699,4.665,700,4.665,701,3.569,702,3.569,703,3.569]],["title/classes/SortInfo.html",[287,2.283,308,0.275]],["body/classes/SortInfo.html",[5,0.033,10,0.02,11,0.02,14,0.448,36,1.86,71,3.286,90,0.205,116,0.706,121,0.644,138,0.51,140,0.571,143,1.909,170,2.836,231,2.514,243,3.93,249,1.699,287,2.836,308,0.342,311,0.702,366,0.171,376,0.205,433,4.528,528,0.242,575,1.86,583,0.706,585,0.635,681,3.268,704,5.589,705,2.767,706,5.435,707,4.957,708,4.957,709,3.923,710,3.923,711,2.767,712,2.767,713,3.923,714,2.767,715,3.923,716,2.767,717,2.767,718,2.767,719,3.923,720,3.923]],["title/interfaces/ClickListener.html",[310,0.195,721,2.63]],["body/interfaces/ClickListener.html",[5,0.031,10,0.027,11,0.027,14,0.677,67,3.732,90,0.31,91,1.524,116,0.544,121,0.544,138,0.544,140,0.609,143,1.726,310,0.318,311,0.924,366,0.258,376,0.31,528,0.365,583,0.544,585,0.677,721,4.3,722,4.184,723,5.161,724,2.653,725,4.184]],["title/interfaces/DblClickListener.html",[310,0.195,726,2.63]],["body/interfaces/DblClickListener.html",[5,0.031,10,0.026,11,0.026,14,0.671,90,0.307,91,1.509,116,0.538,121,0.538,138,0.538,140,0.603,143,1.716,310,0.316,311,0.919,366,0.255,376,0.307,528,0.362,583,0.538,585,0.671,724,2.642,726,4.274,727,5.13,728,4.144,729,5.13,730,5.13,731,4.144]],["title/interfaces/Dictionary.html",[310,0.195,732,2.63]],["body/interfaces/Dictionary.html",[5,0.031,10,0.026,11,0.026,14,0.667,71,3.505,90,0.306,121,0.665,219,4.204,249,2.518,310,0.315,366,0.254,376,0.306,528,0.36,575,2.425,583,0.665,732,4.261,733,4.124,734,4.124,735,4.124]],["title/interfaces/EmptyConstructor.html",[310,0.195,638,2.283]],["body/interfaces/EmptyConstructor.html",[5,0.033,10,0.027,11,0.027,90,0.317,116,0.555,197,2.477,308,0.373,310,0.322,366,0.263,376,0.388,528,0.373,632,3.087,633,3.556,636,2.736,638,4.255,641,3.349,642,2.736,643,3.556]],["title/interfaces/EventListenerArg.html",[205,2.283,310,0.195]],["body/interfaces/EventListenerArg.html",[5,0.031,10,0.026,11,0.026,14,0.642,43,1.327,90,0.295,92,3.952,121,0.818,138,0.649,205,3.612,256,4.147,310,0.308,366,0.245,376,0.295,528,0.346,537,1.575,575,2.368,583,0.649,736,5.465,737,3.969,738,3.969,739,3.969]],["title/interfaces/InjectableConstructor.html",[310,0.195,688,2.283]],["body/interfaces/InjectableConstructor.html",[5,0.033,10,0.025,11,0.025,34,2.78,43,1.285,90,0.285,104,2.464,108,1.822,116,0.5,121,0.636,147,2.212,197,1.822,308,0.335,310,0.302,366,0.237,376,0.363,431,2.464,528,0.335,537,1.525,576,2.78,634,2.78,635,2.78,636,2.464,641,3.137,642,2.464,683,2.78,684,3.202,685,4.876,686,3.202,688,3.893,690,3.202,692,3.202,693,3.202]],["title/interfaces/MouseDownListener.html",[310,0.195,740,2.63]],["body/interfaces/MouseDownListener.html",[5,0.031,10,0.026,11,0.026,14,0.671,90,0.307,91,1.509,116,0.538,121,0.538,138,0.538,140,0.603,143,1.716,310,0.316,311,0.919,366,0.255,376,0.307,528,0.362,583,0.538,585,0.671,724,2.642,740,4.274,741,2.952,742,4.144,743,5.13,744,5.13,745,4.144]],["title/interfaces/MouseDragListener.html",[310,0.195,746,2.63]],["body/interfaces/MouseDragListener.html",[5,0.031,10,0.026,11,0.026,14,0.671,90,0.307,91,1.509,116,0.538,121,0.538,138,0.538,140,0.603,143,1.716,310,0.316,311,0.919,366,0.255,376,0.307,528,0.362,583,0.538,585,0.671,724,2.642,741,2.952,746,4.274,747,4.144,748,5.13,749,5.13,750,4.144]],["title/interfaces/MouseOutListener.html",[310,0.195,751,2.63]],["body/interfaces/MouseOutListener.html",[5,0.031,10,0.026,11,0.026,14,0.671,90,0.307,91,1.509,116,0.538,121,0.538,138,0.538,140,0.603,143,1.716,310,0.316,311,0.919,366,0.255,376,0.307,528,0.362,583,0.538,585,0.671,724,2.642,741,2.952,751,4.274,752,4.144,753,5.13,754,5.13,755,4.144]],["title/interfaces/MouseOverListener.html",[310,0.195,756,2.63]],["body/interfaces/MouseOverListener.html",[5,0.031,10,0.026,11,0.026,14,0.671,90,0.307,91,1.509,116,0.538,121,0.538,138,0.538,140,0.603,143,1.716,310,0.316,311,0.919,366,0.255,376,0.307,528,0.362,583,0.538,585,0.671,724,2.642,741,2.952,756,4.274,757,4.144,758,5.13,759,5.13,760,4.144]],["title/interfaces/MouseUpListener.html",[310,0.195,761,2.63]],["body/interfaces/MouseUpListener.html",[5,0.031,10,0.026,11,0.026,14,0.671,90,0.307,91,1.509,116,0.538,121,0.538,138,0.538,140,0.603,143,1.716,310,0.316,311,0.919,366,0.255,376,0.307,528,0.362,583,0.538,585,0.671,724,2.642,741,2.952,761,4.274,762,4.144,763,5.13,764,5.13,765,4.144]],["title/miscellaneous/variables.html",[766,2.2,767,3.161]],["body/miscellaneous/variables.html",[5,0.033,10,0.024,11,0.024,14,0.568,36,2.768,67,3.728,121,0.759,179,3.599,188,3.728,191,4.295,249,2.53,573,2.924,588,2.924,766,2.924,767,2.924,768,5.155,769,5.155,770,5.155,771,5.155,772,3.51,773,4.615,774,3.51]]],"invertedIndex":[["",{"_index":5,"title":{},"body":{"dependencies.html":{},"index.html":{},"overview.html":{},"changelog.html":{},"license.html":{},"modules.html":{},"modules/GridModule.html":{},"injectables/GridMessageService.html":{},"pipes/IsFixedPipe.html":{},"pipes/IsGroupPipe.html":{},"pipes/IsRowVisiblePipe.html":{},"pipes/IsVisiblePipe.html":{},"classes/Cell.html":{},"classes/EmptyFactory.html":{},"classes/FormatterParser.html":{},"classes/HtmlUtil.html":{},"classes/InjectableFactory.html":{},"classes/RowChange.html":{},"classes/SortInfo.html":{},"interfaces/ClickListener.html":{},"interfaces/DblClickListener.html":{},"interfaces/Dictionary.html":{},"interfaces/EmptyConstructor.html":{},"interfaces/EventListenerArg.html":{},"interfaces/InjectableConstructor.html":{},"interfaces/MouseDownListener.html":{},"interfaces/MouseDragListener.html":{},"interfaces/MouseOutListener.html":{},"interfaces/MouseOverListener.html":{},"interfaces/MouseUpListener.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":773,"title":{},"body":{"miscellaneous/variables.html":{}}}],["1",{"_index":188,"title":{},"body":{"index.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["1.1.x",{"_index":6,"title":{},"body":{"dependencies.html":{}}}],["10",{"_index":183,"title":{},"body":{"index.html":{}}}],["100",{"_index":189,"title":{},"body":{"index.html":{}}}],["11",{"_index":397,"title":{},"body":{"overview.html":{}}}],["12",{"_index":402,"title":{},"body":{"overview.html":{}}}],["15",{"_index":322,"title":{},"body":{"index.html":{}}}],["2",{"_index":588,"title":{},"body":{"injectables/GridMessageService.html":{},"miscellaneous/variables.html":{}}}],["2.19.3",{"_index":9,"title":{},"body":{"dependencies.html":{}}}],["2016",{"_index":531,"title":{},"body":{"modules/GridModule.html":{}}}],["2018",{"_index":476,"title":{},"body":{"license.html":{}}}],["25",{"_index":184,"title":{},"body":{"index.html":{}}}],["34",{"_index":401,"title":{},"body":{"overview.html":{}}}],["4",{"_index":398,"title":{},"body":{"overview.html":{}}}],["4.0.0",{"_index":405,"title":{},"body":{"changelog.html":{}}}],["4.0.x",{"_index":42,"title":{},"body":{"index.html":{}}}],["4.3.1",{"_index":7,"title":{},"body":{"dependencies.html":{}}}],["50",{"_index":185,"title":{},"body":{"index.html":{}}}],["85",{"_index":324,"title":{},"body":{"index.html":{}}}],["_level",{"_index":577,"title":{},"body":{"injectables/GridMessageService.html":{}}}],["_messag",{"_index":578,"title":{},"body":{"injectables/GridMessageService.html":{}}}],["_messageobserv",{"_index":579,"title":{},"body":{"injectables/GridMessageService.html":{}}}],["abov",{"_index":157,"title":{},"body":{"index.html":{},"license.html":{}}}],["accessor",{"_index":580,"title":{},"body":{"injectables/GridMessageService.html":{}}}],["action",{"_index":96,"title":{},"body":{"index.html":{},"license.html":{}}}],["ad",{"_index":93,"title":{},"body":{"index.html":{},"changelog.html":{}}}],["add",{"_index":224,"title":{},"body":{"index.html":{},"changelog.html":{}}}],["advanc",{"_index":296,"title":{},"body":{"index.html":{}}}],["allow",{"_index":147,"title":{},"body":{"index.html":{},"changelog.html":{},"classes/EmptyFactory.html":{},"classes/InjectableFactory.html":{},"interfaces/InjectableConstructor.html":{}}}],["although",{"_index":220,"title":{},"body":{"index.html":{}}}],["analyze_for_entry_compon",{"_index":534,"title":{},"body":{"modules/GridModule.html":{}}}],["and/or",{"_index":495,"title":{},"body":{"license.html":{}}}],["angular",{"_index":18,"title":{},"body":{"index.html":{}}}],["angular/common",{"_index":539,"title":{},"body":{"modules/GridModule.html":{}}}],["angular/cor",{"_index":537,"title":{},"body":{"modules/GridModule.html":{},"injectables/GridMessageService.html":{},"pipes/IsFixedPipe.html":{},"pipes/IsGroupPipe.html":{},"pipes/IsRowVisiblePipe.html":{},"pipes/IsVisiblePipe.html":{},"classes/InjectableFactory.html":{},"interfaces/EventListenerArg.html":{},"interfaces/InjectableConstructor.html":{}}}],["angular/form",{"_index":541,"title":{},"body":{"modules/GridModule.html":{}}}],["anyth",{"_index":30,"title":{},"body":{"index.html":{}}}],["anything.filterev",{"_index":269,"title":{},"body":{"index.html":{}}}],["anywher",{"_index":371,"title":{},"body":{"index.html":{}}}],["api",{"_index":434,"title":{},"body":{"changelog.html":{}}}],["appear.newrowpostcal",{"_index":226,"title":{},"body":{"index.html":{}}}],["appli",{"_index":272,"title":{},"body":{"index.html":{}}}],["applic",{"_index":293,"title":{},"body":{"index.html":{}}}],["arg.interface.t",{"_index":737,"title":{},"body":{"interfaces/EventListenerArg.html":{}}}],["arg.interface.ts:4",{"_index":739,"title":{},"body":{"interfaces/EventListenerArg.html":{}}}],["arg.interface.ts:5",{"_index":738,"title":{},"body":{"interfaces/EventListenerArg.html":{}}}],["argument",{"_index":635,"title":{},"body":{"classes/EmptyFactory.html":{},"classes/InjectableFactory.html":{},"interfaces/InjectableConstructor.html":{}}}],["aris",{"_index":524,"title":{},"body":{"license.html":{}}}],["array",{"_index":124,"title":{},"body":{"index.html":{},"changelog.html":{},"pipes/IsFixedPipe.html":{}}}],["arrow",{"_index":768,"title":{},"body":{"miscellaneous/variables.html":{}}}],["artifact.2.0.0",{"_index":456,"title":{},"body":{"changelog.html":{}}}],["asc",{"_index":706,"title":{},"body":{"classes/SortInfo.html":{}}}],["associ",{"_index":488,"title":{},"body":{"license.html":{}}}],["author",{"_index":514,"title":{},"body":{"license.html":{}}}],["auto",{"_index":443,"title":{},"body":{"changelog.html":{}}}],["automat",{"_index":364,"title":{},"body":{"index.html":{}}}],["back",{"_index":280,"title":{},"body":{"index.html":{}}}],["bar",{"_index":156,"title":{},"body":{"index.html":{}}}],["base",{"_index":330,"title":{},"body":{"index.html":{}}}],["basic",{"_index":38,"title":{},"body":{"index.html":{}}}],["be",{"_index":290,"title":{},"body":{"index.html":{}}}],["becom",{"_index":39,"title":{},"body":{"index.html":{}}}],["behavior",{"_index":436,"title":{},"body":{"changelog.html":{}}}],["big).titl",{"_index":153,"title":{},"body":{"index.html":{}}}],["bigtextpopup",{"_index":388,"title":{},"body":{"overview.html":{},"modules/GridModule.html":{}}}],["bind",{"_index":127,"title":{},"body":{"index.html":{}}}],["birth",{"_index":336,"title":{},"body":{"index.html":{}}}],["boolean",{"_index":143,"title":{},"body":{"index.html":{},"pipes/IsFixedPipe.html":{},"classes/Cell.html":{},"classes/SortInfo.html":{},"interfaces/ClickListener.html":{},"interfaces/DblClickListener.html":{},"interfaces/MouseDownListener.html":{},"interfaces/MouseDragListener.html":{},"interfaces/MouseOutListener.html":{},"interfaces/MouseOverListener.html":{},"interfaces/MouseUpListener.html":{}}}],["bootstrap",{"_index":4,"title":{},"body":{"dependencies.html":{},"overview.html":{},"modules/GridModule.html":{}}}],["bootstrap/ng",{"_index":3,"title":{},"body":{"dependencies.html":{},"modules/GridModule.html":{}}}],["break",{"_index":350,"title":{},"body":{"index.html":{},"classes/HtmlUtil.html":{}}}],["brows",{"_index":527,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":525,"title":{},"body":{"modules.html":{}}}],["build",{"_index":355,"title":{},"body":{"index.html":{}}}],["built",{"_index":327,"title":{},"body":{"index.html":{}}}],["bump",{"_index":447,"title":{},"body":{"changelog.html":{}}}],["busi",{"_index":460,"title":{},"body":{"changelog.html":{}}}],["button",{"_index":225,"title":{},"body":{"index.html":{}}}],["button.3.1.0",{"_index":422,"title":{},"body":{"changelog.html":{}}}],["c",{"_index":475,"title":{},"body":{"license.html":{},"modules/GridModule.html":{}}}],["calculation.2.0.2",{"_index":451,"title":{},"body":{"changelog.html":{}}}],["call",{"_index":87,"title":{},"body":{"index.html":{},"changelog.html":{}}}],["call.externalpag",{"_index":177,"title":{},"body":{"index.html":{}}}],["call.externalsort",{"_index":176,"title":{},"body":{"index.html":{}}}],["call.pages",{"_index":178,"title":{},"body":{"index.html":{}}}],["callback",{"_index":88,"title":{},"body":{"index.html":{}}}],["cancer",{"_index":16,"title":{},"body":{"index.html":{},"license.html":{},"modules/GridModule.html":{}}}],["case",{"_index":273,"title":{},"body":{"index.html":{}}}],["cell",{"_index":298,"title":{"classes/Cell.html":{}},"body":{"index.html":{},"changelog.html":{},"classes/Cell.html":{}}}],["cell'",{"_index":622,"title":{},"body":{"classes/Cell.html":{}}}],["cell.onrowsav",{"_index":250,"title":{},"body":{"index.html":{}}}],["cell/editrenderers/choic",{"_index":555,"title":{},"body":{"modules/GridModule.html":{}}}],["cell/editrenderers/d",{"_index":556,"title":{},"body":{"modules/GridModule.html":{}}}],["cell/editrenderers/text",{"_index":550,"title":{},"body":{"modules/GridModule.html":{}}}],["cell/viewpopuprenderer/bigtext",{"_index":558,"title":{},"body":{"modules/GridModule.html":{}}}],["cellnumberrangeview",{"_index":319,"title":{},"body":{"index.html":{}}}],["cellviewrender",{"_index":309,"title":{},"body":{"index.html":{}}}],["chang",{"_index":66,"title":{},"body":{"index.html":{},"changelog.html":{}}}],["change.t",{"_index":696,"title":{},"body":{"classes/RowChange.html":{}}}],["change.ts:3",{"_index":701,"title":{},"body":{"classes/RowChange.html":{}}}],["change.ts:4",{"_index":700,"title":{},"body":{"classes/RowChange.html":{}}}],["changelog",{"_index":403,"title":{"changelog.html":{}},"body":{}}],["charg",{"_index":484,"title":{},"body":{"license.html":{}}}],["check.3.1.5",{"_index":411,"title":{},"body":{"changelog.html":{}}}],["choic",{"_index":344,"title":{},"body":{"index.html":{},"changelog.html":{}}}],["choice.compon",{"_index":566,"title":{},"body":{"modules/GridModule.html":{}}}],["choiceeditrender",{"_index":343,"title":{},"body":{"index.html":{},"overview.html":{},"modules/GridModule.html":{}}}],["choos",{"_index":186,"title":{},"body":{"index.html":{}}}],["claim",{"_index":517,"title":{},"body":{"license.html":{}}}],["class",{"_index":308,"title":{"classes/Cell.html":{},"classes/EmptyFactory.html":{},"classes/FormatterParser.html":{},"classes/HtmlUtil.html":{},"classes/InjectableFactory.html":{},"classes/RowChange.html":{},"classes/SortInfo.html":{}},"body":{"index.html":{},"overview.html":{},"modules/GridModule.html":{},"injectables/GridMessageService.html":{},"pipes/IsFixedPipe.html":{},"pipes/IsGroupPipe.html":{},"pipes/IsRowVisiblePipe.html":{},"pipes/IsVisiblePipe.html":{},"classes/Cell.html":{},"classes/EmptyFactory.html":{},"classes/FormatterParser.html":{},"classes/HtmlUtil.html":{},"classes/InjectableFactory.html":{},"classes/RowChange.html":{},"classes/SortInfo.html":{},"interfaces/EmptyConstructor.html":{},"interfaces/InjectableConstructor.html":{}}}],["click",{"_index":67,"title":{},"body":{"index.html":{},"interfaces/ClickListener.html":{},"miscellaneous/variables.html":{}}}],["click(ev",{"_index":723,"title":{},"body":{"interfaces/ClickListener.html":{}}}],["click.interface.t",{"_index":728,"title":{},"body":{"interfaces/DblClickListener.html":{}}}],["click.interface.ts:3",{"_index":731,"title":{},"body":{"interfaces/DblClickListener.html":{}}}],["clicklisten",{"_index":721,"title":{"interfaces/ClickListener.html":{}},"body":{"interfaces/ClickListener.html":{}}}],["cluster_gridmodul",{"_index":377,"title":{},"body":{"overview.html":{},"modules/GridModule.html":{}}}],["cluster_gridmodule_declar",{"_index":378,"title":{},"body":{"overview.html":{},"modules/GridModule.html":{}}}],["cluster_gridmodule_export",{"_index":380,"title":{},"body":{"overview.html":{},"modules/GridModule.html":{}}}],["cluster_gridmodule_gridcomponent_provid",{"_index":379,"title":{},"body":{"overview.html":{},"modules/GridModule.html":{}}}],["code",{"_index":49,"title":{},"body":{"index.html":{}}}],["color",{"_index":413,"title":{},"body":{"changelog.html":{}}}],["colum",{"_index":151,"title":{},"body":{"index.html":{}}}],["column",{"_index":68,"title":{},"body":{"index.html":{},"changelog.html":{},"pipes/IsFixedPipe.html":{},"pipes/IsGroupPipe.html":{},"pipes/IsVisiblePipe.html":{}}}],["column'",{"_index":271,"title":{},"body":{"index.html":{}}}],["column/column",{"_index":544,"title":{},"body":{"modules/GridModule.html":{},"pipes/IsFixedPipe.html":{},"pipes/IsGroupPipe.html":{},"pipes/IsVisiblePipe.html":{}}}],["column/filterrenderers/compar",{"_index":554,"title":{},"body":{"modules/GridModule.html":{}}}],["column/filterrenderers/select",{"_index":557,"title":{},"body":{"modules/GridModule.html":{}}}],["column/filterrenderers/text",{"_index":553,"title":{},"body":{"modules/GridModule.html":{}}}],["columnheadercompon",{"_index":382,"title":{},"body":{"overview.html":{},"modules/GridModule.html":{}}}],["columns[j].field",{"_index":244,"title":{},"body":{"index.html":{}}}],["come",{"_index":279,"title":{},"body":{"index.html":{}}}],["command",{"_index":56,"title":{},"body":{"index.html":{}}}],["commonmodul",{"_index":538,"title":{},"body":{"modules/GridModule.html":{}}}],["compare.3.1.2",{"_index":417,"title":{},"body":{"changelog.html":{}}}],["comparefilterrender",{"_index":341,"title":{},"body":{"index.html":{},"overview.html":{},"modules/GridModule.html":{}}}],["compil",{"_index":48,"title":{},"body":{"index.html":{}}}],["completes.output",{"_index":239,"title":{},"body":{"index.html":{}}}],["complex",{"_index":31,"title":{},"body":{"index.html":{}}}],["compon",{"_index":109,"title":{},"body":{"index.html":{},"overview.html":{},"modules/GridModule.html":{}}}],["condit",{"_index":500,"title":{},"body":{"license.html":{}}}],["confidenti",{"_index":532,"title":{},"body":{"modules/GridModule.html":{}}}],["config",{"_index":256,"title":{},"body":{"index.html":{},"classes/FormatterParser.html":{},"interfaces/EventListenerArg.html":{}}}],["config/config",{"_index":560,"title":{},"body":{"modules/GridModule.html":{}}}],["configmenucompon",{"_index":389,"title":{},"body":{"overview.html":{},"modules/GridModule.html":{}}}],["configmultichoicecompon",{"_index":390,"title":{},"body":{"overview.html":{},"modules/GridModule.html":{}}}],["configur",{"_index":137,"title":{},"body":{"index.html":{},"changelog.html":{}}}],["configuration.instal",{"_index":41,"title":{},"body":{"index.html":{}}}],["connect",{"_index":467,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["console.display",{"_index":215,"title":{},"body":{"index.html":{}}}],["constructor",{"_index":625,"title":{},"body":{"classes/Cell.html":{},"classes/EmptyFactory.html":{},"classes/InjectableFactory.html":{},"classes/RowChange.html":{}}}],["constructor(",{"_index":687,"title":{},"body":{"classes/InjectableFactory.html":{}}}],["constructor(emptyconstructor",{"_index":637,"title":{},"body":{"classes/EmptyFactory.html":{}}}],["constructor(o",{"_index":626,"title":{},"body":{"classes/Cell.html":{}}}],["constructor(oldrownum",{"_index":699,"title":{},"body":{"classes/RowChange.html":{}}}],["constructor(priv",{"_index":642,"title":{},"body":{"classes/EmptyFactory.html":{},"classes/InjectableFactory.html":{},"interfaces/EmptyConstructor.html":{},"interfaces/InjectableConstructor.html":{}}}],["contain",{"_index":136,"title":{},"body":{"index.html":{}}}],["contract",{"_index":521,"title":{},"body":{"license.html":{}}}],["conveni",{"_index":663,"title":{},"body":{"classes/HtmlUtil.html":{}}}],["copi",{"_index":53,"title":{},"body":{"index.html":{},"license.html":{}}}],["copyright",{"_index":474,"title":{},"body":{"license.html":{},"modules/GridModule.html":{}}}],["creat",{"_index":210,"title":{},"body":{"index.html":{}}}],["createelement(render",{"_index":313,"title":{},"body":{"index.html":{}}}],["current",{"_index":101,"title":{},"body":{"index.html":{}}}],["custom",{"_index":55,"title":{},"body":{"index.html":{},"changelog.html":{}}}],["customiz",{"_index":423,"title":{},"body":{"changelog.html":{}}}],["damag",{"_index":518,"title":{},"body":{"license.html":{}}}],["data",{"_index":32,"title":{},"body":{"index.html":{},"changelog.html":{},"classes/Cell.html":{}}}],["data.celldblclick",{"_index":259,"title":{},"body":{"index.html":{}}}],["data.datacal",{"_index":128,"title":{},"body":{"index.html":{}}}],["data.rowclick",{"_index":260,"title":{},"body":{"index.html":{}}}],["data.rowdblclick",{"_index":261,"title":{},"body":{"index.html":{}}}],["data.warn",{"_index":262,"title":{},"body":{"index.html":{}}}],["data/config/ev",{"_index":458,"title":{},"body":{"changelog.html":{}}}],["database.newrowpostcallsuccess",{"_index":230,"title":{},"body":{"index.html":{}}}],["datarequest",{"_index":112,"title":{},"body":{"index.html":{}}}],["datatyp",{"_index":337,"title":{},"body":{"index.html":{}}}],["date",{"_index":335,"title":{},"body":{"index.html":{},"changelog.html":{}}}],["dateeditrender",{"_index":340,"title":{},"body":{"index.html":{},"overview.html":{},"modules/GridModule.html":{}}}],["dblclick",{"_index":729,"title":{},"body":{"interfaces/DblClickListener.html":{}}}],["dblclick(ev",{"_index":730,"title":{},"body":{"interfaces/DblClickListener.html":{}}}],["dblclicklisten",{"_index":726,"title":{"interfaces/DblClickListener.html":{}},"body":{"interfaces/DblClickListener.html":{}}}],["deal",{"_index":418,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["declar",{"_index":375,"title":{},"body":{"overview.html":{},"modules/GridModule.html":{}}}],["default",{"_index":36,"title":{},"body":{"index.html":{},"changelog.html":{},"injectables/GridMessageService.html":{},"classes/Cell.html":{},"classes/FormatterParser.html":{},"classes/SortInfo.html":{},"miscellaneous/variables.html":{}}}],["default.externalfilt",{"_index":175,"title":{},"body":{"index.html":{}}}],["defin",{"_index":583,"title":{},"body":{"injectables/GridMessageService.html":{},"pipes/IsFixedPipe.html":{},"pipes/IsGroupPipe.html":{},"pipes/IsRowVisiblePipe.html":{},"pipes/IsVisiblePipe.html":{},"classes/Cell.html":{},"classes/EmptyFactory.html":{},"classes/FormatterParser.html":{},"classes/HtmlUtil.html":{},"classes/InjectableFactory.html":{},"classes/RowChange.html":{},"classes/SortInfo.html":{},"interfaces/ClickListener.html":{},"interfaces/DblClickListener.html":{},"interfaces/Dictionary.html":{},"interfaces/EventListenerArg.html":{},"interfaces/MouseDownListener.html":{},"interfaces/MouseDragListener.html":{},"interfaces/MouseOutListener.html":{},"interfaces/MouseOverListener.html":{},"interfaces/MouseUpListener.html":{}}}],["delay",{"_index":278,"title":{},"body":{"index.html":{}}}],["demo",{"_index":22,"title":{},"body":{"index.html":{}}}],["demo/node_modules/hci",{"_index":367,"title":{},"body":{"index.html":{}}}],["demoif",{"_index":360,"title":{},"body":{"index.html":{}}}],["demoth",{"_index":363,"title":{},"body":{"index.html":{}}}],["depend",{"_index":1,"title":{"dependencies.html":{}},"body":{"dependencies.html":{},"index.html":{},"overview.html":{},"modules/GridModule.html":{}}}],["descript",{"_index":621,"title":{},"body":{"classes/Cell.html":{},"classes/EmptyFactory.html":{},"classes/FormatterParser.html":{},"classes/HtmlUtil.html":{},"classes/InjectableFactory.html":{}}}],["design",{"_index":25,"title":{},"body":{"index.html":{}}}],["determin",{"_index":258,"title":{},"body":{"index.html":{}}}],["dictionari",{"_index":732,"title":{"interfaces/Dictionary.html":{}},"body":{"interfaces/Dictionary.html":{}}}],["differ",{"_index":328,"title":{},"body":{"index.html":{}}}],["dirti",{"_index":198,"title":{},"body":{"index.html":{},"classes/Cell.html":{}}}],["disabl",{"_index":168,"title":{},"body":{"index.html":{}}}],["display",{"_index":219,"title":{},"body":{"index.html":{},"changelog.html":{},"interfaces/Dictionary.html":{}}}],["dist",{"_index":51,"title":{},"body":{"index.html":{}}}],["distribut",{"_index":493,"title":{},"body":{"license.html":{}}}],["dob",{"_index":334,"title":{},"body":{"index.html":{}}}],["document",{"_index":489,"title":{},"body":{"license.html":{}}}],["doesn't",{"_index":361,"title":{},"body":{"index.html":{}}}],["don't",{"_index":203,"title":{},"body":{"index.html":{}}}],["down.interface.t",{"_index":742,"title":{},"body":{"interfaces/MouseDownListener.html":{}}}],["down.interface.ts:3",{"_index":745,"title":{},"body":{"interfaces/MouseDownListener.html":{}}}],["drag",{"_index":425,"title":{},"body":{"changelog.html":{}}}],["drag.interface.t",{"_index":747,"title":{},"body":{"interfaces/MouseDragListener.html":{}}}],["drag.interface.ts:3",{"_index":750,"title":{},"body":{"interfaces/MouseDragListener.html":{}}}],["drop",{"_index":427,"title":{},"body":{"changelog.html":{}}}],["e",{"_index":672,"title":{},"body":{"classes/HtmlUtil.html":{}}}],["e.g",{"_index":150,"title":{},"body":{"index.html":{}}}],["e.id",{"_index":678,"title":{},"body":{"classes/HtmlUtil.html":{}}}],["e.id.startswith(id",{"_index":679,"title":{},"body":{"classes/HtmlUtil.html":{}}}],["e.parentel",{"_index":680,"title":{},"body":{"classes/HtmlUtil.html":{}}}],["each",{"_index":305,"title":{},"body":{"index.html":{}}}],["edit",{"_index":551,"title":{},"body":{"modules/GridModule.html":{}}}],["editrender",{"_index":339,"title":{},"body":{"index.html":{}}}],["element",{"_index":665,"title":{},"body":{"classes/HtmlUtil.html":{}}}],["emit",{"_index":194,"title":{},"body":{"index.html":{}}}],["emitt",{"_index":424,"title":{},"body":{"changelog.html":{}}}],["empti",{"_index":428,"title":{},"body":{"changelog.html":{}}}],["emptyconstructor",{"_index":638,"title":{"interfaces/EmptyConstructor.html":{}},"body":{"classes/EmptyFactory.html":{},"interfaces/EmptyConstructor.html":{}}}],["emptyfactori",{"_index":632,"title":{"classes/EmptyFactory.html":{}},"body":{"classes/EmptyFactory.html":{},"interfaces/EmptyConstructor.html":{}}}],["entrycompon",{"_index":530,"title":{},"body":{"modules/GridModule.html":{}}}],["error",{"_index":235,"title":{},"body":{"index.html":{},"injectables/GridMessageService.html":{}}}],["error(messag",{"_index":582,"title":{},"body":{"injectables/GridMessageService.html":{}}}],["error.3.0.0",{"_index":430,"title":{},"body":{"changelog.html":{}}}],["especi",{"_index":464,"title":{},"body":{"changelog.html":{}}}],["event",{"_index":91,"title":{},"body":{"index.html":{},"changelog.html":{},"license.html":{},"interfaces/ClickListener.html":{},"interfaces/DblClickListener.html":{},"interfaces/MouseDownListener.html":{},"interfaces/MouseDragListener.html":{},"interfaces/MouseOutListener.html":{},"interfaces/MouseOverListener.html":{},"interfaces/MouseUpListener.html":{}}}],["event.service.t",{"_index":772,"title":{},"body":{"miscellaneous/variables.html":{}}}],["eventlisten",{"_index":686,"title":{},"body":{"classes/InjectableFactory.html":{},"interfaces/InjectableConstructor.html":{}}}],["eventlistenerarg",{"_index":205,"title":{"interfaces/EventListenerArg.html":{}},"body":{"index.html":{},"interfaces/EventListenerArg.html":{}}}],["events.mod",{"_index":208,"title":{},"body":{"index.html":{}}}],["exampl",{"_index":105,"title":{},"body":{"index.html":{}}}],["expect",{"_index":34,"title":{},"body":{"index.html":{},"classes/InjectableFactory.html":{},"interfaces/InjectableConstructor.html":{}}}],["export",{"_index":376,"title":{},"body":{"overview.html":{},"modules/GridModule.html":{},"injectables/GridMessageService.html":{},"pipes/IsFixedPipe.html":{},"pipes/IsGroupPipe.html":{},"pipes/IsRowVisiblePipe.html":{},"pipes/IsVisiblePipe.html":{},"classes/Cell.html":{},"classes/EmptyFactory.html":{},"classes/FormatterParser.html":{},"classes/HtmlUtil.html":{},"classes/InjectableFactory.html":{},"classes/RowChange.html":{},"classes/SortInfo.html":{},"interfaces/ClickListener.html":{},"interfaces/DblClickListener.html":{},"interfaces/Dictionary.html":{},"interfaces/EmptyConstructor.html":{},"interfaces/EventListenerArg.html":{},"interfaces/InjectableConstructor.html":{},"interfaces/MouseDownListener.html":{},"interfaces/MouseDragListener.html":{},"interfaces/MouseOutListener.html":{},"interfaces/MouseOverListener.html":{},"interfaces/MouseUpListener.html":{}}}],["express",{"_index":507,"title":{},"body":{"license.html":{}}}],["extend",{"_index":329,"title":{},"body":{"index.html":{}}}],["extern",{"_index":86,"title":{},"body":{"index.html":{},"changelog.html":{}}}],["externalconfig",{"_index":437,"title":{},"body":{"changelog.html":{}}}],["externaldata(this.datageneratorservice.getdata(250",{"_index":118,"title":{},"body":{"index.html":{}}}],["externalinfo",{"_index":113,"title":{},"body":{"index.html":{}}}],["externalinfo)).delay(500",{"_index":119,"title":{},"body":{"index.html":{}}}],["fals",{"_index":144,"title":{},"body":{"index.html":{},"pipes/IsFixedPipe.html":{},"classes/Cell.html":{}}}],["featur",{"_index":27,"title":{},"body":{"index.html":{},"changelog.html":{}}}],["femal",{"_index":345,"title":{},"body":{"index.html":{}}}],["field",{"_index":243,"title":{},"body":{"index.html":{},"changelog.html":{},"classes/SortInfo.html":{}}}],["file",{"_index":366,"title":{},"body":{"index.html":{},"license.html":{},"modules/GridModule.html":{},"injectables/GridMessageService.html":{},"pipes/IsFixedPipe.html":{},"pipes/IsGroupPipe.html":{},"pipes/IsRowVisiblePipe.html":{},"pipes/IsVisiblePipe.html":{},"classes/Cell.html":{},"classes/EmptyFactory.html":{},"classes/FormatterParser.html":{},"classes/HtmlUtil.html":{},"classes/InjectableFactory.html":{},"classes/RowChange.html":{},"classes/SortInfo.html":{},"interfaces/ClickListener.html":{},"interfaces/DblClickListener.html":{},"interfaces/Dictionary.html":{},"interfaces/EmptyConstructor.html":{},"interfaces/EventListenerArg.html":{},"interfaces/InjectableConstructor.html":{},"interfaces/MouseDownListener.html":{},"interfaces/MouseDragListener.html":{},"interfaces/MouseOutListener.html":{},"interfaces/MouseOverListener.html":{},"interfaces/MouseUpListener.html":{}}}],["filter",{"_index":70,"title":{},"body":{"index.html":{},"changelog.html":{},"modules/GridModule.html":{}}}],["filterev",{"_index":282,"title":{},"body":{"index.html":{}}}],["filterinfo",{"_index":270,"title":{},"body":{"index.html":{}}}],["filterrender",{"_index":331,"title":{},"body":{"index.html":{}}}],["final",{"_index":237,"title":{},"body":{"index.html":{}}}],["fire",{"_index":276,"title":{},"body":{"index.html":{}}}],["fired.datafilt",{"_index":283,"title":{},"body":{"index.html":{}}}],["fired.datasort",{"_index":289,"title":{},"body":{"index.html":{}}}],["first",{"_index":78,"title":{},"body":{"index.html":{}}}],["firstnam",{"_index":332,"title":{},"body":{"index.html":{}}}],["fit",{"_index":510,"title":{},"body":{"license.html":{}}}],["fix",{"_index":163,"title":{},"body":{"index.html":{},"changelog.html":{},"pipes/IsFixedPipe.html":{}}}],["fixed.pip",{"_index":549,"title":{},"body":{"modules/GridModule.html":{}}}],["fixed.pipe.t",{"_index":600,"title":{},"body":{"pipes/IsFixedPipe.html":{}}}],["fixed.pipe.ts:10",{"_index":605,"title":{},"body":{"pipes/IsFixedPipe.html":{}}}],["fixes.1.0.0",{"_index":470,"title":{},"body":{"changelog.html":{}}}],["flag",{"_index":145,"title":{},"body":{"index.html":{}}}],["flow",{"_index":216,"title":{},"body":{"index.html":{}}}],["folder",{"_index":52,"title":{},"body":{"index.html":{}}}],["follow",{"_index":295,"title":{},"body":{"index.html":{},"license.html":{}}}],["footer",{"_index":223,"title":{},"body":{"index.html":{}}}],["format",{"_index":253,"title":{},"body":{"index.html":{}}}],["format/pars",{"_index":439,"title":{},"body":{"changelog.html":{}}}],["formatt",{"_index":647,"title":{},"body":{"classes/FormatterParser.html":{}}}],["formatterpars",{"_index":644,"title":{"classes/FormatterParser.html":{}},"body":{"classes/FormatterParser.html":{}}}],["formatting/pars",{"_index":463,"title":{},"body":{"changelog.html":{}}}],["formatvalu",{"_index":650,"title":{},"body":{"classes/FormatterParser.html":{}}}],["formatvalue(valu",{"_index":653,"title":{},"body":{"classes/FormatterParser.html":{}}}],["formsmodul",{"_index":540,"title":{},"body":{"modules/GridModule.html":{}}}],["forroot(globalconfig",{"_index":569,"title":{},"body":{"modules/GridModule.html":{}}}],["free",{"_index":483,"title":{},"body":{"license.html":{}}}],["from.nvisiblerow",{"_index":187,"title":{},"body":{"index.html":{}}}],["full",{"_index":26,"title":{},"body":{"index.html":{}}}],["function",{"_index":110,"title":{},"body":{"index.html":{},"changelog.html":{}}}],["furnish",{"_index":498,"title":{},"body":{"license.html":{}}}],["gender",{"_index":342,"title":{},"body":{"index.html":{}}}],["gener",{"_index":431,"title":{},"body":{"changelog.html":{},"classes/EmptyFactory.html":{},"classes/InjectableFactory.html":{},"interfaces/InjectableConstructor.html":{}}}],["generic.2.1.1",{"_index":440,"title":{},"body":{"changelog.html":{}}}],["get",{"_index":12,"title":{"index.html":{},"changelog.html":{},"license.html":{}},"body":{"index.html":{}}}],["getasc",{"_index":707,"title":{},"body":{"classes/SortInfo.html":{}}}],["getfield",{"_index":708,"title":{},"body":{"classes/SortInfo.html":{}}}],["getid",{"_index":666,"title":{},"body":{"classes/HtmlUtil.html":{}}}],["getid(",{"_index":669,"title":{},"body":{"classes/HtmlUtil.html":{}}}],["getidel",{"_index":667,"title":{},"body":{"classes/HtmlUtil.html":{}}}],["getidelement(",{"_index":674,"title":{},"body":{"classes/HtmlUtil.html":{}}}],["getinst",{"_index":636,"title":{},"body":{"classes/EmptyFactory.html":{},"classes/InjectableFactory.html":{},"interfaces/EmptyConstructor.html":{},"interfaces/InjectableConstructor.html":{}}}],["getloc",{"_index":668,"title":{},"body":{"classes/HtmlUtil.html":{}}}],["getlocation(",{"_index":676,"title":{},"body":{"classes/HtmlUtil.html":{}}}],["getmessageobserv",{"_index":593,"title":{},"body":{"injectables/GridMessageService.html":{}}}],["github",{"_index":23,"title":{},"body":{"index.html":{}}}],["global",{"_index":133,"title":{},"body":{"index.html":{},"changelog.html":{}}}],["global.servic",{"_index":564,"title":{},"body":{"modules/GridModule.html":{}}}],["globalconfig",{"_index":570,"title":{},"body":{"modules/GridModule.html":{}}}],["grant",{"_index":482,"title":{},"body":{"license.html":{}}}],["grid",{"_index":19,"title":{},"body":{"index.html":{},"changelog.html":{}}}],["grid\";@ngmodul",{"_index":45,"title":{},"body":{"index.html":{}}}],["grid'",{"_index":149,"title":{},"body":{"index.html":{}}}],["grid.addnewrowbuttonloc",{"_index":222,"title":{},"body":{"index.html":{}}}],["grid.cellclick",{"_index":257,"title":{},"body":{"index.html":{}}}],["grid.compon",{"_index":543,"title":{},"body":{"modules/GridModule.html":{}}}],["grid.groupbi",{"_index":166,"title":{},"body":{"index.html":{}}}],["grid.linkedgroup",{"_index":139,"title":{},"body":{"index.html":{}}}],["grid.them",{"_index":158,"title":{},"body":{"index.html":{}}}],["grid/servic",{"_index":409,"title":{},"body":{"changelog.html":{}}}],["gridcompon",{"_index":381,"title":{},"body":{"overview.html":{},"modules/GridModule.html":{}}}],["grideventservic",{"_index":392,"title":{},"body":{"overview.html":{},"modules/GridModule.html":{}}}],["gridglobalservic",{"_index":562,"title":{},"body":{"modules/GridModule.html":{}}}],["gridmessageservic",{"_index":393,"title":{"injectables/GridMessageService.html":{}},"body":{"overview.html":{},"modules/GridModule.html":{},"injectables/GridMessageService.html":{}}}],["gridmodul",{"_index":44,"title":{"modules/GridModule.html":{}},"body":{"index.html":{},"overview.html":{},"modules.html":{},"modules/GridModule.html":{}}}],["gridmodule.forroot",{"_index":46,"title":{},"body":{"index.html":{}}}],["gridservic",{"_index":391,"title":{},"body":{"overview.html":{},"modules/GridModule.html":{}}}],["group",{"_index":83,"title":{},"body":{"index.html":{}}}],["group.pip",{"_index":548,"title":{},"body":{"modules/GridModule.html":{}}}],["group.pipe.t",{"_index":609,"title":{},"body":{"pipes/IsGroupPipe.html":{}}}],["group.pipe.ts:9",{"_index":611,"title":{},"body":{"pipes/IsGroupPipe.html":{}}}],["groupbycollaps",{"_index":169,"title":{},"body":{"index.html":{}}}],["handl",{"_index":28,"title":{},"body":{"index.html":{}}}],["hci",{"_index":21,"title":{},"body":{"index.html":{}}}],["header",{"_index":69,"title":{},"body":{"index.html":{}}}],["header.compon",{"_index":545,"title":{},"body":{"modules/GridModule.html":{}}}],["height",{"_index":448,"title":{},"body":{"changelog.html":{}}}],["here",{"_index":103,"title":{},"body":{"index.html":{}}}],["herebi",{"_index":481,"title":{},"body":{"license.html":{}}}],["hidden",{"_index":173,"title":{},"body":{"index.html":{}}}],["high",{"_index":323,"title":{},"body":{"index.html":{}}}],["holder",{"_index":515,"title":{},"body":{"license.html":{},"classes/Cell.html":{}}}],["html",{"_index":131,"title":{},"body":{"index.html":{}}}],["htmlelement",{"_index":670,"title":{},"body":{"classes/HtmlUtil.html":{}}}],["htmlelement;a",{"_index":315,"title":{},"body":{"index.html":{}}}],["htmlutil",{"_index":660,"title":{"classes/HtmlUtil.html":{}},"body":{"classes/HtmlUtil.html":{}}}],["http",{"_index":429,"title":{},"body":{"changelog.html":{}}}],["huntsman",{"_index":15,"title":{},"body":{"index.html":{},"license.html":{},"modules/GridModule.html":{}}}],["ic",{"_index":690,"title":{},"body":{"classes/InjectableFactory.html":{},"interfaces/InjectableConstructor.html":{}}}],["id",{"_index":132,"title":{},"body":{"index.html":{},"classes/HtmlUtil.html":{}}}],["implement",{"_index":108,"title":{},"body":{"index.html":{},"pipes/IsFixedPipe.html":{},"pipes/IsGroupPipe.html":{},"pipes/IsRowVisiblePipe.html":{},"pipes/IsVisiblePipe.html":{},"classes/InjectableFactory.html":{},"interfaces/InjectableConstructor.html":{}}}],["impli",{"_index":508,"title":{},"body":{"license.html":{}}}],["import",{"_index":43,"title":{},"body":{"index.html":{},"modules/GridModule.html":{},"injectables/GridMessageService.html":{},"pipes/IsFixedPipe.html":{},"pipes/IsGroupPipe.html":{},"pipes/IsRowVisiblePipe.html":{},"pipes/IsVisiblePipe.html":{},"classes/HtmlUtil.html":{},"classes/InjectableFactory.html":{},"interfaces/EventListenerArg.html":{},"interfaces/InjectableConstructor.html":{}}}],["improv",{"_index":462,"title":{},"body":{"changelog.html":{}}}],["in.onconfigchang",{"_index":255,"title":{},"body":{"index.html":{}}}],["includ",{"_index":275,"title":{},"body":{"index.html":{},"license.html":{}}}],["index",{"_index":14,"title":{"index.html":{}},"body":{"injectables/GridMessageService.html":{},"classes/Cell.html":{},"classes/EmptyFactory.html":{},"classes/FormatterParser.html":{},"classes/HtmlUtil.html":{},"classes/InjectableFactory.html":{},"classes/RowChange.html":{},"classes/SortInfo.html":{},"interfaces/ClickListener.html":{},"interfaces/DblClickListener.html":{},"interfaces/Dictionary.html":{},"interfaces/EventListenerArg.html":{},"interfaces/MouseDownListener.html":{},"interfaces/MouseDragListener.html":{},"interfaces/MouseOutListener.html":{},"interfaces/MouseOverListener.html":{},"interfaces/MouseUpListener.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":528,"title":{},"body":{"modules/GridModule.html":{},"injectables/GridMessageService.html":{},"pipes/IsFixedPipe.html":{},"pipes/IsGroupPipe.html":{},"pipes/IsRowVisiblePipe.html":{},"pipes/IsVisiblePipe.html":{},"classes/Cell.html":{},"classes/EmptyFactory.html":{},"classes/FormatterParser.html":{},"classes/HtmlUtil.html":{},"classes/InjectableFactory.html":{},"classes/RowChange.html":{},"classes/SortInfo.html":{},"interfaces/ClickListener.html":{},"interfaces/DblClickListener.html":{},"interfaces/Dictionary.html":{},"interfaces/EmptyConstructor.html":{},"interfaces/EventListenerArg.html":{},"interfaces/InjectableConstructor.html":{},"interfaces/MouseDownListener.html":{},"interfaces/MouseDragListener.html":{},"interfaces/MouseOutListener.html":{},"interfaces/MouseOverListener.html":{},"interfaces/MouseUpListener.html":{}}}],["info.id",{"_index":130,"title":{},"body":{"index.html":{}}}],["info.t",{"_index":705,"title":{},"body":{"classes/SortInfo.html":{}}}],["info.ts:13",{"_index":712,"title":{},"body":{"classes/SortInfo.html":{}}}],["info.ts:17",{"_index":716,"title":{},"body":{"classes/SortInfo.html":{}}}],["info.ts:2",{"_index":717,"title":{},"body":{"classes/SortInfo.html":{}}}],["info.ts:3",{"_index":718,"title":{},"body":{"classes/SortInfo.html":{}}}],["info.ts:5",{"_index":711,"title":{},"body":{"classes/SortInfo.html":{}}}],["info.ts:9",{"_index":714,"title":{},"body":{"classes/SortInfo.html":{}}}],["initi",{"_index":471,"title":{},"body":{"changelog.html":{}}}],["inject",{"_index":399,"title":{"injectables/GridMessageService.html":{}},"body":{"overview.html":{},"injectables/GridMessageService.html":{}}}],["injectableconstructor",{"_index":688,"title":{"interfaces/InjectableConstructor.html":{}},"body":{"classes/InjectableFactory.html":{},"interfaces/InjectableConstructor.html":{}}}],["injectablefactori",{"_index":683,"title":{"classes/InjectableFactory.html":{}},"body":{"classes/InjectableFactory.html":{},"interfaces/InjectableConstructor.html":{}}}],["injector",{"_index":685,"title":{},"body":{"classes/InjectableFactory.html":{},"interfaces/InjectableConstructor.html":{}}}],["input",{"_index":120,"title":{},"body":{"index.html":{}}}],["instal",{"_index":359,"title":{},"body":{"index.html":{}}}],["instanc",{"_index":294,"title":{},"body":{"index.html":{}}}],["instanti",{"_index":634,"title":{},"body":{"classes/EmptyFactory.html":{},"classes/InjectableFactory.html":{},"interfaces/InjectableConstructor.html":{}}}],["instead",{"_index":61,"title":{},"body":{"index.html":{}}}],["institut",{"_index":477,"title":{},"body":{"license.html":{},"modules/GridModule.html":{}}}],["institute'",{"_index":17,"title":{},"body":{"index.html":{}}}],["interfac",{"_index":310,"title":{"interfaces/ClickListener.html":{},"interfaces/DblClickListener.html":{},"interfaces/Dictionary.html":{},"interfaces/EmptyConstructor.html":{},"interfaces/EventListenerArg.html":{},"interfaces/InjectableConstructor.html":{},"interfaces/MouseDownListener.html":{},"interfaces/MouseDragListener.html":{},"interfaces/MouseOutListener.html":{},"interfaces/MouseOverListener.html":{},"interfaces/MouseUpListener.html":{}},"body":{"index.html":{},"overview.html":{},"classes/EmptyFactory.html":{},"classes/InjectableFactory.html":{},"interfaces/ClickListener.html":{},"interfaces/DblClickListener.html":{},"interfaces/Dictionary.html":{},"interfaces/EmptyConstructor.html":{},"interfaces/EventListenerArg.html":{},"interfaces/InjectableConstructor.html":{},"interfaces/MouseDownListener.html":{},"interfaces/MouseDragListener.html":{},"interfaces/MouseOutListener.html":{},"interfaces/MouseOverListener.html":{},"interfaces/MouseUpListener.html":{}}}],["intro",{"_index":24,"title":{},"body":{"index.html":{}}}],["introduc",{"_index":351,"title":{},"body":{"index.html":{}}}],["invalid",{"_index":407,"title":{},"body":{"changelog.html":{}}}],["isfix",{"_index":602,"title":{},"body":{"pipes/IsFixedPipe.html":{}}}],["isfixedpip",{"_index":385,"title":{"pipes/IsFixedPipe.html":{}},"body":{"overview.html":{},"modules/GridModule.html":{},"pipes/IsFixedPipe.html":{}}}],["isgroup",{"_index":610,"title":{},"body":{"pipes/IsGroupPipe.html":{}}}],["isgrouppip",{"_index":384,"title":{"pipes/IsGroupPipe.html":{}},"body":{"overview.html":{},"modules/GridModule.html":{},"pipes/IsGroupPipe.html":{}}}],["isrowvis",{"_index":615,"title":{},"body":{"pipes/IsRowVisiblePipe.html":{}}}],["isrowvisiblepip",{"_index":386,"title":{"pipes/IsRowVisiblePipe.html":{}},"body":{"overview.html":{},"modules/GridModule.html":{},"pipes/IsRowVisiblePipe.html":{}}}],["issu",{"_index":349,"title":{},"body":{"index.html":{}}}],["isvis",{"_index":619,"title":{},"body":{"pipes/IsVisiblePipe.html":{}}}],["isvisiblepip",{"_index":383,"title":{"pipes/IsVisiblePipe.html":{}},"body":{"overview.html":{},"modules/GridModule.html":{},"pipes/IsVisiblePipe.html":{}}}],["j",{"_index":242,"title":{},"body":{"index.html":{}}}],["json",{"_index":135,"title":{},"body":{"index.html":{}}}],["key",{"_index":207,"title":{},"body":{"index.html":{},"classes/Cell.html":{}}}],["key1",{"_index":267,"title":{},"body":{"index.html":{}}}],["key2",{"_index":268,"title":{},"body":{"index.html":{}}}],["keyword",{"_index":452,"title":{},"body":{"changelog.html":{}}}],["kind",{"_index":506,"title":{},"body":{"license.html":{}}}],["known",{"_index":348,"title":{},"body":{"index.html":{}}}],["lab",{"_index":317,"title":{},"body":{"index.html":{}}}],["last",{"_index":79,"title":{},"body":{"index.html":{}}}],["left",{"_index":164,"title":{},"body":{"index.html":{},"changelog.html":{}}}],["legend",{"_index":374,"title":{},"body":{"overview.html":{},"modules/GridModule.html":{}}}],["liabil",{"_index":519,"title":{},"body":{"license.html":{}}}],["liabl",{"_index":516,"title":{},"body":{"license.html":{}}}],["librari",{"_index":20,"title":{},"body":{"index.html":{}}}],["licens",{"_index":455,"title":{"license.html":{}},"body":{"changelog.html":{}}}],["limit",{"_index":190,"title":{},"body":{"index.html":{},"license.html":{}}}],["link",{"_index":141,"title":{},"body":{"index.html":{}}}],["list",{"_index":102,"title":{},"body":{"index.html":{},"pipes/IsFixedPipe.html":{},"pipes/IsGroupPipe.html":{},"pipes/IsRowVisiblePipe.html":{},"pipes/IsVisiblePipe.html":{}}}],["list.filter((o",{"_index":607,"title":{},"body":{"pipes/IsFixedPipe.html":{},"pipes/IsGroupPipe.html":{},"pipes/IsRowVisiblePipe.html":{},"pipes/IsVisiblePipe.html":{}}}],["listen",{"_index":92,"title":{},"body":{"index.html":{},"changelog.html":{},"interfaces/EventListenerArg.html":{}}}],["load",{"_index":202,"title":{},"body":{"index.html":{},"changelog.html":{}}}],["locat",{"_index":247,"title":{},"body":{"index.html":{}}}],["log",{"_index":404,"title":{},"body":{"changelog.html":{}}}],["low",{"_index":321,"title":{},"body":{"index.html":{}}}],["make",{"_index":362,"title":{},"body":{"index.html":{}}}],["male",{"_index":346,"title":{},"body":{"index.html":{}}}],["manag",{"_index":624,"title":{},"body":{"classes/Cell.html":{}}}],["mani",{"_index":100,"title":{},"body":{"index.html":{}}}],["match",{"_index":11,"title":{},"body":{"dependencies.html":{},"index.html":{},"overview.html":{},"changelog.html":{},"license.html":{},"modules.html":{},"modules/GridModule.html":{},"injectables/GridMessageService.html":{},"pipes/IsFixedPipe.html":{},"pipes/IsGroupPipe.html":{},"pipes/IsRowVisiblePipe.html":{},"pipes/IsVisiblePipe.html":{},"classes/Cell.html":{},"classes/EmptyFactory.html":{},"classes/FormatterParser.html":{},"classes/HtmlUtil.html":{},"classes/InjectableFactory.html":{},"classes/RowChange.html":{},"classes/SortInfo.html":{},"interfaces/ClickListener.html":{},"interfaces/DblClickListener.html":{},"interfaces/Dictionary.html":{},"interfaces/EmptyConstructor.html":{},"interfaces/EventListenerArg.html":{},"interfaces/InjectableConstructor.html":{},"interfaces/MouseDownListener.html":{},"interfaces/MouseDragListener.html":{},"interfaces/MouseOutListener.html":{},"interfaces/MouseOverListener.html":{},"interfaces/MouseUpListener.html":{},"miscellaneous/variables.html":{}}}],["menu.compon",{"_index":561,"title":{},"body":{"modules/GridModule.html":{}}}],["merchant",{"_index":509,"title":{},"body":{"license.html":{}}}],["merg",{"_index":492,"title":{},"body":{"license.html":{}}}],["messag",{"_index":263,"title":{},"body":{"index.html":{},"injectables/GridMessageService.html":{}}}],["message.service.t",{"_index":574,"title":{},"body":{"injectables/GridMessageService.html":{}}}],["message.service.ts:10",{"_index":589,"title":{},"body":{"injectables/GridMessageService.html":{}}}],["message.service.ts:12",{"_index":584,"title":{},"body":{"injectables/GridMessageService.html":{}}}],["message.service.ts:16",{"_index":587,"title":{},"body":{"injectables/GridMessageService.html":{}}}],["message.service.ts:20",{"_index":594,"title":{},"body":{"injectables/GridMessageService.html":{}}}],["message.service.ts:8",{"_index":590,"title":{},"body":{"injectables/GridMessageService.html":{}}}],["message.service.ts:9",{"_index":592,"title":{},"body":{"injectables/GridMessageService.html":{}}}],["messageobserv",{"_index":581,"title":{},"body":{"injectables/GridMessageService.html":{}}}],["metadata",{"_index":601,"title":{},"body":{"pipes/IsFixedPipe.html":{},"pipes/IsGroupPipe.html":{},"pipes/IsRowVisiblePipe.html":{},"pipes/IsVisiblePipe.html":{},"classes/Cell.html":{}}}],["method",{"_index":311,"title":{},"body":{"index.html":{},"injectables/GridMessageService.html":{},"pipes/IsFixedPipe.html":{},"pipes/IsGroupPipe.html":{},"pipes/IsRowVisiblePipe.html":{},"pipes/IsVisiblePipe.html":{},"classes/EmptyFactory.html":{},"classes/FormatterParser.html":{},"classes/HtmlUtil.html":{},"classes/InjectableFactory.html":{},"classes/SortInfo.html":{},"interfaces/ClickListener.html":{},"interfaces/DblClickListener.html":{},"interfaces/MouseDownListener.html":{},"interfaces/MouseDragListener.html":{},"interfaces/MouseOutListener.html":{},"interfaces/MouseOverListener.html":{},"interfaces/MouseUpListener.html":{}}}],["mimic",{"_index":368,"title":{},"body":{"index.html":{}}}],["miscellan",{"_index":766,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["mm/dd/yyyi",{"_index":338,"title":{},"body":{"index.html":{}}}],["mock",{"_index":111,"title":{},"body":{"index.html":{}}}],["mode",{"_index":211,"title":{},"body":{"index.html":{}}}],["modif",{"_index":649,"title":{},"body":{"classes/FormatterParser.html":{}}}],["modifi",{"_index":148,"title":{},"body":{"index.html":{},"license.html":{}}}],["modul",{"_index":292,"title":{"modules.html":{},"modules/GridModule.html":{}},"body":{"index.html":{},"overview.html":{},"modules.html":{},"modules/GridModule.html":{}}}],["modulewithprovid",{"_index":535,"title":{},"body":{"modules/GridModule.html":{}}}],["moment",{"_index":8,"title":{},"body":{"dependencies.html":{}}}],["more",{"_index":85,"title":{},"body":{"index.html":{},"changelog.html":{}}}],["mousedown",{"_index":743,"title":{},"body":{"interfaces/MouseDownListener.html":{}}}],["mousedown(ev",{"_index":744,"title":{},"body":{"interfaces/MouseDownListener.html":{}}}],["mousedownlisten",{"_index":740,"title":{"interfaces/MouseDownListener.html":{}},"body":{"interfaces/MouseDownListener.html":{}}}],["mousedrag",{"_index":748,"title":{},"body":{"interfaces/MouseDragListener.html":{}}}],["mousedrag(ev",{"_index":749,"title":{},"body":{"interfaces/MouseDragListener.html":{}}}],["mousedraglisten",{"_index":746,"title":{"interfaces/MouseDragListener.html":{}},"body":{"interfaces/MouseDragListener.html":{}}}],["mouseev",{"_index":724,"title":{},"body":{"interfaces/ClickListener.html":{},"interfaces/DblClickListener.html":{},"interfaces/MouseDownListener.html":{},"interfaces/MouseDragListener.html":{},"interfaces/MouseOutListener.html":{},"interfaces/MouseOverListener.html":{},"interfaces/MouseUpListener.html":{}}}],["mouseout",{"_index":753,"title":{},"body":{"interfaces/MouseOutListener.html":{}}}],["mouseout(ev",{"_index":754,"title":{},"body":{"interfaces/MouseOutListener.html":{}}}],["mouseoutlisten",{"_index":751,"title":{"interfaces/MouseOutListener.html":{}},"body":{"interfaces/MouseOutListener.html":{}}}],["mouseov",{"_index":758,"title":{},"body":{"interfaces/MouseOverListener.html":{}}}],["mouseover(ev",{"_index":759,"title":{},"body":{"interfaces/MouseOverListener.html":{}}}],["mouseoverlisten",{"_index":756,"title":{"interfaces/MouseOverListener.html":{}},"body":{"interfaces/MouseOverListener.html":{}}}],["mouseup",{"_index":763,"title":{},"body":{"interfaces/MouseUpListener.html":{}}}],["mouseup(ev",{"_index":764,"title":{},"body":{"interfaces/MouseUpListener.html":{}}}],["mouseuplisten",{"_index":761,"title":{"interfaces/MouseUpListener.html":{}},"body":{"interfaces/MouseUpListener.html":{}}}],["move",{"_index":50,"title":{},"body":{"index.html":{}}}],["ms",{"_index":416,"title":{},"body":{"changelog.html":{}}}],["multi",{"_index":565,"title":{},"body":{"modules/GridModule.html":{}}}],["multipl",{"_index":274,"title":{},"body":{"index.html":{}}}],["n",{"_index":426,"title":{},"body":{"changelog.html":{}}}],["name",{"_index":140,"title":{},"body":{"index.html":{},"injectables/GridMessageService.html":{},"pipes/IsFixedPipe.html":{},"pipes/IsGroupPipe.html":{},"pipes/IsRowVisiblePipe.html":{},"pipes/IsVisiblePipe.html":{},"classes/Cell.html":{},"classes/EmptyFactory.html":{},"classes/FormatterParser.html":{},"classes/HtmlUtil.html":{},"classes/InjectableFactory.html":{},"classes/RowChange.html":{},"classes/SortInfo.html":{},"interfaces/ClickListener.html":{},"interfaces/DblClickListener.html":{},"interfaces/MouseDownListener.html":{},"interfaces/MouseDragListener.html":{},"interfaces/MouseOutListener.html":{},"interfaces/MouseOverListener.html":{},"interfaces/MouseUpListener.html":{}}}],["name.3.1.3",{"_index":415,"title":{},"body":{"changelog.html":{}}}],["navig",{"_index":196,"title":{},"body":{"index.html":{}}}],["ndata",{"_index":285,"title":{},"body":{"index.html":{}}}],["nearli",{"_index":29,"title":{},"body":{"index.html":{}}}],["need",{"_index":623,"title":{},"body":{"classes/Cell.html":{}}}],["new",{"_index":197,"title":{},"body":{"index.html":{},"changelog.html":{},"injectables/GridMessageService.html":{},"classes/EmptyFactory.html":{},"classes/InjectableFactory.html":{},"interfaces/EmptyConstructor.html":{},"interfaces/InjectableConstructor.html":{}}}],["new(injector",{"_index":693,"title":{},"body":{"classes/InjectableFactory.html":{},"interfaces/InjectableConstructor.html":{}}}],["newrow",{"_index":227,"title":{},"body":{"index.html":{}}}],["newrownum",{"_index":697,"title":{},"body":{"classes/RowChange.html":{}}}],["newrowpostcal",{"_index":238,"title":{},"body":{"index.html":{}}}],["newrowpostcall().newrowpostcallerror",{"_index":234,"title":{},"body":{"index.html":{}}}],["newrowpostcall().newrowpostcallfin",{"_index":236,"title":{},"body":{"index.html":{}}}],["newvalu",{"_index":246,"title":{},"body":{"index.html":{}}}],["next",{"_index":81,"title":{},"body":{"index.html":{}}}],["ng",{"_index":2,"title":{},"body":{"dependencies.html":{},"index.html":{},"modules/GridModule.html":{}}}],["ngbmodul",{"_index":542,"title":{},"body":{"modules/GridModule.html":{}}}],["ngbmodule.forroot",{"_index":567,"title":{},"body":{"modules/GridModule.html":{}}}],["ngmodul",{"_index":536,"title":{},"body":{"modules/GridModule.html":{}}}],["ngoninit",{"_index":114,"title":{},"body":{"index.html":{}}}],["nlab",{"_index":316,"title":{},"body":{"index.html":{}}}],["no_ev",{"_index":769,"title":{},"body":{"miscellaneous/variables.html":{}}}],["noninfring",{"_index":513,"title":{},"body":{"license.html":{}}}],["note",{"_index":99,"title":{},"body":{"index.html":{}}}],["notic",{"_index":501,"title":{},"body":{"license.html":{}}}],["npm",{"_index":358,"title":{},"body":{"index.html":{}}}],["npmignore.2.0.1",{"_index":453,"title":{},"body":{"changelog.html":{}}}],["npmpack",{"_index":59,"title":{},"body":{"index.html":{}}}],["npmpublish",{"_index":60,"title":{},"body":{"index.html":{}}}],["null",{"_index":681,"title":{},"body":{"classes/HtmlUtil.html":{},"classes/SortInfo.html":{}}}],["number",{"_index":179,"title":{},"body":{"index.html":{},"injectables/GridMessageService.html":{},"classes/Cell.html":{},"classes/RowChange.html":{},"miscellaneous/variables.html":{}}}],["numer",{"_index":469,"title":{},"body":{"changelog.html":{}}}],["o",{"_index":628,"title":{},"body":{"classes/Cell.html":{}}}],["o.isfix",{"_index":608,"title":{},"body":{"pipes/IsFixedPipe.html":{}}}],["o.isgroup",{"_index":612,"title":{},"body":{"pipes/IsGroupPipe.html":{}}}],["o.isutil",{"_index":613,"title":{},"body":{"pipes/IsGroupPipe.html":{}}}],["o.vis",{"_index":618,"title":{},"body":{"pipes/IsRowVisiblePipe.html":{},"pipes/IsVisiblePipe.html":{}}}],["object",{"_index":122,"title":{},"body":{"index.html":{},"classes/Cell.html":{}}}],["object.assign(thi",{"_index":631,"title":{},"body":{"classes/Cell.html":{}}}],["objects.fixedcolumn",{"_index":162,"title":{},"body":{"index.html":{}}}],["observ",{"_index":228,"title":{},"body":{"index.html":{},"changelog.html":{},"injectables/GridMessageService.html":{}}}],["observable.of(new",{"_index":117,"title":{},"body":{"index.html":{}}}],["obtain",{"_index":486,"title":{},"body":{"license.html":{}}}],["odd.3.1.4",{"_index":414,"title":{},"body":{"changelog.html":{}}}],["old",{"_index":248,"title":{},"body":{"index.html":{}}}],["oldrownum",{"_index":698,"title":{},"body":{"classes/RowChange.html":{}}}],["oldvalu",{"_index":245,"title":{},"body":{"index.html":{}}}],["on",{"_index":84,"title":{},"body":{"index.html":{}}}],["oncellsav",{"_index":240,"title":{},"body":{"index.html":{}}}],["onrowsav",{"_index":195,"title":{},"body":{"index.html":{}}}],["option",{"_index":138,"title":{},"body":{"index.html":{},"injectables/GridMessageService.html":{},"pipes/IsFixedPipe.html":{},"pipes/IsGroupPipe.html":{},"pipes/IsRowVisiblePipe.html":{},"pipes/IsVisiblePipe.html":{},"classes/Cell.html":{},"classes/EmptyFactory.html":{},"classes/FormatterParser.html":{},"classes/HtmlUtil.html":{},"classes/InjectableFactory.html":{},"classes/RowChange.html":{},"classes/SortInfo.html":{},"interfaces/ClickListener.html":{},"interfaces/DblClickListener.html":{},"interfaces/EventListenerArg.html":{},"interfaces/MouseDownListener.html":{},"interfaces/MouseDragListener.html":{},"interfaces/MouseOutListener.html":{},"interfaces/MouseOverListener.html":{},"interfaces/MouseUpListener.html":{}}}],["organization.3.1.6",{"_index":410,"title":{},"body":{"changelog.html":{}}}],["origin",{"_index":254,"title":{},"body":{"index.html":{}}}],["originalrowdata",{"_index":252,"title":{},"body":{"index.html":{}}}],["otherwis",{"_index":523,"title":{},"body":{"license.html":{}}}],["out",{"_index":396,"title":{},"body":{"overview.html":{},"license.html":{},"modules/GridModule.html":{}}}],["out.interface.t",{"_index":752,"title":{},"body":{"interfaces/MouseOutListener.html":{}}}],["out.interface.ts:3",{"_index":755,"title":{},"body":{"interfaces/MouseOutListener.html":{}}}],["over.interface.t",{"_index":757,"title":{},"body":{"interfaces/MouseOverListener.html":{}}}],["over.interface.ts:3",{"_index":760,"title":{},"body":{"interfaces/MouseOverListener.html":{}}}],["overview",{"_index":373,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["pack",{"_index":63,"title":{},"body":{"index.html":{}}}],["packag",{"_index":0,"title":{"dependencies.html":{}},"body":{"index.html":{}}}],["package.json",{"_index":54,"title":{},"body":{"index.html":{}}}],["page",{"_index":75,"title":{},"body":{"index.html":{}}}],["paramet",{"_index":585,"title":{},"body":{"injectables/GridMessageService.html":{},"pipes/IsFixedPipe.html":{},"pipes/IsGroupPipe.html":{},"pipes/IsRowVisiblePipe.html":{},"pipes/IsVisiblePipe.html":{},"classes/Cell.html":{},"classes/EmptyFactory.html":{},"classes/FormatterParser.html":{},"classes/HtmlUtil.html":{},"classes/InjectableFactory.html":{},"classes/RowChange.html":{},"classes/SortInfo.html":{},"interfaces/ClickListener.html":{},"interfaces/DblClickListener.html":{},"interfaces/MouseDownListener.html":{},"interfaces/MouseDragListener.html":{},"interfaces/MouseOutListener.html":{},"interfaces/MouseOverListener.html":{},"interfaces/MouseUpListener.html":{}}}],["parser",{"_index":648,"title":{},"body":{"classes/FormatterParser.html":{}}}],["parser.t",{"_index":646,"title":{},"body":{"classes/FormatterParser.html":{}}}],["parser.ts:12",{"_index":654,"title":{},"body":{"classes/FormatterParser.html":{}}}],["parser.ts:16",{"_index":656,"title":{},"body":{"classes/FormatterParser.html":{}}}],["parser.ts:6",{"_index":658,"title":{},"body":{"classes/FormatterParser.html":{}}}],["parser.ts:8",{"_index":657,"title":{},"body":{"classes/FormatterParser.html":{}}}],["parsevalu",{"_index":651,"title":{},"body":{"classes/FormatterParser.html":{}}}],["parsevalue(valu",{"_index":655,"title":{},"body":{"classes/FormatterParser.html":{}}}],["particular",{"_index":511,"title":{},"body":{"license.html":{}}}],["pass",{"_index":129,"title":{},"body":{"index.html":{}}}],["paus",{"_index":444,"title":{},"body":{"changelog.html":{}}}],["per",{"_index":180,"title":{},"body":{"index.html":{}}}],["perform",{"_index":206,"title":{},"body":{"index.html":{}}}],["permiss",{"_index":480,"title":{},"body":{"license.html":{}}}],["permit",{"_index":497,"title":{},"body":{"license.html":{}}}],["persist",{"_index":229,"title":{},"body":{"index.html":{}}}],["person",{"_index":485,"title":{},"body":{"license.html":{}}}],["pipe",{"_index":400,"title":{"pipes/IsFixedPipe.html":{},"pipes/IsGroupPipe.html":{},"pipes/IsRowVisiblePipe.html":{},"pipes/IsVisiblePipe.html":{}},"body":{"overview.html":{},"pipes/IsFixedPipe.html":{},"pipes/IsGroupPipe.html":{},"pipes/IsRowVisiblePipe.html":{},"pipes/IsVisiblePipe.html":{}}}],["pipetransform",{"_index":606,"title":{},"body":{"pipes/IsFixedPipe.html":{},"pipes/IsGroupPipe.html":{},"pipes/IsRowVisiblePipe.html":{},"pipes/IsVisiblePipe.html":{}}}],["point",{"_index":281,"title":{},"body":{"index.html":{},"classes/HtmlUtil.html":{}}}],["point.getpoint(this.getid(",{"_index":682,"title":{},"body":{"classes/HtmlUtil.html":{}}}],["popup",{"_index":435,"title":{},"body":{"changelog.html":{}}}],["popup).selectedrow",{"_index":266,"title":{},"body":{"index.html":{}}}],["popup.compon",{"_index":559,"title":{},"body":{"modules/GridModule.html":{}}}],["portion",{"_index":504,"title":{},"body":{"license.html":{}}}],["possibl",{"_index":74,"title":{},"body":{"index.html":{}}}],["prevent",{"_index":446,"title":{},"body":{"changelog.html":{}}}],["previou",{"_index":80,"title":{},"body":{"index.html":{}}}],["privat",{"_index":576,"title":{},"body":{"injectables/GridMessageService.html":{},"classes/InjectableFactory.html":{},"interfaces/InjectableConstructor.html":{}}}],["prod",{"_index":372,"title":{},"body":{"index.html":{}}}],["product",{"_index":370,"title":{},"body":{"index.html":{}}}],["promis",{"_index":468,"title":{},"body":{"changelog.html":{}}}],["propag",{"_index":421,"title":{},"body":{"changelog.html":{}}}],["properti",{"_index":575,"title":{},"body":{"injectables/GridMessageService.html":{},"classes/Cell.html":{},"classes/FormatterParser.html":{},"classes/RowChange.html":{},"classes/SortInfo.html":{},"interfaces/Dictionary.html":{},"interfaces/EventListenerArg.html":{}}}],["proprietari",{"_index":533,"title":{},"body":{"modules/GridModule.html":{}}}],["provid",{"_index":107,"title":{},"body":{"index.html":{},"overview.html":{},"license.html":{},"modules/GridModule.html":{}}}],["public",{"_index":433,"title":{},"body":{"changelog.html":{},"classes/SortInfo.html":{}}}],["publish",{"_index":47,"title":{},"body":{"index.html":{},"license.html":{}}}],["publish.bas",{"_index":64,"title":{},"body":{"index.html":{}}}],["pull",{"_index":369,"title":{},"body":{"index.html":{},"classes/HtmlUtil.html":{}}}],["pure",{"_index":306,"title":{},"body":{"index.html":{},"pipes/IsFixedPipe.html":{}}}],["purpos",{"_index":512,"title":{},"body":{"license.html":{}}}],["rang",{"_index":73,"title":{},"body":{"index.html":{}}}],["re",{"_index":301,"title":{},"body":{"index.html":{}}}],["readm",{"_index":454,"title":{},"body":{"changelog.html":{}}}],["readme.2.1.0",{"_index":441,"title":{},"body":{"changelog.html":{}}}],["readme.md",{"_index":473,"title":{},"body":{"changelog.html":{}}}],["rearrang",{"_index":408,"title":{},"body":{"changelog.html":{}}}],["refactor",{"_index":457,"title":{},"body":{"changelog.html":{}}}],["referenc",{"_index":466,"title":{},"body":{"changelog.html":{}}}],["refresh",{"_index":299,"title":{},"body":{"index.html":{}}}],["releas",{"_index":472,"title":{},"body":{"changelog.html":{}}}],["remov",{"_index":442,"title":{},"body":{"changelog.html":{}}}],["render",{"_index":297,"title":{},"body":{"index.html":{},"changelog.html":{},"classes/Cell.html":{}}}],["renderer.compon",{"_index":552,"title":{},"body":{"modules/GridModule.html":{}}}],["renderer2",{"_index":314,"title":{},"body":{"index.html":{}}}],["report",{"_index":160,"title":{},"body":{"index.html":{}}}],["request",{"_index":353,"title":{},"body":{"index.html":{},"changelog.html":{}}}],["requir",{"_index":57,"title":{},"body":{"index.html":{}}}],["reset",{"_index":395,"title":{},"body":{"overview.html":{},"modules/GridModule.html":{}}}],["resiz",{"_index":770,"title":{},"body":{"miscellaneous/variables.html":{}}}],["restrict",{"_index":491,"title":{},"body":{"license.html":{}}}],["result",{"_index":10,"title":{},"body":{"dependencies.html":{},"index.html":{},"overview.html":{},"changelog.html":{},"license.html":{},"modules.html":{},"modules/GridModule.html":{},"injectables/GridMessageService.html":{},"pipes/IsFixedPipe.html":{},"pipes/IsGroupPipe.html":{},"pipes/IsRowVisiblePipe.html":{},"pipes/IsVisiblePipe.html":{},"classes/Cell.html":{},"classes/EmptyFactory.html":{},"classes/FormatterParser.html":{},"classes/HtmlUtil.html":{},"classes/InjectableFactory.html":{},"classes/RowChange.html":{},"classes/SortInfo.html":{},"interfaces/ClickListener.html":{},"interfaces/DblClickListener.html":{},"interfaces/Dictionary.html":{},"interfaces/EmptyConstructor.html":{},"interfaces/EventListenerArg.html":{},"interfaces/InjectableConstructor.html":{},"interfaces/MouseDownListener.html":{},"interfaces/MouseDragListener.html":{},"interfaces/MouseOutListener.html":{},"interfaces/MouseOverListener.html":{},"interfaces/MouseUpListener.html":{},"miscellaneous/variables.html":{}}}],["retriev",{"_index":89,"title":{},"body":{"index.html":{}}}],["return",{"_index":116,"title":{},"body":{"index.html":{},"modules/GridModule.html":{},"injectables/GridMessageService.html":{},"pipes/IsFixedPipe.html":{},"pipes/IsGroupPipe.html":{},"pipes/IsRowVisiblePipe.html":{},"pipes/IsVisiblePipe.html":{},"classes/EmptyFactory.html":{},"classes/FormatterParser.html":{},"classes/HtmlUtil.html":{},"classes/InjectableFactory.html":{},"classes/SortInfo.html":{},"interfaces/ClickListener.html":{},"interfaces/DblClickListener.html":{},"interfaces/EmptyConstructor.html":{},"interfaces/InjectableConstructor.html":{},"interfaces/MouseDownListener.html":{},"interfaces/MouseDragListener.html":{},"interfaces/MouseOutListener.html":{},"interfaces/MouseOverListener.html":{},"interfaces/MouseUpListener.html":{}}}],["returning.sortev",{"_index":286,"title":{},"body":{"index.html":{}}}],["revers",{"_index":412,"title":{},"body":{"changelog.html":{}}}],["right",{"_index":354,"title":{},"body":{"index.html":{},"changelog.html":{},"license.html":{}}}],["root",{"_index":217,"title":{},"body":{"index.html":{}}}],["row",{"_index":82,"title":{},"body":{"index.html":{},"changelog.html":{},"modules/GridModule.html":{},"pipes/IsRowVisiblePipe.html":{}}}],["row/row",{"_index":617,"title":{},"body":{"pipes/IsRowVisiblePipe.html":{}}}],["rowchang",{"_index":694,"title":{"classes/RowChange.html":{}},"body":{"classes/RowChange.html":{}}}],["rownum",{"_index":251,"title":{},"body":{"index.html":{}}}],["rows[i].key",{"_index":241,"title":{},"body":{"index.html":{}}}],["run",{"_index":356,"title":{},"body":{"index.html":{}}}],["rxjs/rx",{"_index":595,"title":{},"body":{"injectables/GridMessageService.html":{}}}],["same",{"_index":192,"title":{},"body":{"index.html":{}}}],["save",{"_index":459,"title":{},"body":{"changelog.html":{}}}],["scroll",{"_index":191,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["scrollbar",{"_index":449,"title":{},"body":{"changelog.html":{}}}],["see",{"_index":104,"title":{},"body":{"index.html":{},"changelog.html":{},"classes/InjectableFactory.html":{},"interfaces/InjectableConstructor.html":{}}}],["select",{"_index":72,"title":{},"body":{"index.html":{},"changelog.html":{}}}],["selectfilterrender",{"_index":347,"title":{},"body":{"index.html":{},"overview.html":{},"modules/GridModule.html":{}}}],["sell",{"_index":496,"title":{},"body":{"license.html":{}}}],["servic",{"_index":465,"title":{},"body":{"changelog.html":{}}}],["service.config",{"_index":134,"title":{},"body":{"index.html":{}}}],["services/grid",{"_index":563,"title":{},"body":{"modules/GridModule.html":{}}}],["set",{"_index":218,"title":{},"body":{"index.html":{}}}],["setasc",{"_index":709,"title":{},"body":{"classes/SortInfo.html":{}}}],["setasc(asc",{"_index":713,"title":{},"body":{"classes/SortInfo.html":{}}}],["setconfig",{"_index":652,"title":{},"body":{"classes/FormatterParser.html":{}}}],["setconfig(config",{"_index":312,"title":{},"body":{"index.html":{},"classes/FormatterParser.html":{}}}],["setfield",{"_index":710,"title":{},"body":{"classes/SortInfo.html":{}}}],["setfield(field",{"_index":715,"title":{},"body":{"classes/SortInfo.html":{}}}],["sever",{"_index":307,"title":{},"body":{"index.html":{}}}],["shall",{"_index":502,"title":{},"body":{"license.html":{}}}],["shortcut",{"_index":209,"title":{},"body":{"index.html":{}}}],["show",{"_index":154,"title":{},"body":{"index.html":{}}}],["showicon",{"_index":325,"title":{},"body":{"index.html":{}}}],["shown",{"_index":174,"title":{},"body":{"index.html":{}}}],["side",{"_index":165,"title":{},"body":{"index.html":{}}}],["simpl",{"_index":37,"title":{},"body":{"index.html":{},"classes/FormatterParser.html":{}}}],["size",{"_index":77,"title":{},"body":{"index.html":{}}}],["size.saveondirtyrowchang",{"_index":193,"title":{},"body":{"index.html":{}}}],["softwar",{"_index":487,"title":{},"body":{"license.html":{}}}],["sort",{"_index":65,"title":{},"body":{"index.html":{},"changelog.html":{}}}],["sorted.glob",{"_index":291,"title":{},"body":{"index.html":{}}}],["sortev",{"_index":288,"title":{},"body":{"index.html":{}}}],["sortinfo",{"_index":287,"title":{"classes/SortInfo.html":{}},"body":{"index.html":{},"classes/SortInfo.html":{}}}],["sorting.3.1.1",{"_index":419,"title":{},"body":{"changelog.html":{}}}],["sourc",{"_index":90,"title":{},"body":{"index.html":{},"modules/GridModule.html":{},"injectables/GridMessageService.html":{},"pipes/IsFixedPipe.html":{},"pipes/IsGroupPipe.html":{},"pipes/IsRowVisiblePipe.html":{},"pipes/IsVisiblePipe.html":{},"classes/Cell.html":{},"classes/EmptyFactory.html":{},"classes/FormatterParser.html":{},"classes/HtmlUtil.html":{},"classes/InjectableFactory.html":{},"classes/RowChange.html":{},"classes/SortInfo.html":{},"interfaces/ClickListener.html":{},"interfaces/DblClickListener.html":{},"interfaces/Dictionary.html":{},"interfaces/EmptyConstructor.html":{},"interfaces/EventListenerArg.html":{},"interfaces/InjectableConstructor.html":{},"interfaces/MouseDownListener.html":{},"interfaces/MouseDragListener.html":{},"interfaces/MouseOutListener.html":{},"interfaces/MouseOverListener.html":{},"interfaces/MouseUpListener.html":{}}}],["specif",{"_index":95,"title":{},"body":{"index.html":{}}}],["specifi",{"_index":181,"title":{},"body":{"index.html":{}}}],["speed",{"_index":302,"title":{},"body":{"index.html":{}}}],["spinner",{"_index":445,"title":{},"body":{"changelog.html":{}}}],["spinner.eventlisten",{"_index":204,"title":{},"body":{"index.html":{}}}],["spreadsheet",{"_index":159,"title":{},"body":{"index.html":{}}}],["src/grid/cell/cell.t",{"_index":620,"title":{},"body":{"classes/Cell.html":{}}}],["src/grid/cell/cell.ts:5",{"_index":630,"title":{},"body":{"classes/Cell.html":{}}}],["src/grid/cell/cell.ts:6",{"_index":629,"title":{},"body":{"classes/Cell.html":{}}}],["src/grid/cell/cell.ts:7",{"_index":627,"title":{},"body":{"classes/Cell.html":{}}}],["src/grid/column/formatters/formatt",{"_index":645,"title":{},"body":{"classes/FormatterParser.html":{}}}],["src/grid/event/click.interface.t",{"_index":722,"title":{},"body":{"interfaces/ClickListener.html":{}}}],["src/grid/event/click.interface.ts:3",{"_index":725,"title":{},"body":{"interfaces/ClickListener.html":{}}}],["src/grid/event/dbl",{"_index":727,"title":{},"body":{"interfaces/DblClickListener.html":{}}}],["src/grid/event/ev",{"_index":736,"title":{},"body":{"interfaces/EventListenerArg.html":{}}}],["src/grid/event/mous",{"_index":741,"title":{},"body":{"interfaces/MouseDownListener.html":{},"interfaces/MouseDragListener.html":{},"interfaces/MouseOutListener.html":{},"interfaces/MouseOverListener.html":{},"interfaces/MouseUpListener.html":{}}}],["src/grid/grid.component.t",{"_index":774,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/grid/grid.module.t",{"_index":529,"title":{},"body":{"modules/GridModule.html":{}}}],["src/grid/model/dictionary.interface.t",{"_index":733,"title":{},"body":{"interfaces/Dictionary.html":{}}}],["src/grid/model/dictionary.interface.ts:2",{"_index":735,"title":{},"body":{"interfaces/Dictionary.html":{}}}],["src/grid/model/dictionary.interface.ts:3",{"_index":734,"title":{},"body":{"interfaces/Dictionary.html":{}}}],["src/grid/services/grid",{"_index":573,"title":{},"body":{"injectables/GridMessageService.html":{},"miscellaneous/variables.html":{}}}],["src/grid/utils/empty.factory.t",{"_index":633,"title":{},"body":{"classes/EmptyFactory.html":{},"interfaces/EmptyConstructor.html":{}}}],["src/grid/utils/empty.factory.ts:4",{"_index":639,"title":{},"body":{"classes/EmptyFactory.html":{}}}],["src/grid/utils/empty.factory.ts:7",{"_index":640,"title":{},"body":{"classes/EmptyFactory.html":{}}}],["src/grid/utils/html",{"_index":661,"title":{},"body":{"classes/HtmlUtil.html":{}}}],["src/grid/utils/i",{"_index":599,"title":{},"body":{"pipes/IsFixedPipe.html":{},"pipes/IsGroupPipe.html":{},"pipes/IsRowVisiblePipe.html":{},"pipes/IsVisiblePipe.html":{}}}],["src/grid/utils/injectable.factory.t",{"_index":684,"title":{},"body":{"classes/InjectableFactory.html":{},"interfaces/InjectableConstructor.html":{}}}],["src/grid/utils/injectable.factory.ts:10",{"_index":691,"title":{},"body":{"classes/InjectableFactory.html":{}}}],["src/grid/utils/injectable.factory.ts:7",{"_index":689,"title":{},"body":{"classes/InjectableFactory.html":{}}}],["src/grid/utils/row",{"_index":695,"title":{},"body":{"classes/RowChange.html":{}}}],["src/grid/utils/sort",{"_index":704,"title":{},"body":{"classes/SortInfo.html":{}}}],["start",{"_index":13,"title":{"index.html":{},"changelog.html":{},"license.html":{}},"body":{}}],["state",{"_index":171,"title":{},"body":{"index.html":{}}}],["static",{"_index":568,"title":{},"body":{"modules/GridModule.html":{},"classes/HtmlUtil.html":{}}}],["statu",{"_index":284,"title":{},"body":{"index.html":{}}}],["stop",{"_index":420,"title":{},"body":{"changelog.html":{}}}],["storag",{"_index":438,"title":{},"body":{"changelog.html":{}}}],["string",{"_index":71,"title":{},"body":{"index.html":{},"injectables/GridMessageService.html":{},"classes/HtmlUtil.html":{},"classes/SortInfo.html":{},"interfaces/Dictionary.html":{}}}],["style",{"_index":221,"title":{},"body":{"index.html":{}}}],["subject",{"_index":499,"title":{},"body":{"license.html":{},"injectables/GridMessageService.html":{}}}],["sublicens",{"_index":494,"title":{},"body":{"license.html":{}}}],["substanti",{"_index":503,"title":{},"body":{"license.html":{}}}],["success",{"_index":233,"title":{},"body":{"index.html":{}}}],["such",{"_index":664,"title":{},"body":{"classes/HtmlUtil.html":{}}}],["support",{"_index":35,"title":{},"body":{"index.html":{},"changelog.html":{},"modules.html":{}}}],["svg",{"_index":526,"title":{},"body":{"modules.html":{}}}],["syntax",{"_index":106,"title":{},"body":{"index.html":{},"changelog.html":{}}}],["t",{"_index":641,"title":{},"body":{"classes/EmptyFactory.html":{},"classes/InjectableFactory.html":{},"interfaces/EmptyConstructor.html":{},"interfaces/InjectableConstructor.html":{}}}],["tab",{"_index":771,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tabl",{"_index":33,"title":{},"body":{"index.html":{}}}],["take",{"_index":277,"title":{},"body":{"index.html":{}}}],["taken",{"_index":97,"title":{},"body":{"index.html":{}}}],["templat",{"_index":201,"title":{},"body":{"index.html":{}}}],["templateref",{"_index":200,"title":{},"body":{"index.html":{}}}],["texteditrender",{"_index":387,"title":{},"body":{"overview.html":{},"modules/GridModule.html":{}}}],["textfilterrender",{"_index":333,"title":{},"body":{"index.html":{},"overview.html":{},"modules/GridModule.html":{}}}],["them.pages",{"_index":182,"title":{},"body":{"index.html":{}}}],["theme",{"_index":161,"title":{},"body":{"index.html":{}}}],["thing",{"_index":303,"title":{},"body":{"index.html":{},"classes/HtmlUtil.html":{}}}],["this._message.asobserv",{"_index":591,"title":{},"body":{"injectables/GridMessageService.html":{}}}],["this._message.next(\"error",{"_index":596,"title":{},"body":{"injectables/GridMessageService.html":{}}}],["this._message.next(\"warn",{"_index":597,"title":{},"body":{"injectables/GridMessageService.html":{}}}],["this._messageobserv",{"_index":598,"title":{},"body":{"injectables/GridMessageService.html":{}}}],["this.asc",{"_index":719,"title":{},"body":{"classes/SortInfo.html":{}}}],["this.config",{"_index":659,"title":{},"body":{"classes/FormatterParser.html":{}}}],["this.datarequest",{"_index":115,"title":{},"body":{"index.html":{}}}],["this.emptyconstructor",{"_index":643,"title":{},"body":{"classes/EmptyFactory.html":{},"interfaces/EmptyConstructor.html":{}}}],["this.field",{"_index":720,"title":{},"body":{"classes/SortInfo.html":{}}}],["this.ic(this.injector",{"_index":692,"title":{},"body":{"classes/InjectableFactory.html":{},"interfaces/InjectableConstructor.html":{}}}],["this.newrownum",{"_index":703,"title":{},"body":{"classes/RowChange.html":{}}}],["this.oldrownum",{"_index":702,"title":{},"body":{"classes/RowChange.html":{}}}],["those",{"_index":172,"title":{},"body":{"index.html":{}}}],["through",{"_index":40,"title":{},"body":{"index.html":{}}}],["time",{"_index":357,"title":{},"body":{"index.html":{}}}],["titl",{"_index":155,"title":{},"body":{"index.html":{}}}],["to.configur",{"_index":142,"title":{},"body":{"index.html":{}}}],["toast",{"_index":265,"title":{},"body":{"index.html":{}}}],["todo",{"_index":352,"title":{},"body":{"index.html":{}}}],["togeth",{"_index":167,"title":{},"body":{"index.html":{}}}],["tort",{"_index":522,"title":{},"body":{"license.html":{}}}],["transform",{"_index":603,"title":{},"body":{"pipes/IsFixedPipe.html":{},"pipes/IsGroupPipe.html":{},"pipes/IsRowVisiblePipe.html":{},"pipes/IsVisiblePipe.html":{}}}],["transform(list",{"_index":604,"title":{},"body":{"pipes/IsFixedPipe.html":{},"pipes/IsGroupPipe.html":{},"pipes/IsRowVisiblePipe.html":{},"pipes/IsVisiblePipe.html":{}}}],["transpil",{"_index":365,"title":{},"body":{"index.html":{}}}],["true",{"_index":170,"title":{},"body":{"index.html":{},"modules/GridModule.html":{},"classes/SortInfo.html":{}}}],["two",{"_index":125,"title":{},"body":{"index.html":{}}}],["type",{"_index":121,"title":{},"body":{"index.html":{},"injectables/GridMessageService.html":{},"pipes/IsFixedPipe.html":{},"classes/Cell.html":{},"classes/EmptyFactory.html":{},"classes/FormatterParser.html":{},"classes/HtmlUtil.html":{},"classes/InjectableFactory.html":{},"classes/RowChange.html":{},"classes/SortInfo.html":{},"interfaces/ClickListener.html":{},"interfaces/DblClickListener.html":{},"interfaces/Dictionary.html":{},"interfaces/EventListenerArg.html":{},"interfaces/InjectableConstructor.html":{},"interfaces/MouseDownListener.html":{},"interfaces/MouseDragListener.html":{},"interfaces/MouseOutListener.html":{},"interfaces/MouseOverListener.html":{},"interfaces/MouseUpListener.html":{},"miscellaneous/variables.html":{}}}],["undefin",{"_index":123,"title":{},"body":{"index.html":{},"changelog.html":{},"pipes/IsFixedPipe.html":{},"pipes/IsGroupPipe.html":{},"pipes/IsRowVisiblePipe.html":{},"pipes/IsVisiblePipe.html":{}}}],["univers",{"_index":478,"title":{},"body":{"license.html":{},"modules/GridModule.html":{}}}],["up",{"_index":304,"title":{},"body":{"index.html":{}}}],["up.interface.t",{"_index":762,"title":{},"body":{"interfaces/MouseUpListener.html":{}}}],["up.interface.ts:3",{"_index":765,"title":{},"body":{"interfaces/MouseUpListener.html":{}}}],["upon",{"_index":232,"title":{},"body":{"index.html":{}}}],["us",{"_index":58,"title":{},"body":{"index.html":{},"license.html":{}}}],["usag",{"_index":98,"title":{},"body":{"index.html":{}}}],["user",{"_index":146,"title":{},"body":{"index.html":{},"changelog.html":{}}}],["usevalu",{"_index":571,"title":{},"body":{"modules/GridModule.html":{}}}],["usual",{"_index":62,"title":{},"body":{"index.html":{}}}],["utah",{"_index":479,"title":{},"body":{"license.html":{},"modules/GridModule.html":{}}}],["util.t",{"_index":662,"title":{},"body":{"classes/HtmlUtil.html":{}}}],["util.ts:23",{"_index":675,"title":{},"body":{"classes/HtmlUtil.html":{}}}],["util.ts:38",{"_index":677,"title":{},"body":{"classes/HtmlUtil.html":{}}}],["util.ts:8",{"_index":671,"title":{},"body":{"classes/HtmlUtil.html":{}}}],["utils/i",{"_index":546,"title":{},"body":{"modules/GridModule.html":{}}}],["valid",{"_index":461,"title":{},"body":{"changelog.html":{}}}],["valu",{"_index":249,"title":{},"body":{"index.html":{},"changelog.html":{},"injectables/GridMessageService.html":{},"classes/Cell.html":{},"classes/FormatterParser.html":{},"classes/SortInfo.html":{},"interfaces/Dictionary.html":{},"miscellaneous/variables.html":{}}}],["values.busytempl",{"_index":199,"title":{},"body":{"index.html":{}}}],["variabl",{"_index":767,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["variou",{"_index":76,"title":{},"body":{"index.html":{}}}],["vertic",{"_index":300,"title":{},"body":{"index.html":{}}}],["view",{"_index":326,"title":{},"body":{"index.html":{},"changelog.html":{}}}],["viewconfig",{"_index":320,"title":{},"body":{"index.html":{}}}],["viewrender",{"_index":318,"title":{},"body":{"index.html":{}}}],["visibl",{"_index":152,"title":{},"body":{"index.html":{}}}],["visible.pip",{"_index":547,"title":{},"body":{"modules/GridModule.html":{}}}],["visible.pipe.t",{"_index":614,"title":{},"body":{"pipes/IsRowVisiblePipe.html":{},"pipes/IsVisiblePipe.html":{}}}],["visible.pipe.ts:9",{"_index":616,"title":{},"body":{"pipes/IsRowVisiblePipe.html":{},"pipes/IsVisiblePipe.html":{}}}],["visual",{"_index":406,"title":{},"body":{"changelog.html":{}}}],["void",{"_index":231,"title":{},"body":{"index.html":{},"injectables/GridMessageService.html":{},"classes/FormatterParser.html":{},"classes/SortInfo.html":{}}}],["wait",{"_index":432,"title":{},"body":{"changelog.html":{}}}],["want",{"_index":213,"title":{},"body":{"index.html":{}}}],["warn",{"_index":214,"title":{},"body":{"index.html":{},"injectables/GridMessageService.html":{}}}],["warn(messag",{"_index":586,"title":{},"body":{"injectables/GridMessageService.html":{}}}],["warranti",{"_index":505,"title":{},"body":{"license.html":{}}}],["way",{"_index":126,"title":{},"body":{"index.html":{}}}],["whether",{"_index":520,"title":{},"body":{"license.html":{}}}],["width",{"_index":450,"title":{},"body":{"changelog.html":{}}}],["wish",{"_index":264,"title":{},"body":{"index.html":{}}}],["withcomponents(compon",{"_index":572,"title":{},"body":{"modules/GridModule.html":{}}}],["without",{"_index":490,"title":{},"body":{"license.html":{},"classes/FormatterParser.html":{}}}],["work",{"_index":94,"title":{},"body":{"index.html":{}}}],["ye",{"_index":673,"title":{},"body":{"classes/HtmlUtil.html":{}}}],["you.logwarn",{"_index":212,"title":{},"body":{"index.html":{}}}],["zoom",{"_index":394,"title":{},"body":{"overview.html":{},"modules/GridModule.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n    Dependencies\n\n\n    \n        @ng-bootstrap/ng-bootstrap : 1.1.x\n    \n        bootstrap : >=4.3.1 \n    \n        moment : >=2.19.3\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nHuntsman Cancer Institute's Angular Grid Library\nhci-ng-grid Demo on Github\nIntro\nThis grid is designed to be a full featured grid that can handle nearly anything that complex data tables may\nbe expected to support.  By default, the grid is simple and basic, but becomes full featured through\nconfiguration.Install\n\"dependencies\": {\n    \"hci-ng-grid\": \"4.0.x\"\n}import {GridModule} from \"hci-ng-grid\";@NgModule({\n    imports: [\n        GridModule.forRoot()\n    ]\n})Publishing\nCompiled code gets moved to the dist folder with a copy of the package.json.  Custom commands are required for\npackaging and publishing.  Use npmPack and npmPublish instead of the usual pack and publish.Basic Features\n\nSorting: Change sorting by clicking on column header.\nFiltering: String, select, range filtering with the possibility for custom filters.\nPaging: Paging with various page sizes, first, last, previous and next.\nRow Grouping: Rows can be grouped by one or more columns.\nExternal Data Call: Callback to retrieve data from external source.\nCustom Events: Listeners can be added to work for specific events and custom actions can be taken.\n\nUsage\nNote, there are so many features to this grid that not all are currently listed here.  See the demo for full examples.\nThe basic syntax for data provided by the implementing component.\n\nThe basic syntax for an external data call.\n\nAnd a function using mocked external data call.\ndataRequest: (externalInfo: ExternalInfo) => {};\n\nngOnInit() {\n  this.dataRequest = (externalInfo: ExternalInfo) => {\n    return Observable.of(new ExternalData(this.dataGeneratorService.getData(250), externalInfo)).delay(500);\n  };\n}Inputs\ndata\ntype: Object[]\ndefault: undefined\nProvide the grid with an array of rows as objects.  Two way binding to this data.dataCall\ntype: Function\ndefault: undefined\nA function that is called to retrieve data.  The function is passed filtering, sorting and paging info.id\ntype: string\ndefault: undefined\nThe html id for the grid and the id that can be used to get the grid from the global grid service.config\ntype: any\ndefault: {}\nA json object that contains configuration options for the grid.linkedGroups\ntype: string[]\ndefault: undefined\nThe group names that this grid should be linked to.configurable\ntype: boolean\ndefault: false\nFlag if the user should be allowed to modify the grid's configuration (e.g. what colums are visible and how big).title\ntype: string\ndefault: undefined\nShows this title in a title bar above the grid.theme\ntype: string\ndefault: \"spreadsheet\"\noptions: \"spreadsheet\", \"report\", or your own\nThe name of the theme to use.  columns\ntype: Column[]\ndefault: undefined\nAn array of column configuration objects.fixedColumns\ntype: string[]\ndefault: undefined\nA list of column names that should be fixed to the left side of the grid.groupBy\ntype: string[]\ndefault: undefined\nA list of column names that should be used to group rows together.* Currently disabled *\ngroupByCollapsed\ntype: boolean\ndefault: true\nThe state for grouped rows if those rows in a group should be hidden or shown by default.externalFiltering\ntype: boolean\ndefault: false\nTrue if filtering should be handled by the external data call.externalSorting\ntype: boolean\ndefault: false\nTrue if sorting should be handled by the external data call.externalPaging\ntype: boolean\ndefault: false\nTrue if paging should be handled by the external data call.pageSize\ntype: number\ndefault: undefined\nThe number of rows per page.  If not specified it will show all of them.pageSizes\ntype: number[]\ndefault: [10, 25, 50]\nAn array of possible page sizes that the user can choose from.nVisibleRows\ntype: number\ndefault: -1\nThe number of visible rows.  A page might have 100 rows, but you can limit the size of the grid to 10 rows which would be scrolling for the user.  The default is -1 which is the same as the page size.saveOnDirtyRowChange\ntype: boolean\ndefault: false\nIf true, will emit a (onRowSave) event if you navigate to a new row and the previous row has dirty values.busyTemplate\ntype: TemplateRef\ndefault: undefined\nA custom template shown when data is loaded.  If you don't like the default spinner.eventListeners\ntype: EventListenerArg[]\ndefault: []\nAn array of listeners that can perform actions on any sort of click or key events.mode\ntype: string\ndefault: undefined\nA shortcut for creating listeners.  Rather than passing in your own listeners, specify a mode and the required listeners will be created for you.logWarnings\ntype: boolean\ndefault: true\nTrue if you want warnings to show in the console.display\ntype: string\ndefault: flow-root\nSets the display on the root component.  Although you could also do this with style on the grid.addNewRowButtonLocation\ntype: string\ndefault: undefined\nCan be \"title-bar\" or \"footer\" depending where you want the add new row button to appear.newRowPostCall\ntype: (data: newRow) => Observable\ndefault: undefined\nImplement your own call to handle creating a new row.  For example, persisting it so the new gets an id created in the database.newRowPostCallSuccess\ntype: (newRow: any) => void\ndefault: undefined\nCustom command upon successful newRowPostCall().newRowPostCallError\ntype: (error: any) => void\ndefault: undefined\nCustom error command upon error from newRowPostCall().newRowPostCallFinally\ntype: () => void\ndefault: undefined\nCustom finally command when newRowPostCall() success or error completes.Outputs\nonCellSave\ntype: any\n$event: { key: rows[i].key,\n          i: i,\n          j: j,\n          field: columns[j].field,\n          oldValue: oldValue,\n          newValue: newValue }\nThe row key, location, field, old and new value of the cell.onRowSave\ntype: any\n$event: { key: rows[i].key,\n          rowNum: i,\n          row: originalRowData }\nEmits the key, row number and the data for the row in the format originally passed in.onConfigChange\ntype: any\n$event: config\nEmits the current configuration for the grid.cellClick\ntype: any\n$event: any\nDetermined by the event listener which can emit any type of data.cellDblClick\ntype: any\n$event: any\nDetermined by the event listener which can emit any type of data.rowClick\ntype: any\n$event: any\nDetermined by the event listener which can emit any type of data.rowDblClick\ntype: any\n$event: any\nDetermined by the event listener which can emit any type of data.warning\ntype: string\n$event: warning message as a string\nListen to this to handle warnings from the grid as you wish (e.g. as a toast popup).selectedRows\ntype: any[]\n$event: [key1, key2, ...]\nThis is an array of any instead of number because the row key could be anything.filterEvent\ntype: FilterInfo[]\n$event: FilterInfo[]\nThis is the array of filters used when a column's filters are applied.  In the case of a select where there are multiple\nFilterInfos, this includes the full list and not the one that changed.  This event is fired upon click.  It will take\nsome delay for data to come back at which point the filterEvent would be fired.dataFiltered\ntype: any\n$event: {type, status, nData}\nThis is emitted when a filter event returns data.  It will provide the number of rows returning.sortEvent\ntype: SortInfo\n$event: SortInfo\nThis is the sortInfo emitted when a column header is clicked.  It will take\nsome delay for data to come back at which point the sortEvent would be fired.dataSorted\ntype: any\n$event: {type, status, field}\nThis is emitted when a sort event returns data.  It will provide the field being sorted.Global Config\nThe root module can take configuration json that can be used to set defaults for every grid.\nFor example, if you want every grid in your application to use the same theme and you don't want\nto specify that theme in every instance of the grid, you can do the following:\nGridModule.forRoot({\n  theme: \"report\"\n})Advanced Features\nRendering Cells\nEvery refresh of data and every vertical scroll will re-render the visible rows and cells.  To speed things\nup, each cell is limited to rendering pure HTML.  However, there are several options of how to render and\nthe option of custom rendering.\nEvery cell is rendering with a class that implements the CellViewRenderer interface.  The two methods\nrequired to implement are\nsetConfig(config: any);\n\ncreateElement(renderer: Renderer2, column: Column, value: any, i: number, j: number): HTMLElement;As an example, the following is an example of a number range renderer.\n{\n    field: \"nLabs\",\n    name: \"# Labs\",\n    viewRenderer: CellNumberRangeView,\n    viewConfig: { low: 15, high: 85, showIcon: true }\n}The class is passed in as the viewRenderer and any config is passed in through the viewConfig.\nFiltering\nLike view rendering, built in and custom components can be used to render the filter.  The difference\nis rather than pure HTML, a filter is a component that extends a base class FilterRenderer.  The\nfollowing are examples of built in filters.\n{\n    field: \"firstName\",\n    name: \"First Name\",\n    filterRenderer: TextFilterRenderer\n},\n{\n    field: \"dob\",\n    name: \"Date of Birth\",\n    dataType: \"date\",\n    format: \"MM/DD/YYYY\",\n    editRenderer: DateEditRenderer,\n    filterRenderer: CompareFilterRenderer\n},\n{\n    field: \"gender\",\n    name: \"Gender\",\n    editRenderer: ChoiceEditRenderer,\n    choices: [ {value: \"Female\", display: \"Female\"}, {value: \"Male\", display: \"Male\"} ],\n    filterRenderer: SelectFilterRenderer\n}Known Issues\n\nRow Groups works upon load, but breaks when filtering is introduced.\n\nTODOs\n\nThere are only left fixed colums, but some have requested right fixed columns.\n\nBuilding and Demo\nTo run the demo for the first time, run the following commands:\nnpm install\nnpm run install-demo\nnpm run run-demoIf package.json doesn't change, after making a change to the grid run:\nnpm run build\nnpm run run-demoThe grid build automatically copies the transpiled files to the demo/node_modules/hci-ng-grid which mimics pulling\nthe dependency from npm.\nTo mimic a production build and be able to run the demo anywhere, use \"npm run run-demo-prod\".\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n            \n                \n                    \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_GridModule\n\n\n\ncluster_GridModule_declarations\n\n\n\ncluster_GridModule_GridComponent_providers\n\n\n\ncluster_GridModule_exports\n\n\n\n\nGridComponent\n\nGridComponent\n\n\n\nGridModule\n\nGridModule\n\nGridModule -->\n\nGridComponent->GridModule\n\n\n\n\n\nColumnHeaderComponent\n\nColumnHeaderComponent\n\nGridModule -->\n\nColumnHeaderComponent->GridModule\n\n\n\n\n\nIsVisiblePipe\n\nIsVisiblePipe\n\nGridModule -->\n\nIsVisiblePipe->GridModule\n\n\n\n\n\nIsGroupPipe\n\nIsGroupPipe\n\nGridModule -->\n\nIsGroupPipe->GridModule\n\n\n\n\n\nIsFixedPipe\n\nIsFixedPipe\n\nGridModule -->\n\nIsFixedPipe->GridModule\n\n\n\n\n\nIsRowVisiblePipe\n\nIsRowVisiblePipe\n\nGridModule -->\n\nIsRowVisiblePipe->GridModule\n\n\n\n\n\nTextEditRenderer\n\nTextEditRenderer\n\nGridModule -->\n\nTextEditRenderer->GridModule\n\n\n\n\n\nDateEditRenderer\n\nDateEditRenderer\n\nGridModule -->\n\nDateEditRenderer->GridModule\n\n\n\n\n\nChoiceEditRenderer\n\nChoiceEditRenderer\n\nGridModule -->\n\nChoiceEditRenderer->GridModule\n\n\n\n\n\nTextFilterRenderer\n\nTextFilterRenderer\n\nGridModule -->\n\nTextFilterRenderer->GridModule\n\n\n\n\n\nSelectFilterRenderer\n\nSelectFilterRenderer\n\nGridModule -->\n\nSelectFilterRenderer->GridModule\n\n\n\n\n\nCompareFilterRenderer\n\nCompareFilterRenderer\n\nGridModule -->\n\nCompareFilterRenderer->GridModule\n\n\n\n\n\nBigTextPopup\n\nBigTextPopup\n\nGridModule -->\n\nBigTextPopup->GridModule\n\n\n\n\n\nConfigMenuComponent\n\nConfigMenuComponent\n\nGridModule -->\n\nConfigMenuComponent->GridModule\n\n\n\n\n\nConfigMultiChoiceComponent\n\nConfigMultiChoiceComponent\n\nGridModule -->\n\nConfigMultiChoiceComponent->GridModule\n\n\n\n\n\nGridComponent \n\nGridComponent \n\nGridComponent  -->\n\nGridModule->GridComponent \n\n\n\n\n\nGridService\n\nGridService\n\nGridComponent -->\n\nGridService->GridComponent\n\n\n\n\n\nGridEventService\n\nGridEventService\n\nGridComponent -->\n\nGridEventService->GridComponent\n\n\n\n\n\nGridMessageService\n\nGridMessageService\n\nGridComponent -->\n\nGridMessageService->GridComponent\n\n\n\n\n\n\n                \n                \n                \n                    Zoom in\n                    Reset\n                    Zoom out\n                \n            \n\n    \n            \n                \n                    \n                        \n                        \n                            1 module\n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                        11 components\n                    \n                \n            \n            \n                \n                    \n                        \n                        4 injectables\n                    \n                \n            \n            \n                \n                    \n                        \n                        4 pipes\n                    \n                \n            \n            \n                \n                    \n                        \n                        34 classes\n                    \n                \n            \n            \n                \n                    \n                        \n                        12 interfaces\n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"changelog.html":{"url":"changelog.html","title":"getting-started - changelog","body":"\n                   \n\nChange Log\n4.0.0\n- Add new rows of data.\n- Visualize invalid fields.\n- Some rearrange of grid/service organization.3.1.6\n- Fix choice filter undefined check.3.1.5\n- Fix reverse right coloring when left columns are odd.3.1.4\n- Fix filter value column name.3.1.3\n- Fix date filtering and date-ms compare.3.1.2\n- Fix dealing with undefined in default sorting.3.1.1\n- Stop propagation on filter button.3.1.0\n- Filter to customizable function.\n- Sort to customizable function.\n- Emitters for filter and sort events.\n- Column drag n drop.\n- Fix: Empty choice array on http error.3.0.0\n- Generalize column wait configuration.  Changes public api.\n- Fixes to popup behavior.\n- Column allows externalConfig storage.\n- Default format/parser more generic.2.1.1\n- Fix syntax in README.2.1.0\n- Removed allowing auto column generation when no columns configured.\n- Added wait listeners to pause configuration while waiting on any requests.\n- Add spinner for loading and prevent data display if no columns.\n- Bump height if view has scrollbar.\n- Fix column width calculation.2.0.2\n- Fix keywords and add .npmignore.2.0.1\n- Fix readme and license in artifact.2.0.0\n- Refactor of rendering and how data/config/events are listened to.\n- Listeners for saving cells and rows.\n- Customization of busy, and view renderers.\n- Validation support and improved formatting/parsing especially for dates.\n- User configuration added.\n- Global grid service for referencing and connecting grids.\n- Row selection improved.\n- External data calls from Promise to Observable.\n- Numerous fixes.1.0.0\n- Initial Release.  See README.md for features.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nCopyright (c) 2018 Huntsman Cancer Institute at the University of Utah\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        GridModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/GridModule.html":{"url":"modules/GridModule.html","title":"module - GridModule","body":"\n                   \n\n\n\n\n  Modules\n  GridModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_GridModule\n\n\n\ncluster_GridModule_declarations\n\n\n\ncluster_GridModule_GridComponent_providers\n\n\n\ncluster_GridModule_exports\n\n\n\n\nGridComponent\n\nGridComponent\n\n\n\nGridModule\n\nGridModule\n\nGridModule -->\n\nGridComponent->GridModule\n\n\n\n\n\nColumnHeaderComponent\n\nColumnHeaderComponent\n\nGridModule -->\n\nColumnHeaderComponent->GridModule\n\n\n\n\n\nIsVisiblePipe\n\nIsVisiblePipe\n\nGridModule -->\n\nIsVisiblePipe->GridModule\n\n\n\n\n\nIsGroupPipe\n\nIsGroupPipe\n\nGridModule -->\n\nIsGroupPipe->GridModule\n\n\n\n\n\nIsFixedPipe\n\nIsFixedPipe\n\nGridModule -->\n\nIsFixedPipe->GridModule\n\n\n\n\n\nIsRowVisiblePipe\n\nIsRowVisiblePipe\n\nGridModule -->\n\nIsRowVisiblePipe->GridModule\n\n\n\n\n\nTextEditRenderer\n\nTextEditRenderer\n\nGridModule -->\n\nTextEditRenderer->GridModule\n\n\n\n\n\nDateEditRenderer\n\nDateEditRenderer\n\nGridModule -->\n\nDateEditRenderer->GridModule\n\n\n\n\n\nChoiceEditRenderer\n\nChoiceEditRenderer\n\nGridModule -->\n\nChoiceEditRenderer->GridModule\n\n\n\n\n\nTextFilterRenderer\n\nTextFilterRenderer\n\nGridModule -->\n\nTextFilterRenderer->GridModule\n\n\n\n\n\nSelectFilterRenderer\n\nSelectFilterRenderer\n\nGridModule -->\n\nSelectFilterRenderer->GridModule\n\n\n\n\n\nCompareFilterRenderer\n\nCompareFilterRenderer\n\nGridModule -->\n\nCompareFilterRenderer->GridModule\n\n\n\n\n\nBigTextPopup\n\nBigTextPopup\n\nGridModule -->\n\nBigTextPopup->GridModule\n\n\n\n\n\nConfigMenuComponent\n\nConfigMenuComponent\n\nGridModule -->\n\nConfigMenuComponent->GridModule\n\n\n\n\n\nConfigMultiChoiceComponent\n\nConfigMultiChoiceComponent\n\nGridModule -->\n\nConfigMultiChoiceComponent->GridModule\n\n\n\n\n\nGridComponent \n\nGridComponent \n\nGridComponent  -->\n\nGridModule->GridComponent \n\n\n\n\n\nGridService\n\nGridService\n\nGridComponent -->\n\nGridService->GridComponent\n\n\n\n\n\nGridEventService\n\nGridEventService\n\nGridComponent -->\n\nGridEventService->GridComponent\n\n\n\n\n\nGridMessageService\n\nGridMessageService\n\nGridComponent -->\n\nGridMessageService->GridComponent\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/grid/grid.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                GridComponent\n                            \n                            \n                                ColumnHeaderComponent\n                            \n                            \n                                IsVisiblePipe\n                            \n                            \n                                IsGroupPipe\n                            \n                            \n                                IsFixedPipe\n                            \n                            \n                                IsRowVisiblePipe\n                            \n                            \n                                TextEditRenderer\n                            \n                            \n                                DateEditRenderer\n                            \n                            \n                                ChoiceEditRenderer\n                            \n                            \n                                TextFilterRenderer\n                            \n                            \n                                SelectFilterRenderer\n                            \n                            \n                                CompareFilterRenderer\n                            \n                            \n                                BigTextPopup\n                            \n                            \n                                ConfigMenuComponent\n                            \n                            \n                                ConfigMultiChoiceComponent\n                            \n                    \n                \n                \n                    EntryComponents\n                    \n                            \n                                TextEditRenderer\n                            \n                            \n                                DateEditRenderer\n                            \n                            \n                                ChoiceEditRenderer\n                            \n                            \n                                TextFilterRenderer\n                            \n                            \n                                SelectFilterRenderer\n                            \n                            \n                                CompareFilterRenderer\n                            \n                            \n                                BigTextPopup\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    GridComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        /*\n * Copyright (c) 2016 Huntsman Cancer Institute at the University of Utah, Confidential and Proprietary\n */\nimport {ANALYZE_FOR_ENTRY_COMPONENTS, ModuleWithProviders, NgModule} from \"@angular/core\";\nimport {CommonModule} from \"@angular/common\";\nimport {FormsModule} from \"@angular/forms\";\n\nimport {NgbModule} from \"@ng-bootstrap/ng-bootstrap\";\n\nimport {GridComponent} from \"./grid.component\";\nimport {ColumnHeaderComponent} from \"./column/column-header.component\";\nimport {IsVisiblePipe} from \"./utils/is-visible.pipe\";\nimport {IsGroupPipe} from \"./utils/is-group.pipe\";\nimport {IsFixedPipe} from \"./utils/is-fixed.pipe\";\nimport {IsRowVisiblePipe} from \"./utils/is-row-visible.pipe\";\nimport {TextEditRenderer} from \"./cell/editRenderers/text-edit-renderer.component\";\nimport {TextFilterRenderer} from \"./column/filterRenderers/text-filter-renderer.component\";\nimport {CompareFilterRenderer} from \"./column/filterRenderers/compare-filter-renderer.component\";\nimport {ChoiceEditRenderer} from \"./cell/editRenderers/choice-edit-renderer.component\";\nimport {DateEditRenderer} from \"./cell/editRenderers/date-edit-renderer.component\";\nimport {SelectFilterRenderer} from \"./column/filterRenderers/select-filter-renderer.component\";\nimport {BigTextPopup} from \"./cell/viewPopupRenderer/bigtext-popup.component\";\nimport {ConfigMenuComponent} from \"./config/config-menu.component\";\nimport {GridGlobalService} from \"./services/grid-global.service\";\nimport {ConfigMultiChoiceComponent} from \"./config/config-multi-choice.component\";\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    NgbModule.forRoot()\n  ],\n  declarations: [\n    GridComponent,\n    ColumnHeaderComponent,\n    IsVisiblePipe,\n    IsGroupPipe,\n    IsFixedPipe,\n    IsRowVisiblePipe,\n    TextEditRenderer,\n    DateEditRenderer,\n    ChoiceEditRenderer,\n    TextFilterRenderer,\n    SelectFilterRenderer,\n    CompareFilterRenderer,\n    BigTextPopup,\n    ConfigMenuComponent,\n    ConfigMultiChoiceComponent\n  ],\n  entryComponents: [\n    TextEditRenderer,\n    DateEditRenderer,\n    ChoiceEditRenderer,\n    TextFilterRenderer,\n    SelectFilterRenderer,\n    CompareFilterRenderer,\n    BigTextPopup\n  ],\n  exports: [\n    GridComponent\n  ]\n})\nexport class GridModule {\n\n  static forRoot(globalConfig?: any, components?: any[]): ModuleWithProviders {\n    return {\n      providers: [\n        GridGlobalService,\n        {provide: \"globalConfig\", useValue: (globalConfig) ? globalConfig : {}},\n        {\n          provide: ANALYZE_FOR_ENTRY_COMPONENTS,\n          useValue: components,\n          multi: true\n        }\n      ],\n      ngModule: GridModule\n    };\n  }\n\n  static withComponents(components: any[]): ModuleWithProviders {\n    return {\n      ngModule: GridModule,\n      providers: [\n        {\n          provide: ANALYZE_FOR_ENTRY_COMPONENTS,\n          useValue: components,\n          multi: true\n        }\n      ]\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GridMessageService.html":{"url":"injectables/GridMessageService.html","title":"injectable - GridMessageService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  GridMessageService\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/grid/services/grid-message.service.ts\n        \n\n\n\n            \n                Index\n                \n                    \n                        \n                            \n                                Properties\n                            \n                        \n                        \n                            \n                                \n                                    \n                                            Private\n                                        _level\n                                    \n                                    \n                                            Private\n                                        _message\n                                    \n                                    \n                                            Private\n                                        _messageObservable\n                                    \n                                \n                            \n                        \n                        \n                            \n                                Methods\n                            \n                        \n                        \n                            \n                                \n                                    \n                                        error\n                                    \n                                    \n                                        warn\n                                    \n                                \n                            \n                        \n                        \n                            \n                                Accessors\n                            \n                        \n                        \n                            \n                                \n                                    \n                                        messageObservable\n                                    \n                                \n                            \n                        \n                    \n                \n            \n\n\n            \n                \n                    \n                        Methods\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        error\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            error(message: string)\n                                \n                            \n            \n            \n                                    \n                                        \n                                                Defined in src/grid/services/grid-message.service.ts:12\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                                Type\n                                                            Optional\n                                                        \n                                                    \n                                                    \n                                                            \n                                                                message\n                                                                \n                                                                    \n                                                                                string\n                                                                    \n                                                                \n                                                                \n                                                                        no\n                                                                \n                                                                \n            \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     void\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        warn\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            warn(message: string)\n                                \n                            \n            \n            \n                                    \n                                        \n                                                Defined in src/grid/services/grid-message.service.ts:16\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                                Type\n                                                            Optional\n                                                        \n                                                    \n                                                    \n                                                            \n                                                                message\n                                                                \n                                                                    \n                                                                                string\n                                                                    \n                                                                \n                                                                \n                                                                        no\n                                                                \n                                                                \n            \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     void\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n            \n\n            \n                \n                    \n                        Properties\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                            Private\n                                        _level\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                    _level:     number\n            \n                                \n                            \n                                \n                                    \n                                        Type :     number\n            \n                                    \n                                \n                                \n                                    \n                                        Default value : 2\n                                    \n                                \n                                    \n                                        \n                                                Defined in src/grid/services/grid-message.service.ts:10\n                                        \n                                    \n            \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                            Private\n                                        _message\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                    _message:     Subject\n            \n                                \n                            \n                                \n                                    \n                                        Type :     Subject\n            \n                                    \n                                \n                                \n                                    \n                                        Default value : new Subject()\n                                    \n                                \n                                    \n                                        \n                                                Defined in src/grid/services/grid-message.service.ts:8\n                                        \n                                    \n            \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                            Private\n                                        _messageObservable\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                    _messageObservable:     Observable\n            \n                                \n                            \n                                \n                                    \n                                        Type :     Observable\n            \n                                    \n                                \n                                \n                                    \n                                        Default value : this._message.asObservable()\n                                    \n                                \n                                    \n                                        \n                                                Defined in src/grid/services/grid-message.service.ts:9\n                                        \n                                    \n            \n            \n                        \n                    \n            \n\n            \n                \n                    Accessors\n                \n                    \n                        \n                            \n                                \n                                    \n                                    messageObservable\n                                \n                            \n            \n                            \n                                \n                                    getmessageObservable()\n                                \n                            \n                                        \n                                            \n                                                Defined in src/grid/services/grid-message.service.ts:20\n                                            \n                                        \n            \n                        \n                    \n            \n    \n\n\n    \n        import {Injectable} from \"@angular/core\";\n\nimport {Subject, Observable} from \"rxjs/Rx\";\n\n@Injectable()\nexport class GridMessageService {\n\n  private _message: Subject = new Subject();\n  private _messageObservable: Observable = this._message.asObservable();\n  private _level: number = 2;\n\n  error(message: string) {\n    this._message.next(\"ERROR: \" + message);\n  }\n\n  warn(message: string) {\n    this._message.next(\"WARN: \" + message);\n  }\n\n  get messageObservable(): Observable {\n    return this._messageObservable;\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/IsFixedPipe.html":{"url":"pipes/IsFixedPipe.html","title":"pipe - IsFixedPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Pipes\n  IsFixedPipe\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n\n    \n\n        \n            File\n        \n        \n            src/grid/utils/is-fixed.pipe.ts\n        \n\n\n\n        \n            Metadata\n            \n                \n                    \n                        name\n                        isFixed\n                    \n                \n            \n        \n\n            \n                \n                    \n                        Methods\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        transform\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            transform(list: Array, fixed: boolean)\n                                \n                            \n            \n            \n                                    \n                                        \n                                                Defined in src/grid/utils/is-fixed.pipe.ts:10\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                                Type\n                                                            Optional\n                                                        \n                                                    \n                                                    \n                                                            \n                                                                list\n                                                                \n                                                                    \n                                                                                Array\n                                                                    \n                                                                \n                                                                \n                                                                        no\n                                                                \n                                                                \n            \n                                                            \n                                                            \n                                                                fixed\n                                                                \n                                                                    \n                                                                                boolean\n                                                                    \n                                                                \n                                                                \n                                                                        no\n                                                                \n                                                                \n            \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     any\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n            \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from \"@angular/core\";\n\nimport { Column } from \"../column/column\";\n\n@Pipe({\n  name: \"isFixed\",\n  pure: false\n})\nexport class IsFixedPipe implements PipeTransform {\n  transform(list: Array, fixed: boolean) {\n    if (list === undefined) {\n      return list;\n    } else {\n      return list.filter((o: Column) => o.isFixed === fixed);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/IsGroupPipe.html":{"url":"pipes/IsGroupPipe.html","title":"pipe - IsGroupPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Pipes\n  IsGroupPipe\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n\n    \n\n        \n            File\n        \n        \n            src/grid/utils/is-group.pipe.ts\n        \n\n\n\n        \n            Metadata\n            \n                \n                    \n                        name\n                        isGroup\n                    \n                \n            \n        \n\n            \n                \n                    \n                        Methods\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        transform\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            transform(list: )\n                                \n                            \n            \n            \n                                    \n                                        \n                                                Defined in src/grid/utils/is-group.pipe.ts:9\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Optional\n                                                        \n                                                    \n                                                    \n                                                            \n                                                                list\n                                                                \n                                                                \n                                                                \n                                                                        no\n                                                                \n                                                                \n            \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     any\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n            \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from \"@angular/core\";\n\nimport { Column } from \"../column/column\";\n\n@Pipe({\n  name: \"isGroup\"\n})\nexport class IsGroupPipe implements PipeTransform {\n  transform(list) {\n    if (list === undefined) {\n      return list;\n    } else {\n      return list.filter((o: Column) => o.isGroup || o.isUtility);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/IsRowVisiblePipe.html":{"url":"pipes/IsRowVisiblePipe.html","title":"pipe - IsRowVisiblePipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Pipes\n  IsRowVisiblePipe\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n\n    \n\n        \n            File\n        \n        \n            src/grid/utils/is-row-visible.pipe.ts\n        \n\n\n\n        \n            Metadata\n            \n                \n                    \n                        name\n                        isRowVisible\n                    \n                \n            \n        \n\n            \n                \n                    \n                        Methods\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        transform\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            transform(list: )\n                                \n                            \n            \n            \n                                    \n                                        \n                                                Defined in src/grid/utils/is-row-visible.pipe.ts:9\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Optional\n                                                        \n                                                    \n                                                    \n                                                            \n                                                                list\n                                                                \n                                                                \n                                                                \n                                                                        no\n                                                                \n                                                                \n            \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     any\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n            \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from \"@angular/core\";\n\nimport { Row } from \"../row/row\";\n\n@Pipe({\n  name: \"isRowVisible\"\n})\nexport class IsRowVisiblePipe implements PipeTransform {\n  transform(list) {\n    if (list === undefined) {\n      return list;\n    } else {\n      return list.filter((o: Row) => o.visible);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/IsVisiblePipe.html":{"url":"pipes/IsVisiblePipe.html","title":"pipe - IsVisiblePipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Pipes\n  IsVisiblePipe\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n\n    \n\n        \n            File\n        \n        \n            src/grid/utils/is-visible.pipe.ts\n        \n\n\n\n        \n            Metadata\n            \n                \n                    \n                        name\n                        isVisible\n                    \n                \n            \n        \n\n            \n                \n                    \n                        Methods\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        transform\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            transform(list: )\n                                \n                            \n            \n            \n                                    \n                                        \n                                                Defined in src/grid/utils/is-visible.pipe.ts:9\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Optional\n                                                        \n                                                    \n                                                    \n                                                            \n                                                                list\n                                                                \n                                                                \n                                                                \n                                                                        no\n                                                                \n                                                                \n            \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     any\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n            \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from \"@angular/core\";\n\nimport { Column } from \"../column/column\";\n\n@Pipe({\n  name: \"isVisible\"\n})\nexport class IsVisiblePipe implements PipeTransform {\n  transform(list) {\n    if (list === undefined) {\n      return list;\n    } else {\n      return list.filter((o: Column) => o.visible);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Cell.html":{"url":"classes/Cell.html","title":"class - Cell","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  Cell\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/grid/cell/cell.ts\n        \n\n            \n                Description\n            \n            \n                A holder for the cell's data and other metadata needed for rendering or data management.\n\n            \n\n\n\n\n            \n                Index\n                \n                    \n                        \n                            \n                                Properties\n                            \n                        \n                        \n                            \n                                \n                                    \n                                        dirty\n                                    \n                                    \n                                        key\n                                    \n                                    \n                                        value\n                                    \n                                \n                            \n                        \n                    \n                \n            \n\n            \n                Constructor\n                    \n                        \n                            \n                                \n            constructor(o: Object)\n                                \n                            \n                                    \n                                        \n                                            Defined in src/grid/cell/cell.ts:7\n                                        \n                                    \n            \n                            \n                                \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                                Type\n                                                            Optional\n                                                        \n                                                    \n                                                    \n                                                            \n                                                                o\n                                                              \n                                                                    \n                                                                                Object\n                                                                    \n                                                              \n                                                                \n                                                                        no\n                                                                \n                                                                \n                                                            \n                                                    \n                                                \n                                        \n                                \n                            \n                        \n                    \n            \n\n\n\n            \n                \n                    \n                        Properties\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        dirty\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                    dirty:     boolean\n            \n                                \n                            \n                                \n                                    \n                                        Type :     boolean\n            \n                                    \n                                \n                                \n                                    \n                                        Default value : false\n                                    \n                                \n                                    \n                                        \n                                                Defined in src/grid/cell/cell.ts:7\n                                        \n                                    \n            \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        key\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                    key:     number\n            \n                                \n                            \n                                \n                                    \n                                        Type :     number\n            \n                                    \n                                \n                                    \n                                        \n                                                Defined in src/grid/cell/cell.ts:6\n                                        \n                                    \n            \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        value\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                    value:     any\n            \n                                \n                            \n                                \n                                    \n                                        Type :     any\n            \n                                    \n                                \n                                    \n                                        \n                                                Defined in src/grid/cell/cell.ts:5\n                                        \n                                    \n            \n            \n                        \n                    \n            \n\n    \n\n\n    \n        export class Cell {\n  value: any;\n  key: number;\n  dirty: boolean = false;\n\n  constructor(o: Object) {\n    Object.assign(this, o);\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/EmptyFactory.html":{"url":"classes/EmptyFactory.html","title":"class - EmptyFactory","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  EmptyFactory\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/grid/utils/empty.factory.ts\n        \n\n            \n                Description\n            \n            \n                Allows instantiation of any generic type if the type has no constructor arguments.\n\n            \n\n\n\n\n            \n                Index\n                \n                    \n                        \n                            \n                                Methods\n                            \n                        \n                        \n                            \n                                \n                                    \n                                        getInstance\n                                    \n                                \n                            \n                        \n                    \n                \n            \n\n            \n                Constructor\n                    \n                        \n                            \n                                \n            constructor(emptyConstructor: EmptyConstructor)\n                                \n                            \n                                    \n                                        \n                                            Defined in src/grid/utils/empty.factory.ts:4\n                                        \n                                    \n            \n                            \n                                \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                                Type\n                                                            Optional\n                                                        \n                                                    \n                                                    \n                                                            \n                                                                emptyConstructor\n                                                              \n                                                                    \n                                                                                EmptyConstructor\n                                                                    \n                                                              \n                                                                \n                                                                        no\n                                                                \n                                                                \n                                                            \n                                                    \n                                                \n                                        \n                                \n                            \n                        \n                    \n            \n\n            \n                \n                    \n                        Methods\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        getInstance\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            getInstance()\n                                \n                            \n            \n            \n                                    \n                                        \n                                                Defined in src/grid/utils/empty.factory.ts:7\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                            Returns :     T\n            \n                                        \n                                \n                            \n                        \n                    \n            \n\n\n\n    \n\n\n    \n        export class EmptyFactory {\n  constructor(private emptyConstructor: EmptyConstructor) {}\n\n  getInstance(): T {\n    return new this.emptyConstructor();\n  }\n}\n\nexport interface EmptyConstructor {\n  new(): T;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FormatterParser.html":{"url":"classes/FormatterParser.html","title":"class - FormatterParser","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  FormatterParser\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/grid/column/formatters/formatter-parser.ts\n        \n\n            \n                Description\n            \n            \n                Most simple formatter parser which just returns the value without modification.\n\n            \n\n\n\n\n            \n                Index\n                \n                    \n                        \n                            \n                                Properties\n                            \n                        \n                        \n                            \n                                \n                                    \n                                        config\n                                    \n                                \n                            \n                        \n                        \n                            \n                                Methods\n                            \n                        \n                        \n                            \n                                \n                                    \n                                        formatValue\n                                    \n                                    \n                                        parseValue\n                                    \n                                    \n                                        setConfig\n                                    \n                                \n                            \n                        \n                    \n                \n            \n\n\n            \n                \n                    \n                        Methods\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        formatValue\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            formatValue(value: any)\n                                \n                            \n            \n            \n                                    \n                                        \n                                                Defined in src/grid/column/formatters/formatter-parser.ts:12\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                                Type\n                                                            Optional\n                                                        \n                                                    \n                                                    \n                                                            \n                                                                value\n                                                                \n                                                                    \n                                                                                any\n                                                                    \n                                                                \n                                                                \n                                                                        no\n                                                                \n                                                                \n            \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     any\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        parseValue\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            parseValue(value: any)\n                                \n                            \n            \n            \n                                    \n                                        \n                                                Defined in src/grid/column/formatters/formatter-parser.ts:16\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                                Type\n                                                            Optional\n                                                        \n                                                    \n                                                    \n                                                            \n                                                                value\n                                                                \n                                                                    \n                                                                                any\n                                                                    \n                                                                \n                                                                \n                                                                        no\n                                                                \n                                                                \n            \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     any\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        setConfig\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            setConfig(config: any)\n                                \n                            \n            \n            \n                                    \n                                        \n                                                Defined in src/grid/column/formatters/formatter-parser.ts:8\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                                Type\n                                                            Optional\n                                                        \n                                                    \n                                                    \n                                                            \n                                                                config\n                                                                \n                                                                    \n                                                                                any\n                                                                    \n                                                                \n                                                                \n                                                                        no\n                                                                \n                                                                \n            \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     void\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n            \n\n\n            \n                \n                    \n                        Properties\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        config\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                    config:     any\n            \n                                \n                            \n                                \n                                    \n                                        Type :     any\n            \n                                    \n                                \n                                \n                                    \n                                        Default value : {}\n                                    \n                                \n                                    \n                                        \n                                                Defined in src/grid/column/formatters/formatter-parser.ts:6\n                                        \n                                    \n            \n            \n                        \n                    \n            \n\n    \n\n\n    \n        export class FormatterParser {\n\n  config: any = {};\n\n  setConfig(config: any) {\n    this.config = config;\n  }\n\n  formatValue(value: any): any {\n    return value;\n  }\n\n  parseValue(value: any): any {\n    return value;\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/HtmlUtil.html":{"url":"classes/HtmlUtil.html","title":"class - HtmlUtil","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  HtmlUtil\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/grid/utils/html-util.ts\n        \n\n            \n                Description\n            \n            \n                Convenience class for pulling things such as id from an element.\n\n            \n\n\n\n\n            \n                Index\n                \n                    \n                        \n                            \n                                Methods\n                            \n                        \n                        \n                            \n                                \n                                    \n                                            Static\n                                        getId\n                                    \n                                    \n                                            Static\n                                        getIdElement\n                                    \n                                    \n                                            Static\n                                        getLocation\n                                    \n                                \n                            \n                        \n                    \n                \n            \n\n\n            \n                \n                    \n                        Methods\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                            Static\n                                        getId\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                        \n                                    getId(e: HTMLElement, id?: string)\n                                \n                            \n            \n            \n                                    \n                                        \n                                                Defined in src/grid/utils/html-util.ts:8\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                                Type\n                                                            Optional\n                                                        \n                                                    \n                                                    \n                                                            \n                                                                e\n                                                                \n                                                                    \n                                                                                HTMLElement\n                                                                    \n                                                                \n                                                                \n                                                                        no\n                                                                \n                                                                \n            \n                                                            \n                                                            \n                                                                id\n                                                                \n                                                                    \n                                                                                string\n                                                                    \n                                                                \n                                                                \n                                                                        yes\n                                                                \n                                                                \n            \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     string\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                            Static\n                                        getIdElement\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                        \n                                    getIdElement(e: HTMLElement)\n                                \n                            \n            \n            \n                                    \n                                        \n                                                Defined in src/grid/utils/html-util.ts:23\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                                Type\n                                                            Optional\n                                                        \n                                                    \n                                                    \n                                                            \n                                                                e\n                                                                \n                                                                    \n                                                                                HTMLElement\n                                                                    \n                                                                \n                                                                \n                                                                        no\n                                                                \n                                                                \n            \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     HTMLElement\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                            Static\n                                        getLocation\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                        \n                                    getLocation(e: HTMLElement)\n                                \n                            \n            \n            \n                                    \n                                        \n                                                Defined in src/grid/utils/html-util.ts:38\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                                Type\n                                                            Optional\n                                                        \n                                                    \n                                                    \n                                                            \n                                                                e\n                                                                \n                                                                    \n                                                                                HTMLElement\n                                                                    \n                                                                \n                                                                \n                                                                        no\n                                                                \n                                                                \n            \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     Point\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n            \n\n\n\n    \n\n\n    \n        import {Point} from \"./point\";\n\n/**\n * Convenience class for pulling things such as id from an element.\n */\nexport class HtmlUtil {\n\n  static getId(e: HTMLElement, id?: string): string {\n    if (!e) {\n      return \"\";\n    }\n    while ((!id && e.id === \"\") || (id && !e.id.startsWith(id))) {\n      if (e.parentElement) {\n        e = e.parentElement;\n      } else {\n        break;\n      }\n    }\n\n    return e.id;\n  }\n\n  static getIdElement(e: HTMLElement): HTMLElement {\n    if (!e) {\n      return null;\n    }\n    while (e.id === \"\") {\n      if (e.parentElement) {\n        e = e.parentElement;\n      } else {\n        break;\n      }\n    }\n\n    return e;\n  }\n\n  static getLocation(e: HTMLElement): Point {\n    return Point.getPoint(this.getId(e));\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/InjectableFactory.html":{"url":"classes/InjectableFactory.html","title":"class - InjectableFactory","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  InjectableFactory\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/grid/utils/injectable.factory.ts\n        \n\n            \n                Description\n            \n            \n                Allows instantiation of any generic type if the type expects an injector argument.  See the implementation of\nthe EventListener.\n\n            \n\n\n\n\n            \n                Index\n                \n                    \n                        \n                            \n                                Methods\n                            \n                        \n                        \n                            \n                                \n                                    \n                                        getInstance\n                                    \n                                \n                            \n                        \n                    \n                \n            \n\n            \n                Constructor\n                    \n                        \n                            \n                                \n            constructor(ic: InjectableConstructor, injector: Injector)\n                                \n                            \n                                    \n                                        \n                                            Defined in src/grid/utils/injectable.factory.ts:7\n                                        \n                                    \n            \n                            \n                                \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                                Type\n                                                            Optional\n                                                        \n                                                    \n                                                    \n                                                            \n                                                                ic\n                                                              \n                                                                    \n                                                                                InjectableConstructor\n                                                                    \n                                                              \n                                                                \n                                                                        no\n                                                                \n                                                                \n                                                            \n                                                            \n                                                                injector\n                                                              \n                                                                    \n                                                                                Injector\n                                                                    \n                                                              \n                                                                \n                                                                        no\n                                                                \n                                                                \n                                                            \n                                                    \n                                                \n                                        \n                                \n                            \n                        \n                    \n            \n\n            \n                \n                    \n                        Methods\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        getInstance\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            getInstance()\n                                \n                            \n            \n            \n                                    \n                                        \n                                                Defined in src/grid/utils/injectable.factory.ts:10\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                            Returns :     T\n            \n                                        \n                                \n                            \n                        \n                    \n            \n\n\n\n    \n\n\n    \n        import {Injector} from \"@angular/core\";\n\n/**\n * Allows instantiation of any generic type if the type expects an injector argument.  See the implementation of\n * the EventListener.\n */\nexport class InjectableFactory {\n  constructor(private ic: InjectableConstructor, private injector: Injector) {}\n\n  getInstance(): T {\n    return new this.ic(this.injector);\n  }\n}\n\nexport interface InjectableConstructor {\n  new(injector: Injector): T;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RowChange.html":{"url":"classes/RowChange.html","title":"class - RowChange","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  RowChange\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/grid/utils/row-change.ts\n        \n\n\n\n\n\n            \n                Index\n                \n                    \n                        \n                            \n                                Properties\n                            \n                        \n                        \n                            \n                                \n                                    \n                                        newRowNum\n                                    \n                                    \n                                        oldRowNum\n                                    \n                                \n                            \n                        \n                    \n                \n            \n\n            \n                Constructor\n                    \n                        \n                            \n                                \n            constructor(oldRowNum: number, newRowNum: number)\n                                \n                            \n                                    \n                                        \n                                            Defined in src/grid/utils/row-change.ts:4\n                                        \n                                    \n            \n                            \n                                \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                                Type\n                                                            Optional\n                                                        \n                                                    \n                                                    \n                                                            \n                                                                oldRowNum\n                                                              \n                                                                    \n                                                                                number\n                                                                    \n                                                              \n                                                                \n                                                                        no\n                                                                \n                                                                \n                                                            \n                                                            \n                                                                newRowNum\n                                                              \n                                                                    \n                                                                                number\n                                                                    \n                                                              \n                                                                \n                                                                        no\n                                                                \n                                                                \n                                                            \n                                                    \n                                                \n                                        \n                                \n                            \n                        \n                    \n            \n\n\n\n            \n                \n                    \n                        Properties\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        newRowNum\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                    newRowNum:     number\n            \n                                \n                            \n                                \n                                    \n                                        Type :     number\n            \n                                    \n                                \n                                    \n                                        \n                                                Defined in src/grid/utils/row-change.ts:4\n                                        \n                                    \n            \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        oldRowNum\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                    oldRowNum:     number\n            \n                                \n                            \n                                \n                                    \n                                        Type :     number\n            \n                                    \n                                \n                                    \n                                        \n                                                Defined in src/grid/utils/row-change.ts:3\n                                        \n                                    \n            \n            \n                        \n                    \n            \n\n    \n\n\n    \n        export class RowChange {\n\n  oldRowNum: number;\n  newRowNum: number;\n\n  constructor(oldRowNum: number, newRowNum: number) {\n    this.oldRowNum = oldRowNum;\n    this.newRowNum = newRowNum;\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SortInfo.html":{"url":"classes/SortInfo.html","title":"class - SortInfo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  SortInfo\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/grid/utils/sort-info.ts\n        \n\n\n\n\n\n            \n                Index\n                \n                    \n                        \n                            \n                                Properties\n                            \n                        \n                        \n                            \n                                \n                                    \n                                            Public\n                                        asc\n                                    \n                                    \n                                            Public\n                                        field\n                                    \n                                \n                            \n                        \n                        \n                            \n                                Methods\n                            \n                        \n                        \n                            \n                                \n                                    \n                                        getAsc\n                                    \n                                    \n                                        getField\n                                    \n                                    \n                                        setAsc\n                                    \n                                    \n                                        setField\n                                    \n                                \n                            \n                        \n                    \n                \n            \n\n\n            \n                \n                    \n                        Methods\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        getAsc\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            getAsc()\n                                \n                            \n            \n            \n                                    \n                                        \n                                                Defined in src/grid/utils/sort-info.ts:5\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                            Returns :     boolean\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        getField\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            getField()\n                                \n                            \n            \n            \n                                    \n                                        \n                                                Defined in src/grid/utils/sort-info.ts:13\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                            Returns :     string\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        setAsc\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            setAsc(asc: boolean)\n                                \n                            \n            \n            \n                                    \n                                        \n                                                Defined in src/grid/utils/sort-info.ts:9\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                                Type\n                                                            Optional\n                                                        \n                                                    \n                                                    \n                                                            \n                                                                asc\n                                                                \n                                                                    \n                                                                                boolean\n                                                                    \n                                                                \n                                                                \n                                                                        no\n                                                                \n                                                                \n            \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     void\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        setField\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            setField(field: string)\n                                \n                            \n            \n            \n                                    \n                                        \n                                                Defined in src/grid/utils/sort-info.ts:17\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                                Type\n                                                            Optional\n                                                        \n                                                    \n                                                    \n                                                            \n                                                                field\n                                                                \n                                                                    \n                                                                                string\n                                                                    \n                                                                \n                                                                \n                                                                        no\n                                                                \n                                                                \n            \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     void\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n            \n\n\n            \n                \n                    \n                        Properties\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                            Public\n                                        asc\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                    asc:     boolean\n            \n                                \n                            \n                                \n                                    \n                                        Type :     boolean\n            \n                                    \n                                \n                                \n                                    \n                                        Default value : true\n                                    \n                                \n                                    \n                                        \n                                                Defined in src/grid/utils/sort-info.ts:2\n                                        \n                                    \n            \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                            Public\n                                        field\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                    field:     string\n            \n                                \n                            \n                                \n                                    \n                                        Type :     string\n            \n                                    \n                                \n                                \n                                    \n                                        Default value : null\n                                    \n                                \n                                    \n                                        \n                                                Defined in src/grid/utils/sort-info.ts:3\n                                        \n                                    \n            \n            \n                        \n                    \n            \n\n    \n\n\n    \n        export class SortInfo {\n  public asc: boolean = true;\n  public field: string = null;\n\n  getAsc(): boolean {\n    return this.asc;\n  }\n\n  setAsc(asc: boolean) {\n    this.asc = asc;\n  }\n\n  getField(): string {\n    return this.field;\n  }\n\n  setField(field: string) {\n    this.field = field;\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ClickListener.html":{"url":"interfaces/ClickListener.html","title":"interface - ClickListener","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ClickListener\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/grid/event/click.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    click\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n                \n                    \n                        Methods\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        click\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            click(event: MouseEvent)\n                                \n                            \n            \n            \n                                    \n                                        \n                                                Defined in src/grid/event/click.interface.ts:3\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                                Type\n                                                            Optional\n                                                        \n                                                    \n                                                    \n                                                            \n                                                                event\n                                                                \n                                                                    \n                                                                                MouseEvent\n                                                                    \n                                                                \n                                                                \n                                                                        no\n                                                                \n                                                                \n            \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     boolean\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n            \n\n\n    \n\n\n    \n        export interface ClickListener {\n\n  click(event: MouseEvent): boolean;\n\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DblClickListener.html":{"url":"interfaces/DblClickListener.html","title":"interface - DblClickListener","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  DblClickListener\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/grid/event/dbl-click.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    dblclick\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n                \n                    \n                        Methods\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        dblclick\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            dblclick(event: MouseEvent)\n                                \n                            \n            \n            \n                                    \n                                        \n                                                Defined in src/grid/event/dbl-click.interface.ts:3\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                                Type\n                                                            Optional\n                                                        \n                                                    \n                                                    \n                                                            \n                                                                event\n                                                                \n                                                                    \n                                                                                MouseEvent\n                                                                    \n                                                                \n                                                                \n                                                                        no\n                                                                \n                                                                \n            \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     boolean\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n            \n\n\n    \n\n\n    \n        export interface DblClickListener {\n\n  dblclick(event: MouseEvent): boolean;\n\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Dictionary.html":{"url":"interfaces/Dictionary.html","title":"interface - Dictionary","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Dictionary\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/grid/model/dictionary.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        display\n                                \n                                \n                                        value\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        display\n                                    \n                                \n                                \n                                    \n                                        display:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n                                    \n                                        \n                                            Defined in src/grid/model/dictionary.interface.ts:3\n                                        \n                                    \n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        value\n                                    \n                                \n                                \n                                    \n                                        value:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n                                    \n                                        \n                                            Defined in src/grid/model/dictionary.interface.ts:2\n                                        \n                                    \n\n                        \n                    \n            \n    \n\n\n    \n        export interface Dictionary {\n  value: string;\n  display: string;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/EmptyConstructor.html":{"url":"interfaces/EmptyConstructor.html","title":"interface - EmptyConstructor","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  EmptyConstructor\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/grid/utils/empty.factory.ts\n        \n\n\n\n\n\n\n    \n\n\n    \n        export class EmptyFactory {\n  constructor(private emptyConstructor: EmptyConstructor) {}\n\n  getInstance(): T {\n    return new this.emptyConstructor();\n  }\n}\n\nexport interface EmptyConstructor {\n  new(): T;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/EventListenerArg.html":{"url":"interfaces/EventListenerArg.html","title":"interface - EventListenerArg","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  EventListenerArg\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/grid/event/event-listener-arg.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        config\n                                \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        config\n                                    \n                                \n                                \n                                    \n                                        config:     any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/grid/event/event-listener-arg.interface.ts:5\n                                        \n                                    \n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     Type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Type\n\n                                        \n                                    \n\n\n\n\n                                    \n                                        \n                                            Defined in src/grid/event/event-listener-arg.interface.ts:4\n                                        \n                                    \n\n                        \n                    \n            \n    \n\n\n    \n        import {Type} from \"@angular/core\";\n\nexport interface EventListenerArg {\n  type: Type;\n  config?: any;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/InjectableConstructor.html":{"url":"interfaces/InjectableConstructor.html","title":"interface - InjectableConstructor","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  InjectableConstructor\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/grid/utils/injectable.factory.ts\n        \n\n\n\n\n\n\n    \n\n\n    \n        import {Injector} from \"@angular/core\";\n\n/**\n * Allows instantiation of any generic type if the type expects an injector argument.  See the implementation of\n * the EventListener.\n */\nexport class InjectableFactory {\n  constructor(private ic: InjectableConstructor, private injector: Injector) {}\n\n  getInstance(): T {\n    return new this.ic(this.injector);\n  }\n}\n\nexport interface InjectableConstructor {\n  new(injector: Injector): T;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MouseDownListener.html":{"url":"interfaces/MouseDownListener.html","title":"interface - MouseDownListener","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  MouseDownListener\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/grid/event/mouse-down.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    mouseDown\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n                \n                    \n                        Methods\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        mouseDown\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            mouseDown(event: MouseEvent)\n                                \n                            \n            \n            \n                                    \n                                        \n                                                Defined in src/grid/event/mouse-down.interface.ts:3\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                                Type\n                                                            Optional\n                                                        \n                                                    \n                                                    \n                                                            \n                                                                event\n                                                                \n                                                                    \n                                                                                MouseEvent\n                                                                    \n                                                                \n                                                                \n                                                                        no\n                                                                \n                                                                \n            \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     boolean\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n            \n\n\n    \n\n\n    \n        export interface MouseDownListener {\n\n  mouseDown(event: MouseEvent): boolean;\n\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MouseDragListener.html":{"url":"interfaces/MouseDragListener.html","title":"interface - MouseDragListener","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  MouseDragListener\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/grid/event/mouse-drag.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    mouseDrag\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n                \n                    \n                        Methods\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        mouseDrag\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            mouseDrag(event: MouseEvent)\n                                \n                            \n            \n            \n                                    \n                                        \n                                                Defined in src/grid/event/mouse-drag.interface.ts:3\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                                Type\n                                                            Optional\n                                                        \n                                                    \n                                                    \n                                                            \n                                                                event\n                                                                \n                                                                    \n                                                                                MouseEvent\n                                                                    \n                                                                \n                                                                \n                                                                        no\n                                                                \n                                                                \n            \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     boolean\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n            \n\n\n    \n\n\n    \n        export interface MouseDragListener {\n\n  mouseDrag(event: MouseEvent): boolean;\n\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MouseOutListener.html":{"url":"interfaces/MouseOutListener.html","title":"interface - MouseOutListener","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  MouseOutListener\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/grid/event/mouse-out.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    mouseOut\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n                \n                    \n                        Methods\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        mouseOut\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            mouseOut(event: MouseEvent)\n                                \n                            \n            \n            \n                                    \n                                        \n                                                Defined in src/grid/event/mouse-out.interface.ts:3\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                                Type\n                                                            Optional\n                                                        \n                                                    \n                                                    \n                                                            \n                                                                event\n                                                                \n                                                                    \n                                                                                MouseEvent\n                                                                    \n                                                                \n                                                                \n                                                                        no\n                                                                \n                                                                \n            \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     boolean\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n            \n\n\n    \n\n\n    \n        export interface MouseOutListener {\n\n  mouseOut(event: MouseEvent): boolean;\n\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MouseOverListener.html":{"url":"interfaces/MouseOverListener.html","title":"interface - MouseOverListener","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  MouseOverListener\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/grid/event/mouse-over.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    mouseOver\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n                \n                    \n                        Methods\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        mouseOver\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            mouseOver(event: MouseEvent)\n                                \n                            \n            \n            \n                                    \n                                        \n                                                Defined in src/grid/event/mouse-over.interface.ts:3\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                                Type\n                                                            Optional\n                                                        \n                                                    \n                                                    \n                                                            \n                                                                event\n                                                                \n                                                                    \n                                                                                MouseEvent\n                                                                    \n                                                                \n                                                                \n                                                                        no\n                                                                \n                                                                \n            \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     boolean\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n            \n\n\n    \n\n\n    \n        export interface MouseOverListener {\n\n  mouseOver(event: MouseEvent): boolean;\n\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MouseUpListener.html":{"url":"interfaces/MouseUpListener.html","title":"interface - MouseUpListener","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  MouseUpListener\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/grid/event/mouse-up.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    mouseUp\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n                \n                    \n                        Methods\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        mouseUp\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            mouseUp(event: MouseEvent)\n                                \n                            \n            \n            \n                                    \n                                        \n                                                Defined in src/grid/event/mouse-up.interface.ts:3\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                                Type\n                                                            Optional\n                                                        \n                                                    \n                                                    \n                                                            \n                                                                event\n                                                                \n                                                                    \n                                                                                MouseEvent\n                                                                    \n                                                                \n                                                                \n                                                                        no\n                                                                \n                                                                \n            \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     boolean\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n            \n\n\n    \n\n\n    \n        export interface MouseUpListener {\n\n  mouseUp(event: MouseEvent): boolean;\n\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ARROW\n                        \n                        \n                            CLICK\n                        \n                        \n                            NO_EVENT\n                        \n                        \n                            RESIZE\n                        \n                        \n                            SCROLL\n                        \n                        \n                            TAB\n                        \n                    \n                \n            \n        \n    \n\n\n    src/grid/services/grid-event.service.ts\n    \n                \n                \n                    \n                        \n                            \n                            \n                                \n                                ARROW\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n                            ARROW:     number\n    \n                        \n                    \n                        \n                            \n                                Type :     number\n    \n                            \n                        \n                        \n                            \n                                Default value : 2\n                            \n                        \n    \n    \n                \n            \n            \n                \n                    \n                        \n                            \n                            \n                                \n                                CLICK\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n                            CLICK:     number\n    \n                        \n                    \n                        \n                            \n                                Type :     number\n    \n                            \n                        \n                        \n                            \n                                Default value : 0\n                            \n                        \n    \n    \n                \n            \n            \n                \n                    \n                        \n                            \n                            \n                                \n                                TAB\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n                            TAB:     number\n    \n                        \n                    \n                        \n                            \n                                Type :     number\n    \n                            \n                        \n                        \n                            \n                                Default value : 1\n                            \n                        \n    \n    \n                \n            \n    \n    src/grid/grid.component.ts\n    \n                \n                \n                    \n                        \n                            \n                            \n                                \n                                NO_EVENT\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n                            NO_EVENT:     number\n    \n                        \n                    \n                        \n                            \n                                Type :     number\n    \n                            \n                        \n                        \n                            \n                                Default value : -1\n                            \n                        \n    \n    \n                \n            \n            \n                \n                    \n                        \n                            \n                            \n                                \n                                RESIZE\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n                            RESIZE:     number\n    \n                        \n                    \n                        \n                            \n                                Type :     number\n    \n                            \n                        \n                        \n                            \n                                Default value : 0\n                            \n                        \n    \n    \n                \n            \n            \n                \n                    \n                        \n                            \n                            \n                                \n                                SCROLL\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n                            SCROLL:     number\n    \n                        \n                    \n                        \n                            \n                                Type :     number\n    \n                            \n                        \n                        \n                            \n                                Default value : 1\n                            \n                        \n    \n    \n                \n            \n    \n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
