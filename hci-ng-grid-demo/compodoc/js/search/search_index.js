var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.1.6","fields":["title","body"],"fieldVectors":[["title/dependencies.html",[0,2.175,1,2.146]],["body/dependencies.html",[1,2.668,2,3.365,3,3.884,4,3.365,5,0.032,6,4.672,7,4.672,8,4.672,9,0.029,10,0.029]],["title/index.html",[11,1.668,12,1.885,13,0.446]],["body/index.html",[0,0.722,1,0.496,2,1.488,5,0.029,9,0.008,10,0.008,11,0.553,14,0.868,15,0.868,16,3.977,17,0.868,18,2.066,19,1.536,20,0.868,21,0.868,22,0.868,23,2.066,24,2.372,25,2.853,26,0.868,27,0.868,28,0.868,29,3.249,30,0.868,31,0.625,32,0.625,33,2.521,34,0.722,35,2.066,36,0.868,37,1.536,38,0.868,39,0.722,40,0.503,41,0.496,42,0.868,43,1.536,44,1.277,45,0.868,46,0.868,47,0.868,48,0.868,49,0.868,50,0.722,51,0.868,52,2.835,53,0.868,54,2.066,55,3.019,56,0.868,57,0.868,58,1.536,59,0.868,60,0.868,61,0.868,62,2.853,63,0.722,64,1.106,65,2.281,66,0.868,67,3.322,68,2.368,69,0.722,70,1.536,71,1.536,72,3.825,73,0.868,74,2.066,75,1.536,76,0.868,77,1.536,78,0.868,79,3.142,80,3.41,81,0.868,82,0.722,83,2.835,84,2.075,85,0.868,86,1.536,87,0.067,88,2.009,89,2.878,90,0.722,91,1.536,92,0.868,93,1.277,94,0.868,95,0.868,96,0.868,97,0.868,98,2.066,99,1.18,100,0.868,101,0.553,102,2.853,103,1.277,104,0.979,105,0.968,106,1.798,107,2.496,108,0.868,109,0.868,110,2.496,111,0.868,112,0.868,113,0.119,114,0.868,115,0.868,116,0.868,117,0.868,118,0.771,119,1.717,120,2.368,121,2.372,122,1.536,123,0.868,124,0.868,125,0.868,126,2.853,127,0.868,128,2.066,129,1.277,130,0.722,131,0.868,132,1.536,133,0.868,134,2.372,135,0.341,136,0.868,137,0.586,138,0.868,139,0.868,140,1.219,141,2.055,142,0.868,143,1.717,144,0.496,145,0.722,146,0.868,147,1.536,148,1.536,149,2.066,150,0.868,151,2.066,152,1.536,153,0.868,154,0.722,155,0.868,156,1.536,157,1.536,158,2.496,159,0.868,160,1.488,161,1.536,162,0.868,163,0.868,164,0.868,165,0.868,166,0.868,167,2.616,168,0.868,169,0.868,170,0.868,171,1.536,172,0.868,173,0.868,174,0.868,175,0.868,176,2.281,177,0.868,178,2.066,179,0.868,180,1.536,181,0.868,182,0.868,183,0.868,184,0.868,185,1.106,186,0.868,187,1.277,188,1.277,189,1.536,190,0.868,191,3.41,192,0.868,193,0.868,194,0.792,195,0.722,196,0.868,197,0.868,198,0.868,199,1.277,200,1.536,201,0.868,202,0.625,203,0.868,204,2.622,205,0.868,206,0.868,207,1.536,208,0.868,209,0.868,210,2.066,211,1.717,212,0.868,213,0.868,214,2.066,215,1.536,216,1.488,217,0.868,218,0.868,219,0.868,220,0.868,221,1.536,222,2.066,223,2.622,224,0.868,225,1.536,226,1.536,227,0.868,228,0.868,229,1.17,230,0.868,231,0.868,232,0.868,233,1.536,234,0.868,235,0.868,236,1.488,237,0.868,238,2.496,239,0.868,240,0.868,241,0.868,242,0.868,243,0.722,244,0.868,245,0.868,246,0.868,247,0.868,248,0.868,249,0.868,250,0.448,251,0.868,252,0.868,253,0.868,254,1.717,255,0.868,256,2.755,257,1.591,258,0.868,259,0.868,260,0.868,261,0.868,262,0.722,263,0.868,264,0.868,265,1.277,266,0.868,267,0.161,268,0.868,269,0.067,270,0.164,271,0.722,272,0.868,273,0.868,274,0.868,275,0.868,276,0.868,277,1.536,278,0.868,279,1.536,280,0.868,281,0.868,282,0.868,283,0.868,284,0.868,285,0.722,286,1.536,287,0.868,288,0.868,289,0.868,290,2.496,291,0.868,292,0.625,293,0.868,294,1.277,295,0.868,296,0.868,297,0.868,298,1.536,299,0.625,300,0.625,301,1.536,302,0.625,303,0.868,304,1.536,305,1.536,306,0.625,307,0.868,308,0.868,309,0.868,310,0.722,311,0.868,312,0.868,313,0.722,314,0.722]],["title/overview.html",[315,3.538]],["body/overview.html",[1,1.485,4,1.873,5,0.033,9,0.02,10,0.02,41,3.632,104,1.657,106,1.873,185,1.873,250,1.93,267,0.202,269,0.202,292,3.156,299,3.156,300,3.156,302,3.156,306,3.156,315,2.162,316,2.162,317,2.162,318,0.202,319,2.162,320,2.162,321,2.162,322,2.162,323,4.945,324,3.643,325,2.792,326,2.792,327,2.792,328,2.792,329,3.643,330,3.643,331,3.643,332,3.643,333,3.643,334,3.643,335,2.792,336,3.11,337,2.162,338,1.873,339,3.741,340,3.741,341,1.873,342,1.016,343,2.601]],["title/changelog.html",[11,1.668,12,1.885,344,2.617]],["body/changelog.html",[5,0.022,9,0.022,10,0.022,16,3.444,24,2.499,29,2.983,32,2.165,33,1.408,39,2.499,52,2.499,63,3.444,65,3.163,69,2.499,79,2.64,82,2.499,83,2.499,84,2.499,89,3.414,90,3.444,101,1.915,103,2.499,130,2.499,134,4.247,143,2.499,144,2.365,160,3.859,199,2.499,216,2.165,256,2.983,257,1.915,285,3.444,294,2.499,313,2.499,345,3.006,346,2.64,347,4.74,348,2.499,349,3.006,350,3.006,351,3.006,352,3.006,353,3.006,354,3.006,355,3.006,356,3.006,357,3.006,358,3.006,359,3.006,360,4.142,361,3.006,362,3.006,363,3.006,364,3.006,365,3.006,366,3.006,367,3.006,368,3.006,369,3.006,370,3.006,371,2.499,372,3.006,373,3.006,374,3.006,375,3.006,376,3.006,377,3.006,378,4.142,379,3.006,380,3.006,381,3.006,382,3.006,383,2.499,384,3.006,385,2.499,386,3.006,387,3.006,388,3.006,389,3.006,390,3.006]],["title/license.html",[11,1.668,12,1.885,371,2.175]],["body/license.html",[5,0.023,9,0.023,10,0.023,44,2.587,50,4.31,55,3.527,88,1.33,93,2.587,104,1.983,145,2.587,154,2.587,187,3.527,254,2.587,314,2.587,338,2.241,383,2.587,391,4.013,392,2.587,393,3.112,394,2.587,395,2.587,396,2.587,397,2.587,398,2.587,399,4.242,400,3.112,401,3.112,402,3.112,403,3.112,404,4.242,405,3.112,406,5.913,407,3.112,408,3.112,409,0.242,410,4.242,411,4.013,412,3.112,413,4.827,414,3.112,415,3.112,416,3.112,417,3.112,418,3.112,419,3.112,420,3.112,421,2.587,422,3.112,423,4.242,424,4.242,425,3.112,426,3.112,427,4.242,428,3.112,429,3.112,430,3.112,431,3.112,432,3.112,433,3.112,434,3.112,435,3.112,436,3.112,437,2.587,438,3.112,439,3.112,440,3.112,441,3.112,442,3.112,443,3.112,444,3.112,445,3.112,446,3.112]],["title/modules.html",[250,2.196]],["body/modules.html",[5,0.03,9,0.03,10,0.03,32,3.425,41,2.716,250,2.453,447,4.756,448,4.756,449,4.756]],["title/modules/GridModule.html",[41,1.785,250,1.613]],["body/modules/GridModule.html",[1,0.869,2,1.096,3,1.265,4,1.784,5,0.034,9,0.013,10,0.013,40,1.879,41,3.486,67,2.605,79,0.97,87,0.118,104,2.716,106,2.257,113,0.338,167,1.784,250,1.278,267,0.118,292,3.374,299,3.374,300,3.374,302,3.374,306,3.374,316,1.265,317,2.605,318,0.281,319,1.265,320,1.265,321,1.265,322,1.265,323,4.664,324,3.544,325,2.716,326,2.716,327,2.716,328,2.716,329,3.894,330,3.894,331,3.544,332,3.544,333,2.605,334,2.605,335,1.997,336,2.06,337,1.265,338,1.096,391,1.265,392,1.265,394,1.265,395,1.265,396,1.265,397,1.265,398,1.265,409,0.118,450,0.139,451,1.522,452,2.478,453,1.522,454,1.522,455,1.522,456,3.134,457,3.134,458,3.612,459,0.594,460,2.478,461,1.522,462,2.478,463,1.522,464,1.522,465,1.522,466,0.97,467,1.522,468,3.612,469,2.478,470,1.522,471,1.522,472,1.522,473,3.134,474,4.263,475,1.522,476,1.522,477,1.522,478,1.522,479,1.522,480,1.522,481,1.522,482,2.478,483,1.522,484,2.478,485,1.522,486,1.522,487,3.134,488,1.522,489,1.522,490,2.06,491,1.522,492,3.134,493,3.134,494,1.522]],["title/injectables/GridMessageService.html",[335,1.993,341,2.252]],["body/injectables/GridMessageService.html",[5,0.034,9,0.02,10,0.02,13,0.429,33,2.016,40,1.197,68,2.985,87,0.196,113,0.588,118,0.685,135,0.499,137,0.559,176,2.457,194,1.885,211,3.039,229,2.016,243,3.924,267,0.196,270,0.69,318,0.196,335,2.329,341,3.099,385,4.167,409,0.196,421,4.347,450,0.23,459,0.983,495,4.485,496,2.518,497,1.713,498,4.057,499,4.721,500,4.721,501,4.721,502,3.655,503,3.655,504,4.302,505,3.655,506,0.714,507,2.518,508,0.623,509,2.632,510,3.655,511,2.518,512,3.039,513,2.518,514,2.518,515,3.655,516,2.518,517,2.518,518,2.518,519,2.518,520,2.518,521,2.518,522,2.518]],["title/pipes/IsFixedPipe.html",[327,1.993,342,1.221]],["body/pipes/IsFixedPipe.html",[5,0.034,9,0.024,10,0.024,40,1.459,65,2.545,87,0.26,99,2.861,105,1.569,113,0.684,118,0.457,120,1.912,121,4.165,135,0.457,137,0.767,140,1.791,141,2.412,160,3.847,265,2.784,267,0.26,270,0.632,318,0.26,327,2.84,342,1.956,409,0.26,450,0.306,459,1.308,466,2.134,506,0.457,508,0.571,523,2.84,524,3.349,525,1.912,526,4.457,527,2.134,528,2.84,529,3.349,530,2.84,531,2.134,532,3.349]],["title/pipes/IsGroupPipe.html",[326,1.993,342,1.221]],["body/pipes/IsGroupPipe.html",[5,0.034,9,0.025,10,0.025,40,1.506,65,2.626,87,0.273,99,2.929,105,1.646,113,0.7,120,2.005,135,0.48,137,0.785,267,0.273,270,0.663,318,0.273,326,2.931,342,2.003,409,0.273,450,0.321,459,1.371,466,2.238,506,0.48,508,0.599,523,2.931,525,2.005,527,2.238,528,2.931,530,2.931,531,2.238,533,3.512,534,4.599,535,3.512,536,3.512,537,3.512]],["title/pipes/IsRowVisiblePipe.html",[328,1.993,342,1.221]],["body/pipes/IsRowVisiblePipe.html",[5,0.034,9,0.025,10,0.025,40,1.506,79,3.468,87,0.273,99,2.929,105,1.646,113,0.7,120,2.005,135,0.48,137,0.785,267,0.273,270,0.663,318,0.273,328,2.931,342,2.003,409,0.273,450,0.321,459,1.371,506,0.48,508,0.599,523,2.931,525,2.005,527,2.238,528,2.931,530,2.931,531,2.238,538,2.92,539,4.599,540,2.92,541,3.512,542,2.92]],["title/pipes/IsVisiblePipe.html",[325,1.993,342,1.221]],["body/pipes/IsVisiblePipe.html",[5,0.034,9,0.025,10,0.025,40,1.515,65,2.642,87,0.275,99,2.941,105,1.66,113,0.703,120,2.023,135,0.484,137,0.788,267,0.275,270,0.669,318,0.275,325,2.948,342,2.012,409,0.275,450,0.324,459,1.384,466,2.258,506,0.484,508,0.604,523,2.948,525,2.023,527,2.258,528,2.948,530,2.948,531,2.258,538,2.946,540,2.946,542,2.946,543,4.626]],["title/classes/Cell.html",[257,1.993,267,0.243]],["body/classes/Cell.html",[5,0.033,9,0.024,10,0.024,13,0.568,29,3.201,33,1.562,87,0.259,118,0.728,119,4.156,135,0.455,137,0.51,140,1.787,141,3.201,176,2.855,195,4.433,204,4.433,229,2.602,256,2.402,257,2.832,267,0.345,318,0.259,409,0.259,437,2.772,450,0.305,497,2.083,506,0.728,508,0.568,525,1.904,544,3.334,545,1.904,546,3.334,547,3.334,548,3.334,549,2.125,550,4.445,551,4.445,552,4.445,553,3.334,554,3.334,555,3.334]],["title/classes/EmptyFactory.html",[267,0.243,556,2.252]],["body/classes/EmptyFactory.html",[5,0.033,9,0.025,10,0.025,13,0.612,87,0.279,113,0.637,118,0.708,135,0.49,137,0.55,144,2.051,194,2.407,267,0.363,269,0.279,270,0.881,318,0.363,346,2.289,409,0.279,450,0.328,506,0.637,508,0.612,545,2.051,549,2.974,556,3.361,557,2.986,558,2.587,559,2.587,560,3.498,561,3.592,562,4.2,563,3.592,564,3.592,565,3.304,566,2.289,567,2.986]],["title/classes/FormatterParser.html",[267,0.243,568,2.599]],["body/classes/FormatterParser.html",[5,0.034,9,0.022,10,0.022,13,0.52,33,1.43,34,2.537,87,0.237,113,0.76,118,0.702,135,0.652,137,0.731,229,2.608,236,4.008,267,0.325,270,0.79,271,3.48,318,0.237,409,0.237,411,2.537,450,0.279,497,1.962,506,0.702,508,0.814,509,2.198,545,1.743,568,3.48,569,5.388,570,3.052,571,3.052,572,3.052,573,3.052,574,4.186,575,4.186,576,4.186,577,4.186,578,3.052,579,4.186,580,3.052,581,3.052,582,3.052,583,3.052]],["title/classes/HtmlUtil.html",[267,0.243,584,2.599]],["body/classes/HtmlUtil.html",[5,0.034,9,0.019,10,0.019,13,0.411,40,0.789,68,2.812,87,0.187,113,0.745,118,0.573,129,4.424,135,0.573,137,0.642,262,2.943,267,0.359,270,0.668,310,2.943,318,0.187,409,0.187,450,0.221,490,4.631,506,0.573,508,0.715,545,1.377,584,2.943,585,4.624,586,2.411,587,3.541,588,3.541,589,3.541,590,3.541,591,3.541,592,3.541,593,3.541,594,3.541,595,5.742,596,2.411,597,5.459,598,2.411,599,3.541,600,2.411,601,3.541,602,2.411,603,4.624,604,4.196,605,2.411,606,4.624,607,2.004,608,2.411]],["title/classes/InjectableFactory.html",[267,0.243,609,2.252]],["body/classes/InjectableFactory.html",[5,0.033,9,0.023,10,0.023,13,0.539,31,3.088,40,1.035,87,0.246,101,2.733,105,2.009,113,0.586,118,0.745,135,0.432,137,0.484,144,2.448,194,1.631,267,0.333,269,0.246,270,0.81,318,0.333,346,2.733,409,0.246,450,0.289,459,1.235,498,2.277,506,0.586,508,0.539,545,1.805,549,2.015,558,3.088,559,3.088,560,3.325,565,3.101,566,2.015,609,3.088,610,2.628,611,4.987,612,3.565,613,3.161,614,3.758,615,3.161,616,3.565,617,3.161,618,2.628,619,2.628]],["title/classes/RowChange.html",[267,0.243,620,2.599]],["body/classes/RowChange.html",[5,0.033,9,0.024,10,0.024,13,0.591,87,0.269,118,0.696,135,0.473,137,0.531,176,3.533,267,0.354,318,0.269,409,0.269,450,0.317,497,2.137,506,0.696,508,0.591,549,2.209,620,3.791,621,5.414,622,3.466,623,5.974,624,5.775,625,4.56,626,4.56,627,3.466,628,3.466,629,3.466]],["title/classes/SortInfo.html",[267,0.243,630,2.599]],["body/classes/SortInfo.html",[5,0.034,9,0.02,10,0.02,13,0.454,33,1.783,68,3.203,87,0.207,113,0.728,118,0.661,135,0.519,137,0.582,140,2.005,167,2.74,223,4.429,229,1.783,267,0.296,270,0.718,318,0.207,348,4.429,409,0.207,450,0.243,497,1.783,506,0.728,508,0.648,509,2.74,607,3.163,630,3.163,631,5.485,632,2.662,633,5.328,634,4.843,635,4.843,636,3.804,637,3.804,638,2.662,639,2.662,640,3.804,641,2.662,642,3.804,643,2.662,644,2.662,645,2.662,646,3.804,647,3.804]],["title/interfaces/ClickListener.html",[269,0.243,648,2.599]],["body/interfaces/ClickListener.html",[5,0.032,9,0.027,10,0.027,13,0.698,64,3.652,87,0.318,88,1.749,113,0.559,118,0.559,135,0.559,137,0.626,140,1.813,269,0.394,270,0.957,318,0.318,409,0.318,450,0.374,506,0.559,508,0.698,648,4.215,649,4.093,650,5.071,651,2.842,652,4.093]],["title/interfaces/DblClickListener.html",[269,0.243,653,2.599]],["body/interfaces/DblClickListener.html",[5,0.032,9,0.027,10,0.027,13,0.69,87,0.315,88,1.731,113,0.553,118,0.553,135,0.553,137,0.62,140,1.801,269,0.391,270,0.951,318,0.315,409,0.315,450,0.37,506,0.553,508,0.69,651,2.829,653,4.188,654,5.038,655,4.051,656,5.038,657,5.038,658,4.051]],["title/interfaces/Dictionary.html",[269,0.243,659,2.599]],["body/interfaces/Dictionary.html",[5,0.032,9,0.027,10,0.027,13,0.687,68,3.431,87,0.313,118,0.686,216,4.125,229,2.684,269,0.39,318,0.313,409,0.313,450,0.369,497,2.353,506,0.686,659,4.175,660,4.03,661,4.03,662,4.03]],["title/interfaces/EmptyConstructor.html",[269,0.243,562,2.252]],["body/interfaces/EmptyConstructor.html",[5,0.034,9,0.028,10,0.028,87,0.325,113,0.571,194,2.649,267,0.325,269,0.399,318,0.399,409,0.325,450,0.382,556,3.01,557,3.474,560,2.663,562,4.178,565,3.273,566,2.663,567,3.474]],["title/interfaces/EventListenerArg.html",[202,2.252,269,0.243]],["body/interfaces/EventListenerArg.html",[5,0.032,9,0.026,10,0.026,13,0.66,40,1.268,87,0.301,89,3.869,118,0.849,135,0.669,202,3.528,236,4.066,269,0.381,318,0.301,409,0.301,450,0.354,459,1.512,497,2.295,506,0.669,663,5.372,664,3.872,665,3.872,666,3.872]],["title/interfaces/InjectableConstructor.html",[269,0.243,614,2.252]],["body/interfaces/InjectableConstructor.html",[5,0.034,9,0.026,10,0.026,31,2.697,40,1.226,87,0.291,101,2.386,105,1.754,113,0.511,118,0.655,144,2.138,194,1.931,267,0.291,269,0.373,318,0.373,346,2.386,409,0.291,450,0.342,459,1.462,498,2.697,558,2.697,559,2.697,560,2.386,565,3.055,566,2.386,609,2.697,610,3.113,611,4.792,612,3.113,614,3.809,616,3.113,618,3.113,619,3.113]],["title/interfaces/MouseDownListener.html",[269,0.243,667,2.599]],["body/interfaces/MouseDownListener.html",[5,0.032,9,0.027,10,0.027,13,0.69,87,0.315,88,1.731,113,0.553,118,0.553,135,0.553,137,0.62,140,1.801,269,0.391,270,0.951,318,0.315,409,0.315,450,0.37,506,0.553,508,0.69,651,2.829,667,4.188,668,3.211,669,4.051,670,5.038,671,5.038,672,4.051]],["title/interfaces/MouseDragListener.html",[269,0.243,673,2.599]],["body/interfaces/MouseDragListener.html",[5,0.032,9,0.027,10,0.027,13,0.69,87,0.315,88,1.731,113,0.553,118,0.553,135,0.553,137,0.62,140,1.801,269,0.391,270,0.951,318,0.315,409,0.315,450,0.37,506,0.553,508,0.69,651,2.829,668,3.211,673,4.188,674,4.051,675,5.038,676,5.038,677,4.051]],["title/interfaces/MouseOverListener.html",[269,0.243,678,2.599]],["body/interfaces/MouseOverListener.html",[5,0.032,9,0.027,10,0.027,13,0.69,87,0.315,88,1.731,113,0.553,118,0.553,135,0.553,137,0.62,140,1.801,269,0.391,270,0.951,318,0.315,409,0.315,450,0.37,506,0.553,508,0.69,651,2.829,668,3.211,678,4.188,679,4.051,680,5.038,681,5.038,682,4.051]],["title/interfaces/MouseUpListener.html",[269,0.243,683,2.599]],["body/interfaces/MouseUpListener.html",[5,0.032,9,0.027,10,0.027,13,0.69,87,0.315,88,1.731,113,0.553,118,0.553,135,0.553,137,0.62,140,1.801,269,0.391,270,0.951,318,0.315,409,0.315,450,0.37,506,0.553,508,0.69,651,2.829,668,3.211,683,4.188,684,4.051,685,5.038,686,5.038,687,4.051]],["title/miscellaneous/variables.html",[688,2.175,689,3.124]],["body/miscellaneous/variables.html",[5,0.033,9,0.024,10,0.024,13,0.581,33,2.693,64,3.639,118,0.785,176,3.524,185,3.639,188,4.2,229,2.693,495,2.832,512,2.832,688,2.832,689,2.832,690,5.053,691,5.053,692,5.053,693,5.053,694,3.406,695,4.508,696,3.406]]],"invertedIndex":[["",{"_index":5,"title":{},"body":{"dependencies.html":{},"index.html":{},"overview.html":{},"changelog.html":{},"license.html":{},"modules.html":{},"modules/GridModule.html":{},"injectables/GridMessageService.html":{},"pipes/IsFixedPipe.html":{},"pipes/IsGroupPipe.html":{},"pipes/IsRowVisiblePipe.html":{},"pipes/IsVisiblePipe.html":{},"classes/Cell.html":{},"classes/EmptyFactory.html":{},"classes/FormatterParser.html":{},"classes/HtmlUtil.html":{},"classes/InjectableFactory.html":{},"classes/RowChange.html":{},"classes/SortInfo.html":{},"interfaces/ClickListener.html":{},"interfaces/DblClickListener.html":{},"interfaces/Dictionary.html":{},"interfaces/EmptyConstructor.html":{},"interfaces/EventListenerArg.html":{},"interfaces/InjectableConstructor.html":{},"interfaces/MouseDownListener.html":{},"interfaces/MouseDragListener.html":{},"interfaces/MouseOverListener.html":{},"interfaces/MouseUpListener.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":695,"title":{},"body":{"miscellaneous/variables.html":{}}}],["1",{"_index":185,"title":{},"body":{"index.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["1.1.x",{"_index":6,"title":{},"body":{"dependencies.html":{}}}],["10",{"_index":180,"title":{},"body":{"index.html":{}}}],["100",{"_index":186,"title":{},"body":{"index.html":{}}}],["11",{"_index":339,"title":{},"body":{"overview.html":{}}}],["15",{"_index":281,"title":{},"body":{"index.html":{}}}],["2",{"_index":512,"title":{},"body":{"injectables/GridMessageService.html":{},"miscellaneous/variables.html":{}}}],["2.19.3",{"_index":8,"title":{},"body":{"dependencies.html":{}}}],["2016",{"_index":453,"title":{},"body":{"modules/GridModule.html":{}}}],["2018",{"_index":393,"title":{},"body":{"license.html":{}}}],["25",{"_index":181,"title":{},"body":{"index.html":{}}}],["3.0.0",{"_index":39,"title":{},"body":{"index.html":{},"changelog.html":{}}}],["33",{"_index":343,"title":{},"body":{"overview.html":{}}}],["4",{"_index":340,"title":{},"body":{"overview.html":{}}}],["50",{"_index":182,"title":{},"body":{"index.html":{}}}],["85",{"_index":283,"title":{},"body":{"index.html":{}}}],["_level",{"_index":499,"title":{},"body":{"injectables/GridMessageService.html":{}}}],["_messag",{"_index":500,"title":{},"body":{"injectables/GridMessageService.html":{}}}],["_messageobserv",{"_index":501,"title":{},"body":{"injectables/GridMessageService.html":{}}}],["abov",{"_index":154,"title":{},"body":{"index.html":{},"license.html":{}}}],["accessor",{"_index":503,"title":{},"body":{"injectables/GridMessageService.html":{}}}],["action",{"_index":93,"title":{},"body":{"index.html":{},"license.html":{}}}],["ad",{"_index":90,"title":{},"body":{"index.html":{},"changelog.html":{}}}],["add",{"_index":360,"title":{},"body":{"changelog.html":{}}}],["advanc",{"_index":255,"title":{},"body":{"index.html":{}}}],["allow",{"_index":144,"title":{},"body":{"index.html":{},"changelog.html":{},"classes/EmptyFactory.html":{},"classes/InjectableFactory.html":{},"interfaces/InjectableConstructor.html":{}}}],["although",{"_index":217,"title":{},"body":{"index.html":{}}}],["analyze_for_entry_compon",{"_index":456,"title":{},"body":{"modules/GridModule.html":{}}}],["and/or",{"_index":417,"title":{},"body":{"license.html":{}}}],["angular",{"_index":15,"title":{},"body":{"index.html":{}}}],["angular/common",{"_index":461,"title":{},"body":{"modules/GridModule.html":{}}}],["angular/cor",{"_index":459,"title":{},"body":{"modules/GridModule.html":{},"injectables/GridMessageService.html":{},"pipes/IsFixedPipe.html":{},"pipes/IsGroupPipe.html":{},"pipes/IsRowVisiblePipe.html":{},"pipes/IsVisiblePipe.html":{},"classes/InjectableFactory.html":{},"interfaces/EventListenerArg.html":{},"interfaces/InjectableConstructor.html":{}}}],["angular/form",{"_index":463,"title":{},"body":{"modules/GridModule.html":{}}}],["anyth",{"_index":27,"title":{},"body":{"index.html":{}}}],["anything.glob",{"_index":249,"title":{},"body":{"index.html":{}}}],["api",{"_index":349,"title":{},"body":{"changelog.html":{}}}],["applic",{"_index":252,"title":{},"body":{"index.html":{}}}],["arg.interface.t",{"_index":664,"title":{},"body":{"interfaces/EventListenerArg.html":{}}}],["arg.interface.ts:4",{"_index":666,"title":{},"body":{"interfaces/EventListenerArg.html":{}}}],["arg.interface.ts:5",{"_index":665,"title":{},"body":{"interfaces/EventListenerArg.html":{}}}],["argument",{"_index":559,"title":{},"body":{"classes/EmptyFactory.html":{},"classes/InjectableFactory.html":{},"interfaces/InjectableConstructor.html":{}}}],["aris",{"_index":446,"title":{},"body":{"license.html":{}}}],["array",{"_index":121,"title":{},"body":{"index.html":{},"pipes/IsFixedPipe.html":{}}}],["arrow",{"_index":690,"title":{},"body":{"miscellaneous/variables.html":{}}}],["artifact.2.0.0",{"_index":372,"title":{},"body":{"changelog.html":{}}}],["asc",{"_index":633,"title":{},"body":{"classes/SortInfo.html":{}}}],["associ",{"_index":407,"title":{},"body":{"license.html":{}}}],["author",{"_index":436,"title":{},"body":{"license.html":{}}}],["auto",{"_index":358,"title":{},"body":{"changelog.html":{}}}],["bar",{"_index":153,"title":{},"body":{"index.html":{}}}],["base",{"_index":289,"title":{},"body":{"index.html":{}}}],["basic",{"_index":35,"title":{},"body":{"index.html":{}}}],["becom",{"_index":36,"title":{},"body":{"index.html":{}}}],["behavior",{"_index":351,"title":{},"body":{"changelog.html":{}}}],["big).titl",{"_index":150,"title":{},"body":{"index.html":{}}}],["bigtextpopup",{"_index":330,"title":{},"body":{"overview.html":{},"modules/GridModule.html":{}}}],["bind",{"_index":124,"title":{},"body":{"index.html":{}}}],["birth",{"_index":295,"title":{},"body":{"index.html":{}}}],["boolean",{"_index":140,"title":{},"body":{"index.html":{},"pipes/IsFixedPipe.html":{},"classes/Cell.html":{},"classes/SortInfo.html":{},"interfaces/ClickListener.html":{},"interfaces/DblClickListener.html":{},"interfaces/MouseDownListener.html":{},"interfaces/MouseDragListener.html":{},"interfaces/MouseOverListener.html":{},"interfaces/MouseUpListener.html":{}}}],["bootstrap",{"_index":4,"title":{},"body":{"dependencies.html":{},"overview.html":{},"modules/GridModule.html":{}}}],["bootstrap/ng",{"_index":3,"title":{},"body":{"dependencies.html":{},"modules/GridModule.html":{}}}],["break",{"_index":310,"title":{},"body":{"index.html":{},"classes/HtmlUtil.html":{}}}],["brows",{"_index":449,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":447,"title":{},"body":{"modules.html":{}}}],["built",{"_index":286,"title":{},"body":{"index.html":{}}}],["bump",{"_index":363,"title":{},"body":{"changelog.html":{}}}],["busi",{"_index":376,"title":{},"body":{"changelog.html":{}}}],["c",{"_index":392,"title":{},"body":{"license.html":{},"modules/GridModule.html":{}}}],["calculation.2.0.2",{"_index":367,"title":{},"body":{"changelog.html":{}}}],["call",{"_index":84,"title":{},"body":{"index.html":{},"changelog.html":{}}}],["call.externalpag",{"_index":174,"title":{},"body":{"index.html":{}}}],["call.externalsort",{"_index":173,"title":{},"body":{"index.html":{}}}],["call.pages",{"_index":175,"title":{},"body":{"index.html":{}}}],["callback",{"_index":85,"title":{},"body":{"index.html":{}}}],["cancer",{"_index":395,"title":{},"body":{"license.html":{},"modules/GridModule.html":{}}}],["cell",{"_index":257,"title":{"classes/Cell.html":{}},"body":{"index.html":{},"changelog.html":{},"classes/Cell.html":{}}}],["cell'",{"_index":546,"title":{},"body":{"classes/Cell.html":{}}}],["cell.onrowsav",{"_index":230,"title":{},"body":{"index.html":{}}}],["cell/editrenderers/choic",{"_index":477,"title":{},"body":{"modules/GridModule.html":{}}}],["cell/editrenderers/d",{"_index":478,"title":{},"body":{"modules/GridModule.html":{}}}],["cell/editrenderers/text",{"_index":472,"title":{},"body":{"modules/GridModule.html":{}}}],["cell/viewpopuprenderer/bigtext",{"_index":480,"title":{},"body":{"modules/GridModule.html":{}}}],["cellnumberrangeview",{"_index":278,"title":{},"body":{"index.html":{}}}],["cellviewrender",{"_index":268,"title":{},"body":{"index.html":{}}}],["chang",{"_index":63,"title":{},"body":{"index.html":{},"changelog.html":{}}}],["change.t",{"_index":622,"title":{},"body":{"classes/RowChange.html":{}}}],["change.ts:3",{"_index":627,"title":{},"body":{"classes/RowChange.html":{}}}],["change.ts:4",{"_index":626,"title":{},"body":{"classes/RowChange.html":{}}}],["changelog",{"_index":344,"title":{"changelog.html":{}},"body":{}}],["charg",{"_index":403,"title":{},"body":{"license.html":{}}}],["choic",{"_index":303,"title":{},"body":{"index.html":{}}}],["choice.compon",{"_index":488,"title":{},"body":{"modules/GridModule.html":{}}}],["choiceeditrender",{"_index":302,"title":{},"body":{"index.html":{},"overview.html":{},"modules/GridModule.html":{}}}],["choos",{"_index":183,"title":{},"body":{"index.html":{}}}],["claim",{"_index":439,"title":{},"body":{"license.html":{}}}],["class",{"_index":267,"title":{"classes/Cell.html":{},"classes/EmptyFactory.html":{},"classes/FormatterParser.html":{},"classes/HtmlUtil.html":{},"classes/InjectableFactory.html":{},"classes/RowChange.html":{},"classes/SortInfo.html":{}},"body":{"index.html":{},"overview.html":{},"modules/GridModule.html":{},"injectables/GridMessageService.html":{},"pipes/IsFixedPipe.html":{},"pipes/IsGroupPipe.html":{},"pipes/IsRowVisiblePipe.html":{},"pipes/IsVisiblePipe.html":{},"classes/Cell.html":{},"classes/EmptyFactory.html":{},"classes/FormatterParser.html":{},"classes/HtmlUtil.html":{},"classes/InjectableFactory.html":{},"classes/RowChange.html":{},"classes/SortInfo.html":{},"interfaces/EmptyConstructor.html":{},"interfaces/InjectableConstructor.html":{}}}],["click",{"_index":64,"title":{},"body":{"index.html":{},"interfaces/ClickListener.html":{},"miscellaneous/variables.html":{}}}],["click(ev",{"_index":650,"title":{},"body":{"interfaces/ClickListener.html":{}}}],["click.interface.t",{"_index":655,"title":{},"body":{"interfaces/DblClickListener.html":{}}}],["click.interface.ts:3",{"_index":658,"title":{},"body":{"interfaces/DblClickListener.html":{}}}],["clicklisten",{"_index":648,"title":{"interfaces/ClickListener.html":{}},"body":{"interfaces/ClickListener.html":{}}}],["cluster_gridmodul",{"_index":319,"title":{},"body":{"overview.html":{},"modules/GridModule.html":{}}}],["cluster_gridmodule_declar",{"_index":320,"title":{},"body":{"overview.html":{},"modules/GridModule.html":{}}}],["cluster_gridmodule_export",{"_index":322,"title":{},"body":{"overview.html":{},"modules/GridModule.html":{}}}],["cluster_gridmodule_gridcomponent_provid",{"_index":321,"title":{},"body":{"overview.html":{},"modules/GridModule.html":{}}}],["code",{"_index":46,"title":{},"body":{"index.html":{}}}],["colum",{"_index":148,"title":{},"body":{"index.html":{}}}],["column",{"_index":65,"title":{},"body":{"index.html":{},"changelog.html":{},"pipes/IsFixedPipe.html":{},"pipes/IsGroupPipe.html":{},"pipes/IsVisiblePipe.html":{}}}],["column/column",{"_index":466,"title":{},"body":{"modules/GridModule.html":{},"pipes/IsFixedPipe.html":{},"pipes/IsGroupPipe.html":{},"pipes/IsVisiblePipe.html":{}}}],["column/filterrenderers/compar",{"_index":476,"title":{},"body":{"modules/GridModule.html":{}}}],["column/filterrenderers/select",{"_index":479,"title":{},"body":{"modules/GridModule.html":{}}}],["column/filterrenderers/text",{"_index":475,"title":{},"body":{"modules/GridModule.html":{}}}],["columnheadercompon",{"_index":324,"title":{},"body":{"overview.html":{},"modules/GridModule.html":{}}}],["columns[j].field",{"_index":224,"title":{},"body":{"index.html":{}}}],["command",{"_index":53,"title":{},"body":{"index.html":{}}}],["commonmodul",{"_index":460,"title":{},"body":{"modules/GridModule.html":{}}}],["comparefilterrender",{"_index":300,"title":{},"body":{"index.html":{},"overview.html":{},"modules/GridModule.html":{}}}],["compil",{"_index":45,"title":{},"body":{"index.html":{}}}],["complex",{"_index":28,"title":{},"body":{"index.html":{}}}],["compon",{"_index":106,"title":{},"body":{"index.html":{},"overview.html":{},"modules/GridModule.html":{}}}],["condit",{"_index":422,"title":{},"body":{"license.html":{}}}],["confidenti",{"_index":454,"title":{},"body":{"modules/GridModule.html":{}}}],["config",{"_index":236,"title":{},"body":{"index.html":{},"classes/FormatterParser.html":{},"interfaces/EventListenerArg.html":{}}}],["config/config",{"_index":482,"title":{},"body":{"modules/GridModule.html":{}}}],["configmenucompon",{"_index":331,"title":{},"body":{"overview.html":{},"modules/GridModule.html":{}}}],["configmultichoicecompon",{"_index":332,"title":{},"body":{"overview.html":{},"modules/GridModule.html":{}}}],["configur",{"_index":134,"title":{},"body":{"index.html":{},"changelog.html":{}}}],["configuration.instal",{"_index":38,"title":{},"body":{"index.html":{}}}],["connect",{"_index":383,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["console.display",{"_index":212,"title":{},"body":{"index.html":{}}}],["constructor",{"_index":549,"title":{},"body":{"classes/Cell.html":{},"classes/EmptyFactory.html":{},"classes/InjectableFactory.html":{},"classes/RowChange.html":{}}}],["constructor(",{"_index":613,"title":{},"body":{"classes/InjectableFactory.html":{}}}],["constructor(emptyconstructor",{"_index":561,"title":{},"body":{"classes/EmptyFactory.html":{}}}],["constructor(o",{"_index":550,"title":{},"body":{"classes/Cell.html":{}}}],["constructor(oldrownum",{"_index":625,"title":{},"body":{"classes/RowChange.html":{}}}],["constructor(priv",{"_index":566,"title":{},"body":{"classes/EmptyFactory.html":{},"classes/InjectableFactory.html":{},"interfaces/EmptyConstructor.html":{},"interfaces/InjectableConstructor.html":{}}}],["contain",{"_index":133,"title":{},"body":{"index.html":{}}}],["contract",{"_index":443,"title":{},"body":{"license.html":{}}}],["conveni",{"_index":587,"title":{},"body":{"classes/HtmlUtil.html":{}}}],["copi",{"_index":50,"title":{},"body":{"index.html":{},"license.html":{}}}],["copyright",{"_index":391,"title":{},"body":{"license.html":{},"modules/GridModule.html":{}}}],["creat",{"_index":207,"title":{},"body":{"index.html":{}}}],["createelement(render",{"_index":272,"title":{},"body":{"index.html":{}}}],["current",{"_index":98,"title":{},"body":{"index.html":{}}}],["custom",{"_index":52,"title":{},"body":{"index.html":{},"changelog.html":{}}}],["damag",{"_index":440,"title":{},"body":{"license.html":{}}}],["data",{"_index":29,"title":{},"body":{"index.html":{},"changelog.html":{},"classes/Cell.html":{}}}],["data.celldblclick",{"_index":239,"title":{},"body":{"index.html":{}}}],["data.datacal",{"_index":125,"title":{},"body":{"index.html":{}}}],["data.rowclick",{"_index":240,"title":{},"body":{"index.html":{}}}],["data.rowdblclick",{"_index":241,"title":{},"body":{"index.html":{}}}],["data.warn",{"_index":242,"title":{},"body":{"index.html":{}}}],["data/config/ev",{"_index":374,"title":{},"body":{"changelog.html":{}}}],["datarequest",{"_index":109,"title":{},"body":{"index.html":{}}}],["datatyp",{"_index":296,"title":{},"body":{"index.html":{}}}],["date",{"_index":294,"title":{},"body":{"index.html":{},"changelog.html":{}}}],["dateeditrender",{"_index":299,"title":{},"body":{"index.html":{},"overview.html":{},"modules/GridModule.html":{}}}],["dblclick",{"_index":656,"title":{},"body":{"interfaces/DblClickListener.html":{}}}],["dblclick(ev",{"_index":657,"title":{},"body":{"interfaces/DblClickListener.html":{}}}],["dblclicklisten",{"_index":653,"title":{"interfaces/DblClickListener.html":{}},"body":{"interfaces/DblClickListener.html":{}}}],["deal",{"_index":410,"title":{},"body":{"license.html":{}}}],["declar",{"_index":317,"title":{},"body":{"overview.html":{},"modules/GridModule.html":{}}}],["default",{"_index":33,"title":{},"body":{"index.html":{},"changelog.html":{},"injectables/GridMessageService.html":{},"classes/Cell.html":{},"classes/FormatterParser.html":{},"classes/SortInfo.html":{},"miscellaneous/variables.html":{}}}],["default.externalfilt",{"_index":172,"title":{},"body":{"index.html":{}}}],["defin",{"_index":506,"title":{},"body":{"injectables/GridMessageService.html":{},"pipes/IsFixedPipe.html":{},"pipes/IsGroupPipe.html":{},"pipes/IsRowVisiblePipe.html":{},"pipes/IsVisiblePipe.html":{},"classes/Cell.html":{},"classes/EmptyFactory.html":{},"classes/FormatterParser.html":{},"classes/HtmlUtil.html":{},"classes/InjectableFactory.html":{},"classes/RowChange.html":{},"classes/SortInfo.html":{},"interfaces/ClickListener.html":{},"interfaces/DblClickListener.html":{},"interfaces/Dictionary.html":{},"interfaces/EventListenerArg.html":{},"interfaces/MouseDownListener.html":{},"interfaces/MouseDragListener.html":{},"interfaces/MouseOverListener.html":{},"interfaces/MouseUpListener.html":{}}}],["demo",{"_index":19,"title":{},"body":{"index.html":{}}}],["depend",{"_index":1,"title":{"dependencies.html":{}},"body":{"dependencies.html":{},"index.html":{},"overview.html":{},"modules/GridModule.html":{}}}],["descript",{"_index":545,"title":{},"body":{"classes/Cell.html":{},"classes/EmptyFactory.html":{},"classes/FormatterParser.html":{},"classes/HtmlUtil.html":{},"classes/InjectableFactory.html":{}}}],["design",{"_index":22,"title":{},"body":{"index.html":{}}}],["determin",{"_index":238,"title":{},"body":{"index.html":{}}}],["dictionari",{"_index":659,"title":{"interfaces/Dictionary.html":{}},"body":{"interfaces/Dictionary.html":{}}}],["differ",{"_index":287,"title":{},"body":{"index.html":{}}}],["dirti",{"_index":195,"title":{},"body":{"index.html":{},"classes/Cell.html":{}}}],["disabl",{"_index":165,"title":{},"body":{"index.html":{}}}],["display",{"_index":216,"title":{},"body":{"index.html":{},"changelog.html":{},"interfaces/Dictionary.html":{}}}],["dist",{"_index":48,"title":{},"body":{"index.html":{}}}],["distribut",{"_index":415,"title":{},"body":{"license.html":{}}}],["dob",{"_index":293,"title":{},"body":{"index.html":{}}}],["document",{"_index":408,"title":{},"body":{"license.html":{}}}],["don't",{"_index":200,"title":{},"body":{"index.html":{}}}],["down.interface.t",{"_index":669,"title":{},"body":{"interfaces/MouseDownListener.html":{}}}],["down.interface.ts:3",{"_index":672,"title":{},"body":{"interfaces/MouseDownListener.html":{}}}],["drag.interface.t",{"_index":674,"title":{},"body":{"interfaces/MouseDragListener.html":{}}}],["drag.interface.ts:3",{"_index":677,"title":{},"body":{"interfaces/MouseDragListener.html":{}}}],["e",{"_index":597,"title":{},"body":{"classes/HtmlUtil.html":{}}}],["e.g",{"_index":147,"title":{},"body":{"index.html":{}}}],["e.id",{"_index":604,"title":{},"body":{"classes/HtmlUtil.html":{}}}],["e.id.startswith(id",{"_index":605,"title":{},"body":{"classes/HtmlUtil.html":{}}}],["e.parentel",{"_index":606,"title":{},"body":{"classes/HtmlUtil.html":{}}}],["each",{"_index":264,"title":{},"body":{"index.html":{}}}],["edit",{"_index":473,"title":{},"body":{"modules/GridModule.html":{}}}],["editrender",{"_index":298,"title":{},"body":{"index.html":{}}}],["element",{"_index":590,"title":{},"body":{"classes/HtmlUtil.html":{}}}],["emit",{"_index":191,"title":{},"body":{"index.html":{}}}],["emptyconstructor",{"_index":562,"title":{"interfaces/EmptyConstructor.html":{}},"body":{"classes/EmptyFactory.html":{},"interfaces/EmptyConstructor.html":{}}}],["emptyfactori",{"_index":556,"title":{"classes/EmptyFactory.html":{}},"body":{"classes/EmptyFactory.html":{},"interfaces/EmptyConstructor.html":{}}}],["entrycompon",{"_index":452,"title":{},"body":{"modules/GridModule.html":{}}}],["error",{"_index":502,"title":{},"body":{"injectables/GridMessageService.html":{}}}],["error(messag",{"_index":505,"title":{},"body":{"injectables/GridMessageService.html":{}}}],["especi",{"_index":380,"title":{},"body":{"changelog.html":{}}}],["event",{"_index":88,"title":{},"body":{"index.html":{},"license.html":{},"interfaces/ClickListener.html":{},"interfaces/DblClickListener.html":{},"interfaces/MouseDownListener.html":{},"interfaces/MouseDragListener.html":{},"interfaces/MouseOverListener.html":{},"interfaces/MouseUpListener.html":{}}}],["event.service.t",{"_index":694,"title":{},"body":{"miscellaneous/variables.html":{}}}],["eventlisten",{"_index":612,"title":{},"body":{"classes/InjectableFactory.html":{},"interfaces/InjectableConstructor.html":{}}}],["eventlistenerarg",{"_index":202,"title":{"interfaces/EventListenerArg.html":{}},"body":{"index.html":{},"interfaces/EventListenerArg.html":{}}}],["events.mod",{"_index":205,"title":{},"body":{"index.html":{}}}],["exampl",{"_index":102,"title":{},"body":{"index.html":{}}}],["expect",{"_index":31,"title":{},"body":{"index.html":{},"classes/InjectableFactory.html":{},"interfaces/InjectableConstructor.html":{}}}],["export",{"_index":318,"title":{},"body":{"overview.html":{},"modules/GridModule.html":{},"injectables/GridMessageService.html":{},"pipes/IsFixedPipe.html":{},"pipes/IsGroupPipe.html":{},"pipes/IsRowVisiblePipe.html":{},"pipes/IsVisiblePipe.html":{},"classes/Cell.html":{},"classes/EmptyFactory.html":{},"classes/FormatterParser.html":{},"classes/HtmlUtil.html":{},"classes/InjectableFactory.html":{},"classes/RowChange.html":{},"classes/SortInfo.html":{},"interfaces/ClickListener.html":{},"interfaces/DblClickListener.html":{},"interfaces/Dictionary.html":{},"interfaces/EmptyConstructor.html":{},"interfaces/EventListenerArg.html":{},"interfaces/InjectableConstructor.html":{},"interfaces/MouseDownListener.html":{},"interfaces/MouseDragListener.html":{},"interfaces/MouseOverListener.html":{},"interfaces/MouseUpListener.html":{}}}],["express",{"_index":429,"title":{},"body":{"license.html":{}}}],["extend",{"_index":288,"title":{},"body":{"index.html":{}}}],["extern",{"_index":83,"title":{},"body":{"index.html":{},"changelog.html":{}}}],["externalconfig",{"_index":352,"title":{},"body":{"changelog.html":{}}}],["externaldata(this.datageneratorservice.getdata(250",{"_index":115,"title":{},"body":{"index.html":{}}}],["externalinfo",{"_index":110,"title":{},"body":{"index.html":{}}}],["externalinfo)).delay(500",{"_index":116,"title":{},"body":{"index.html":{}}}],["fals",{"_index":141,"title":{},"body":{"index.html":{},"pipes/IsFixedPipe.html":{},"classes/Cell.html":{}}}],["featur",{"_index":24,"title":{},"body":{"index.html":{},"changelog.html":{}}}],["femal",{"_index":304,"title":{},"body":{"index.html":{}}}],["field",{"_index":223,"title":{},"body":{"index.html":{},"classes/SortInfo.html":{}}}],["file",{"_index":409,"title":{},"body":{"license.html":{},"modules/GridModule.html":{},"injectables/GridMessageService.html":{},"pipes/IsFixedPipe.html":{},"pipes/IsGroupPipe.html":{},"pipes/IsRowVisiblePipe.html":{},"pipes/IsVisiblePipe.html":{},"classes/Cell.html":{},"classes/EmptyFactory.html":{},"classes/FormatterParser.html":{},"classes/HtmlUtil.html":{},"classes/InjectableFactory.html":{},"classes/RowChange.html":{},"classes/SortInfo.html":{},"interfaces/ClickListener.html":{},"interfaces/DblClickListener.html":{},"interfaces/Dictionary.html":{},"interfaces/EmptyConstructor.html":{},"interfaces/EventListenerArg.html":{},"interfaces/InjectableConstructor.html":{},"interfaces/MouseDownListener.html":{},"interfaces/MouseDragListener.html":{},"interfaces/MouseOverListener.html":{},"interfaces/MouseUpListener.html":{}}}],["filter",{"_index":67,"title":{},"body":{"index.html":{},"modules/GridModule.html":{}}}],["filterrender",{"_index":290,"title":{},"body":{"index.html":{}}}],["first",{"_index":75,"title":{},"body":{"index.html":{}}}],["firstnam",{"_index":291,"title":{},"body":{"index.html":{}}}],["fit",{"_index":432,"title":{},"body":{"license.html":{}}}],["fix",{"_index":160,"title":{},"body":{"index.html":{},"changelog.html":{},"pipes/IsFixedPipe.html":{}}}],["fixed.pip",{"_index":471,"title":{},"body":{"modules/GridModule.html":{}}}],["fixed.pipe.t",{"_index":524,"title":{},"body":{"pipes/IsFixedPipe.html":{}}}],["fixed.pipe.ts:10",{"_index":529,"title":{},"body":{"pipes/IsFixedPipe.html":{}}}],["fixes.1.0.0",{"_index":387,"title":{},"body":{"changelog.html":{}}}],["flag",{"_index":142,"title":{},"body":{"index.html":{}}}],["flow",{"_index":213,"title":{},"body":{"index.html":{}}}],["folder",{"_index":49,"title":{},"body":{"index.html":{}}}],["follow",{"_index":254,"title":{},"body":{"index.html":{},"license.html":{}}}],["format",{"_index":233,"title":{},"body":{"index.html":{}}}],["format/pars",{"_index":354,"title":{},"body":{"changelog.html":{}}}],["formatt",{"_index":571,"title":{},"body":{"classes/FormatterParser.html":{}}}],["formatterpars",{"_index":568,"title":{"classes/FormatterParser.html":{}},"body":{"classes/FormatterParser.html":{}}}],["formatting/pars",{"_index":379,"title":{},"body":{"changelog.html":{}}}],["formatvalu",{"_index":574,"title":{},"body":{"classes/FormatterParser.html":{}}}],["formatvalue(valu",{"_index":577,"title":{},"body":{"classes/FormatterParser.html":{}}}],["formsmodul",{"_index":462,"title":{},"body":{"modules/GridModule.html":{}}}],["forroot(globalconfig",{"_index":491,"title":{},"body":{"modules/GridModule.html":{}}}],["free",{"_index":402,"title":{},"body":{"license.html":{}}}],["from.nvisiblerow",{"_index":184,"title":{},"body":{"index.html":{}}}],["full",{"_index":23,"title":{},"body":{"index.html":{}}}],["function",{"_index":107,"title":{},"body":{"index.html":{}}}],["furnish",{"_index":420,"title":{},"body":{"license.html":{}}}],["gender",{"_index":301,"title":{},"body":{"index.html":{}}}],["gener",{"_index":346,"title":{},"body":{"changelog.html":{},"classes/EmptyFactory.html":{},"classes/InjectableFactory.html":{},"interfaces/InjectableConstructor.html":{}}}],["generic.2.1.1",{"_index":355,"title":{},"body":{"changelog.html":{}}}],["get",{"_index":11,"title":{"index.html":{},"changelog.html":{},"license.html":{}},"body":{"index.html":{}}}],["getasc",{"_index":634,"title":{},"body":{"classes/SortInfo.html":{}}}],["getfield",{"_index":635,"title":{},"body":{"classes/SortInfo.html":{}}}],["getid",{"_index":591,"title":{},"body":{"classes/HtmlUtil.html":{}}}],["getid(",{"_index":594,"title":{},"body":{"classes/HtmlUtil.html":{}}}],["getidel",{"_index":592,"title":{},"body":{"classes/HtmlUtil.html":{}}}],["getidelement(",{"_index":599,"title":{},"body":{"classes/HtmlUtil.html":{}}}],["getinst",{"_index":560,"title":{},"body":{"classes/EmptyFactory.html":{},"classes/InjectableFactory.html":{},"interfaces/EmptyConstructor.html":{},"interfaces/InjectableConstructor.html":{}}}],["getloc",{"_index":593,"title":{},"body":{"classes/HtmlUtil.html":{}}}],["getlocation(",{"_index":601,"title":{},"body":{"classes/HtmlUtil.html":{}}}],["getmessageobserv",{"_index":517,"title":{},"body":{"injectables/GridMessageService.html":{}}}],["github",{"_index":20,"title":{},"body":{"index.html":{}}}],["global",{"_index":130,"title":{},"body":{"index.html":{},"changelog.html":{}}}],["global.servic",{"_index":486,"title":{},"body":{"modules/GridModule.html":{}}}],["globalconfig",{"_index":492,"title":{},"body":{"modules/GridModule.html":{}}}],["grant",{"_index":401,"title":{},"body":{"license.html":{}}}],["grid",{"_index":16,"title":{},"body":{"index.html":{},"changelog.html":{}}}],["grid\";@ngmodul",{"_index":42,"title":{},"body":{"index.html":{}}}],["grid'",{"_index":146,"title":{},"body":{"index.html":{}}}],["grid.cellclick",{"_index":237,"title":{},"body":{"index.html":{}}}],["grid.compon",{"_index":465,"title":{},"body":{"modules/GridModule.html":{}}}],["grid.groupbi",{"_index":163,"title":{},"body":{"index.html":{}}}],["grid.linkedgroup",{"_index":136,"title":{},"body":{"index.html":{}}}],["grid.output",{"_index":219,"title":{},"body":{"index.html":{}}}],["grid.them",{"_index":155,"title":{},"body":{"index.html":{}}}],["gridcompon",{"_index":323,"title":{},"body":{"overview.html":{},"modules/GridModule.html":{}}}],["grideventservic",{"_index":334,"title":{},"body":{"overview.html":{},"modules/GridModule.html":{}}}],["gridglobalservic",{"_index":484,"title":{},"body":{"modules/GridModule.html":{}}}],["gridmessageservic",{"_index":335,"title":{"injectables/GridMessageService.html":{}},"body":{"overview.html":{},"modules/GridModule.html":{},"injectables/GridMessageService.html":{}}}],["gridmodul",{"_index":41,"title":{"modules/GridModule.html":{}},"body":{"index.html":{},"overview.html":{},"modules.html":{},"modules/GridModule.html":{}}}],["gridmodule.forroot",{"_index":43,"title":{},"body":{"index.html":{}}}],["gridservic",{"_index":333,"title":{},"body":{"overview.html":{},"modules/GridModule.html":{}}}],["group",{"_index":80,"title":{},"body":{"index.html":{}}}],["group.pip",{"_index":470,"title":{},"body":{"modules/GridModule.html":{}}}],["group.pipe.t",{"_index":533,"title":{},"body":{"pipes/IsGroupPipe.html":{}}}],["group.pipe.ts:9",{"_index":535,"title":{},"body":{"pipes/IsGroupPipe.html":{}}}],["groupbycollaps",{"_index":166,"title":{},"body":{"index.html":{}}}],["handl",{"_index":25,"title":{},"body":{"index.html":{}}}],["hci",{"_index":18,"title":{},"body":{"index.html":{}}}],["hci'",{"_index":14,"title":{},"body":{"index.html":{}}}],["header",{"_index":66,"title":{},"body":{"index.html":{}}}],["header.compon",{"_index":467,"title":{},"body":{"modules/GridModule.html":{}}}],["height",{"_index":364,"title":{},"body":{"changelog.html":{}}}],["here",{"_index":100,"title":{},"body":{"index.html":{}}}],["herebi",{"_index":400,"title":{},"body":{"license.html":{}}}],["hidden",{"_index":170,"title":{},"body":{"index.html":{}}}],["high",{"_index":282,"title":{},"body":{"index.html":{}}}],["holder",{"_index":437,"title":{},"body":{"license.html":{},"classes/Cell.html":{}}}],["html",{"_index":128,"title":{},"body":{"index.html":{}}}],["htmlelement",{"_index":595,"title":{},"body":{"classes/HtmlUtil.html":{}}}],["htmlelement;a",{"_index":274,"title":{},"body":{"index.html":{}}}],["htmlutil",{"_index":584,"title":{"classes/HtmlUtil.html":{}},"body":{"classes/HtmlUtil.html":{}}}],["huntsman",{"_index":394,"title":{},"body":{"license.html":{},"modules/GridModule.html":{}}}],["ic",{"_index":616,"title":{},"body":{"classes/InjectableFactory.html":{},"interfaces/InjectableConstructor.html":{}}}],["id",{"_index":129,"title":{},"body":{"index.html":{},"classes/HtmlUtil.html":{}}}],["implement",{"_index":105,"title":{},"body":{"index.html":{},"pipes/IsFixedPipe.html":{},"pipes/IsGroupPipe.html":{},"pipes/IsRowVisiblePipe.html":{},"pipes/IsVisiblePipe.html":{},"classes/InjectableFactory.html":{},"interfaces/InjectableConstructor.html":{}}}],["impli",{"_index":430,"title":{},"body":{"license.html":{}}}],["import",{"_index":40,"title":{},"body":{"index.html":{},"modules/GridModule.html":{},"injectables/GridMessageService.html":{},"pipes/IsFixedPipe.html":{},"pipes/IsGroupPipe.html":{},"pipes/IsRowVisiblePipe.html":{},"pipes/IsVisiblePipe.html":{},"classes/HtmlUtil.html":{},"classes/InjectableFactory.html":{},"interfaces/EventListenerArg.html":{},"interfaces/InjectableConstructor.html":{}}}],["improv",{"_index":378,"title":{},"body":{"changelog.html":{}}}],["in.onconfigchang",{"_index":235,"title":{},"body":{"index.html":{}}}],["includ",{"_index":413,"title":{},"body":{"license.html":{}}}],["index",{"_index":13,"title":{"index.html":{}},"body":{"injectables/GridMessageService.html":{},"classes/Cell.html":{},"classes/EmptyFactory.html":{},"classes/FormatterParser.html":{},"classes/HtmlUtil.html":{},"classes/InjectableFactory.html":{},"classes/RowChange.html":{},"classes/SortInfo.html":{},"interfaces/ClickListener.html":{},"interfaces/DblClickListener.html":{},"interfaces/Dictionary.html":{},"interfaces/EventListenerArg.html":{},"interfaces/MouseDownListener.html":{},"interfaces/MouseDragListener.html":{},"interfaces/MouseOverListener.html":{},"interfaces/MouseUpListener.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":450,"title":{},"body":{"modules/GridModule.html":{},"injectables/GridMessageService.html":{},"pipes/IsFixedPipe.html":{},"pipes/IsGroupPipe.html":{},"pipes/IsRowVisiblePipe.html":{},"pipes/IsVisiblePipe.html":{},"classes/Cell.html":{},"classes/EmptyFactory.html":{},"classes/FormatterParser.html":{},"classes/HtmlUtil.html":{},"classes/InjectableFactory.html":{},"classes/RowChange.html":{},"classes/SortInfo.html":{},"interfaces/ClickListener.html":{},"interfaces/DblClickListener.html":{},"interfaces/Dictionary.html":{},"interfaces/EmptyConstructor.html":{},"interfaces/EventListenerArg.html":{},"interfaces/InjectableConstructor.html":{},"interfaces/MouseDownListener.html":{},"interfaces/MouseDragListener.html":{},"interfaces/MouseOverListener.html":{},"interfaces/MouseUpListener.html":{}}}],["info.id",{"_index":127,"title":{},"body":{"index.html":{}}}],["info.t",{"_index":632,"title":{},"body":{"classes/SortInfo.html":{}}}],["info.ts:13",{"_index":639,"title":{},"body":{"classes/SortInfo.html":{}}}],["info.ts:17",{"_index":643,"title":{},"body":{"classes/SortInfo.html":{}}}],["info.ts:2",{"_index":644,"title":{},"body":{"classes/SortInfo.html":{}}}],["info.ts:3",{"_index":645,"title":{},"body":{"classes/SortInfo.html":{}}}],["info.ts:5",{"_index":638,"title":{},"body":{"classes/SortInfo.html":{}}}],["info.ts:9",{"_index":641,"title":{},"body":{"classes/SortInfo.html":{}}}],["initi",{"_index":388,"title":{},"body":{"changelog.html":{}}}],["inject",{"_index":341,"title":{"injectables/GridMessageService.html":{}},"body":{"overview.html":{},"injectables/GridMessageService.html":{}}}],["injectableconstructor",{"_index":614,"title":{"interfaces/InjectableConstructor.html":{}},"body":{"classes/InjectableFactory.html":{},"interfaces/InjectableConstructor.html":{}}}],["injectablefactori",{"_index":609,"title":{"classes/InjectableFactory.html":{}},"body":{"classes/InjectableFactory.html":{},"interfaces/InjectableConstructor.html":{}}}],["injector",{"_index":611,"title":{},"body":{"classes/InjectableFactory.html":{},"interfaces/InjectableConstructor.html":{}}}],["input",{"_index":117,"title":{},"body":{"index.html":{}}}],["instanc",{"_index":253,"title":{},"body":{"index.html":{}}}],["instanti",{"_index":558,"title":{},"body":{"classes/EmptyFactory.html":{},"classes/InjectableFactory.html":{},"interfaces/InjectableConstructor.html":{}}}],["instead",{"_index":58,"title":{},"body":{"index.html":{}}}],["institut",{"_index":396,"title":{},"body":{"license.html":{},"modules/GridModule.html":{}}}],["interfac",{"_index":269,"title":{"interfaces/ClickListener.html":{},"interfaces/DblClickListener.html":{},"interfaces/Dictionary.html":{},"interfaces/EmptyConstructor.html":{},"interfaces/EventListenerArg.html":{},"interfaces/InjectableConstructor.html":{},"interfaces/MouseDownListener.html":{},"interfaces/MouseDragListener.html":{},"interfaces/MouseOverListener.html":{},"interfaces/MouseUpListener.html":{}},"body":{"index.html":{},"overview.html":{},"classes/EmptyFactory.html":{},"classes/InjectableFactory.html":{},"interfaces/ClickListener.html":{},"interfaces/DblClickListener.html":{},"interfaces/Dictionary.html":{},"interfaces/EmptyConstructor.html":{},"interfaces/EventListenerArg.html":{},"interfaces/InjectableConstructor.html":{},"interfaces/MouseDownListener.html":{},"interfaces/MouseDragListener.html":{},"interfaces/MouseOverListener.html":{},"interfaces/MouseUpListener.html":{}}}],["intro",{"_index":21,"title":{},"body":{"index.html":{}}}],["introduc",{"_index":311,"title":{},"body":{"index.html":{}}}],["isfix",{"_index":526,"title":{},"body":{"pipes/IsFixedPipe.html":{}}}],["isfixedpip",{"_index":327,"title":{"pipes/IsFixedPipe.html":{}},"body":{"overview.html":{},"modules/GridModule.html":{},"pipes/IsFixedPipe.html":{}}}],["isgroup",{"_index":534,"title":{},"body":{"pipes/IsGroupPipe.html":{}}}],["isgrouppip",{"_index":326,"title":{"pipes/IsGroupPipe.html":{}},"body":{"overview.html":{},"modules/GridModule.html":{},"pipes/IsGroupPipe.html":{}}}],["isrowvis",{"_index":539,"title":{},"body":{"pipes/IsRowVisiblePipe.html":{}}}],["isrowvisiblepip",{"_index":328,"title":{"pipes/IsRowVisiblePipe.html":{}},"body":{"overview.html":{},"modules/GridModule.html":{},"pipes/IsRowVisiblePipe.html":{}}}],["issu",{"_index":308,"title":{},"body":{"index.html":{}}}],["isvis",{"_index":543,"title":{},"body":{"pipes/IsVisiblePipe.html":{}}}],["isvisiblepip",{"_index":325,"title":{"pipes/IsVisiblePipe.html":{}},"body":{"overview.html":{},"modules/GridModule.html":{},"pipes/IsVisiblePipe.html":{}}}],["j",{"_index":222,"title":{},"body":{"index.html":{}}}],["json",{"_index":132,"title":{},"body":{"index.html":{}}}],["key",{"_index":204,"title":{},"body":{"index.html":{},"classes/Cell.html":{}}}],["key1",{"_index":247,"title":{},"body":{"index.html":{}}}],["key2",{"_index":248,"title":{},"body":{"index.html":{}}}],["keyword",{"_index":368,"title":{},"body":{"changelog.html":{}}}],["kind",{"_index":428,"title":{},"body":{"license.html":{}}}],["known",{"_index":307,"title":{},"body":{"index.html":{}}}],["lab",{"_index":276,"title":{},"body":{"index.html":{}}}],["last",{"_index":76,"title":{},"body":{"index.html":{}}}],["left",{"_index":161,"title":{},"body":{"index.html":{}}}],["legend",{"_index":316,"title":{},"body":{"overview.html":{},"modules/GridModule.html":{}}}],["liabil",{"_index":441,"title":{},"body":{"license.html":{}}}],["liabl",{"_index":438,"title":{},"body":{"license.html":{}}}],["librari",{"_index":17,"title":{},"body":{"index.html":{}}}],["licens",{"_index":371,"title":{"license.html":{}},"body":{"changelog.html":{}}}],["limit",{"_index":187,"title":{},"body":{"index.html":{},"license.html":{}}}],["link",{"_index":138,"title":{},"body":{"index.html":{}}}],["list",{"_index":99,"title":{},"body":{"index.html":{},"pipes/IsFixedPipe.html":{},"pipes/IsGroupPipe.html":{},"pipes/IsRowVisiblePipe.html":{},"pipes/IsVisiblePipe.html":{}}}],["list.filter((o",{"_index":531,"title":{},"body":{"pipes/IsFixedPipe.html":{},"pipes/IsGroupPipe.html":{},"pipes/IsRowVisiblePipe.html":{},"pipes/IsVisiblePipe.html":{}}}],["listen",{"_index":89,"title":{},"body":{"index.html":{},"changelog.html":{},"interfaces/EventListenerArg.html":{}}}],["load",{"_index":199,"title":{},"body":{"index.html":{},"changelog.html":{}}}],["locat",{"_index":227,"title":{},"body":{"index.html":{}}}],["log",{"_index":345,"title":{},"body":{"changelog.html":{}}}],["low",{"_index":280,"title":{},"body":{"index.html":{}}}],["male",{"_index":305,"title":{},"body":{"index.html":{}}}],["manag",{"_index":548,"title":{},"body":{"classes/Cell.html":{}}}],["mani",{"_index":97,"title":{},"body":{"index.html":{}}}],["match",{"_index":10,"title":{},"body":{"dependencies.html":{},"index.html":{},"overview.html":{},"changelog.html":{},"license.html":{},"modules.html":{},"modules/GridModule.html":{},"injectables/GridMessageService.html":{},"pipes/IsFixedPipe.html":{},"pipes/IsGroupPipe.html":{},"pipes/IsRowVisiblePipe.html":{},"pipes/IsVisiblePipe.html":{},"classes/Cell.html":{},"classes/EmptyFactory.html":{},"classes/FormatterParser.html":{},"classes/HtmlUtil.html":{},"classes/InjectableFactory.html":{},"classes/RowChange.html":{},"classes/SortInfo.html":{},"interfaces/ClickListener.html":{},"interfaces/DblClickListener.html":{},"interfaces/Dictionary.html":{},"interfaces/EmptyConstructor.html":{},"interfaces/EventListenerArg.html":{},"interfaces/InjectableConstructor.html":{},"interfaces/MouseDownListener.html":{},"interfaces/MouseDragListener.html":{},"interfaces/MouseOverListener.html":{},"interfaces/MouseUpListener.html":{},"miscellaneous/variables.html":{}}}],["menu.compon",{"_index":483,"title":{},"body":{"modules/GridModule.html":{}}}],["merchant",{"_index":431,"title":{},"body":{"license.html":{}}}],["merg",{"_index":414,"title":{},"body":{"license.html":{}}}],["messag",{"_index":243,"title":{},"body":{"index.html":{},"injectables/GridMessageService.html":{}}}],["message.service.t",{"_index":496,"title":{},"body":{"injectables/GridMessageService.html":{}}}],["message.service.ts:10",{"_index":513,"title":{},"body":{"injectables/GridMessageService.html":{}}}],["message.service.ts:12",{"_index":507,"title":{},"body":{"injectables/GridMessageService.html":{}}}],["message.service.ts:16",{"_index":511,"title":{},"body":{"injectables/GridMessageService.html":{}}}],["message.service.ts:20",{"_index":518,"title":{},"body":{"injectables/GridMessageService.html":{}}}],["message.service.ts:8",{"_index":514,"title":{},"body":{"injectables/GridMessageService.html":{}}}],["message.service.ts:9",{"_index":516,"title":{},"body":{"injectables/GridMessageService.html":{}}}],["messageobserv",{"_index":504,"title":{},"body":{"injectables/GridMessageService.html":{}}}],["metadata",{"_index":525,"title":{},"body":{"pipes/IsFixedPipe.html":{},"pipes/IsGroupPipe.html":{},"pipes/IsRowVisiblePipe.html":{},"pipes/IsVisiblePipe.html":{},"classes/Cell.html":{}}}],["method",{"_index":270,"title":{},"body":{"index.html":{},"injectables/GridMessageService.html":{},"pipes/IsFixedPipe.html":{},"pipes/IsGroupPipe.html":{},"pipes/IsRowVisiblePipe.html":{},"pipes/IsVisiblePipe.html":{},"classes/EmptyFactory.html":{},"classes/FormatterParser.html":{},"classes/HtmlUtil.html":{},"classes/InjectableFactory.html":{},"classes/SortInfo.html":{},"interfaces/ClickListener.html":{},"interfaces/DblClickListener.html":{},"interfaces/MouseDownListener.html":{},"interfaces/MouseDragListener.html":{},"interfaces/MouseOverListener.html":{},"interfaces/MouseUpListener.html":{}}}],["miscellan",{"_index":688,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["mm/dd/yyyi",{"_index":297,"title":{},"body":{"index.html":{}}}],["mock",{"_index":108,"title":{},"body":{"index.html":{}}}],["mode",{"_index":208,"title":{},"body":{"index.html":{}}}],["modif",{"_index":573,"title":{},"body":{"classes/FormatterParser.html":{}}}],["modifi",{"_index":145,"title":{},"body":{"index.html":{},"license.html":{}}}],["modul",{"_index":250,"title":{"modules.html":{},"modules/GridModule.html":{}},"body":{"index.html":{},"overview.html":{},"modules.html":{},"modules/GridModule.html":{}}}],["modulewithprovid",{"_index":457,"title":{},"body":{"modules/GridModule.html":{}}}],["moment",{"_index":7,"title":{},"body":{"dependencies.html":{}}}],["more",{"_index":82,"title":{},"body":{"index.html":{},"changelog.html":{}}}],["mousedown",{"_index":670,"title":{},"body":{"interfaces/MouseDownListener.html":{}}}],["mousedown(ev",{"_index":671,"title":{},"body":{"interfaces/MouseDownListener.html":{}}}],["mousedownlisten",{"_index":667,"title":{"interfaces/MouseDownListener.html":{}},"body":{"interfaces/MouseDownListener.html":{}}}],["mousedrag",{"_index":675,"title":{},"body":{"interfaces/MouseDragListener.html":{}}}],["mousedrag(ev",{"_index":676,"title":{},"body":{"interfaces/MouseDragListener.html":{}}}],["mousedraglisten",{"_index":673,"title":{"interfaces/MouseDragListener.html":{}},"body":{"interfaces/MouseDragListener.html":{}}}],["mouseev",{"_index":651,"title":{},"body":{"interfaces/ClickListener.html":{},"interfaces/DblClickListener.html":{},"interfaces/MouseDownListener.html":{},"interfaces/MouseDragListener.html":{},"interfaces/MouseOverListener.html":{},"interfaces/MouseUpListener.html":{}}}],["mouseov",{"_index":680,"title":{},"body":{"interfaces/MouseOverListener.html":{}}}],["mouseover(ev",{"_index":681,"title":{},"body":{"interfaces/MouseOverListener.html":{}}}],["mouseoverlisten",{"_index":678,"title":{"interfaces/MouseOverListener.html":{}},"body":{"interfaces/MouseOverListener.html":{}}}],["mouseup",{"_index":685,"title":{},"body":{"interfaces/MouseUpListener.html":{}}}],["mouseup(ev",{"_index":686,"title":{},"body":{"interfaces/MouseUpListener.html":{}}}],["mouseuplisten",{"_index":683,"title":{"interfaces/MouseUpListener.html":{}},"body":{"interfaces/MouseUpListener.html":{}}}],["move",{"_index":47,"title":{},"body":{"index.html":{}}}],["multi",{"_index":487,"title":{},"body":{"modules/GridModule.html":{}}}],["name",{"_index":137,"title":{},"body":{"index.html":{},"injectables/GridMessageService.html":{},"pipes/IsFixedPipe.html":{},"pipes/IsGroupPipe.html":{},"pipes/IsRowVisiblePipe.html":{},"pipes/IsVisiblePipe.html":{},"classes/Cell.html":{},"classes/EmptyFactory.html":{},"classes/FormatterParser.html":{},"classes/HtmlUtil.html":{},"classes/InjectableFactory.html":{},"classes/RowChange.html":{},"classes/SortInfo.html":{},"interfaces/ClickListener.html":{},"interfaces/DblClickListener.html":{},"interfaces/MouseDownListener.html":{},"interfaces/MouseDragListener.html":{},"interfaces/MouseOverListener.html":{},"interfaces/MouseUpListener.html":{}}}],["navig",{"_index":193,"title":{},"body":{"index.html":{}}}],["nearli",{"_index":26,"title":{},"body":{"index.html":{}}}],["need",{"_index":547,"title":{},"body":{"classes/Cell.html":{}}}],["new",{"_index":194,"title":{},"body":{"index.html":{},"injectables/GridMessageService.html":{},"classes/EmptyFactory.html":{},"classes/InjectableFactory.html":{},"interfaces/EmptyConstructor.html":{},"interfaces/InjectableConstructor.html":{}}}],["new(injector",{"_index":619,"title":{},"body":{"classes/InjectableFactory.html":{},"interfaces/InjectableConstructor.html":{}}}],["newrownum",{"_index":623,"title":{},"body":{"classes/RowChange.html":{}}}],["newvalu",{"_index":226,"title":{},"body":{"index.html":{}}}],["next",{"_index":78,"title":{},"body":{"index.html":{}}}],["ng",{"_index":2,"title":{},"body":{"dependencies.html":{},"index.html":{},"modules/GridModule.html":{}}}],["ngbmodul",{"_index":464,"title":{},"body":{"modules/GridModule.html":{}}}],["ngbmodule.forroot",{"_index":489,"title":{},"body":{"modules/GridModule.html":{}}}],["ngmodul",{"_index":458,"title":{},"body":{"modules/GridModule.html":{}}}],["ngoninit",{"_index":111,"title":{},"body":{"index.html":{}}}],["nlab",{"_index":275,"title":{},"body":{"index.html":{}}}],["no_ev",{"_index":691,"title":{},"body":{"miscellaneous/variables.html":{}}}],["noninfring",{"_index":435,"title":{},"body":{"license.html":{}}}],["note",{"_index":96,"title":{},"body":{"index.html":{}}}],["notic",{"_index":423,"title":{},"body":{"license.html":{}}}],["npmignore.2.0.1",{"_index":369,"title":{},"body":{"changelog.html":{}}}],["npmpack",{"_index":56,"title":{},"body":{"index.html":{}}}],["npmpublish",{"_index":57,"title":{},"body":{"index.html":{}}}],["null",{"_index":607,"title":{},"body":{"classes/HtmlUtil.html":{},"classes/SortInfo.html":{}}}],["number",{"_index":176,"title":{},"body":{"index.html":{},"injectables/GridMessageService.html":{},"classes/Cell.html":{},"classes/RowChange.html":{},"miscellaneous/variables.html":{}}}],["numer",{"_index":386,"title":{},"body":{"changelog.html":{}}}],["o",{"_index":552,"title":{},"body":{"classes/Cell.html":{}}}],["o.isfix",{"_index":532,"title":{},"body":{"pipes/IsFixedPipe.html":{}}}],["o.isgroup",{"_index":536,"title":{},"body":{"pipes/IsGroupPipe.html":{}}}],["o.isutil",{"_index":537,"title":{},"body":{"pipes/IsGroupPipe.html":{}}}],["o.vis",{"_index":542,"title":{},"body":{"pipes/IsRowVisiblePipe.html":{},"pipes/IsVisiblePipe.html":{}}}],["object",{"_index":119,"title":{},"body":{"index.html":{},"classes/Cell.html":{}}}],["object.assign(thi",{"_index":555,"title":{},"body":{"classes/Cell.html":{}}}],["objects.fixedcolumn",{"_index":159,"title":{},"body":{"index.html":{}}}],["observ",{"_index":385,"title":{},"body":{"changelog.html":{},"injectables/GridMessageService.html":{}}}],["observable.of(new",{"_index":114,"title":{},"body":{"index.html":{}}}],["obtain",{"_index":405,"title":{},"body":{"license.html":{}}}],["old",{"_index":228,"title":{},"body":{"index.html":{}}}],["oldrownum",{"_index":624,"title":{},"body":{"classes/RowChange.html":{}}}],["oldvalu",{"_index":225,"title":{},"body":{"index.html":{}}}],["on",{"_index":81,"title":{},"body":{"index.html":{}}}],["oncellsav",{"_index":220,"title":{},"body":{"index.html":{}}}],["onrowsav",{"_index":192,"title":{},"body":{"index.html":{}}}],["option",{"_index":135,"title":{},"body":{"index.html":{},"injectables/GridMessageService.html":{},"pipes/IsFixedPipe.html":{},"pipes/IsGroupPipe.html":{},"pipes/IsRowVisiblePipe.html":{},"pipes/IsVisiblePipe.html":{},"classes/Cell.html":{},"classes/EmptyFactory.html":{},"classes/FormatterParser.html":{},"classes/HtmlUtil.html":{},"classes/InjectableFactory.html":{},"classes/RowChange.html":{},"classes/SortInfo.html":{},"interfaces/ClickListener.html":{},"interfaces/DblClickListener.html":{},"interfaces/EventListenerArg.html":{},"interfaces/MouseDownListener.html":{},"interfaces/MouseDragListener.html":{},"interfaces/MouseOverListener.html":{},"interfaces/MouseUpListener.html":{}}}],["origin",{"_index":234,"title":{},"body":{"index.html":{}}}],["originalrowdata",{"_index":232,"title":{},"body":{"index.html":{}}}],["otherwis",{"_index":445,"title":{},"body":{"license.html":{}}}],["out",{"_index":338,"title":{},"body":{"overview.html":{},"license.html":{},"modules/GridModule.html":{}}}],["over.interface.t",{"_index":679,"title":{},"body":{"interfaces/MouseOverListener.html":{}}}],["over.interface.ts:3",{"_index":682,"title":{},"body":{"interfaces/MouseOverListener.html":{}}}],["overview",{"_index":315,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["pack",{"_index":60,"title":{},"body":{"index.html":{}}}],["packag",{"_index":0,"title":{"dependencies.html":{}},"body":{"index.html":{}}}],["package.json",{"_index":51,"title":{},"body":{"index.html":{}}}],["page",{"_index":72,"title":{},"body":{"index.html":{}}}],["paramet",{"_index":508,"title":{},"body":{"injectables/GridMessageService.html":{},"pipes/IsFixedPipe.html":{},"pipes/IsGroupPipe.html":{},"pipes/IsRowVisiblePipe.html":{},"pipes/IsVisiblePipe.html":{},"classes/Cell.html":{},"classes/EmptyFactory.html":{},"classes/FormatterParser.html":{},"classes/HtmlUtil.html":{},"classes/InjectableFactory.html":{},"classes/RowChange.html":{},"classes/SortInfo.html":{},"interfaces/ClickListener.html":{},"interfaces/DblClickListener.html":{},"interfaces/MouseDownListener.html":{},"interfaces/MouseDragListener.html":{},"interfaces/MouseOverListener.html":{},"interfaces/MouseUpListener.html":{}}}],["parser",{"_index":572,"title":{},"body":{"classes/FormatterParser.html":{}}}],["parser.t",{"_index":570,"title":{},"body":{"classes/FormatterParser.html":{}}}],["parser.ts:12",{"_index":578,"title":{},"body":{"classes/FormatterParser.html":{}}}],["parser.ts:16",{"_index":580,"title":{},"body":{"classes/FormatterParser.html":{}}}],["parser.ts:6",{"_index":582,"title":{},"body":{"classes/FormatterParser.html":{}}}],["parser.ts:8",{"_index":581,"title":{},"body":{"classes/FormatterParser.html":{}}}],["parsevalu",{"_index":575,"title":{},"body":{"classes/FormatterParser.html":{}}}],["parsevalue(valu",{"_index":579,"title":{},"body":{"classes/FormatterParser.html":{}}}],["particular",{"_index":433,"title":{},"body":{"license.html":{}}}],["pass",{"_index":126,"title":{},"body":{"index.html":{}}}],["paus",{"_index":359,"title":{},"body":{"changelog.html":{}}}],["per",{"_index":177,"title":{},"body":{"index.html":{}}}],["perform",{"_index":203,"title":{},"body":{"index.html":{}}}],["permiss",{"_index":399,"title":{},"body":{"license.html":{}}}],["permit",{"_index":419,"title":{},"body":{"license.html":{}}}],["person",{"_index":404,"title":{},"body":{"license.html":{}}}],["pipe",{"_index":342,"title":{"pipes/IsFixedPipe.html":{},"pipes/IsGroupPipe.html":{},"pipes/IsRowVisiblePipe.html":{},"pipes/IsVisiblePipe.html":{}},"body":{"overview.html":{},"pipes/IsFixedPipe.html":{},"pipes/IsGroupPipe.html":{},"pipes/IsRowVisiblePipe.html":{},"pipes/IsVisiblePipe.html":{}}}],["pipetransform",{"_index":530,"title":{},"body":{"pipes/IsFixedPipe.html":{},"pipes/IsGroupPipe.html":{},"pipes/IsRowVisiblePipe.html":{},"pipes/IsVisiblePipe.html":{}}}],["point",{"_index":603,"title":{},"body":{"classes/HtmlUtil.html":{}}}],["point.getpoint(this.getid(",{"_index":608,"title":{},"body":{"classes/HtmlUtil.html":{}}}],["popup",{"_index":350,"title":{},"body":{"changelog.html":{}}}],["popup).selectedrow",{"_index":246,"title":{},"body":{"index.html":{}}}],["popup.compon",{"_index":481,"title":{},"body":{"modules/GridModule.html":{}}}],["portion",{"_index":426,"title":{},"body":{"license.html":{}}}],["possibl",{"_index":71,"title":{},"body":{"index.html":{}}}],["prevent",{"_index":362,"title":{},"body":{"changelog.html":{}}}],["previou",{"_index":77,"title":{},"body":{"index.html":{}}}],["privat",{"_index":498,"title":{},"body":{"injectables/GridMessageService.html":{},"classes/InjectableFactory.html":{},"interfaces/InjectableConstructor.html":{}}}],["promis",{"_index":384,"title":{},"body":{"changelog.html":{}}}],["properti",{"_index":497,"title":{},"body":{"injectables/GridMessageService.html":{},"classes/Cell.html":{},"classes/FormatterParser.html":{},"classes/RowChange.html":{},"classes/SortInfo.html":{},"interfaces/Dictionary.html":{},"interfaces/EventListenerArg.html":{}}}],["proprietari",{"_index":455,"title":{},"body":{"modules/GridModule.html":{}}}],["provid",{"_index":104,"title":{},"body":{"index.html":{},"overview.html":{},"license.html":{},"modules/GridModule.html":{}}}],["public",{"_index":348,"title":{},"body":{"changelog.html":{},"classes/SortInfo.html":{}}}],["publish",{"_index":44,"title":{},"body":{"index.html":{},"license.html":{}}}],["publish.bas",{"_index":61,"title":{},"body":{"index.html":{}}}],["pull",{"_index":588,"title":{},"body":{"classes/HtmlUtil.html":{}}}],["pure",{"_index":265,"title":{},"body":{"index.html":{},"pipes/IsFixedPipe.html":{}}}],["purpos",{"_index":434,"title":{},"body":{"license.html":{}}}],["rang",{"_index":70,"title":{},"body":{"index.html":{}}}],["re",{"_index":260,"title":{},"body":{"index.html":{}}}],["readm",{"_index":370,"title":{},"body":{"changelog.html":{}}}],["readme.2.1.0",{"_index":356,"title":{},"body":{"changelog.html":{}}}],["readme.md",{"_index":390,"title":{},"body":{"changelog.html":{}}}],["refactor",{"_index":373,"title":{},"body":{"changelog.html":{}}}],["referenc",{"_index":382,"title":{},"body":{"changelog.html":{}}}],["refresh",{"_index":258,"title":{},"body":{"index.html":{}}}],["releas",{"_index":389,"title":{},"body":{"changelog.html":{}}}],["remov",{"_index":357,"title":{},"body":{"changelog.html":{}}}],["render",{"_index":256,"title":{},"body":{"index.html":{},"changelog.html":{},"classes/Cell.html":{}}}],["renderer.compon",{"_index":474,"title":{},"body":{"modules/GridModule.html":{}}}],["renderer2",{"_index":273,"title":{},"body":{"index.html":{}}}],["report",{"_index":157,"title":{},"body":{"index.html":{}}}],["request",{"_index":313,"title":{},"body":{"index.html":{},"changelog.html":{}}}],["requir",{"_index":54,"title":{},"body":{"index.html":{}}}],["reset",{"_index":337,"title":{},"body":{"overview.html":{},"modules/GridModule.html":{}}}],["resiz",{"_index":692,"title":{},"body":{"miscellaneous/variables.html":{}}}],["restrict",{"_index":412,"title":{},"body":{"license.html":{}}}],["result",{"_index":9,"title":{},"body":{"dependencies.html":{},"index.html":{},"overview.html":{},"changelog.html":{},"license.html":{},"modules.html":{},"modules/GridModule.html":{},"injectables/GridMessageService.html":{},"pipes/IsFixedPipe.html":{},"pipes/IsGroupPipe.html":{},"pipes/IsRowVisiblePipe.html":{},"pipes/IsVisiblePipe.html":{},"classes/Cell.html":{},"classes/EmptyFactory.html":{},"classes/FormatterParser.html":{},"classes/HtmlUtil.html":{},"classes/InjectableFactory.html":{},"classes/RowChange.html":{},"classes/SortInfo.html":{},"interfaces/ClickListener.html":{},"interfaces/DblClickListener.html":{},"interfaces/Dictionary.html":{},"interfaces/EmptyConstructor.html":{},"interfaces/EventListenerArg.html":{},"interfaces/InjectableConstructor.html":{},"interfaces/MouseDownListener.html":{},"interfaces/MouseDragListener.html":{},"interfaces/MouseOverListener.html":{},"interfaces/MouseUpListener.html":{},"miscellaneous/variables.html":{}}}],["retriev",{"_index":86,"title":{},"body":{"index.html":{}}}],["return",{"_index":113,"title":{},"body":{"index.html":{},"modules/GridModule.html":{},"injectables/GridMessageService.html":{},"pipes/IsFixedPipe.html":{},"pipes/IsGroupPipe.html":{},"pipes/IsRowVisiblePipe.html":{},"pipes/IsVisiblePipe.html":{},"classes/EmptyFactory.html":{},"classes/FormatterParser.html":{},"classes/HtmlUtil.html":{},"classes/InjectableFactory.html":{},"classes/SortInfo.html":{},"interfaces/ClickListener.html":{},"interfaces/DblClickListener.html":{},"interfaces/EmptyConstructor.html":{},"interfaces/InjectableConstructor.html":{},"interfaces/MouseDownListener.html":{},"interfaces/MouseDragListener.html":{},"interfaces/MouseOverListener.html":{},"interfaces/MouseUpListener.html":{}}}],["right",{"_index":314,"title":{},"body":{"index.html":{},"license.html":{}}}],["root",{"_index":214,"title":{},"body":{"index.html":{}}}],["row",{"_index":79,"title":{},"body":{"index.html":{},"changelog.html":{},"modules/GridModule.html":{},"pipes/IsRowVisiblePipe.html":{}}}],["row/row",{"_index":541,"title":{},"body":{"pipes/IsRowVisiblePipe.html":{}}}],["rowchang",{"_index":620,"title":{"classes/RowChange.html":{}},"body":{"classes/RowChange.html":{}}}],["rownum",{"_index":231,"title":{},"body":{"index.html":{}}}],["rows[i].key",{"_index":221,"title":{},"body":{"index.html":{}}}],["rxjs/rx",{"_index":519,"title":{},"body":{"injectables/GridMessageService.html":{}}}],["same",{"_index":189,"title":{},"body":{"index.html":{}}}],["save",{"_index":375,"title":{},"body":{"changelog.html":{}}}],["scroll",{"_index":188,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["scrollbar",{"_index":365,"title":{},"body":{"changelog.html":{}}}],["see",{"_index":101,"title":{},"body":{"index.html":{},"changelog.html":{},"classes/InjectableFactory.html":{},"interfaces/InjectableConstructor.html":{}}}],["select",{"_index":69,"title":{},"body":{"index.html":{},"changelog.html":{}}}],["selectfilterrender",{"_index":306,"title":{},"body":{"index.html":{},"overview.html":{},"modules/GridModule.html":{}}}],["sell",{"_index":418,"title":{},"body":{"license.html":{}}}],["servic",{"_index":381,"title":{},"body":{"changelog.html":{}}}],["service.config",{"_index":131,"title":{},"body":{"index.html":{}}}],["services/grid",{"_index":485,"title":{},"body":{"modules/GridModule.html":{}}}],["set",{"_index":215,"title":{},"body":{"index.html":{}}}],["setasc",{"_index":636,"title":{},"body":{"classes/SortInfo.html":{}}}],["setasc(asc",{"_index":640,"title":{},"body":{"classes/SortInfo.html":{}}}],["setconfig",{"_index":576,"title":{},"body":{"classes/FormatterParser.html":{}}}],["setconfig(config",{"_index":271,"title":{},"body":{"index.html":{},"classes/FormatterParser.html":{}}}],["setfield",{"_index":637,"title":{},"body":{"classes/SortInfo.html":{}}}],["setfield(field",{"_index":642,"title":{},"body":{"classes/SortInfo.html":{}}}],["sever",{"_index":266,"title":{},"body":{"index.html":{}}}],["shall",{"_index":424,"title":{},"body":{"license.html":{}}}],["shortcut",{"_index":206,"title":{},"body":{"index.html":{}}}],["show",{"_index":151,"title":{},"body":{"index.html":{}}}],["showicon",{"_index":284,"title":{},"body":{"index.html":{}}}],["shown",{"_index":171,"title":{},"body":{"index.html":{}}}],["side",{"_index":162,"title":{},"body":{"index.html":{}}}],["simpl",{"_index":34,"title":{},"body":{"index.html":{},"classes/FormatterParser.html":{}}}],["size",{"_index":74,"title":{},"body":{"index.html":{}}}],["size.saveondirtyrowchang",{"_index":190,"title":{},"body":{"index.html":{}}}],["softwar",{"_index":406,"title":{},"body":{"license.html":{}}}],["sort",{"_index":62,"title":{},"body":{"index.html":{}}}],["sortinfo",{"_index":630,"title":{"classes/SortInfo.html":{}},"body":{"classes/SortInfo.html":{}}}],["sourc",{"_index":87,"title":{},"body":{"index.html":{},"modules/GridModule.html":{},"injectables/GridMessageService.html":{},"pipes/IsFixedPipe.html":{},"pipes/IsGroupPipe.html":{},"pipes/IsRowVisiblePipe.html":{},"pipes/IsVisiblePipe.html":{},"classes/Cell.html":{},"classes/EmptyFactory.html":{},"classes/FormatterParser.html":{},"classes/HtmlUtil.html":{},"classes/InjectableFactory.html":{},"classes/RowChange.html":{},"classes/SortInfo.html":{},"interfaces/ClickListener.html":{},"interfaces/DblClickListener.html":{},"interfaces/Dictionary.html":{},"interfaces/EmptyConstructor.html":{},"interfaces/EventListenerArg.html":{},"interfaces/InjectableConstructor.html":{},"interfaces/MouseDownListener.html":{},"interfaces/MouseDragListener.html":{},"interfaces/MouseOverListener.html":{},"interfaces/MouseUpListener.html":{}}}],["specif",{"_index":92,"title":{},"body":{"index.html":{}}}],["specifi",{"_index":178,"title":{},"body":{"index.html":{}}}],["speed",{"_index":261,"title":{},"body":{"index.html":{}}}],["spinner",{"_index":361,"title":{},"body":{"changelog.html":{}}}],["spinner.eventlisten",{"_index":201,"title":{},"body":{"index.html":{}}}],["spreadsheet",{"_index":156,"title":{},"body":{"index.html":{}}}],["src/grid/cell/cell.t",{"_index":544,"title":{},"body":{"classes/Cell.html":{}}}],["src/grid/cell/cell.ts:5",{"_index":554,"title":{},"body":{"classes/Cell.html":{}}}],["src/grid/cell/cell.ts:6",{"_index":553,"title":{},"body":{"classes/Cell.html":{}}}],["src/grid/cell/cell.ts:7",{"_index":551,"title":{},"body":{"classes/Cell.html":{}}}],["src/grid/column/formatters/formatt",{"_index":569,"title":{},"body":{"classes/FormatterParser.html":{}}}],["src/grid/event/click.interface.t",{"_index":649,"title":{},"body":{"interfaces/ClickListener.html":{}}}],["src/grid/event/click.interface.ts:3",{"_index":652,"title":{},"body":{"interfaces/ClickListener.html":{}}}],["src/grid/event/dbl",{"_index":654,"title":{},"body":{"interfaces/DblClickListener.html":{}}}],["src/grid/event/ev",{"_index":663,"title":{},"body":{"interfaces/EventListenerArg.html":{}}}],["src/grid/event/mous",{"_index":668,"title":{},"body":{"interfaces/MouseDownListener.html":{},"interfaces/MouseDragListener.html":{},"interfaces/MouseOverListener.html":{},"interfaces/MouseUpListener.html":{}}}],["src/grid/grid.component.t",{"_index":696,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/grid/grid.module.t",{"_index":451,"title":{},"body":{"modules/GridModule.html":{}}}],["src/grid/model/dictionary.interface.t",{"_index":660,"title":{},"body":{"interfaces/Dictionary.html":{}}}],["src/grid/model/dictionary.interface.ts:2",{"_index":662,"title":{},"body":{"interfaces/Dictionary.html":{}}}],["src/grid/model/dictionary.interface.ts:3",{"_index":661,"title":{},"body":{"interfaces/Dictionary.html":{}}}],["src/grid/services/grid",{"_index":495,"title":{},"body":{"injectables/GridMessageService.html":{},"miscellaneous/variables.html":{}}}],["src/grid/utils/empty.factory.t",{"_index":557,"title":{},"body":{"classes/EmptyFactory.html":{},"interfaces/EmptyConstructor.html":{}}}],["src/grid/utils/empty.factory.ts:4",{"_index":563,"title":{},"body":{"classes/EmptyFactory.html":{}}}],["src/grid/utils/empty.factory.ts:7",{"_index":564,"title":{},"body":{"classes/EmptyFactory.html":{}}}],["src/grid/utils/html",{"_index":585,"title":{},"body":{"classes/HtmlUtil.html":{}}}],["src/grid/utils/i",{"_index":523,"title":{},"body":{"pipes/IsFixedPipe.html":{},"pipes/IsGroupPipe.html":{},"pipes/IsRowVisiblePipe.html":{},"pipes/IsVisiblePipe.html":{}}}],["src/grid/utils/injectable.factory.t",{"_index":610,"title":{},"body":{"classes/InjectableFactory.html":{},"interfaces/InjectableConstructor.html":{}}}],["src/grid/utils/injectable.factory.ts:10",{"_index":617,"title":{},"body":{"classes/InjectableFactory.html":{}}}],["src/grid/utils/injectable.factory.ts:7",{"_index":615,"title":{},"body":{"classes/InjectableFactory.html":{}}}],["src/grid/utils/row",{"_index":621,"title":{},"body":{"classes/RowChange.html":{}}}],["src/grid/utils/sort",{"_index":631,"title":{},"body":{"classes/SortInfo.html":{}}}],["start",{"_index":12,"title":{"index.html":{},"changelog.html":{},"license.html":{}},"body":{}}],["state",{"_index":168,"title":{},"body":{"index.html":{}}}],["static",{"_index":490,"title":{},"body":{"modules/GridModule.html":{},"classes/HtmlUtil.html":{}}}],["storag",{"_index":353,"title":{},"body":{"changelog.html":{}}}],["string",{"_index":68,"title":{},"body":{"index.html":{},"injectables/GridMessageService.html":{},"classes/HtmlUtil.html":{},"classes/SortInfo.html":{},"interfaces/Dictionary.html":{}}}],["style",{"_index":218,"title":{},"body":{"index.html":{}}}],["subject",{"_index":421,"title":{},"body":{"license.html":{},"injectables/GridMessageService.html":{}}}],["sublicens",{"_index":416,"title":{},"body":{"license.html":{}}}],["substanti",{"_index":425,"title":{},"body":{"license.html":{}}}],["such",{"_index":589,"title":{},"body":{"classes/HtmlUtil.html":{}}}],["support",{"_index":32,"title":{},"body":{"index.html":{},"changelog.html":{},"modules.html":{}}}],["svg",{"_index":448,"title":{},"body":{"modules.html":{}}}],["syntax",{"_index":103,"title":{},"body":{"index.html":{},"changelog.html":{}}}],["t",{"_index":565,"title":{},"body":{"classes/EmptyFactory.html":{},"classes/InjectableFactory.html":{},"interfaces/EmptyConstructor.html":{},"interfaces/InjectableConstructor.html":{}}}],["tab",{"_index":693,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tabl",{"_index":30,"title":{},"body":{"index.html":{}}}],["take",{"_index":251,"title":{},"body":{"index.html":{}}}],["taken",{"_index":94,"title":{},"body":{"index.html":{}}}],["templat",{"_index":198,"title":{},"body":{"index.html":{}}}],["templateref",{"_index":197,"title":{},"body":{"index.html":{}}}],["texteditrender",{"_index":329,"title":{},"body":{"overview.html":{},"modules/GridModule.html":{}}}],["textfilterrender",{"_index":292,"title":{},"body":{"index.html":{},"overview.html":{},"modules/GridModule.html":{}}}],["them.pages",{"_index":179,"title":{},"body":{"index.html":{}}}],["theme",{"_index":158,"title":{},"body":{"index.html":{}}}],["thing",{"_index":262,"title":{},"body":{"index.html":{},"classes/HtmlUtil.html":{}}}],["this._message.asobserv",{"_index":515,"title":{},"body":{"injectables/GridMessageService.html":{}}}],["this._message.next(\"error",{"_index":520,"title":{},"body":{"injectables/GridMessageService.html":{}}}],["this._message.next(\"warn",{"_index":521,"title":{},"body":{"injectables/GridMessageService.html":{}}}],["this._messageobserv",{"_index":522,"title":{},"body":{"injectables/GridMessageService.html":{}}}],["this.asc",{"_index":646,"title":{},"body":{"classes/SortInfo.html":{}}}],["this.config",{"_index":583,"title":{},"body":{"classes/FormatterParser.html":{}}}],["this.datarequest",{"_index":112,"title":{},"body":{"index.html":{}}}],["this.emptyconstructor",{"_index":567,"title":{},"body":{"classes/EmptyFactory.html":{},"interfaces/EmptyConstructor.html":{}}}],["this.field",{"_index":647,"title":{},"body":{"classes/SortInfo.html":{}}}],["this.ic(this.injector",{"_index":618,"title":{},"body":{"classes/InjectableFactory.html":{},"interfaces/InjectableConstructor.html":{}}}],["this.newrownum",{"_index":629,"title":{},"body":{"classes/RowChange.html":{}}}],["this.oldrownum",{"_index":628,"title":{},"body":{"classes/RowChange.html":{}}}],["those",{"_index":169,"title":{},"body":{"index.html":{}}}],["through",{"_index":37,"title":{},"body":{"index.html":{}}}],["titl",{"_index":152,"title":{},"body":{"index.html":{}}}],["to.configur",{"_index":139,"title":{},"body":{"index.html":{}}}],["toast",{"_index":245,"title":{},"body":{"index.html":{}}}],["todo",{"_index":312,"title":{},"body":{"index.html":{}}}],["togeth",{"_index":164,"title":{},"body":{"index.html":{}}}],["tort",{"_index":444,"title":{},"body":{"license.html":{}}}],["transform",{"_index":527,"title":{},"body":{"pipes/IsFixedPipe.html":{},"pipes/IsGroupPipe.html":{},"pipes/IsRowVisiblePipe.html":{},"pipes/IsVisiblePipe.html":{}}}],["transform(list",{"_index":528,"title":{},"body":{"pipes/IsFixedPipe.html":{},"pipes/IsGroupPipe.html":{},"pipes/IsRowVisiblePipe.html":{},"pipes/IsVisiblePipe.html":{}}}],["true",{"_index":167,"title":{},"body":{"index.html":{},"modules/GridModule.html":{},"classes/SortInfo.html":{}}}],["two",{"_index":122,"title":{},"body":{"index.html":{}}}],["type",{"_index":118,"title":{},"body":{"index.html":{},"injectables/GridMessageService.html":{},"pipes/IsFixedPipe.html":{},"classes/Cell.html":{},"classes/EmptyFactory.html":{},"classes/FormatterParser.html":{},"classes/HtmlUtil.html":{},"classes/InjectableFactory.html":{},"classes/RowChange.html":{},"classes/SortInfo.html":{},"interfaces/ClickListener.html":{},"interfaces/DblClickListener.html":{},"interfaces/Dictionary.html":{},"interfaces/EventListenerArg.html":{},"interfaces/InjectableConstructor.html":{},"interfaces/MouseDownListener.html":{},"interfaces/MouseDragListener.html":{},"interfaces/MouseOverListener.html":{},"interfaces/MouseUpListener.html":{},"miscellaneous/variables.html":{}}}],["undefin",{"_index":120,"title":{},"body":{"index.html":{},"pipes/IsFixedPipe.html":{},"pipes/IsGroupPipe.html":{},"pipes/IsRowVisiblePipe.html":{},"pipes/IsVisiblePipe.html":{}}}],["univers",{"_index":397,"title":{},"body":{"license.html":{},"modules/GridModule.html":{}}}],["up",{"_index":263,"title":{},"body":{"index.html":{}}}],["up.interface.t",{"_index":684,"title":{},"body":{"interfaces/MouseUpListener.html":{}}}],["up.interface.ts:3",{"_index":687,"title":{},"body":{"interfaces/MouseUpListener.html":{}}}],["upon",{"_index":309,"title":{},"body":{"index.html":{}}}],["us",{"_index":55,"title":{},"body":{"index.html":{},"license.html":{}}}],["usag",{"_index":95,"title":{},"body":{"index.html":{}}}],["user",{"_index":143,"title":{},"body":{"index.html":{},"changelog.html":{}}}],["usevalu",{"_index":493,"title":{},"body":{"modules/GridModule.html":{}}}],["usual",{"_index":59,"title":{},"body":{"index.html":{}}}],["utah",{"_index":398,"title":{},"body":{"license.html":{},"modules/GridModule.html":{}}}],["util.t",{"_index":586,"title":{},"body":{"classes/HtmlUtil.html":{}}}],["util.ts:23",{"_index":600,"title":{},"body":{"classes/HtmlUtil.html":{}}}],["util.ts:38",{"_index":602,"title":{},"body":{"classes/HtmlUtil.html":{}}}],["util.ts:8",{"_index":596,"title":{},"body":{"classes/HtmlUtil.html":{}}}],["utils/i",{"_index":468,"title":{},"body":{"modules/GridModule.html":{}}}],["valid",{"_index":377,"title":{},"body":{"changelog.html":{}}}],["valu",{"_index":229,"title":{},"body":{"index.html":{},"injectables/GridMessageService.html":{},"classes/Cell.html":{},"classes/FormatterParser.html":{},"classes/SortInfo.html":{},"interfaces/Dictionary.html":{},"miscellaneous/variables.html":{}}}],["values.busytempl",{"_index":196,"title":{},"body":{"index.html":{}}}],["variabl",{"_index":689,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["variou",{"_index":73,"title":{},"body":{"index.html":{}}}],["vertic",{"_index":259,"title":{},"body":{"index.html":{}}}],["view",{"_index":285,"title":{},"body":{"index.html":{},"changelog.html":{}}}],["viewconfig",{"_index":279,"title":{},"body":{"index.html":{}}}],["viewrender",{"_index":277,"title":{},"body":{"index.html":{}}}],["visibl",{"_index":149,"title":{},"body":{"index.html":{}}}],["visible.pip",{"_index":469,"title":{},"body":{"modules/GridModule.html":{}}}],["visible.pipe.t",{"_index":538,"title":{},"body":{"pipes/IsRowVisiblePipe.html":{},"pipes/IsVisiblePipe.html":{}}}],["visible.pipe.ts:9",{"_index":540,"title":{},"body":{"pipes/IsRowVisiblePipe.html":{},"pipes/IsVisiblePipe.html":{}}}],["void",{"_index":509,"title":{},"body":{"injectables/GridMessageService.html":{},"classes/FormatterParser.html":{},"classes/SortInfo.html":{}}}],["wait",{"_index":347,"title":{},"body":{"changelog.html":{}}}],["want",{"_index":210,"title":{},"body":{"index.html":{}}}],["warn",{"_index":211,"title":{},"body":{"index.html":{},"injectables/GridMessageService.html":{}}}],["warn(messag",{"_index":510,"title":{},"body":{"injectables/GridMessageService.html":{}}}],["warranti",{"_index":427,"title":{},"body":{"license.html":{}}}],["way",{"_index":123,"title":{},"body":{"index.html":{}}}],["whether",{"_index":442,"title":{},"body":{"license.html":{}}}],["width",{"_index":366,"title":{},"body":{"changelog.html":{}}}],["wish",{"_index":244,"title":{},"body":{"index.html":{}}}],["withcomponents(compon",{"_index":494,"title":{},"body":{"modules/GridModule.html":{}}}],["without",{"_index":411,"title":{},"body":{"license.html":{},"classes/FormatterParser.html":{}}}],["work",{"_index":91,"title":{},"body":{"index.html":{}}}],["ye",{"_index":598,"title":{},"body":{"classes/HtmlUtil.html":{}}}],["you.logwarn",{"_index":209,"title":{},"body":{"index.html":{}}}],["zoom",{"_index":336,"title":{},"body":{"overview.html":{},"modules/GridModule.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n    Dependencies\n\n\n    \n        @ng-bootstrap/ng-bootstrap : 1.1.x\n    \n        moment : >=2.19.3\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nHCI's Angular Grid Library\nhci-ng-grid Demo on Github\nIntro\nThis grid is designed to be a full featured grid that can handle nearly anything that complex data tables may\nbe expected to support.  By default, the grid is simple and basic, but becomes full featured through\nconfiguration.Install\n\"dependencies\": {\n    \"hci-ng-grid\": \"3.0.0\"\n}import {GridModule} from \"hci-ng-grid\";@NgModule({\n    imports: [\n        GridModule.forRoot()\n    ]\n})Publishing\nCompiled code gets moved to the dist folder with a copy of the package.json.  Custom commands are required for\npackaging and publishing.  Use npmPack and npmPublish instead of the usual pack and publish.Basic Features\n\nSorting: Change sorting by clicking on column header.\nFiltering: String, select, range filtering with the possibility for custom filters.\nPaging: Paging with various page sizes, first, last, previous and next.\nRow Grouping: Rows can be grouped by one or more columns.\nExternal Data Call: Callback to retrieve data from external source.\nCustom Events: Listeners can be added to work for specific events and custom actions can be taken.\n\nUsage\nNote, there are so many features to this grid that not all are currently listed here.  See the demo for full examples.\nThe basic syntax for data provided by the implementing component.\n\nThe basic syntax for an external data call.\n\nAnd a function using mocked external data call.\ndataRequest: (externalInfo: ExternalInfo) => {};\n\nngOnInit() {\n  this.dataRequest = (externalInfo: ExternalInfo) => {\n    return Observable.of(new ExternalData(this.dataGeneratorService.getData(250), externalInfo)).delay(500);\n  };\n}Inputs\ndata\ntype: Object[]\ndefault: undefined\nProvide the grid with an array of rows as objects.  Two way binding to this data.dataCall\ntype: Function\ndefault: undefined\nA function that is called to retrieve data.  The function is passed filtering, sorting and paging info.id\ntype: string\ndefault: undefined\nThe html id for the grid and the id that can be used to get the grid from the global grid service.config\ntype: any\ndefault: {}\nA json object that contains configuration options for the grid.linkedGroups\ntype: string[]\ndefault: undefined\nThe group names that this grid should be linked to.configurable\ntype: boolean\ndefault: false\nFlag if the user should be allowed to modify the grid's configuration (e.g. what colums are visible and how big).title\ntype: string\ndefault: undefined\nShows this title in a title bar above the grid.theme\ntype: string\ndefault: \"spreadsheet\"\noptions: \"spreadsheet\", \"report\", or your own\nThe name of the theme to use.  columns\ntype: Column[]\ndefault: undefined\nAn array of column configuration objects.fixedColumns\ntype: string[]\ndefault: undefined\nA list of column names that should be fixed to the left side of the grid.groupBy\ntype: string[]\ndefault: undefined\nA list of column names that should be used to group rows together.* Currently disabled *\ngroupByCollapsed\ntype: boolean\ndefault: true\nThe state for grouped rows if those rows in a group should be hidden or shown by default.externalFiltering\ntype: boolean\ndefault: false\nTrue if filtering should be handled by the external data call.externalSorting\ntype: boolean\ndefault: false\nTrue if sorting should be handled by the external data call.externalPaging\ntype: boolean\ndefault: false\nTrue if paging should be handled by the external data call.pageSize\ntype: number\ndefault: undefined\nThe number of rows per page.  If not specified it will show all of them.pageSizes\ntype: number[]\ndefault: [10, 25, 50]\nAn array of possible page sizes that the user can choose from.nVisibleRows\ntype: number\ndefault: -1\nThe number of visible rows.  A page might have 100 rows, but you can limit the size of the grid to 10 rows which would be scrolling for the user.  The default is -1 which is the same as the page size.saveOnDirtyRowChange\ntype: boolean\ndefault: false\nIf true, will emit a (onRowSave) event if you navigate to a new row and the previous row has dirty values.busyTemplate\ntype: TemplateRef\ndefault: undefined\nA custom template shown when data is loaded.  If you don't like the default spinner.eventListeners\ntype: EventListenerArg[]\ndefault: []\nAn array of listeners that can perform actions on any sort of click or key events.mode\ntype: string\ndefault: undefined\nA shortcut for creating listeners.  Rather than passing in your own listeners, specify a mode and the required listeners will be created for you.logWarnings\ntype: boolean\ndefault: true\nTrue if you want warnings to show in the console.display\ntype: string\ndefault: flow-root\nSets the display on the root component.  Although you could also do this with style on the grid.Outputs\nonCellSave\ntype: any\n$event: { key: rows[i].key,\n          i: i,\n          j: j,\n          field: columns[j].field,\n          oldValue: oldValue,\n          newValue: newValue }\nThe row key, location, field, old and new value of the cell.onRowSave\ntype: any\n$event: { key: rows[i].key,\n          rowNum: i,\n          row: originalRowData }\nEmits the key, row number and the data for the row in the format originally passed in.onConfigChange\ntype: any\n$event: config\nEmits the current configuration for the grid.cellClick\ntype: any\n$event: any\nDetermined by the event listener which can emit any type of data.cellDblClick\ntype: any\n$event: any\nDetermined by the event listener which can emit any type of data.rowClick\ntype: any\n$event: any\nDetermined by the event listener which can emit any type of data.rowDblClick\ntype: any\n$event: any\nDetermined by the event listener which can emit any type of data.warning\ntype: string\n$event: warning message as a string\nListen to this to handle warnings from the grid as you wish (e.g. as a toast popup).selectedRows\ntype: any[]\n$event: [key1, key2, ...]\nThis is an array of any instead of number because the row key could be anything.Global Config\nThe root module can take configuration json that can be used to set defaults for every grid.\nFor example, if you want every grid in your application to use the same theme and you don't want\nto specify that theme in every instance of the grid, you can do the following:\nGridModule.forRoot({\n  theme: \"report\"\n})Advanced Features\nRendering Cells\nEvery refresh of data and every vertical scroll will re-render the visible rows and cells.  To speed things\nup, each cell is limited to rendering pure HTML.  However, there are several options of how to render and\nthe option of custom rendering.\nEvery cell is rendering with a class that implements the CellViewRenderer interface.  The two methods\nrequired to implement are\nsetConfig(config: any);\n\ncreateElement(renderer: Renderer2, column: Column, value: any, i: number, j: number): HTMLElement;As an example, the following is an example of a number range renderer.\n{\n    field: \"nLabs\",\n    name: \"# Labs\",\n    viewRenderer: CellNumberRangeView,\n    viewConfig: { low: 15, high: 85, showIcon: true }\n}The class is passed in as the viewRenderer and any config is passed in through the viewConfig.\nFiltering\nLike view rendering, built in and custom components can be used to render the filter.  The difference\nis rather than pure HTML, a filter is a component that extends a base class FilterRenderer.  The\nfollowing are examples of built in filters.\n{\n    field: \"firstName\",\n    name: \"First Name\",\n    filterRenderer: TextFilterRenderer\n},\n{\n    field: \"dob\",\n    name: \"Date of Birth\",\n    dataType: \"date\",\n    format: \"MM/DD/YYYY\",\n    editRenderer: DateEditRenderer,\n    filterRenderer: CompareFilterRenderer\n},\n{\n    field: \"gender\",\n    name: \"Gender\",\n    editRenderer: ChoiceEditRenderer,\n    choices: [ {value: \"Female\", display: \"Female\"}, {value: \"Male\", display: \"Male\"} ],\n    filterRenderer: SelectFilterRenderer\n}Known Issues\n\nRow Groups works upon load, but breaks when filtering is introduced.\n\nTODOs\n\nThere are only left fixed colums, but some have requested right fixed columns.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n            \n                \n                    \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_GridModule\n\n\n\ncluster_GridModule_declarations\n\n\n\ncluster_GridModule_GridComponent_providers\n\n\n\ncluster_GridModule_exports\n\n\n\n\nGridComponent\n\nGridComponent\n\n\n\nGridModule\n\nGridModule\n\nGridModule -->\n\nGridComponent->GridModule\n\n\n\n\n\nColumnHeaderComponent\n\nColumnHeaderComponent\n\nGridModule -->\n\nColumnHeaderComponent->GridModule\n\n\n\n\n\nIsVisiblePipe\n\nIsVisiblePipe\n\nGridModule -->\n\nIsVisiblePipe->GridModule\n\n\n\n\n\nIsGroupPipe\n\nIsGroupPipe\n\nGridModule -->\n\nIsGroupPipe->GridModule\n\n\n\n\n\nIsFixedPipe\n\nIsFixedPipe\n\nGridModule -->\n\nIsFixedPipe->GridModule\n\n\n\n\n\nIsRowVisiblePipe\n\nIsRowVisiblePipe\n\nGridModule -->\n\nIsRowVisiblePipe->GridModule\n\n\n\n\n\nTextEditRenderer\n\nTextEditRenderer\n\nGridModule -->\n\nTextEditRenderer->GridModule\n\n\n\n\n\nDateEditRenderer\n\nDateEditRenderer\n\nGridModule -->\n\nDateEditRenderer->GridModule\n\n\n\n\n\nChoiceEditRenderer\n\nChoiceEditRenderer\n\nGridModule -->\n\nChoiceEditRenderer->GridModule\n\n\n\n\n\nTextFilterRenderer\n\nTextFilterRenderer\n\nGridModule -->\n\nTextFilterRenderer->GridModule\n\n\n\n\n\nSelectFilterRenderer\n\nSelectFilterRenderer\n\nGridModule -->\n\nSelectFilterRenderer->GridModule\n\n\n\n\n\nCompareFilterRenderer\n\nCompareFilterRenderer\n\nGridModule -->\n\nCompareFilterRenderer->GridModule\n\n\n\n\n\nBigTextPopup\n\nBigTextPopup\n\nGridModule -->\n\nBigTextPopup->GridModule\n\n\n\n\n\nConfigMenuComponent\n\nConfigMenuComponent\n\nGridModule -->\n\nConfigMenuComponent->GridModule\n\n\n\n\n\nConfigMultiChoiceComponent\n\nConfigMultiChoiceComponent\n\nGridModule -->\n\nConfigMultiChoiceComponent->GridModule\n\n\n\n\n\nGridComponent \n\nGridComponent \n\nGridComponent  -->\n\nGridModule->GridComponent \n\n\n\n\n\nGridService\n\nGridService\n\nGridComponent -->\n\nGridService->GridComponent\n\n\n\n\n\nGridEventService\n\nGridEventService\n\nGridComponent -->\n\nGridEventService->GridComponent\n\n\n\n\n\nGridMessageService\n\nGridMessageService\n\nGridComponent -->\n\nGridMessageService->GridComponent\n\n\n\n\n\n\n                \n                \n                \n                    Zoom in\n                    Reset\n                    Zoom out\n                \n            \n\n    \n            \n                \n                    \n                        \n                        \n                            1 module\n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                        11 components\n                    \n                \n            \n            \n                \n                    \n                        \n                        4 injectables\n                    \n                \n            \n            \n                \n                    \n                        \n                        4 pipes\n                    \n                \n            \n            \n                \n                    \n                        \n                        33 classes\n                    \n                \n            \n            \n                \n                    \n                        \n                        11 interfaces\n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"changelog.html":{"url":"changelog.html","title":"getting-started - changelog","body":"\n                   \n\nChange Log\n3.0.0\n- Generalize column wait configuration.  Changes public api.\n- Fixes to popup behavior.\n- Column allows externalConfig storage.\n- Default format/parser more generic.2.1.1\n- Fix syntax in README.2.1.0\n- Removed allowing auto column generation when no columns configured.\n- Added wait listeners to pause configuration while waiting on any requests.\n- Add spinner for loading and prevent data display if no columns.\n- Bump height if view has scrollbar.\n- Fix column width calculation.2.0.2\n- Fix keywords and add .npmignore.2.0.1\n- Fix readme and license in artifact.2.0.0\n- Refactor of rendering and how data/config/events are listened to.\n- Listeners for saving cells and rows.\n- Customization of busy, and view renderers.\n- Validation support and improved formatting/parsing especially for dates.\n- User configuration added.\n- Global grid service for referencing and connecting grids.\n- Row selection improved.\n- External data calls from Promise to Observable.\n- Numerous fixes.1.0.0\n- Initial Release.  See README.md for features.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nCopyright (c) 2018 Huntsman Cancer Institute at the University of Utah\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        GridModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/GridModule.html":{"url":"modules/GridModule.html","title":"module - GridModule","body":"\n                   \n\n\n\n\n  Modules\n  GridModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_GridModule\n\n\n\ncluster_GridModule_declarations\n\n\n\ncluster_GridModule_GridComponent_providers\n\n\n\ncluster_GridModule_exports\n\n\n\n\nGridComponent\n\nGridComponent\n\n\n\nGridModule\n\nGridModule\n\nGridModule -->\n\nGridComponent->GridModule\n\n\n\n\n\nColumnHeaderComponent\n\nColumnHeaderComponent\n\nGridModule -->\n\nColumnHeaderComponent->GridModule\n\n\n\n\n\nIsVisiblePipe\n\nIsVisiblePipe\n\nGridModule -->\n\nIsVisiblePipe->GridModule\n\n\n\n\n\nIsGroupPipe\n\nIsGroupPipe\n\nGridModule -->\n\nIsGroupPipe->GridModule\n\n\n\n\n\nIsFixedPipe\n\nIsFixedPipe\n\nGridModule -->\n\nIsFixedPipe->GridModule\n\n\n\n\n\nIsRowVisiblePipe\n\nIsRowVisiblePipe\n\nGridModule -->\n\nIsRowVisiblePipe->GridModule\n\n\n\n\n\nTextEditRenderer\n\nTextEditRenderer\n\nGridModule -->\n\nTextEditRenderer->GridModule\n\n\n\n\n\nDateEditRenderer\n\nDateEditRenderer\n\nGridModule -->\n\nDateEditRenderer->GridModule\n\n\n\n\n\nChoiceEditRenderer\n\nChoiceEditRenderer\n\nGridModule -->\n\nChoiceEditRenderer->GridModule\n\n\n\n\n\nTextFilterRenderer\n\nTextFilterRenderer\n\nGridModule -->\n\nTextFilterRenderer->GridModule\n\n\n\n\n\nSelectFilterRenderer\n\nSelectFilterRenderer\n\nGridModule -->\n\nSelectFilterRenderer->GridModule\n\n\n\n\n\nCompareFilterRenderer\n\nCompareFilterRenderer\n\nGridModule -->\n\nCompareFilterRenderer->GridModule\n\n\n\n\n\nBigTextPopup\n\nBigTextPopup\n\nGridModule -->\n\nBigTextPopup->GridModule\n\n\n\n\n\nConfigMenuComponent\n\nConfigMenuComponent\n\nGridModule -->\n\nConfigMenuComponent->GridModule\n\n\n\n\n\nConfigMultiChoiceComponent\n\nConfigMultiChoiceComponent\n\nGridModule -->\n\nConfigMultiChoiceComponent->GridModule\n\n\n\n\n\nGridComponent \n\nGridComponent \n\nGridComponent  -->\n\nGridModule->GridComponent \n\n\n\n\n\nGridService\n\nGridService\n\nGridComponent -->\n\nGridService->GridComponent\n\n\n\n\n\nGridEventService\n\nGridEventService\n\nGridComponent -->\n\nGridEventService->GridComponent\n\n\n\n\n\nGridMessageService\n\nGridMessageService\n\nGridComponent -->\n\nGridMessageService->GridComponent\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/grid/grid.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                GridComponent\n                            \n                            \n                                ColumnHeaderComponent\n                            \n                            \n                                IsVisiblePipe\n                            \n                            \n                                IsGroupPipe\n                            \n                            \n                                IsFixedPipe\n                            \n                            \n                                IsRowVisiblePipe\n                            \n                            \n                                TextEditRenderer\n                            \n                            \n                                DateEditRenderer\n                            \n                            \n                                ChoiceEditRenderer\n                            \n                            \n                                TextFilterRenderer\n                            \n                            \n                                SelectFilterRenderer\n                            \n                            \n                                CompareFilterRenderer\n                            \n                            \n                                BigTextPopup\n                            \n                            \n                                ConfigMenuComponent\n                            \n                            \n                                ConfigMultiChoiceComponent\n                            \n                    \n                \n                \n                    EntryComponents\n                    \n                            \n                                TextEditRenderer\n                            \n                            \n                                DateEditRenderer\n                            \n                            \n                                ChoiceEditRenderer\n                            \n                            \n                                TextFilterRenderer\n                            \n                            \n                                SelectFilterRenderer\n                            \n                            \n                                CompareFilterRenderer\n                            \n                            \n                                BigTextPopup\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    GridComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        /*\n * Copyright (c) 2016 Huntsman Cancer Institute at the University of Utah, Confidential and Proprietary\n */\nimport {ANALYZE_FOR_ENTRY_COMPONENTS, ModuleWithProviders, NgModule} from \"@angular/core\";\nimport {CommonModule} from \"@angular/common\";\nimport {FormsModule} from \"@angular/forms\";\n\nimport {NgbModule} from \"@ng-bootstrap/ng-bootstrap\";\n\nimport {GridComponent} from \"./grid.component\";\nimport {ColumnHeaderComponent} from \"./column/column-header.component\";\nimport {IsVisiblePipe} from \"./utils/is-visible.pipe\";\nimport {IsGroupPipe} from \"./utils/is-group.pipe\";\nimport {IsFixedPipe} from \"./utils/is-fixed.pipe\";\nimport {IsRowVisiblePipe} from \"./utils/is-row-visible.pipe\";\nimport {TextEditRenderer} from \"./cell/editRenderers/text-edit-renderer.component\";\nimport {TextFilterRenderer} from \"./column/filterRenderers/text-filter-renderer.component\";\nimport {CompareFilterRenderer} from \"./column/filterRenderers/compare-filter-renderer.component\";\nimport {ChoiceEditRenderer} from \"./cell/editRenderers/choice-edit-renderer.component\";\nimport {DateEditRenderer} from \"./cell/editRenderers/date-edit-renderer.component\";\nimport {SelectFilterRenderer} from \"./column/filterRenderers/select-filter-renderer.component\";\nimport {BigTextPopup} from \"./cell/viewPopupRenderer/bigtext-popup.component\";\nimport {ConfigMenuComponent} from \"./config/config-menu.component\";\nimport {GridGlobalService} from \"./services/grid-global.service\";\nimport {ConfigMultiChoiceComponent} from \"./config/config-multi-choice.component\";\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    NgbModule.forRoot()\n  ],\n  declarations: [\n    GridComponent,\n    ColumnHeaderComponent,\n    IsVisiblePipe,\n    IsGroupPipe,\n    IsFixedPipe,\n    IsRowVisiblePipe,\n    TextEditRenderer,\n    DateEditRenderer,\n    ChoiceEditRenderer,\n    TextFilterRenderer,\n    SelectFilterRenderer,\n    CompareFilterRenderer,\n    BigTextPopup,\n    ConfigMenuComponent,\n    ConfigMultiChoiceComponent\n  ],\n  entryComponents: [\n    TextEditRenderer,\n    DateEditRenderer,\n    ChoiceEditRenderer,\n    TextFilterRenderer,\n    SelectFilterRenderer,\n    CompareFilterRenderer,\n    BigTextPopup\n  ],\n  exports: [\n    GridComponent\n  ]\n})\nexport class GridModule {\n\n  static forRoot(globalConfig?: any, components?: any[]): ModuleWithProviders {\n    return {\n      providers: [\n        GridGlobalService,\n        {provide: \"globalConfig\", useValue: (globalConfig) ? globalConfig : {}},\n        {\n          provide: ANALYZE_FOR_ENTRY_COMPONENTS,\n          useValue: components,\n          multi: true\n        }\n      ],\n      ngModule: GridModule\n    };\n  }\n\n  static withComponents(components: any[]): ModuleWithProviders {\n    return {\n      ngModule: GridModule,\n      providers: [\n        {\n          provide: ANALYZE_FOR_ENTRY_COMPONENTS,\n          useValue: components,\n          multi: true\n        }\n      ]\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GridMessageService.html":{"url":"injectables/GridMessageService.html","title":"injectable - GridMessageService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  GridMessageService\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/grid/services/grid-message.service.ts\n        \n\n\n\n            \n                Index\n                \n                    \n                        \n                            \n                                Properties\n                            \n                        \n                        \n                            \n                                \n                                    \n                                            Private\n                                        _level\n                                    \n                                    \n                                            Private\n                                        _message\n                                    \n                                    \n                                            Private\n                                        _messageObservable\n                                    \n                                \n                            \n                        \n                        \n                            \n                                Methods\n                            \n                        \n                        \n                            \n                                \n                                    \n                                        error\n                                    \n                                    \n                                        warn\n                                    \n                                \n                            \n                        \n                        \n                            \n                                Accessors\n                            \n                        \n                        \n                            \n                                \n                                    \n                                        messageObservable\n                                    \n                                \n                            \n                        \n                    \n                \n            \n\n\n            \n                \n                    \n                        Methods\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        error\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            error(message: string)\n                                \n                            \n            \n            \n                                    \n                                        \n                                                Defined in src/grid/services/grid-message.service.ts:12\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                                Type\n                                                            Optional\n                                                        \n                                                    \n                                                    \n                                                            \n                                                                message\n                                                                \n                                                                    \n                                                                                string\n                                                                    \n                                                                \n                                                                \n                                                                        no\n                                                                \n                                                                \n            \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     void\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        warn\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            warn(message: string)\n                                \n                            \n            \n            \n                                    \n                                        \n                                                Defined in src/grid/services/grid-message.service.ts:16\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                                Type\n                                                            Optional\n                                                        \n                                                    \n                                                    \n                                                            \n                                                                message\n                                                                \n                                                                    \n                                                                                string\n                                                                    \n                                                                \n                                                                \n                                                                        no\n                                                                \n                                                                \n            \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     void\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n            \n\n            \n                \n                    \n                        Properties\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                            Private\n                                        _level\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                    _level:     number\n            \n                                \n                            \n                                \n                                    \n                                        Type :     number\n            \n                                    \n                                \n                                \n                                    \n                                        Default value : 2\n                                    \n                                \n                                    \n                                        \n                                                Defined in src/grid/services/grid-message.service.ts:10\n                                        \n                                    \n            \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                            Private\n                                        _message\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                    _message:     Subject\n            \n                                \n                            \n                                \n                                    \n                                        Type :     Subject\n            \n                                    \n                                \n                                \n                                    \n                                        Default value : new Subject()\n                                    \n                                \n                                    \n                                        \n                                                Defined in src/grid/services/grid-message.service.ts:8\n                                        \n                                    \n            \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                            Private\n                                        _messageObservable\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                    _messageObservable:     Observable\n            \n                                \n                            \n                                \n                                    \n                                        Type :     Observable\n            \n                                    \n                                \n                                \n                                    \n                                        Default value : this._message.asObservable()\n                                    \n                                \n                                    \n                                        \n                                                Defined in src/grid/services/grid-message.service.ts:9\n                                        \n                                    \n            \n            \n                        \n                    \n            \n\n            \n                \n                    Accessors\n                \n                    \n                        \n                            \n                                \n                                    \n                                    messageObservable\n                                \n                            \n            \n                            \n                                \n                                    getmessageObservable()\n                                \n                            \n                                        \n                                            \n                                                Defined in src/grid/services/grid-message.service.ts:20\n                                            \n                                        \n            \n                        \n                    \n            \n    \n\n\n    \n        import {Injectable} from \"@angular/core\";\n\nimport {Subject, Observable} from \"rxjs/Rx\";\n\n@Injectable()\nexport class GridMessageService {\n\n  private _message: Subject = new Subject();\n  private _messageObservable: Observable = this._message.asObservable();\n  private _level: number = 2;\n\n  error(message: string) {\n    this._message.next(\"ERROR: \" + message);\n  }\n\n  warn(message: string) {\n    this._message.next(\"WARN: \" + message);\n  }\n\n  get messageObservable(): Observable {\n    return this._messageObservable;\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/IsFixedPipe.html":{"url":"pipes/IsFixedPipe.html","title":"pipe - IsFixedPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Pipes\n  IsFixedPipe\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n\n    \n\n        \n            File\n        \n        \n            src/grid/utils/is-fixed.pipe.ts\n        \n\n\n\n        \n            Metadata\n            \n                \n                    \n                        name\n                        isFixed\n                    \n                \n            \n        \n\n            \n                \n                    \n                        Methods\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        transform\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            transform(list: Array, fixed: boolean)\n                                \n                            \n            \n            \n                                    \n                                        \n                                                Defined in src/grid/utils/is-fixed.pipe.ts:10\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                                Type\n                                                            Optional\n                                                        \n                                                    \n                                                    \n                                                            \n                                                                list\n                                                                \n                                                                    \n                                                                                Array\n                                                                    \n                                                                \n                                                                \n                                                                        no\n                                                                \n                                                                \n            \n                                                            \n                                                            \n                                                                fixed\n                                                                \n                                                                    \n                                                                                boolean\n                                                                    \n                                                                \n                                                                \n                                                                        no\n                                                                \n                                                                \n            \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     any\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n            \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from \"@angular/core\";\n\nimport { Column } from \"../column/column\";\n\n@Pipe({\n  name: \"isFixed\",\n  pure: false\n})\nexport class IsFixedPipe implements PipeTransform {\n  transform(list: Array, fixed: boolean) {\n    if (list === undefined) {\n      return list;\n    } else {\n      return list.filter((o: Column) => o.isFixed === fixed);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/IsGroupPipe.html":{"url":"pipes/IsGroupPipe.html","title":"pipe - IsGroupPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Pipes\n  IsGroupPipe\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n\n    \n\n        \n            File\n        \n        \n            src/grid/utils/is-group.pipe.ts\n        \n\n\n\n        \n            Metadata\n            \n                \n                    \n                        name\n                        isGroup\n                    \n                \n            \n        \n\n            \n                \n                    \n                        Methods\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        transform\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            transform(list: )\n                                \n                            \n            \n            \n                                    \n                                        \n                                                Defined in src/grid/utils/is-group.pipe.ts:9\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Optional\n                                                        \n                                                    \n                                                    \n                                                            \n                                                                list\n                                                                \n                                                                \n                                                                \n                                                                        no\n                                                                \n                                                                \n            \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     any\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n            \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from \"@angular/core\";\n\nimport { Column } from \"../column/column\";\n\n@Pipe({\n  name: \"isGroup\"\n})\nexport class IsGroupPipe implements PipeTransform {\n  transform(list) {\n    if (list === undefined) {\n      return list;\n    } else {\n      return list.filter((o: Column) => o.isGroup || o.isUtility);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/IsRowVisiblePipe.html":{"url":"pipes/IsRowVisiblePipe.html","title":"pipe - IsRowVisiblePipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Pipes\n  IsRowVisiblePipe\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n\n    \n\n        \n            File\n        \n        \n            src/grid/utils/is-row-visible.pipe.ts\n        \n\n\n\n        \n            Metadata\n            \n                \n                    \n                        name\n                        isRowVisible\n                    \n                \n            \n        \n\n            \n                \n                    \n                        Methods\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        transform\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            transform(list: )\n                                \n                            \n            \n            \n                                    \n                                        \n                                                Defined in src/grid/utils/is-row-visible.pipe.ts:9\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Optional\n                                                        \n                                                    \n                                                    \n                                                            \n                                                                list\n                                                                \n                                                                \n                                                                \n                                                                        no\n                                                                \n                                                                \n            \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     any\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n            \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from \"@angular/core\";\n\nimport { Row } from \"../row/row\";\n\n@Pipe({\n  name: \"isRowVisible\"\n})\nexport class IsRowVisiblePipe implements PipeTransform {\n  transform(list) {\n    if (list === undefined) {\n      return list;\n    } else {\n      return list.filter((o: Row) => o.visible);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/IsVisiblePipe.html":{"url":"pipes/IsVisiblePipe.html","title":"pipe - IsVisiblePipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Pipes\n  IsVisiblePipe\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n\n    \n\n        \n            File\n        \n        \n            src/grid/utils/is-visible.pipe.ts\n        \n\n\n\n        \n            Metadata\n            \n                \n                    \n                        name\n                        isVisible\n                    \n                \n            \n        \n\n            \n                \n                    \n                        Methods\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        transform\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            transform(list: )\n                                \n                            \n            \n            \n                                    \n                                        \n                                                Defined in src/grid/utils/is-visible.pipe.ts:9\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Optional\n                                                        \n                                                    \n                                                    \n                                                            \n                                                                list\n                                                                \n                                                                \n                                                                \n                                                                        no\n                                                                \n                                                                \n            \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     any\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n            \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from \"@angular/core\";\n\nimport { Column } from \"../column/column\";\n\n@Pipe({\n  name: \"isVisible\"\n})\nexport class IsVisiblePipe implements PipeTransform {\n  transform(list) {\n    if (list === undefined) {\n      return list;\n    } else {\n      return list.filter((o: Column) => o.visible);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Cell.html":{"url":"classes/Cell.html","title":"class - Cell","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  Cell\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/grid/cell/cell.ts\n        \n\n            \n                Description\n            \n            \n                A holder for the cell's data and other metadata needed for rendering or data management.\n\n            \n\n\n\n\n            \n                Index\n                \n                    \n                        \n                            \n                                Properties\n                            \n                        \n                        \n                            \n                                \n                                    \n                                        dirty\n                                    \n                                    \n                                        key\n                                    \n                                    \n                                        value\n                                    \n                                \n                            \n                        \n                    \n                \n            \n\n            \n                Constructor\n                    \n                        \n                            \n                                \n            constructor(o: Object)\n                                \n                            \n                                    \n                                        \n                                            Defined in src/grid/cell/cell.ts:7\n                                        \n                                    \n            \n                            \n                                \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                                Type\n                                                            Optional\n                                                        \n                                                    \n                                                    \n                                                            \n                                                                o\n                                                              \n                                                                    \n                                                                                Object\n                                                                    \n                                                              \n                                                                \n                                                                        no\n                                                                \n                                                                \n                                                            \n                                                    \n                                                \n                                        \n                                \n                            \n                        \n                    \n            \n\n\n\n            \n                \n                    \n                        Properties\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        dirty\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                    dirty:     boolean\n            \n                                \n                            \n                                \n                                    \n                                        Type :     boolean\n            \n                                    \n                                \n                                \n                                    \n                                        Default value : false\n                                    \n                                \n                                    \n                                        \n                                                Defined in src/grid/cell/cell.ts:7\n                                        \n                                    \n            \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        key\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                    key:     number\n            \n                                \n                            \n                                \n                                    \n                                        Type :     number\n            \n                                    \n                                \n                                    \n                                        \n                                                Defined in src/grid/cell/cell.ts:6\n                                        \n                                    \n            \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        value\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                    value:     any\n            \n                                \n                            \n                                \n                                    \n                                        Type :     any\n            \n                                    \n                                \n                                    \n                                        \n                                                Defined in src/grid/cell/cell.ts:5\n                                        \n                                    \n            \n            \n                        \n                    \n            \n\n    \n\n\n    \n        export class Cell {\n  value: any;\n  key: number;\n  dirty: boolean = false;\n\n  constructor(o: Object) {\n    Object.assign(this, o);\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/EmptyFactory.html":{"url":"classes/EmptyFactory.html","title":"class - EmptyFactory","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  EmptyFactory\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/grid/utils/empty.factory.ts\n        \n\n            \n                Description\n            \n            \n                Allows instantiation of any generic type if the type has no constructor arguments.\n\n            \n\n\n\n\n            \n                Index\n                \n                    \n                        \n                            \n                                Methods\n                            \n                        \n                        \n                            \n                                \n                                    \n                                        getInstance\n                                    \n                                \n                            \n                        \n                    \n                \n            \n\n            \n                Constructor\n                    \n                        \n                            \n                                \n            constructor(emptyConstructor: EmptyConstructor)\n                                \n                            \n                                    \n                                        \n                                            Defined in src/grid/utils/empty.factory.ts:4\n                                        \n                                    \n            \n                            \n                                \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                                Type\n                                                            Optional\n                                                        \n                                                    \n                                                    \n                                                            \n                                                                emptyConstructor\n                                                              \n                                                                    \n                                                                                EmptyConstructor\n                                                                    \n                                                              \n                                                                \n                                                                        no\n                                                                \n                                                                \n                                                            \n                                                    \n                                                \n                                        \n                                \n                            \n                        \n                    \n            \n\n            \n                \n                    \n                        Methods\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        getInstance\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            getInstance()\n                                \n                            \n            \n            \n                                    \n                                        \n                                                Defined in src/grid/utils/empty.factory.ts:7\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                            Returns :     T\n            \n                                        \n                                \n                            \n                        \n                    \n            \n\n\n\n    \n\n\n    \n        export class EmptyFactory {\n  constructor(private emptyConstructor: EmptyConstructor) {}\n\n  getInstance(): T {\n    return new this.emptyConstructor();\n  }\n}\n\nexport interface EmptyConstructor {\n  new(): T;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FormatterParser.html":{"url":"classes/FormatterParser.html","title":"class - FormatterParser","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  FormatterParser\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/grid/column/formatters/formatter-parser.ts\n        \n\n            \n                Description\n            \n            \n                Most simple formatter parser which just returns the value without modification.\n\n            \n\n\n\n\n            \n                Index\n                \n                    \n                        \n                            \n                                Properties\n                            \n                        \n                        \n                            \n                                \n                                    \n                                        config\n                                    \n                                \n                            \n                        \n                        \n                            \n                                Methods\n                            \n                        \n                        \n                            \n                                \n                                    \n                                        formatValue\n                                    \n                                    \n                                        parseValue\n                                    \n                                    \n                                        setConfig\n                                    \n                                \n                            \n                        \n                    \n                \n            \n\n\n            \n                \n                    \n                        Methods\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        formatValue\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            formatValue(value: any)\n                                \n                            \n            \n            \n                                    \n                                        \n                                                Defined in src/grid/column/formatters/formatter-parser.ts:12\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                                Type\n                                                            Optional\n                                                        \n                                                    \n                                                    \n                                                            \n                                                                value\n                                                                \n                                                                    \n                                                                                any\n                                                                    \n                                                                \n                                                                \n                                                                        no\n                                                                \n                                                                \n            \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     any\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        parseValue\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            parseValue(value: any)\n                                \n                            \n            \n            \n                                    \n                                        \n                                                Defined in src/grid/column/formatters/formatter-parser.ts:16\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                                Type\n                                                            Optional\n                                                        \n                                                    \n                                                    \n                                                            \n                                                                value\n                                                                \n                                                                    \n                                                                                any\n                                                                    \n                                                                \n                                                                \n                                                                        no\n                                                                \n                                                                \n            \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     any\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        setConfig\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            setConfig(config: any)\n                                \n                            \n            \n            \n                                    \n                                        \n                                                Defined in src/grid/column/formatters/formatter-parser.ts:8\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                                Type\n                                                            Optional\n                                                        \n                                                    \n                                                    \n                                                            \n                                                                config\n                                                                \n                                                                    \n                                                                                any\n                                                                    \n                                                                \n                                                                \n                                                                        no\n                                                                \n                                                                \n            \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     void\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n            \n\n\n            \n                \n                    \n                        Properties\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        config\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                    config:     any\n            \n                                \n                            \n                                \n                                    \n                                        Type :     any\n            \n                                    \n                                \n                                \n                                    \n                                        Default value : {}\n                                    \n                                \n                                    \n                                        \n                                                Defined in src/grid/column/formatters/formatter-parser.ts:6\n                                        \n                                    \n            \n            \n                        \n                    \n            \n\n    \n\n\n    \n        export class FormatterParser {\n\n  config: any = {};\n\n  setConfig(config: any) {\n    this.config = config;\n  }\n\n  formatValue(value: any): any {\n    return value;\n  }\n\n  parseValue(value: any): any {\n    return value;\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/HtmlUtil.html":{"url":"classes/HtmlUtil.html","title":"class - HtmlUtil","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  HtmlUtil\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/grid/utils/html-util.ts\n        \n\n            \n                Description\n            \n            \n                Convenience class for pulling things such as id from an element.\n\n            \n\n\n\n\n            \n                Index\n                \n                    \n                        \n                            \n                                Methods\n                            \n                        \n                        \n                            \n                                \n                                    \n                                            Static\n                                        getId\n                                    \n                                    \n                                            Static\n                                        getIdElement\n                                    \n                                    \n                                            Static\n                                        getLocation\n                                    \n                                \n                            \n                        \n                    \n                \n            \n\n\n            \n                \n                    \n                        Methods\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                            Static\n                                        getId\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                        \n                                    getId(e: HTMLElement, id?: string)\n                                \n                            \n            \n            \n                                    \n                                        \n                                                Defined in src/grid/utils/html-util.ts:8\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                                Type\n                                                            Optional\n                                                        \n                                                    \n                                                    \n                                                            \n                                                                e\n                                                                \n                                                                    \n                                                                                HTMLElement\n                                                                    \n                                                                \n                                                                \n                                                                        no\n                                                                \n                                                                \n            \n                                                            \n                                                            \n                                                                id\n                                                                \n                                                                    \n                                                                                string\n                                                                    \n                                                                \n                                                                \n                                                                        yes\n                                                                \n                                                                \n            \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     string\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                            Static\n                                        getIdElement\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                        \n                                    getIdElement(e: HTMLElement)\n                                \n                            \n            \n            \n                                    \n                                        \n                                                Defined in src/grid/utils/html-util.ts:23\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                                Type\n                                                            Optional\n                                                        \n                                                    \n                                                    \n                                                            \n                                                                e\n                                                                \n                                                                    \n                                                                                HTMLElement\n                                                                    \n                                                                \n                                                                \n                                                                        no\n                                                                \n                                                                \n            \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     HTMLElement\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                            Static\n                                        getLocation\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                        \n                                    getLocation(e: HTMLElement)\n                                \n                            \n            \n            \n                                    \n                                        \n                                                Defined in src/grid/utils/html-util.ts:38\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                                Type\n                                                            Optional\n                                                        \n                                                    \n                                                    \n                                                            \n                                                                e\n                                                                \n                                                                    \n                                                                                HTMLElement\n                                                                    \n                                                                \n                                                                \n                                                                        no\n                                                                \n                                                                \n            \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     Point\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n            \n\n\n\n    \n\n\n    \n        import {Point} from \"./point\";\n\n/**\n * Convenience class for pulling things such as id from an element.\n */\nexport class HtmlUtil {\n\n  static getId(e: HTMLElement, id?: string): string {\n    if (!e) {\n      return \"\";\n    }\n    while ((!id && e.id === \"\") || (id && !e.id.startsWith(id))) {\n      if (e.parentElement) {\n        e = e.parentElement;\n      } else {\n        break;\n      }\n    }\n\n    return e.id;\n  }\n\n  static getIdElement(e: HTMLElement): HTMLElement {\n    if (!e) {\n      return null;\n    }\n    while (e.id === \"\") {\n      if (e.parentElement) {\n        e = e.parentElement;\n      } else {\n        break;\n      }\n    }\n\n    return e;\n  }\n\n  static getLocation(e: HTMLElement): Point {\n    return Point.getPoint(this.getId(e));\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/InjectableFactory.html":{"url":"classes/InjectableFactory.html","title":"class - InjectableFactory","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  InjectableFactory\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/grid/utils/injectable.factory.ts\n        \n\n            \n                Description\n            \n            \n                Allows instantiation of any generic type if the type expects an injector argument.  See the implementation of\nthe EventListener.\n\n            \n\n\n\n\n            \n                Index\n                \n                    \n                        \n                            \n                                Methods\n                            \n                        \n                        \n                            \n                                \n                                    \n                                        getInstance\n                                    \n                                \n                            \n                        \n                    \n                \n            \n\n            \n                Constructor\n                    \n                        \n                            \n                                \n            constructor(ic: InjectableConstructor, injector: Injector)\n                                \n                            \n                                    \n                                        \n                                            Defined in src/grid/utils/injectable.factory.ts:7\n                                        \n                                    \n            \n                            \n                                \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                                Type\n                                                            Optional\n                                                        \n                                                    \n                                                    \n                                                            \n                                                                ic\n                                                              \n                                                                    \n                                                                                InjectableConstructor\n                                                                    \n                                                              \n                                                                \n                                                                        no\n                                                                \n                                                                \n                                                            \n                                                            \n                                                                injector\n                                                              \n                                                                    \n                                                                                Injector\n                                                                    \n                                                              \n                                                                \n                                                                        no\n                                                                \n                                                                \n                                                            \n                                                    \n                                                \n                                        \n                                \n                            \n                        \n                    \n            \n\n            \n                \n                    \n                        Methods\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        getInstance\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            getInstance()\n                                \n                            \n            \n            \n                                    \n                                        \n                                                Defined in src/grid/utils/injectable.factory.ts:10\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                            Returns :     T\n            \n                                        \n                                \n                            \n                        \n                    \n            \n\n\n\n    \n\n\n    \n        import {Injector} from \"@angular/core\";\n\n/**\n * Allows instantiation of any generic type if the type expects an injector argument.  See the implementation of\n * the EventListener.\n */\nexport class InjectableFactory {\n  constructor(private ic: InjectableConstructor, private injector: Injector) {}\n\n  getInstance(): T {\n    return new this.ic(this.injector);\n  }\n}\n\nexport interface InjectableConstructor {\n  new(injector: Injector): T;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RowChange.html":{"url":"classes/RowChange.html","title":"class - RowChange","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  RowChange\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/grid/utils/row-change.ts\n        \n\n\n\n\n\n            \n                Index\n                \n                    \n                        \n                            \n                                Properties\n                            \n                        \n                        \n                            \n                                \n                                    \n                                        newRowNum\n                                    \n                                    \n                                        oldRowNum\n                                    \n                                \n                            \n                        \n                    \n                \n            \n\n            \n                Constructor\n                    \n                        \n                            \n                                \n            constructor(oldRowNum: number, newRowNum: number)\n                                \n                            \n                                    \n                                        \n                                            Defined in src/grid/utils/row-change.ts:4\n                                        \n                                    \n            \n                            \n                                \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                                Type\n                                                            Optional\n                                                        \n                                                    \n                                                    \n                                                            \n                                                                oldRowNum\n                                                              \n                                                                    \n                                                                                number\n                                                                    \n                                                              \n                                                                \n                                                                        no\n                                                                \n                                                                \n                                                            \n                                                            \n                                                                newRowNum\n                                                              \n                                                                    \n                                                                                number\n                                                                    \n                                                              \n                                                                \n                                                                        no\n                                                                \n                                                                \n                                                            \n                                                    \n                                                \n                                        \n                                \n                            \n                        \n                    \n            \n\n\n\n            \n                \n                    \n                        Properties\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        newRowNum\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                    newRowNum:     number\n            \n                                \n                            \n                                \n                                    \n                                        Type :     number\n            \n                                    \n                                \n                                    \n                                        \n                                                Defined in src/grid/utils/row-change.ts:4\n                                        \n                                    \n            \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        oldRowNum\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                    oldRowNum:     number\n            \n                                \n                            \n                                \n                                    \n                                        Type :     number\n            \n                                    \n                                \n                                    \n                                        \n                                                Defined in src/grid/utils/row-change.ts:3\n                                        \n                                    \n            \n            \n                        \n                    \n            \n\n    \n\n\n    \n        export class RowChange {\n\n  oldRowNum: number;\n  newRowNum: number;\n\n  constructor(oldRowNum: number, newRowNum: number) {\n    this.oldRowNum = oldRowNum;\n    this.newRowNum = newRowNum;\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SortInfo.html":{"url":"classes/SortInfo.html","title":"class - SortInfo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  SortInfo\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/grid/utils/sort-info.ts\n        \n\n\n\n\n\n            \n                Index\n                \n                    \n                        \n                            \n                                Properties\n                            \n                        \n                        \n                            \n                                \n                                    \n                                            Public\n                                        asc\n                                    \n                                    \n                                            Public\n                                        field\n                                    \n                                \n                            \n                        \n                        \n                            \n                                Methods\n                            \n                        \n                        \n                            \n                                \n                                    \n                                        getAsc\n                                    \n                                    \n                                        getField\n                                    \n                                    \n                                        setAsc\n                                    \n                                    \n                                        setField\n                                    \n                                \n                            \n                        \n                    \n                \n            \n\n\n            \n                \n                    \n                        Methods\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        getAsc\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            getAsc()\n                                \n                            \n            \n            \n                                    \n                                        \n                                                Defined in src/grid/utils/sort-info.ts:5\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                            Returns :     boolean\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        getField\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            getField()\n                                \n                            \n            \n            \n                                    \n                                        \n                                                Defined in src/grid/utils/sort-info.ts:13\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                            Returns :     string\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        setAsc\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            setAsc(asc: boolean)\n                                \n                            \n            \n            \n                                    \n                                        \n                                                Defined in src/grid/utils/sort-info.ts:9\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                                Type\n                                                            Optional\n                                                        \n                                                    \n                                                    \n                                                            \n                                                                asc\n                                                                \n                                                                    \n                                                                                boolean\n                                                                    \n                                                                \n                                                                \n                                                                        no\n                                                                \n                                                                \n            \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     void\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        setField\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            setField(field: string)\n                                \n                            \n            \n            \n                                    \n                                        \n                                                Defined in src/grid/utils/sort-info.ts:17\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                                Type\n                                                            Optional\n                                                        \n                                                    \n                                                    \n                                                            \n                                                                field\n                                                                \n                                                                    \n                                                                                string\n                                                                    \n                                                                \n                                                                \n                                                                        no\n                                                                \n                                                                \n            \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     void\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n            \n\n\n            \n                \n                    \n                        Properties\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                            Public\n                                        asc\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                    asc:     boolean\n            \n                                \n                            \n                                \n                                    \n                                        Type :     boolean\n            \n                                    \n                                \n                                \n                                    \n                                        Default value : true\n                                    \n                                \n                                    \n                                        \n                                                Defined in src/grid/utils/sort-info.ts:2\n                                        \n                                    \n            \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                            Public\n                                        field\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                    field:     string\n            \n                                \n                            \n                                \n                                    \n                                        Type :     string\n            \n                                    \n                                \n                                \n                                    \n                                        Default value : null\n                                    \n                                \n                                    \n                                        \n                                                Defined in src/grid/utils/sort-info.ts:3\n                                        \n                                    \n            \n            \n                        \n                    \n            \n\n    \n\n\n    \n        export class SortInfo {\n  public asc: boolean = true;\n  public field: string = null;\n\n  getAsc(): boolean {\n    return this.asc;\n  }\n\n  setAsc(asc: boolean) {\n    this.asc = asc;\n  }\n\n  getField(): string {\n    return this.field;\n  }\n\n  setField(field: string) {\n    this.field = field;\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ClickListener.html":{"url":"interfaces/ClickListener.html","title":"interface - ClickListener","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ClickListener\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/grid/event/click.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    click\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n                \n                    \n                        Methods\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        click\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            click(event: MouseEvent)\n                                \n                            \n            \n            \n                                    \n                                        \n                                                Defined in src/grid/event/click.interface.ts:3\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                                Type\n                                                            Optional\n                                                        \n                                                    \n                                                    \n                                                            \n                                                                event\n                                                                \n                                                                    \n                                                                                MouseEvent\n                                                                    \n                                                                \n                                                                \n                                                                        no\n                                                                \n                                                                \n            \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     boolean\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n            \n\n\n    \n\n\n    \n        export interface ClickListener {\n\n  click(event: MouseEvent): boolean;\n\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DblClickListener.html":{"url":"interfaces/DblClickListener.html","title":"interface - DblClickListener","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  DblClickListener\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/grid/event/dbl-click.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    dblclick\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n                \n                    \n                        Methods\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        dblclick\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            dblclick(event: MouseEvent)\n                                \n                            \n            \n            \n                                    \n                                        \n                                                Defined in src/grid/event/dbl-click.interface.ts:3\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                                Type\n                                                            Optional\n                                                        \n                                                    \n                                                    \n                                                            \n                                                                event\n                                                                \n                                                                    \n                                                                                MouseEvent\n                                                                    \n                                                                \n                                                                \n                                                                        no\n                                                                \n                                                                \n            \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     boolean\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n            \n\n\n    \n\n\n    \n        export interface DblClickListener {\n\n  dblclick(event: MouseEvent): boolean;\n\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Dictionary.html":{"url":"interfaces/Dictionary.html","title":"interface - Dictionary","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Dictionary\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/grid/model/dictionary.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        display\n                                \n                                \n                                        value\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        display\n                                    \n                                \n                                \n                                    \n                                        display:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n                                    \n                                        \n                                            Defined in src/grid/model/dictionary.interface.ts:3\n                                        \n                                    \n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        value\n                                    \n                                \n                                \n                                    \n                                        value:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n                                    \n                                        \n                                            Defined in src/grid/model/dictionary.interface.ts:2\n                                        \n                                    \n\n                        \n                    \n            \n    \n\n\n    \n        export interface Dictionary {\n  value: string;\n  display: string;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/EmptyConstructor.html":{"url":"interfaces/EmptyConstructor.html","title":"interface - EmptyConstructor","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  EmptyConstructor\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/grid/utils/empty.factory.ts\n        \n\n\n\n\n\n\n    \n\n\n    \n        export class EmptyFactory {\n  constructor(private emptyConstructor: EmptyConstructor) {}\n\n  getInstance(): T {\n    return new this.emptyConstructor();\n  }\n}\n\nexport interface EmptyConstructor {\n  new(): T;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/EventListenerArg.html":{"url":"interfaces/EventListenerArg.html","title":"interface - EventListenerArg","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  EventListenerArg\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/grid/event/event-listener-arg.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        config\n                                \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        config\n                                    \n                                \n                                \n                                    \n                                        config:     any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/grid/event/event-listener-arg.interface.ts:5\n                                        \n                                    \n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     Type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Type\n\n                                        \n                                    \n\n\n\n\n                                    \n                                        \n                                            Defined in src/grid/event/event-listener-arg.interface.ts:4\n                                        \n                                    \n\n                        \n                    \n            \n    \n\n\n    \n        import {Type} from \"@angular/core\";\n\nexport interface EventListenerArg {\n  type: Type;\n  config?: any;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/InjectableConstructor.html":{"url":"interfaces/InjectableConstructor.html","title":"interface - InjectableConstructor","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  InjectableConstructor\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/grid/utils/injectable.factory.ts\n        \n\n\n\n\n\n\n    \n\n\n    \n        import {Injector} from \"@angular/core\";\n\n/**\n * Allows instantiation of any generic type if the type expects an injector argument.  See the implementation of\n * the EventListener.\n */\nexport class InjectableFactory {\n  constructor(private ic: InjectableConstructor, private injector: Injector) {}\n\n  getInstance(): T {\n    return new this.ic(this.injector);\n  }\n}\n\nexport interface InjectableConstructor {\n  new(injector: Injector): T;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MouseDownListener.html":{"url":"interfaces/MouseDownListener.html","title":"interface - MouseDownListener","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  MouseDownListener\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/grid/event/mouse-down.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    mouseDown\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n                \n                    \n                        Methods\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        mouseDown\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            mouseDown(event: MouseEvent)\n                                \n                            \n            \n            \n                                    \n                                        \n                                                Defined in src/grid/event/mouse-down.interface.ts:3\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                                Type\n                                                            Optional\n                                                        \n                                                    \n                                                    \n                                                            \n                                                                event\n                                                                \n                                                                    \n                                                                                MouseEvent\n                                                                    \n                                                                \n                                                                \n                                                                        no\n                                                                \n                                                                \n            \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     boolean\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n            \n\n\n    \n\n\n    \n        export interface MouseDownListener {\n\n  mouseDown(event: MouseEvent): boolean;\n\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MouseDragListener.html":{"url":"interfaces/MouseDragListener.html","title":"interface - MouseDragListener","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  MouseDragListener\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/grid/event/mouse-drag.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    mouseDrag\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n                \n                    \n                        Methods\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        mouseDrag\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            mouseDrag(event: MouseEvent)\n                                \n                            \n            \n            \n                                    \n                                        \n                                                Defined in src/grid/event/mouse-drag.interface.ts:3\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                                Type\n                                                            Optional\n                                                        \n                                                    \n                                                    \n                                                            \n                                                                event\n                                                                \n                                                                    \n                                                                                MouseEvent\n                                                                    \n                                                                \n                                                                \n                                                                        no\n                                                                \n                                                                \n            \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     boolean\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n            \n\n\n    \n\n\n    \n        export interface MouseDragListener {\n\n  mouseDrag(event: MouseEvent): boolean;\n\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MouseOverListener.html":{"url":"interfaces/MouseOverListener.html","title":"interface - MouseOverListener","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  MouseOverListener\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/grid/event/mouse-over.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    mouseOver\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n                \n                    \n                        Methods\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        mouseOver\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            mouseOver(event: MouseEvent)\n                                \n                            \n            \n            \n                                    \n                                        \n                                                Defined in src/grid/event/mouse-over.interface.ts:3\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                                Type\n                                                            Optional\n                                                        \n                                                    \n                                                    \n                                                            \n                                                                event\n                                                                \n                                                                    \n                                                                                MouseEvent\n                                                                    \n                                                                \n                                                                \n                                                                        no\n                                                                \n                                                                \n            \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     boolean\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n            \n\n\n    \n\n\n    \n        export interface MouseOverListener {\n\n  mouseOver(event: MouseEvent): boolean;\n\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MouseUpListener.html":{"url":"interfaces/MouseUpListener.html","title":"interface - MouseUpListener","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  MouseUpListener\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/grid/event/mouse-up.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    mouseUp\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n                \n                    \n                        Methods\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        mouseUp\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            mouseUp(event: MouseEvent)\n                                \n                            \n            \n            \n                                    \n                                        \n                                                Defined in src/grid/event/mouse-up.interface.ts:3\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                                Type\n                                                            Optional\n                                                        \n                                                    \n                                                    \n                                                            \n                                                                event\n                                                                \n                                                                    \n                                                                                MouseEvent\n                                                                    \n                                                                \n                                                                \n                                                                        no\n                                                                \n                                                                \n            \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     boolean\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n            \n\n\n    \n\n\n    \n        export interface MouseUpListener {\n\n  mouseUp(event: MouseEvent): boolean;\n\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ARROW\n                        \n                        \n                            CLICK\n                        \n                        \n                            NO_EVENT\n                        \n                        \n                            RESIZE\n                        \n                        \n                            SCROLL\n                        \n                        \n                            TAB\n                        \n                    \n                \n            \n        \n    \n\n\n    src/grid/services/grid-event.service.ts\n    \n                \n                \n                    \n                        \n                            \n                            \n                                \n                                ARROW\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n                            ARROW:     number\n    \n                        \n                    \n                        \n                            \n                                Type :     number\n    \n                            \n                        \n                        \n                            \n                                Default value : 2\n                            \n                        \n    \n    \n                \n            \n            \n                \n                    \n                        \n                            \n                            \n                                \n                                CLICK\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n                            CLICK:     number\n    \n                        \n                    \n                        \n                            \n                                Type :     number\n    \n                            \n                        \n                        \n                            \n                                Default value : 0\n                            \n                        \n    \n    \n                \n            \n            \n                \n                    \n                        \n                            \n                            \n                                \n                                TAB\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n                            TAB:     number\n    \n                        \n                    \n                        \n                            \n                                Type :     number\n    \n                            \n                        \n                        \n                            \n                                Default value : 1\n                            \n                        \n    \n    \n                \n            \n    \n    src/grid/grid.component.ts\n    \n                \n                \n                    \n                        \n                            \n                            \n                                \n                                NO_EVENT\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n                            NO_EVENT:     number\n    \n                        \n                    \n                        \n                            \n                                Type :     number\n    \n                            \n                        \n                        \n                            \n                                Default value : -1\n                            \n                        \n    \n    \n                \n            \n            \n                \n                    \n                        \n                            \n                            \n                                \n                                RESIZE\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n                            RESIZE:     number\n    \n                        \n                    \n                        \n                            \n                                Type :     number\n    \n                            \n                        \n                        \n                            \n                                Default value : 0\n                            \n                        \n    \n    \n                \n            \n            \n                \n                    \n                        \n                            \n                            \n                                \n                                SCROLL\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n                            SCROLL:     number\n    \n                        \n                    \n                        \n                            \n                                Type :     number\n    \n                            \n                        \n                        \n                            \n                                Default value : 1\n                            \n                        \n    \n    \n                \n            \n    \n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
