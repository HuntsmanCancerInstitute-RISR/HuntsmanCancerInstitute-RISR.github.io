var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.1.6","fields":["title","body"],"fieldVectors":[["title/dependencies.html",[0,2.2,1,2.183]],["body/dependencies.html",[1,2.68,2,3.368,3,3.88,4,3.982,5,0.032,6,4.658,7,4.658,8,4.658,9,4.658,10,0.028,11,0.028]],["title/index.html",[12,1.693,13,1.91,14,0.427]],["body/index.html",[0,0.657,1,0.813,2,1.689,5,0.028,10,0.007,11,0.007,12,0.506,15,0.571,16,0.571,17,0.789,18,0.789,19,4.074,20,0.789,21,1.918,22,3.243,23,0.789,24,0.789,25,0.789,26,2.335,27,2.238,28,2.686,29,0.789,30,0.789,31,0.789,32,3.432,33,0.789,34,0.571,35,0.571,36,2.515,37,0.657,38,1.918,39,0.789,40,1.413,41,0.789,42,0.657,43,0.789,44,0.472,45,0.454,46,0.789,47,1.413,48,1.177,49,0.789,50,0.789,51,0.789,52,0.789,53,0.789,54,1.177,55,1.413,56,2.702,57,1.413,58,1.918,59,3.199,60,0.789,61,0.789,62,1.413,63,0.789,64,0.789,65,0.789,66,2.487,67,1.946,68,1.689,69,2.3,70,1.413,71,3.083,72,2.3,73,1.177,74,1.413,75,1.413,76,3.665,77,0.789,78,1.918,79,1.918,80,0.789,81,1.413,82,0.789,83,3.135,84,3.243,85,1.413,86,0.657,87,2.702,88,1.946,89,0.789,90,1.413,91,0.059,92,1.847,93,2.777,94,0.657,95,1.413,96,0.789,97,1.177,98,0.789,99,0.789,100,0.789,101,0.789,102,1.918,103,1.344,104,0.789,105,0.506,106,2.686,107,1.177,108,1.497,109,0.909,110,1.689,111,1.946,112,0.789,113,0.789,114,2.335,115,0.789,116,0.789,117,0.249,118,0.789,119,0.789,120,0.789,121,0.789,122,0.745,123,1.598,124,2.081,125,2.159,126,1.413,127,0.789,128,0.789,129,0.789,130,2.686,131,0.789,132,1.918,133,1.177,134,0.657,135,0.789,136,1.413,137,0.789,138,2.238,139,0.303,140,0.789,141,0.533,142,0.789,143,0.789,144,1.085,145,1.943,146,0.789,147,1.598,148,0.454,149,0.657,150,0.789,151,1.413,152,1.413,153,1.918,154,0.789,155,1.918,156,1.413,157,0.789,158,0.657,159,0.789,160,1.413,161,1.413,162,2.335,163,0.789,164,1.387,165,1.177,166,0.789,167,0.789,168,0.789,169,0.789,170,0.789,171,2.508,172,0.789,173,0.789,174,0.789,175,1.413,176,0.789,177,0.789,178,0.789,179,0.789,180,2.3,181,0.789,182,1.918,183,0.789,184,1.413,185,0.789,186,0.789,187,0.789,188,0.789,189,1.022,190,0.789,191,1.177,192,1.177,193,1.413,194,0.789,195,3.84,196,0.789,197,0.789,198,0.67,199,0.657,200,0.789,201,0.789,202,0.789,203,1.177,204,1.413,205,0.789,206,0.571,207,0.789,208,2.487,209,0.789,210,0.789,211,1.413,212,0.789,213,0.789,214,1.918,215,1.598,216,0.789,217,0.789,218,1.918,219,1.413,220,1.387,221,0.789,222,0.789,223,0.789,224,0.789,225,1.413,226,1.918,227,2.508,228,0.789,229,1.413,230,1.413,231,0.789,232,0.789,233,1.012,234,0.789,235,0.789,236,0.789,237,1.413,238,0.789,239,0.789,240,1.387,241,0.789,242,2.335,243,0.789,244,0.789,245,0.789,246,0.789,247,0.657,248,0.789,249,0.789,250,0.789,251,0.789,252,0.789,253,0.789,254,1.918,255,0.789,256,0.789,257,0.789,258,0.789,259,0.657,260,0.789,261,1.413,262,1.918,263,1.413,264,1.413,265,1.413,266,1.177,267,0.789,268,0.789,269,1.413,270,0.789,271,0.789,272,1.387,273,0.789,274,0.789,275,0.789,276,0.789,277,0.411,278,0.789,279,0.789,280,1.946,281,0.789,282,2.651,283,1.497,284,0.789,285,0.789,286,0.789,287,0.789,288,0.657,289,0.789,290,0.789,291,1.177,292,0.789,293,0.167,294,0.789,295,0.049,296,0.141,297,0.657,298,0.789,299,0.789,300,0.789,301,0.789,302,0.789,303,1.413,304,0.789,305,1.413,306,0.789,307,0.789,308,0.789,309,0.789,310,0.789,311,0.657,312,1.413,313,0.789,314,0.789,315,0.789,316,2.335,317,0.789,318,0.571,319,0.789,320,1.177,321,0.789,322,0.789,323,0.789,324,1.413,325,0.571,326,0.571,327,1.413,328,0.571,329,0.657,330,1.413,331,1.413,332,0.571,333,0.789,334,0.789,335,0.657,336,0.789,337,0.789,338,0.657,339,0.571,340,2.335,341,4.136,342,0.789,343,3.243,344,1.413,345,0.789,346,0.789,347,0.789,348,0.789,349,0.789,350,0.789,351,0.049,352,0.789,353,1.413,354,0.657,355,0.789,356,0.789,357,0.789]],["title/overview.html",[358,3.581]],["body/overview.html",[1,1.542,4,1.938,5,0.032,10,0.02,11,0.02,45,3.704,108,1.718,110,1.938,189,1.938,277,1.997,293,0.234,295,0.165,318,3.237,325,3.237,326,3.237,328,3.237,332,3.237,358,2.233,359,2.233,360,2.233,361,0.199,362,2.233,363,2.233,364,2.233,365,2.233,366,5.024,367,3.729,368,2.869,369,2.869,370,2.869,371,2.869,372,3.729,373,3.729,374,3.729,375,3.729,376,3.729,377,3.729,378,2.869,379,3.194,380,2.233,381,1.938,382,2.68,383,3.834,384,1.938,385,1.064,386,2.68,387,2.68]],["title/changelog.html",[12,1.693,13,1.91,388,2.641]],["body/changelog.html",[5,0.019,10,0.019,11,0.019,19,3.047,27,2.092,32,3.12,35,1.815,36,1.734,42,2.092,56,2.092,66,3.047,67,3.047,69,3.264,71,3.803,73,2.092,83,2.765,86,2.092,87,2.092,88,2.092,92,0.914,93,3.12,94,3.047,105,1.609,107,2.092,111,3.047,124,1.905,125,1.815,134,2.092,138,3.949,147,2.092,148,2.105,164,4.223,165,2.092,198,1.19,203,2.092,220,1.815,227,1.815,233,1.088,282,2.645,283,1.609,311,3.047,320,3.594,329,3.047,338,2.092,339,1.815,389,2.511,390,4.314,391,2.511,392,2.511,393,2.511,394,2.511,395,2.511,396,2.511,397,2.511,398,2.511,399,2.511,400,2.511,401,2.511,402,2.511,403,2.092,404,2.511,405,2.511,406,2.511,407,2.511,408,3.657,409,2.511,410,2.511,411,2.511,412,2.511,413,2.511,414,2.511,415,2.511,416,2.344,417,4.314,418,2.092,419,2.511,420,2.511,421,2.511,422,2.511,423,2.511,424,2.511,425,2.511,426,2.511,427,2.511,428,2.511,429,2.511,430,2.511,431,2.511,432,2.511,433,2.511,434,2.511,435,2.511,436,2.511,437,2.511,438,2.511,439,2.511,440,2.092,441,2.511,442,2.511,443,2.511,444,2.511,445,2.511,446,2.511,447,3.657,448,2.511,449,2.511,450,2.511,451,2.511,452,2.092,453,2.511,454,2.092,455,2.511,456,2.511,457,2.511,458,2.511,459,2.511]],["title/license.html",[12,1.693,13,1.91,440,2.2]],["body/license.html",[5,0.022,10,0.022,11,0.022,15,2.31,16,2.31,48,2.661,54,4.392,59,3.609,92,1.163,97,2.661,108,2.047,149,2.661,158,2.661,191,3.609,259,4.096,280,2.661,339,2.31,351,0.197,381,2.31,403,3.609,452,2.661,460,4.096,461,2.661,462,3.194,463,2.661,464,2.661,465,2.661,466,4.332,467,3.194,468,3.194,469,3.194,470,3.194,471,4.332,472,3.194,473,5.995,474,3.194,475,3.194,476,4.096,477,3.194,478,3.194,479,3.194,480,3.194,481,3.194,482,3.194,483,3.194,484,3.194,485,2.661,486,3.194,487,4.332,488,4.332,489,3.194,490,3.194,491,4.332,492,3.194,493,3.194,494,3.194,495,3.194,496,3.194,497,3.194,498,3.194,499,3.194,500,3.194,501,2.661,502,3.194,503,3.194,504,3.194,505,3.194,506,3.194,507,3.194,508,3.194,509,3.194,510,3.194]],["title/modules.html",[277,2.239]],["body/modules.html",[5,0.029,10,0.029,11,0.029,35,3.485,45,2.773,277,2.51,511,4.819,512,4.819,513,4.819]],["title/modules/GridModule.html",[45,1.816,277,1.644]],["body/modules/GridModule.html",[1,0.91,2,1.144,3,1.317,4,1.852,5,0.033,10,0.013,11,0.013,15,1.144,16,1.144,44,1.949,45,3.561,71,2.334,83,1.014,91,0.117,108,2.797,110,2.334,117,0.333,171,1.852,277,1.334,293,0.138,318,3.46,325,3.46,326,3.46,328,3.46,332,3.46,351,0.097,359,1.317,360,2.689,361,0.275,362,1.317,363,1.317,364,1.317,365,1.317,366,4.749,367,3.635,368,2.797,369,2.797,370,2.797,371,2.797,372,3.986,373,3.986,374,3.635,375,3.635,376,2.689,377,2.689,378,2.069,379,2.134,380,1.317,381,1.144,460,1.317,461,1.317,463,1.317,464,1.317,465,1.317,514,0.138,515,1.581,516,2.561,517,1.581,518,1.581,519,1.581,520,3.228,521,3.228,522,3.711,523,0.628,524,2.561,525,1.581,526,2.561,527,1.581,528,1.581,529,1.581,530,1.014,531,1.581,532,3.711,533,2.561,534,1.581,535,1.581,536,1.581,537,3.228,538,4.364,539,1.581,540,1.581,541,1.581,542,1.581,543,1.581,544,1.581,545,1.581,546,2.561,547,1.581,548,2.561,549,1.581,550,1.581,551,3.228,552,1.581,553,1.581,554,2.134,555,1.581,556,3.228,557,3.228,558,1.581]],["title/injectables/GridMessageService.html",[378,2.023,384,2.283]],["body/injectables/GridMessageService.html",[5,0.033,10,0.019,11,0.019,14,0.42,36,2.085,44,1.253,72,3.061,91,0.193,117,0.571,122,0.664,139,0.487,141,0.545,180,2.531,198,1.777,215,3.122,233,1.905,247,4.011,293,0.227,296,0.671,351,0.16,361,0.193,378,2.402,384,3.18,454,4.254,485,4.432,514,0.227,523,1.03,559,4.569,560,2.597,561,1.777,562,4.136,563,4.815,564,4.815,565,4.815,566,3.748,567,3.748,568,4.398,569,3.748,570,0.691,571,2.597,572,0.607,573,2.71,574,3.748,575,2.597,576,3.122,577,2.597,578,2.597,579,3.748,580,2.597,581,2.597,582,2.597,583,2.597,584,2.597,585,2.597,586,2.597]],["title/pipes/IsFixedPipe.html",[370,2.023,385,1.253]],["body/pipes/IsFixedPipe.html",[5,0.033,10,0.023,11,0.023,44,1.52,69,2.615,91,0.255,103,2.933,109,1.626,117,0.662,122,0.446,124,1.787,125,3.686,139,0.446,141,0.742,144,1.705,145,2.481,164,3.924,291,2.858,293,0.299,296,0.614,351,0.211,361,0.255,370,2.913,385,2.023,514,0.299,523,1.361,530,2.199,570,0.446,572,0.555,587,2.913,588,3.431,589,1.974,590,4.545,591,2.199,592,2.913,593,3.431,594,2.913,595,2.199,596,3.431]],["title/pipes/IsGroupPipe.html",[369,2.023,385,1.253]],["body/pipes/IsGroupPipe.html",[5,0.033,10,0.024,11,0.024,44,1.567,69,2.696,91,0.267,103,3,109,1.704,117,0.678,124,1.872,139,0.467,141,0.759,293,0.314,296,0.643,351,0.221,361,0.267,369,3.004,385,2.069,514,0.314,523,1.426,530,2.303,570,0.467,572,0.582,587,3.004,589,2.068,591,2.303,592,3.004,594,3.004,595,2.303,597,3.593,598,4.686,599,3.593,600,3.593,601,3.593]],["title/pipes/IsRowVisiblePipe.html",[371,2.023,385,1.253]],["body/pipes/IsRowVisiblePipe.html",[5,0.033,10,0.024,11,0.024,44,1.567,83,3.542,91,0.267,103,3,109,1.704,117,0.678,124,1.872,139,0.467,141,0.759,293,0.314,296,0.643,351,0.221,361,0.267,371,3.004,385,2.069,514,0.314,523,1.426,570,0.467,572,0.582,587,3.004,589,2.068,591,2.303,592,3.004,594,3.004,595,2.303,602,2.993,603,4.686,604,2.993,605,3.593,606,2.993]],["title/pipes/IsVisiblePipe.html",[368,2.023,385,1.253]],["body/pipes/IsVisiblePipe.html",[5,0.033,10,0.024,11,0.024,44,1.576,69,2.712,91,0.269,103,3.013,109,1.718,117,0.68,124,1.888,139,0.471,141,0.762,293,0.316,296,0.649,351,0.223,361,0.269,368,3.021,385,2.078,514,0.316,523,1.438,530,2.323,570,0.471,572,0.587,587,3.021,589,2.086,591,2.323,592,3.021,594,3.021,595,2.323,602,3.02,604,3.02,606,3.02,607,4.712]],["title/classes/Cell.html",[283,2.023,293,0.275]],["body/classes/Cell.html",[5,0.032,10,0.023,11,0.023,14,0.553,32,3.278,36,1.62,91,0.253,122,0.704,123,4.238,139,0.444,141,0.497,144,1.701,145,3.278,180,2.927,199,4.514,208,4.514,233,2.442,282,2.471,283,2.906,293,0.396,351,0.211,361,0.253,501,2.846,514,0.298,561,2.149,570,0.704,572,0.553,589,1.966,608,3.416,609,1.966,610,3.416,611,3.416,612,3.416,613,2.19,614,4.533,615,4.533,616,4.533,617,3.416,618,3.416,619,3.416]],["title/classes/EmptyFactory.html",[293,0.275,620,2.283]],["body/classes/EmptyFactory.html",[5,0.032,10,0.024,11,0.024,14,0.594,91,0.272,117,0.618,122,0.685,139,0.477,141,0.534,148,2.113,198,2.253,293,0.415,295,0.226,296,0.851,351,0.226,361,0.353,416,2.354,514,0.32,570,0.618,572,0.594,609,2.113,613,3.046,620,3.437,621,3.059,622,2.656,623,2.656,624,3.572,625,3.672,626,4.275,627,3.672,628,3.672,629,3.378,630,2.354,631,3.059]],["title/classes/FormatterParser.html",[293,0.275,632,2.63]],["body/classes/FormatterParser.html",[5,0.033,10,0.022,11,0.022,14,0.507,36,1.486,37,2.611,91,0.233,117,0.734,122,0.68,139,0.633,141,0.708,233,2.448,240,4.086,293,0.373,296,0.766,297,3.563,351,0.193,361,0.233,476,2.611,514,0.273,561,2.028,570,0.68,572,0.788,573,2.266,609,1.803,632,3.563,633,5.475,634,3.134,635,3.134,636,3.134,637,3.134,638,4.277,639,4.277,640,4.277,641,4.277,642,3.134,643,4.277,644,3.134,645,3.134,646,3.134,647,3.134]],["title/classes/HtmlUtil.html",[293,0.275,648,2.63]],["body/classes/HtmlUtil.html",[5,0.033,10,0.019,11,0.019,14,0.403,44,0.832,72,2.889,91,0.185,117,0.721,122,0.558,133,4.51,139,0.558,141,0.625,266,3.932,288,3.027,293,0.412,296,0.651,335,3.027,351,0.153,354,3.027,361,0.185,514,0.217,554,4.715,570,0.558,572,0.695,609,1.432,648,3.027,649,4.72,650,2.488,651,3.633,652,3.633,653,3.633,654,3.633,655,3.633,656,3.633,657,3.633,658,5.829,659,2.488,660,5.549,661,2.488,662,3.633,663,2.488,664,3.633,665,2.488,666,4.292,667,2.488,668,4.72,669,2.073,670,2.488]],["title/classes/InjectableFactory.html",[293,0.275,671,2.283]],["body/classes/InjectableFactory.html",[5,0.032,10,0.023,11,0.023,14,0.525,34,3.166,44,1.085,91,0.241,105,2.806,109,2.076,117,0.569,122,0.72,139,0.422,141,0.472,148,2.519,198,1.538,293,0.382,295,0.2,296,0.784,351,0.2,361,0.325,416,2.806,514,0.283,523,1.287,562,2.346,570,0.569,572,0.525,609,1.866,613,2.079,622,3.166,623,3.166,624,3.401,629,3.177,630,2.079,671,3.166,672,2.702,673,5.064,674,3.647,675,3.244,676,3.837,677,3.244,678,3.647,679,3.244,680,2.702,681,2.702]],["title/classes/RowChange.html",[293,0.275,682,2.63]],["body/classes/RowChange.html",[5,0.032,10,0.024,11,0.024,14,0.574,91,0.263,122,0.673,139,0.461,141,0.516,180,3.604,293,0.405,351,0.219,361,0.263,514,0.31,561,2.203,570,0.673,572,0.574,613,2.274,682,3.871,683,5.498,684,3.547,685,6.053,686,5.856,687,4.647,688,4.647,689,3.547,690,3.547,691,3.547]],["title/classes/SortInfo.html",[272,2.283,293,0.275]],["body/classes/SortInfo.html",[5,0.033,10,0.02,11,0.02,14,0.444,36,1.847,72,3.278,91,0.203,117,0.704,122,0.641,139,0.506,141,0.567,144,1.905,171,2.818,227,3.918,233,1.688,272,2.818,293,0.34,296,0.698,351,0.169,361,0.203,418,4.514,514,0.239,561,1.847,570,0.704,572,0.631,573,2.818,669,3.246,692,5.574,693,2.742,694,5.418,695,4.936,696,4.936,697,3.897,698,3.897,699,2.742,700,2.742,701,3.897,702,2.742,703,3.897,704,2.742,705,2.742,706,2.742,707,3.897,708,3.897]],["title/interfaces/ClickListener.html",[295,0.195,709,2.63]],["body/interfaces/ClickListener.html",[5,0.031,10,0.026,11,0.026,14,0.675,68,3.723,91,0.309,92,1.518,117,0.542,122,0.542,139,0.542,141,0.607,144,1.722,295,0.317,296,0.922,351,0.257,361,0.309,514,0.364,570,0.542,572,0.675,709,4.29,710,4.168,711,5.149,712,2.649,713,4.168]],["title/interfaces/DblClickListener.html",[295,0.195,714,2.63]],["body/interfaces/DblClickListener.html",[5,0.031,10,0.026,11,0.026,14,0.668,91,0.306,92,1.503,117,0.536,122,0.536,139,0.536,141,0.601,144,1.711,295,0.315,296,0.916,351,0.254,361,0.306,514,0.36,570,0.536,572,0.668,712,2.637,714,4.263,715,5.117,716,4.127,717,5.117,718,5.117,719,4.127]],["title/interfaces/Dictionary.html",[295,0.195,720,2.63]],["body/interfaces/Dictionary.html",[5,0.031,10,0.026,11,0.026,14,0.665,72,3.501,91,0.305,122,0.663,220,4.198,233,2.515,295,0.314,351,0.253,361,0.305,514,0.358,561,2.419,570,0.663,720,4.25,721,4.107,722,4.107,723,4.107]],["title/interfaces/EmptyConstructor.html",[295,0.195,626,2.283]],["body/interfaces/EmptyConstructor.html",[5,0.033,10,0.027,11,0.027,91,0.316,117,0.553,198,2.472,293,0.371,295,0.321,351,0.262,361,0.387,514,0.371,620,3.076,621,3.544,624,2.727,626,4.249,629,3.342,630,2.727,631,3.544]],["title/interfaces/EventListenerArg.html",[206,2.283,295,0.195]],["body/interfaces/EventListenerArg.html",[5,0.031,10,0.026,11,0.026,14,0.64,44,1.321,91,0.293,93,3.943,122,0.817,139,0.647,206,3.601,240,4.14,295,0.307,351,0.243,361,0.293,514,0.345,523,1.568,561,2.361,570,0.647,724,5.453,725,3.951,726,3.951,727,3.951]],["title/interfaces/InjectableConstructor.html",[295,0.195,676,2.283]],["body/interfaces/InjectableConstructor.html",[5,0.033,10,0.025,11,0.025,34,2.765,44,1.279,91,0.284,105,2.451,109,1.813,117,0.497,122,0.634,148,2.201,198,1.813,293,0.334,295,0.301,351,0.236,361,0.362,416,2.451,514,0.334,523,1.518,562,2.765,622,2.765,623,2.765,624,2.451,629,3.127,630,2.451,671,2.765,672,3.186,673,4.868,674,3.186,676,3.884,678,3.186,680,3.186,681,3.186]],["title/interfaces/MouseDownListener.html",[295,0.195,728,2.63]],["body/interfaces/MouseDownListener.html",[5,0.031,10,0.026,11,0.026,14,0.668,91,0.306,92,1.503,117,0.536,122,0.536,139,0.536,141,0.601,144,1.711,295,0.315,296,0.916,351,0.254,361,0.306,514,0.36,570,0.536,572,0.668,712,2.637,728,4.263,729,2.945,730,4.127,731,5.117,732,5.117,733,4.127]],["title/interfaces/MouseDragListener.html",[295,0.195,734,2.63]],["body/interfaces/MouseDragListener.html",[5,0.031,10,0.026,11,0.026,14,0.668,91,0.306,92,1.503,117,0.536,122,0.536,139,0.536,141,0.601,144,1.711,295,0.315,296,0.916,351,0.254,361,0.306,514,0.36,570,0.536,572,0.668,712,2.637,729,2.945,734,4.263,735,4.127,736,5.117,737,5.117,738,4.127]],["title/interfaces/MouseOutListener.html",[295,0.195,739,2.63]],["body/interfaces/MouseOutListener.html",[5,0.031,10,0.026,11,0.026,14,0.668,91,0.306,92,1.503,117,0.536,122,0.536,139,0.536,141,0.601,144,1.711,295,0.315,296,0.916,351,0.254,361,0.306,514,0.36,570,0.536,572,0.668,712,2.637,729,2.945,739,4.263,740,4.127,741,5.117,742,5.117,743,4.127]],["title/interfaces/MouseOverListener.html",[295,0.195,744,2.63]],["body/interfaces/MouseOverListener.html",[5,0.031,10,0.026,11,0.026,14,0.668,91,0.306,92,1.503,117,0.536,122,0.536,139,0.536,141,0.601,144,1.711,295,0.315,296,0.916,351,0.254,361,0.306,514,0.36,570,0.536,572,0.668,712,2.637,729,2.945,744,4.263,745,4.127,746,5.117,747,5.117,748,4.127]],["title/interfaces/MouseUpListener.html",[295,0.195,749,2.63]],["body/interfaces/MouseUpListener.html",[5,0.031,10,0.026,11,0.026,14,0.668,91,0.306,92,1.503,117,0.536,122,0.536,139,0.536,141,0.601,144,1.711,295,0.315,296,0.916,351,0.254,361,0.306,514,0.36,570,0.536,572,0.668,712,2.637,729,2.945,749,4.263,750,4.127,751,5.117,752,5.117,753,4.127]],["title/miscellaneous/variables.html",[754,2.2,755,3.161]],["body/miscellaneous/variables.html",[5,0.032,10,0.024,11,0.024,14,0.565,36,2.763,68,3.716,122,0.757,180,3.595,189,3.716,192,4.281,233,2.525,559,2.906,576,2.906,754,2.906,755,2.906,756,5.139,757,5.139,758,5.139,759,5.139,760,3.488,761,4.595,762,3.488]]],"invertedIndex":[["",{"_index":5,"title":{},"body":{"dependencies.html":{},"index.html":{},"overview.html":{},"changelog.html":{},"license.html":{},"modules.html":{},"modules/GridModule.html":{},"injectables/GridMessageService.html":{},"pipes/IsFixedPipe.html":{},"pipes/IsGroupPipe.html":{},"pipes/IsRowVisiblePipe.html":{},"pipes/IsVisiblePipe.html":{},"classes/Cell.html":{},"classes/EmptyFactory.html":{},"classes/FormatterParser.html":{},"classes/HtmlUtil.html":{},"classes/InjectableFactory.html":{},"classes/RowChange.html":{},"classes/SortInfo.html":{},"interfaces/ClickListener.html":{},"interfaces/DblClickListener.html":{},"interfaces/Dictionary.html":{},"interfaces/EmptyConstructor.html":{},"interfaces/EventListenerArg.html":{},"interfaces/InjectableConstructor.html":{},"interfaces/MouseDownListener.html":{},"interfaces/MouseDragListener.html":{},"interfaces/MouseOutListener.html":{},"interfaces/MouseOverListener.html":{},"interfaces/MouseUpListener.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":761,"title":{},"body":{"miscellaneous/variables.html":{}}}],["1",{"_index":189,"title":{},"body":{"index.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["1.1.x",{"_index":6,"title":{},"body":{"dependencies.html":{}}}],["10",{"_index":184,"title":{},"body":{"index.html":{}}}],["100",{"_index":190,"title":{},"body":{"index.html":{}}}],["11",{"_index":382,"title":{},"body":{"overview.html":{}}}],["12",{"_index":387,"title":{},"body":{"overview.html":{}}}],["15",{"_index":307,"title":{},"body":{"index.html":{}}}],["2",{"_index":576,"title":{},"body":{"injectables/GridMessageService.html":{},"miscellaneous/variables.html":{}}}],["2.19.3",{"_index":9,"title":{},"body":{"dependencies.html":{}}}],["2016",{"_index":517,"title":{},"body":{"modules/GridModule.html":{}}}],["2018",{"_index":462,"title":{},"body":{"license.html":{}}}],["25",{"_index":185,"title":{},"body":{"index.html":{}}}],["34",{"_index":386,"title":{},"body":{"overview.html":{}}}],["4",{"_index":383,"title":{},"body":{"overview.html":{}}}],["4.0.0",{"_index":42,"title":{},"body":{"index.html":{},"changelog.html":{}}}],["4.3.1",{"_index":7,"title":{},"body":{"dependencies.html":{}}}],["50",{"_index":186,"title":{},"body":{"index.html":{}}}],["85",{"_index":309,"title":{},"body":{"index.html":{}}}],["_level",{"_index":563,"title":{},"body":{"injectables/GridMessageService.html":{}}}],["_messag",{"_index":564,"title":{},"body":{"injectables/GridMessageService.html":{}}}],["_messageobserv",{"_index":565,"title":{},"body":{"injectables/GridMessageService.html":{}}}],["abov",{"_index":158,"title":{},"body":{"index.html":{},"license.html":{}}}],["accessor",{"_index":567,"title":{},"body":{"injectables/GridMessageService.html":{}}}],["action",{"_index":97,"title":{},"body":{"index.html":{},"license.html":{}}}],["ad",{"_index":94,"title":{},"body":{"index.html":{},"changelog.html":{}}}],["add",{"_index":390,"title":{},"body":{"changelog.html":{}}}],["advanc",{"_index":281,"title":{},"body":{"index.html":{}}}],["allow",{"_index":148,"title":{},"body":{"index.html":{},"changelog.html":{},"classes/EmptyFactory.html":{},"classes/InjectableFactory.html":{},"interfaces/InjectableConstructor.html":{}}}],["although",{"_index":221,"title":{},"body":{"index.html":{}}}],["analyze_for_entry_compon",{"_index":520,"title":{},"body":{"modules/GridModule.html":{}}}],["and/or",{"_index":481,"title":{},"body":{"license.html":{}}}],["angular",{"_index":18,"title":{},"body":{"index.html":{}}}],["angular/common",{"_index":525,"title":{},"body":{"modules/GridModule.html":{}}}],["angular/cor",{"_index":523,"title":{},"body":{"modules/GridModule.html":{},"injectables/GridMessageService.html":{},"pipes/IsFixedPipe.html":{},"pipes/IsGroupPipe.html":{},"pipes/IsRowVisiblePipe.html":{},"pipes/IsVisiblePipe.html":{},"classes/InjectableFactory.html":{},"interfaces/EventListenerArg.html":{},"interfaces/InjectableConstructor.html":{}}}],["angular/form",{"_index":527,"title":{},"body":{"modules/GridModule.html":{}}}],["anyth",{"_index":30,"title":{},"body":{"index.html":{}}}],["anything.filterev",{"_index":253,"title":{},"body":{"index.html":{}}}],["anywher",{"_index":356,"title":{},"body":{"index.html":{}}}],["api",{"_index":419,"title":{},"body":{"changelog.html":{}}}],["appli",{"_index":256,"title":{},"body":{"index.html":{}}}],["applic",{"_index":278,"title":{},"body":{"index.html":{}}}],["arg.interface.t",{"_index":725,"title":{},"body":{"interfaces/EventListenerArg.html":{}}}],["arg.interface.ts:4",{"_index":727,"title":{},"body":{"interfaces/EventListenerArg.html":{}}}],["arg.interface.ts:5",{"_index":726,"title":{},"body":{"interfaces/EventListenerArg.html":{}}}],["argument",{"_index":623,"title":{},"body":{"classes/EmptyFactory.html":{},"classes/InjectableFactory.html":{},"interfaces/InjectableConstructor.html":{}}}],["aris",{"_index":510,"title":{},"body":{"license.html":{}}}],["array",{"_index":125,"title":{},"body":{"index.html":{},"changelog.html":{},"pipes/IsFixedPipe.html":{}}}],["arrow",{"_index":756,"title":{},"body":{"miscellaneous/variables.html":{}}}],["artifact.2.0.0",{"_index":441,"title":{},"body":{"changelog.html":{}}}],["asc",{"_index":694,"title":{},"body":{"classes/SortInfo.html":{}}}],["associ",{"_index":474,"title":{},"body":{"license.html":{}}}],["author",{"_index":500,"title":{},"body":{"license.html":{}}}],["auto",{"_index":428,"title":{},"body":{"changelog.html":{}}}],["automat",{"_index":349,"title":{},"body":{"index.html":{}}}],["back",{"_index":265,"title":{},"body":{"index.html":{}}}],["bar",{"_index":157,"title":{},"body":{"index.html":{}}}],["base",{"_index":315,"title":{},"body":{"index.html":{}}}],["basic",{"_index":38,"title":{},"body":{"index.html":{}}}],["be",{"_index":275,"title":{},"body":{"index.html":{}}}],["becom",{"_index":39,"title":{},"body":{"index.html":{}}}],["behavior",{"_index":421,"title":{},"body":{"changelog.html":{}}}],["beta.5",{"_index":43,"title":{},"body":{"index.html":{}}}],["big).titl",{"_index":154,"title":{},"body":{"index.html":{}}}],["bigtextpopup",{"_index":373,"title":{},"body":{"overview.html":{},"modules/GridModule.html":{}}}],["bind",{"_index":128,"title":{},"body":{"index.html":{}}}],["birth",{"_index":321,"title":{},"body":{"index.html":{}}}],["boolean",{"_index":144,"title":{},"body":{"index.html":{},"pipes/IsFixedPipe.html":{},"classes/Cell.html":{},"classes/SortInfo.html":{},"interfaces/ClickListener.html":{},"interfaces/DblClickListener.html":{},"interfaces/MouseDownListener.html":{},"interfaces/MouseDragListener.html":{},"interfaces/MouseOutListener.html":{},"interfaces/MouseOverListener.html":{},"interfaces/MouseUpListener.html":{}}}],["bootstrap",{"_index":4,"title":{},"body":{"dependencies.html":{},"overview.html":{},"modules/GridModule.html":{}}}],["bootstrap/ng",{"_index":3,"title":{},"body":{"dependencies.html":{},"modules/GridModule.html":{}}}],["break",{"_index":335,"title":{},"body":{"index.html":{},"classes/HtmlUtil.html":{}}}],["brows",{"_index":513,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":511,"title":{},"body":{"modules.html":{}}}],["build",{"_index":340,"title":{},"body":{"index.html":{}}}],["built",{"_index":312,"title":{},"body":{"index.html":{}}}],["bump",{"_index":432,"title":{},"body":{"changelog.html":{}}}],["busi",{"_index":445,"title":{},"body":{"changelog.html":{}}}],["button.3.1.0",{"_index":407,"title":{},"body":{"changelog.html":{}}}],["c",{"_index":461,"title":{},"body":{"license.html":{},"modules/GridModule.html":{}}}],["calculation.2.0.2",{"_index":436,"title":{},"body":{"changelog.html":{}}}],["call",{"_index":88,"title":{},"body":{"index.html":{},"changelog.html":{}}}],["call.externalpag",{"_index":178,"title":{},"body":{"index.html":{}}}],["call.externalsort",{"_index":177,"title":{},"body":{"index.html":{}}}],["call.pages",{"_index":179,"title":{},"body":{"index.html":{}}}],["callback",{"_index":89,"title":{},"body":{"index.html":{}}}],["cancer",{"_index":16,"title":{},"body":{"index.html":{},"license.html":{},"modules/GridModule.html":{}}}],["case",{"_index":257,"title":{},"body":{"index.html":{}}}],["cell",{"_index":283,"title":{"classes/Cell.html":{}},"body":{"index.html":{},"changelog.html":{},"classes/Cell.html":{}}}],["cell'",{"_index":610,"title":{},"body":{"classes/Cell.html":{}}}],["cell.onrowsav",{"_index":234,"title":{},"body":{"index.html":{}}}],["cell/editrenderers/choic",{"_index":541,"title":{},"body":{"modules/GridModule.html":{}}}],["cell/editrenderers/d",{"_index":542,"title":{},"body":{"modules/GridModule.html":{}}}],["cell/editrenderers/text",{"_index":536,"title":{},"body":{"modules/GridModule.html":{}}}],["cell/viewpopuprenderer/bigtext",{"_index":544,"title":{},"body":{"modules/GridModule.html":{}}}],["cellnumberrangeview",{"_index":304,"title":{},"body":{"index.html":{}}}],["cellviewrender",{"_index":294,"title":{},"body":{"index.html":{}}}],["chang",{"_index":67,"title":{},"body":{"index.html":{},"changelog.html":{}}}],["change.t",{"_index":684,"title":{},"body":{"classes/RowChange.html":{}}}],["change.ts:3",{"_index":689,"title":{},"body":{"classes/RowChange.html":{}}}],["change.ts:4",{"_index":688,"title":{},"body":{"classes/RowChange.html":{}}}],["changelog",{"_index":388,"title":{"changelog.html":{}},"body":{}}],["charg",{"_index":470,"title":{},"body":{"license.html":{}}}],["check.3.1.5",{"_index":396,"title":{},"body":{"changelog.html":{}}}],["choic",{"_index":329,"title":{},"body":{"index.html":{},"changelog.html":{}}}],["choice.compon",{"_index":552,"title":{},"body":{"modules/GridModule.html":{}}}],["choiceeditrender",{"_index":328,"title":{},"body":{"index.html":{},"overview.html":{},"modules/GridModule.html":{}}}],["choos",{"_index":187,"title":{},"body":{"index.html":{}}}],["claim",{"_index":503,"title":{},"body":{"license.html":{}}}],["class",{"_index":293,"title":{"classes/Cell.html":{},"classes/EmptyFactory.html":{},"classes/FormatterParser.html":{},"classes/HtmlUtil.html":{},"classes/InjectableFactory.html":{},"classes/RowChange.html":{},"classes/SortInfo.html":{}},"body":{"index.html":{},"overview.html":{},"modules/GridModule.html":{},"injectables/GridMessageService.html":{},"pipes/IsFixedPipe.html":{},"pipes/IsGroupPipe.html":{},"pipes/IsRowVisiblePipe.html":{},"pipes/IsVisiblePipe.html":{},"classes/Cell.html":{},"classes/EmptyFactory.html":{},"classes/FormatterParser.html":{},"classes/HtmlUtil.html":{},"classes/InjectableFactory.html":{},"classes/RowChange.html":{},"classes/SortInfo.html":{},"interfaces/EmptyConstructor.html":{},"interfaces/InjectableConstructor.html":{}}}],["click",{"_index":68,"title":{},"body":{"index.html":{},"interfaces/ClickListener.html":{},"miscellaneous/variables.html":{}}}],["click(ev",{"_index":711,"title":{},"body":{"interfaces/ClickListener.html":{}}}],["click.interface.t",{"_index":716,"title":{},"body":{"interfaces/DblClickListener.html":{}}}],["click.interface.ts:3",{"_index":719,"title":{},"body":{"interfaces/DblClickListener.html":{}}}],["clicklisten",{"_index":709,"title":{"interfaces/ClickListener.html":{}},"body":{"interfaces/ClickListener.html":{}}}],["cluster_gridmodul",{"_index":362,"title":{},"body":{"overview.html":{},"modules/GridModule.html":{}}}],["cluster_gridmodule_declar",{"_index":363,"title":{},"body":{"overview.html":{},"modules/GridModule.html":{}}}],["cluster_gridmodule_export",{"_index":365,"title":{},"body":{"overview.html":{},"modules/GridModule.html":{}}}],["cluster_gridmodule_gridcomponent_provid",{"_index":364,"title":{},"body":{"overview.html":{},"modules/GridModule.html":{}}}],["code",{"_index":50,"title":{},"body":{"index.html":{}}}],["color",{"_index":398,"title":{},"body":{"changelog.html":{}}}],["colum",{"_index":152,"title":{},"body":{"index.html":{}}}],["column",{"_index":69,"title":{},"body":{"index.html":{},"changelog.html":{},"pipes/IsFixedPipe.html":{},"pipes/IsGroupPipe.html":{},"pipes/IsVisiblePipe.html":{}}}],["column'",{"_index":255,"title":{},"body":{"index.html":{}}}],["column/column",{"_index":530,"title":{},"body":{"modules/GridModule.html":{},"pipes/IsFixedPipe.html":{},"pipes/IsGroupPipe.html":{},"pipes/IsVisiblePipe.html":{}}}],["column/filterrenderers/compar",{"_index":540,"title":{},"body":{"modules/GridModule.html":{}}}],["column/filterrenderers/select",{"_index":543,"title":{},"body":{"modules/GridModule.html":{}}}],["column/filterrenderers/text",{"_index":539,"title":{},"body":{"modules/GridModule.html":{}}}],["columnheadercompon",{"_index":367,"title":{},"body":{"overview.html":{},"modules/GridModule.html":{}}}],["columns[j].field",{"_index":228,"title":{},"body":{"index.html":{}}}],["come",{"_index":264,"title":{},"body":{"index.html":{}}}],["command",{"_index":57,"title":{},"body":{"index.html":{}}}],["commonmodul",{"_index":524,"title":{},"body":{"modules/GridModule.html":{}}}],["compare.3.1.2",{"_index":402,"title":{},"body":{"changelog.html":{}}}],["comparefilterrender",{"_index":326,"title":{},"body":{"index.html":{},"overview.html":{},"modules/GridModule.html":{}}}],["compil",{"_index":49,"title":{},"body":{"index.html":{}}}],["complex",{"_index":31,"title":{},"body":{"index.html":{}}}],["compon",{"_index":110,"title":{},"body":{"index.html":{},"overview.html":{},"modules/GridModule.html":{}}}],["condit",{"_index":486,"title":{},"body":{"license.html":{}}}],["confidenti",{"_index":518,"title":{},"body":{"modules/GridModule.html":{}}}],["config",{"_index":240,"title":{},"body":{"index.html":{},"classes/FormatterParser.html":{},"interfaces/EventListenerArg.html":{}}}],["config/config",{"_index":546,"title":{},"body":{"modules/GridModule.html":{}}}],["configmenucompon",{"_index":374,"title":{},"body":{"overview.html":{},"modules/GridModule.html":{}}}],["configmultichoicecompon",{"_index":375,"title":{},"body":{"overview.html":{},"modules/GridModule.html":{}}}],["configur",{"_index":138,"title":{},"body":{"index.html":{},"changelog.html":{}}}],["configuration.instal",{"_index":41,"title":{},"body":{"index.html":{}}}],["connect",{"_index":452,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["console.display",{"_index":216,"title":{},"body":{"index.html":{}}}],["constructor",{"_index":613,"title":{},"body":{"classes/Cell.html":{},"classes/EmptyFactory.html":{},"classes/InjectableFactory.html":{},"classes/RowChange.html":{}}}],["constructor(",{"_index":675,"title":{},"body":{"classes/InjectableFactory.html":{}}}],["constructor(emptyconstructor",{"_index":625,"title":{},"body":{"classes/EmptyFactory.html":{}}}],["constructor(o",{"_index":614,"title":{},"body":{"classes/Cell.html":{}}}],["constructor(oldrownum",{"_index":687,"title":{},"body":{"classes/RowChange.html":{}}}],["constructor(priv",{"_index":630,"title":{},"body":{"classes/EmptyFactory.html":{},"classes/InjectableFactory.html":{},"interfaces/EmptyConstructor.html":{},"interfaces/InjectableConstructor.html":{}}}],["contain",{"_index":137,"title":{},"body":{"index.html":{}}}],["contract",{"_index":507,"title":{},"body":{"license.html":{}}}],["conveni",{"_index":651,"title":{},"body":{"classes/HtmlUtil.html":{}}}],["copi",{"_index":54,"title":{},"body":{"index.html":{},"license.html":{}}}],["copyright",{"_index":460,"title":{},"body":{"license.html":{},"modules/GridModule.html":{}}}],["creat",{"_index":211,"title":{},"body":{"index.html":{}}}],["createelement(render",{"_index":298,"title":{},"body":{"index.html":{}}}],["current",{"_index":102,"title":{},"body":{"index.html":{}}}],["custom",{"_index":56,"title":{},"body":{"index.html":{},"changelog.html":{}}}],["customiz",{"_index":408,"title":{},"body":{"changelog.html":{}}}],["damag",{"_index":504,"title":{},"body":{"license.html":{}}}],["data",{"_index":32,"title":{},"body":{"index.html":{},"changelog.html":{},"classes/Cell.html":{}}}],["data.celldblclick",{"_index":243,"title":{},"body":{"index.html":{}}}],["data.datacal",{"_index":129,"title":{},"body":{"index.html":{}}}],["data.rowclick",{"_index":244,"title":{},"body":{"index.html":{}}}],["data.rowdblclick",{"_index":245,"title":{},"body":{"index.html":{}}}],["data.warn",{"_index":246,"title":{},"body":{"index.html":{}}}],["data/config/ev",{"_index":443,"title":{},"body":{"changelog.html":{}}}],["datarequest",{"_index":113,"title":{},"body":{"index.html":{}}}],["datatyp",{"_index":322,"title":{},"body":{"index.html":{}}}],["date",{"_index":320,"title":{},"body":{"index.html":{},"changelog.html":{}}}],["dateeditrender",{"_index":325,"title":{},"body":{"index.html":{},"overview.html":{},"modules/GridModule.html":{}}}],["dblclick",{"_index":717,"title":{},"body":{"interfaces/DblClickListener.html":{}}}],["dblclick(ev",{"_index":718,"title":{},"body":{"interfaces/DblClickListener.html":{}}}],["dblclicklisten",{"_index":714,"title":{"interfaces/DblClickListener.html":{}},"body":{"interfaces/DblClickListener.html":{}}}],["deal",{"_index":403,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["declar",{"_index":360,"title":{},"body":{"overview.html":{},"modules/GridModule.html":{}}}],["default",{"_index":36,"title":{},"body":{"index.html":{},"changelog.html":{},"injectables/GridMessageService.html":{},"classes/Cell.html":{},"classes/FormatterParser.html":{},"classes/SortInfo.html":{},"miscellaneous/variables.html":{}}}],["default.externalfilt",{"_index":176,"title":{},"body":{"index.html":{}}}],["defin",{"_index":570,"title":{},"body":{"injectables/GridMessageService.html":{},"pipes/IsFixedPipe.html":{},"pipes/IsGroupPipe.html":{},"pipes/IsRowVisiblePipe.html":{},"pipes/IsVisiblePipe.html":{},"classes/Cell.html":{},"classes/EmptyFactory.html":{},"classes/FormatterParser.html":{},"classes/HtmlUtil.html":{},"classes/InjectableFactory.html":{},"classes/RowChange.html":{},"classes/SortInfo.html":{},"interfaces/ClickListener.html":{},"interfaces/DblClickListener.html":{},"interfaces/Dictionary.html":{},"interfaces/EventListenerArg.html":{},"interfaces/MouseDownListener.html":{},"interfaces/MouseDragListener.html":{},"interfaces/MouseOutListener.html":{},"interfaces/MouseOverListener.html":{},"interfaces/MouseUpListener.html":{}}}],["delay",{"_index":263,"title":{},"body":{"index.html":{}}}],["demo",{"_index":22,"title":{},"body":{"index.html":{}}}],["demo/node_modules/hci",{"_index":352,"title":{},"body":{"index.html":{}}}],["demoif",{"_index":345,"title":{},"body":{"index.html":{}}}],["demoth",{"_index":348,"title":{},"body":{"index.html":{}}}],["depend",{"_index":1,"title":{"dependencies.html":{}},"body":{"dependencies.html":{},"index.html":{},"overview.html":{},"modules/GridModule.html":{}}}],["descript",{"_index":609,"title":{},"body":{"classes/Cell.html":{},"classes/EmptyFactory.html":{},"classes/FormatterParser.html":{},"classes/HtmlUtil.html":{},"classes/InjectableFactory.html":{}}}],["design",{"_index":25,"title":{},"body":{"index.html":{}}}],["determin",{"_index":242,"title":{},"body":{"index.html":{}}}],["dictionari",{"_index":720,"title":{"interfaces/Dictionary.html":{}},"body":{"interfaces/Dictionary.html":{}}}],["differ",{"_index":313,"title":{},"body":{"index.html":{}}}],["dirti",{"_index":199,"title":{},"body":{"index.html":{},"classes/Cell.html":{}}}],["disabl",{"_index":169,"title":{},"body":{"index.html":{}}}],["display",{"_index":220,"title":{},"body":{"index.html":{},"changelog.html":{},"interfaces/Dictionary.html":{}}}],["dist",{"_index":52,"title":{},"body":{"index.html":{}}}],["distribut",{"_index":479,"title":{},"body":{"license.html":{}}}],["dob",{"_index":319,"title":{},"body":{"index.html":{}}}],["document",{"_index":475,"title":{},"body":{"license.html":{}}}],["doesn't",{"_index":346,"title":{},"body":{"index.html":{}}}],["don't",{"_index":204,"title":{},"body":{"index.html":{}}}],["down.interface.t",{"_index":730,"title":{},"body":{"interfaces/MouseDownListener.html":{}}}],["down.interface.ts:3",{"_index":733,"title":{},"body":{"interfaces/MouseDownListener.html":{}}}],["drag",{"_index":410,"title":{},"body":{"changelog.html":{}}}],["drag.interface.t",{"_index":735,"title":{},"body":{"interfaces/MouseDragListener.html":{}}}],["drag.interface.ts:3",{"_index":738,"title":{},"body":{"interfaces/MouseDragListener.html":{}}}],["drop",{"_index":412,"title":{},"body":{"changelog.html":{}}}],["e",{"_index":660,"title":{},"body":{"classes/HtmlUtil.html":{}}}],["e.g",{"_index":151,"title":{},"body":{"index.html":{}}}],["e.id",{"_index":666,"title":{},"body":{"classes/HtmlUtil.html":{}}}],["e.id.startswith(id",{"_index":667,"title":{},"body":{"classes/HtmlUtil.html":{}}}],["e.parentel",{"_index":668,"title":{},"body":{"classes/HtmlUtil.html":{}}}],["each",{"_index":290,"title":{},"body":{"index.html":{}}}],["edit",{"_index":537,"title":{},"body":{"modules/GridModule.html":{}}}],["editrender",{"_index":324,"title":{},"body":{"index.html":{}}}],["element",{"_index":653,"title":{},"body":{"classes/HtmlUtil.html":{}}}],["emit",{"_index":195,"title":{},"body":{"index.html":{}}}],["emitt",{"_index":409,"title":{},"body":{"changelog.html":{}}}],["empti",{"_index":413,"title":{},"body":{"changelog.html":{}}}],["emptyconstructor",{"_index":626,"title":{"interfaces/EmptyConstructor.html":{}},"body":{"classes/EmptyFactory.html":{},"interfaces/EmptyConstructor.html":{}}}],["emptyfactori",{"_index":620,"title":{"classes/EmptyFactory.html":{}},"body":{"classes/EmptyFactory.html":{},"interfaces/EmptyConstructor.html":{}}}],["entrycompon",{"_index":516,"title":{},"body":{"modules/GridModule.html":{}}}],["error",{"_index":566,"title":{},"body":{"injectables/GridMessageService.html":{}}}],["error(messag",{"_index":569,"title":{},"body":{"injectables/GridMessageService.html":{}}}],["error.3.0.0",{"_index":415,"title":{},"body":{"changelog.html":{}}}],["especi",{"_index":449,"title":{},"body":{"changelog.html":{}}}],["event",{"_index":92,"title":{},"body":{"index.html":{},"changelog.html":{},"license.html":{},"interfaces/ClickListener.html":{},"interfaces/DblClickListener.html":{},"interfaces/MouseDownListener.html":{},"interfaces/MouseDragListener.html":{},"interfaces/MouseOutListener.html":{},"interfaces/MouseOverListener.html":{},"interfaces/MouseUpListener.html":{}}}],["event.service.t",{"_index":760,"title":{},"body":{"miscellaneous/variables.html":{}}}],["eventlisten",{"_index":674,"title":{},"body":{"classes/InjectableFactory.html":{},"interfaces/InjectableConstructor.html":{}}}],["eventlistenerarg",{"_index":206,"title":{"interfaces/EventListenerArg.html":{}},"body":{"index.html":{},"interfaces/EventListenerArg.html":{}}}],["events.mod",{"_index":209,"title":{},"body":{"index.html":{}}}],["exampl",{"_index":106,"title":{},"body":{"index.html":{}}}],["expect",{"_index":34,"title":{},"body":{"index.html":{},"classes/InjectableFactory.html":{},"interfaces/InjectableConstructor.html":{}}}],["export",{"_index":361,"title":{},"body":{"overview.html":{},"modules/GridModule.html":{},"injectables/GridMessageService.html":{},"pipes/IsFixedPipe.html":{},"pipes/IsGroupPipe.html":{},"pipes/IsRowVisiblePipe.html":{},"pipes/IsVisiblePipe.html":{},"classes/Cell.html":{},"classes/EmptyFactory.html":{},"classes/FormatterParser.html":{},"classes/HtmlUtil.html":{},"classes/InjectableFactory.html":{},"classes/RowChange.html":{},"classes/SortInfo.html":{},"interfaces/ClickListener.html":{},"interfaces/DblClickListener.html":{},"interfaces/Dictionary.html":{},"interfaces/EmptyConstructor.html":{},"interfaces/EventListenerArg.html":{},"interfaces/InjectableConstructor.html":{},"interfaces/MouseDownListener.html":{},"interfaces/MouseDragListener.html":{},"interfaces/MouseOutListener.html":{},"interfaces/MouseOverListener.html":{},"interfaces/MouseUpListener.html":{}}}],["express",{"_index":493,"title":{},"body":{"license.html":{}}}],["extend",{"_index":314,"title":{},"body":{"index.html":{}}}],["extern",{"_index":87,"title":{},"body":{"index.html":{},"changelog.html":{}}}],["externalconfig",{"_index":422,"title":{},"body":{"changelog.html":{}}}],["externaldata(this.datageneratorservice.getdata(250",{"_index":119,"title":{},"body":{"index.html":{}}}],["externalinfo",{"_index":114,"title":{},"body":{"index.html":{}}}],["externalinfo)).delay(500",{"_index":120,"title":{},"body":{"index.html":{}}}],["fals",{"_index":145,"title":{},"body":{"index.html":{},"pipes/IsFixedPipe.html":{},"classes/Cell.html":{}}}],["featur",{"_index":27,"title":{},"body":{"index.html":{},"changelog.html":{}}}],["femal",{"_index":330,"title":{},"body":{"index.html":{}}}],["field",{"_index":227,"title":{},"body":{"index.html":{},"changelog.html":{},"classes/SortInfo.html":{}}}],["file",{"_index":351,"title":{},"body":{"index.html":{},"license.html":{},"modules/GridModule.html":{},"injectables/GridMessageService.html":{},"pipes/IsFixedPipe.html":{},"pipes/IsGroupPipe.html":{},"pipes/IsRowVisiblePipe.html":{},"pipes/IsVisiblePipe.html":{},"classes/Cell.html":{},"classes/EmptyFactory.html":{},"classes/FormatterParser.html":{},"classes/HtmlUtil.html":{},"classes/InjectableFactory.html":{},"classes/RowChange.html":{},"classes/SortInfo.html":{},"interfaces/ClickListener.html":{},"interfaces/DblClickListener.html":{},"interfaces/Dictionary.html":{},"interfaces/EmptyConstructor.html":{},"interfaces/EventListenerArg.html":{},"interfaces/InjectableConstructor.html":{},"interfaces/MouseDownListener.html":{},"interfaces/MouseDragListener.html":{},"interfaces/MouseOutListener.html":{},"interfaces/MouseOverListener.html":{},"interfaces/MouseUpListener.html":{}}}],["filter",{"_index":71,"title":{},"body":{"index.html":{},"changelog.html":{},"modules/GridModule.html":{}}}],["filterev",{"_index":267,"title":{},"body":{"index.html":{}}}],["filterinfo",{"_index":254,"title":{},"body":{"index.html":{}}}],["filterrender",{"_index":316,"title":{},"body":{"index.html":{}}}],["fire",{"_index":260,"title":{},"body":{"index.html":{}}}],["fired.datafilt",{"_index":268,"title":{},"body":{"index.html":{}}}],["fired.datasort",{"_index":274,"title":{},"body":{"index.html":{}}}],["first",{"_index":79,"title":{},"body":{"index.html":{}}}],["firstnam",{"_index":317,"title":{},"body":{"index.html":{}}}],["fit",{"_index":496,"title":{},"body":{"license.html":{}}}],["fix",{"_index":164,"title":{},"body":{"index.html":{},"changelog.html":{},"pipes/IsFixedPipe.html":{}}}],["fixed.pip",{"_index":535,"title":{},"body":{"modules/GridModule.html":{}}}],["fixed.pipe.t",{"_index":588,"title":{},"body":{"pipes/IsFixedPipe.html":{}}}],["fixed.pipe.ts:10",{"_index":593,"title":{},"body":{"pipes/IsFixedPipe.html":{}}}],["fixes.1.0.0",{"_index":456,"title":{},"body":{"changelog.html":{}}}],["flag",{"_index":146,"title":{},"body":{"index.html":{}}}],["flow",{"_index":217,"title":{},"body":{"index.html":{}}}],["folder",{"_index":53,"title":{},"body":{"index.html":{}}}],["follow",{"_index":280,"title":{},"body":{"index.html":{},"license.html":{}}}],["format",{"_index":237,"title":{},"body":{"index.html":{}}}],["format/pars",{"_index":424,"title":{},"body":{"changelog.html":{}}}],["formatt",{"_index":635,"title":{},"body":{"classes/FormatterParser.html":{}}}],["formatterpars",{"_index":632,"title":{"classes/FormatterParser.html":{}},"body":{"classes/FormatterParser.html":{}}}],["formatting/pars",{"_index":448,"title":{},"body":{"changelog.html":{}}}],["formatvalu",{"_index":638,"title":{},"body":{"classes/FormatterParser.html":{}}}],["formatvalue(valu",{"_index":641,"title":{},"body":{"classes/FormatterParser.html":{}}}],["formsmodul",{"_index":526,"title":{},"body":{"modules/GridModule.html":{}}}],["forroot(globalconfig",{"_index":555,"title":{},"body":{"modules/GridModule.html":{}}}],["free",{"_index":469,"title":{},"body":{"license.html":{}}}],["from.nvisiblerow",{"_index":188,"title":{},"body":{"index.html":{}}}],["full",{"_index":26,"title":{},"body":{"index.html":{}}}],["function",{"_index":111,"title":{},"body":{"index.html":{},"changelog.html":{}}}],["furnish",{"_index":484,"title":{},"body":{"license.html":{}}}],["gender",{"_index":327,"title":{},"body":{"index.html":{}}}],["gener",{"_index":416,"title":{},"body":{"changelog.html":{},"classes/EmptyFactory.html":{},"classes/InjectableFactory.html":{},"interfaces/InjectableConstructor.html":{}}}],["generic.2.1.1",{"_index":425,"title":{},"body":{"changelog.html":{}}}],["get",{"_index":12,"title":{"index.html":{},"changelog.html":{},"license.html":{}},"body":{"index.html":{}}}],["getasc",{"_index":695,"title":{},"body":{"classes/SortInfo.html":{}}}],["getfield",{"_index":696,"title":{},"body":{"classes/SortInfo.html":{}}}],["getid",{"_index":654,"title":{},"body":{"classes/HtmlUtil.html":{}}}],["getid(",{"_index":657,"title":{},"body":{"classes/HtmlUtil.html":{}}}],["getidel",{"_index":655,"title":{},"body":{"classes/HtmlUtil.html":{}}}],["getidelement(",{"_index":662,"title":{},"body":{"classes/HtmlUtil.html":{}}}],["getinst",{"_index":624,"title":{},"body":{"classes/EmptyFactory.html":{},"classes/InjectableFactory.html":{},"interfaces/EmptyConstructor.html":{},"interfaces/InjectableConstructor.html":{}}}],["getloc",{"_index":656,"title":{},"body":{"classes/HtmlUtil.html":{}}}],["getlocation(",{"_index":664,"title":{},"body":{"classes/HtmlUtil.html":{}}}],["getmessageobserv",{"_index":581,"title":{},"body":{"injectables/GridMessageService.html":{}}}],["github",{"_index":23,"title":{},"body":{"index.html":{}}}],["global",{"_index":134,"title":{},"body":{"index.html":{},"changelog.html":{}}}],["global.servic",{"_index":550,"title":{},"body":{"modules/GridModule.html":{}}}],["globalconfig",{"_index":556,"title":{},"body":{"modules/GridModule.html":{}}}],["grant",{"_index":468,"title":{},"body":{"license.html":{}}}],["grid",{"_index":19,"title":{},"body":{"index.html":{},"changelog.html":{}}}],["grid\";@ngmodul",{"_index":46,"title":{},"body":{"index.html":{}}}],["grid'",{"_index":150,"title":{},"body":{"index.html":{}}}],["grid.cellclick",{"_index":241,"title":{},"body":{"index.html":{}}}],["grid.compon",{"_index":529,"title":{},"body":{"modules/GridModule.html":{}}}],["grid.groupbi",{"_index":167,"title":{},"body":{"index.html":{}}}],["grid.linkedgroup",{"_index":140,"title":{},"body":{"index.html":{}}}],["grid.output",{"_index":223,"title":{},"body":{"index.html":{}}}],["grid.them",{"_index":159,"title":{},"body":{"index.html":{}}}],["grid/servic",{"_index":394,"title":{},"body":{"changelog.html":{}}}],["gridcompon",{"_index":366,"title":{},"body":{"overview.html":{},"modules/GridModule.html":{}}}],["grideventservic",{"_index":377,"title":{},"body":{"overview.html":{},"modules/GridModule.html":{}}}],["gridglobalservic",{"_index":548,"title":{},"body":{"modules/GridModule.html":{}}}],["gridmessageservic",{"_index":378,"title":{"injectables/GridMessageService.html":{}},"body":{"overview.html":{},"modules/GridModule.html":{},"injectables/GridMessageService.html":{}}}],["gridmodul",{"_index":45,"title":{"modules/GridModule.html":{}},"body":{"index.html":{},"overview.html":{},"modules.html":{},"modules/GridModule.html":{}}}],["gridmodule.forroot",{"_index":47,"title":{},"body":{"index.html":{}}}],["gridservic",{"_index":376,"title":{},"body":{"overview.html":{},"modules/GridModule.html":{}}}],["group",{"_index":84,"title":{},"body":{"index.html":{}}}],["group.pip",{"_index":534,"title":{},"body":{"modules/GridModule.html":{}}}],["group.pipe.t",{"_index":597,"title":{},"body":{"pipes/IsGroupPipe.html":{}}}],["group.pipe.ts:9",{"_index":599,"title":{},"body":{"pipes/IsGroupPipe.html":{}}}],["groupbycollaps",{"_index":170,"title":{},"body":{"index.html":{}}}],["handl",{"_index":28,"title":{},"body":{"index.html":{}}}],["hci",{"_index":21,"title":{},"body":{"index.html":{}}}],["header",{"_index":70,"title":{},"body":{"index.html":{}}}],["header.compon",{"_index":531,"title":{},"body":{"modules/GridModule.html":{}}}],["height",{"_index":433,"title":{},"body":{"changelog.html":{}}}],["here",{"_index":104,"title":{},"body":{"index.html":{}}}],["herebi",{"_index":467,"title":{},"body":{"license.html":{}}}],["hidden",{"_index":174,"title":{},"body":{"index.html":{}}}],["high",{"_index":308,"title":{},"body":{"index.html":{}}}],["holder",{"_index":501,"title":{},"body":{"license.html":{},"classes/Cell.html":{}}}],["html",{"_index":132,"title":{},"body":{"index.html":{}}}],["htmlelement",{"_index":658,"title":{},"body":{"classes/HtmlUtil.html":{}}}],["htmlelement;a",{"_index":300,"title":{},"body":{"index.html":{}}}],["htmlutil",{"_index":648,"title":{"classes/HtmlUtil.html":{}},"body":{"classes/HtmlUtil.html":{}}}],["http",{"_index":414,"title":{},"body":{"changelog.html":{}}}],["huntsman",{"_index":15,"title":{},"body":{"index.html":{},"license.html":{},"modules/GridModule.html":{}}}],["ic",{"_index":678,"title":{},"body":{"classes/InjectableFactory.html":{},"interfaces/InjectableConstructor.html":{}}}],["id",{"_index":133,"title":{},"body":{"index.html":{},"classes/HtmlUtil.html":{}}}],["implement",{"_index":109,"title":{},"body":{"index.html":{},"pipes/IsFixedPipe.html":{},"pipes/IsGroupPipe.html":{},"pipes/IsRowVisiblePipe.html":{},"pipes/IsVisiblePipe.html":{},"classes/InjectableFactory.html":{},"interfaces/InjectableConstructor.html":{}}}],["impli",{"_index":494,"title":{},"body":{"license.html":{}}}],["import",{"_index":44,"title":{},"body":{"index.html":{},"modules/GridModule.html":{},"injectables/GridMessageService.html":{},"pipes/IsFixedPipe.html":{},"pipes/IsGroupPipe.html":{},"pipes/IsRowVisiblePipe.html":{},"pipes/IsVisiblePipe.html":{},"classes/HtmlUtil.html":{},"classes/InjectableFactory.html":{},"interfaces/EventListenerArg.html":{},"interfaces/InjectableConstructor.html":{}}}],["improv",{"_index":447,"title":{},"body":{"changelog.html":{}}}],["in.onconfigchang",{"_index":239,"title":{},"body":{"index.html":{}}}],["includ",{"_index":259,"title":{},"body":{"index.html":{},"license.html":{}}}],["index",{"_index":14,"title":{"index.html":{}},"body":{"injectables/GridMessageService.html":{},"classes/Cell.html":{},"classes/EmptyFactory.html":{},"classes/FormatterParser.html":{},"classes/HtmlUtil.html":{},"classes/InjectableFactory.html":{},"classes/RowChange.html":{},"classes/SortInfo.html":{},"interfaces/ClickListener.html":{},"interfaces/DblClickListener.html":{},"interfaces/Dictionary.html":{},"interfaces/EventListenerArg.html":{},"interfaces/MouseDownListener.html":{},"interfaces/MouseDragListener.html":{},"interfaces/MouseOutListener.html":{},"interfaces/MouseOverListener.html":{},"interfaces/MouseUpListener.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":514,"title":{},"body":{"modules/GridModule.html":{},"injectables/GridMessageService.html":{},"pipes/IsFixedPipe.html":{},"pipes/IsGroupPipe.html":{},"pipes/IsRowVisiblePipe.html":{},"pipes/IsVisiblePipe.html":{},"classes/Cell.html":{},"classes/EmptyFactory.html":{},"classes/FormatterParser.html":{},"classes/HtmlUtil.html":{},"classes/InjectableFactory.html":{},"classes/RowChange.html":{},"classes/SortInfo.html":{},"interfaces/ClickListener.html":{},"interfaces/DblClickListener.html":{},"interfaces/Dictionary.html":{},"interfaces/EmptyConstructor.html":{},"interfaces/EventListenerArg.html":{},"interfaces/InjectableConstructor.html":{},"interfaces/MouseDownListener.html":{},"interfaces/MouseDragListener.html":{},"interfaces/MouseOutListener.html":{},"interfaces/MouseOverListener.html":{},"interfaces/MouseUpListener.html":{}}}],["info.id",{"_index":131,"title":{},"body":{"index.html":{}}}],["info.t",{"_index":693,"title":{},"body":{"classes/SortInfo.html":{}}}],["info.ts:13",{"_index":700,"title":{},"body":{"classes/SortInfo.html":{}}}],["info.ts:17",{"_index":704,"title":{},"body":{"classes/SortInfo.html":{}}}],["info.ts:2",{"_index":705,"title":{},"body":{"classes/SortInfo.html":{}}}],["info.ts:3",{"_index":706,"title":{},"body":{"classes/SortInfo.html":{}}}],["info.ts:5",{"_index":699,"title":{},"body":{"classes/SortInfo.html":{}}}],["info.ts:9",{"_index":702,"title":{},"body":{"classes/SortInfo.html":{}}}],["initi",{"_index":457,"title":{},"body":{"changelog.html":{}}}],["inject",{"_index":384,"title":{"injectables/GridMessageService.html":{}},"body":{"overview.html":{},"injectables/GridMessageService.html":{}}}],["injectableconstructor",{"_index":676,"title":{"interfaces/InjectableConstructor.html":{}},"body":{"classes/InjectableFactory.html":{},"interfaces/InjectableConstructor.html":{}}}],["injectablefactori",{"_index":671,"title":{"classes/InjectableFactory.html":{}},"body":{"classes/InjectableFactory.html":{},"interfaces/InjectableConstructor.html":{}}}],["injector",{"_index":673,"title":{},"body":{"classes/InjectableFactory.html":{},"interfaces/InjectableConstructor.html":{}}}],["input",{"_index":121,"title":{},"body":{"index.html":{}}}],["instal",{"_index":344,"title":{},"body":{"index.html":{}}}],["instanc",{"_index":279,"title":{},"body":{"index.html":{}}}],["instanti",{"_index":622,"title":{},"body":{"classes/EmptyFactory.html":{},"classes/InjectableFactory.html":{},"interfaces/InjectableConstructor.html":{}}}],["instead",{"_index":62,"title":{},"body":{"index.html":{}}}],["institut",{"_index":463,"title":{},"body":{"license.html":{},"modules/GridModule.html":{}}}],["institute'",{"_index":17,"title":{},"body":{"index.html":{}}}],["interfac",{"_index":295,"title":{"interfaces/ClickListener.html":{},"interfaces/DblClickListener.html":{},"interfaces/Dictionary.html":{},"interfaces/EmptyConstructor.html":{},"interfaces/EventListenerArg.html":{},"interfaces/InjectableConstructor.html":{},"interfaces/MouseDownListener.html":{},"interfaces/MouseDragListener.html":{},"interfaces/MouseOutListener.html":{},"interfaces/MouseOverListener.html":{},"interfaces/MouseUpListener.html":{}},"body":{"index.html":{},"overview.html":{},"classes/EmptyFactory.html":{},"classes/InjectableFactory.html":{},"interfaces/ClickListener.html":{},"interfaces/DblClickListener.html":{},"interfaces/Dictionary.html":{},"interfaces/EmptyConstructor.html":{},"interfaces/EventListenerArg.html":{},"interfaces/InjectableConstructor.html":{},"interfaces/MouseDownListener.html":{},"interfaces/MouseDragListener.html":{},"interfaces/MouseOutListener.html":{},"interfaces/MouseOverListener.html":{},"interfaces/MouseUpListener.html":{}}}],["intro",{"_index":24,"title":{},"body":{"index.html":{}}}],["introduc",{"_index":336,"title":{},"body":{"index.html":{}}}],["invalid",{"_index":392,"title":{},"body":{"changelog.html":{}}}],["isfix",{"_index":590,"title":{},"body":{"pipes/IsFixedPipe.html":{}}}],["isfixedpip",{"_index":370,"title":{"pipes/IsFixedPipe.html":{}},"body":{"overview.html":{},"modules/GridModule.html":{},"pipes/IsFixedPipe.html":{}}}],["isgroup",{"_index":598,"title":{},"body":{"pipes/IsGroupPipe.html":{}}}],["isgrouppip",{"_index":369,"title":{"pipes/IsGroupPipe.html":{}},"body":{"overview.html":{},"modules/GridModule.html":{},"pipes/IsGroupPipe.html":{}}}],["isrowvis",{"_index":603,"title":{},"body":{"pipes/IsRowVisiblePipe.html":{}}}],["isrowvisiblepip",{"_index":371,"title":{"pipes/IsRowVisiblePipe.html":{}},"body":{"overview.html":{},"modules/GridModule.html":{},"pipes/IsRowVisiblePipe.html":{}}}],["issu",{"_index":334,"title":{},"body":{"index.html":{}}}],["isvis",{"_index":607,"title":{},"body":{"pipes/IsVisiblePipe.html":{}}}],["isvisiblepip",{"_index":368,"title":{"pipes/IsVisiblePipe.html":{}},"body":{"overview.html":{},"modules/GridModule.html":{},"pipes/IsVisiblePipe.html":{}}}],["j",{"_index":226,"title":{},"body":{"index.html":{}}}],["json",{"_index":136,"title":{},"body":{"index.html":{}}}],["key",{"_index":208,"title":{},"body":{"index.html":{},"classes/Cell.html":{}}}],["key1",{"_index":251,"title":{},"body":{"index.html":{}}}],["key2",{"_index":252,"title":{},"body":{"index.html":{}}}],["keyword",{"_index":437,"title":{},"body":{"changelog.html":{}}}],["kind",{"_index":492,"title":{},"body":{"license.html":{}}}],["known",{"_index":333,"title":{},"body":{"index.html":{}}}],["lab",{"_index":302,"title":{},"body":{"index.html":{}}}],["last",{"_index":80,"title":{},"body":{"index.html":{}}}],["left",{"_index":165,"title":{},"body":{"index.html":{},"changelog.html":{}}}],["legend",{"_index":359,"title":{},"body":{"overview.html":{},"modules/GridModule.html":{}}}],["liabil",{"_index":505,"title":{},"body":{"license.html":{}}}],["liabl",{"_index":502,"title":{},"body":{"license.html":{}}}],["librari",{"_index":20,"title":{},"body":{"index.html":{}}}],["licens",{"_index":440,"title":{"license.html":{}},"body":{"changelog.html":{}}}],["limit",{"_index":191,"title":{},"body":{"index.html":{},"license.html":{}}}],["link",{"_index":142,"title":{},"body":{"index.html":{}}}],["list",{"_index":103,"title":{},"body":{"index.html":{},"pipes/IsFixedPipe.html":{},"pipes/IsGroupPipe.html":{},"pipes/IsRowVisiblePipe.html":{},"pipes/IsVisiblePipe.html":{}}}],["list.filter((o",{"_index":595,"title":{},"body":{"pipes/IsFixedPipe.html":{},"pipes/IsGroupPipe.html":{},"pipes/IsRowVisiblePipe.html":{},"pipes/IsVisiblePipe.html":{}}}],["listen",{"_index":93,"title":{},"body":{"index.html":{},"changelog.html":{},"interfaces/EventListenerArg.html":{}}}],["load",{"_index":203,"title":{},"body":{"index.html":{},"changelog.html":{}}}],["locat",{"_index":231,"title":{},"body":{"index.html":{}}}],["log",{"_index":389,"title":{},"body":{"changelog.html":{}}}],["low",{"_index":306,"title":{},"body":{"index.html":{}}}],["make",{"_index":347,"title":{},"body":{"index.html":{}}}],["male",{"_index":331,"title":{},"body":{"index.html":{}}}],["manag",{"_index":612,"title":{},"body":{"classes/Cell.html":{}}}],["mani",{"_index":101,"title":{},"body":{"index.html":{}}}],["match",{"_index":11,"title":{},"body":{"dependencies.html":{},"index.html":{},"overview.html":{},"changelog.html":{},"license.html":{},"modules.html":{},"modules/GridModule.html":{},"injectables/GridMessageService.html":{},"pipes/IsFixedPipe.html":{},"pipes/IsGroupPipe.html":{},"pipes/IsRowVisiblePipe.html":{},"pipes/IsVisiblePipe.html":{},"classes/Cell.html":{},"classes/EmptyFactory.html":{},"classes/FormatterParser.html":{},"classes/HtmlUtil.html":{},"classes/InjectableFactory.html":{},"classes/RowChange.html":{},"classes/SortInfo.html":{},"interfaces/ClickListener.html":{},"interfaces/DblClickListener.html":{},"interfaces/Dictionary.html":{},"interfaces/EmptyConstructor.html":{},"interfaces/EventListenerArg.html":{},"interfaces/InjectableConstructor.html":{},"interfaces/MouseDownListener.html":{},"interfaces/MouseDragListener.html":{},"interfaces/MouseOutListener.html":{},"interfaces/MouseOverListener.html":{},"interfaces/MouseUpListener.html":{},"miscellaneous/variables.html":{}}}],["menu.compon",{"_index":547,"title":{},"body":{"modules/GridModule.html":{}}}],["merchant",{"_index":495,"title":{},"body":{"license.html":{}}}],["merg",{"_index":478,"title":{},"body":{"license.html":{}}}],["messag",{"_index":247,"title":{},"body":{"index.html":{},"injectables/GridMessageService.html":{}}}],["message.service.t",{"_index":560,"title":{},"body":{"injectables/GridMessageService.html":{}}}],["message.service.ts:10",{"_index":577,"title":{},"body":{"injectables/GridMessageService.html":{}}}],["message.service.ts:12",{"_index":571,"title":{},"body":{"injectables/GridMessageService.html":{}}}],["message.service.ts:16",{"_index":575,"title":{},"body":{"injectables/GridMessageService.html":{}}}],["message.service.ts:20",{"_index":582,"title":{},"body":{"injectables/GridMessageService.html":{}}}],["message.service.ts:8",{"_index":578,"title":{},"body":{"injectables/GridMessageService.html":{}}}],["message.service.ts:9",{"_index":580,"title":{},"body":{"injectables/GridMessageService.html":{}}}],["messageobserv",{"_index":568,"title":{},"body":{"injectables/GridMessageService.html":{}}}],["metadata",{"_index":589,"title":{},"body":{"pipes/IsFixedPipe.html":{},"pipes/IsGroupPipe.html":{},"pipes/IsRowVisiblePipe.html":{},"pipes/IsVisiblePipe.html":{},"classes/Cell.html":{}}}],["method",{"_index":296,"title":{},"body":{"index.html":{},"injectables/GridMessageService.html":{},"pipes/IsFixedPipe.html":{},"pipes/IsGroupPipe.html":{},"pipes/IsRowVisiblePipe.html":{},"pipes/IsVisiblePipe.html":{},"classes/EmptyFactory.html":{},"classes/FormatterParser.html":{},"classes/HtmlUtil.html":{},"classes/InjectableFactory.html":{},"classes/SortInfo.html":{},"interfaces/ClickListener.html":{},"interfaces/DblClickListener.html":{},"interfaces/MouseDownListener.html":{},"interfaces/MouseDragListener.html":{},"interfaces/MouseOutListener.html":{},"interfaces/MouseOverListener.html":{},"interfaces/MouseUpListener.html":{}}}],["mimic",{"_index":353,"title":{},"body":{"index.html":{}}}],["miscellan",{"_index":754,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["mm/dd/yyyi",{"_index":323,"title":{},"body":{"index.html":{}}}],["mock",{"_index":112,"title":{},"body":{"index.html":{}}}],["mode",{"_index":212,"title":{},"body":{"index.html":{}}}],["modif",{"_index":637,"title":{},"body":{"classes/FormatterParser.html":{}}}],["modifi",{"_index":149,"title":{},"body":{"index.html":{},"license.html":{}}}],["modul",{"_index":277,"title":{"modules.html":{},"modules/GridModule.html":{}},"body":{"index.html":{},"overview.html":{},"modules.html":{},"modules/GridModule.html":{}}}],["modulewithprovid",{"_index":521,"title":{},"body":{"modules/GridModule.html":{}}}],["moment",{"_index":8,"title":{},"body":{"dependencies.html":{}}}],["more",{"_index":86,"title":{},"body":{"index.html":{},"changelog.html":{}}}],["mousedown",{"_index":731,"title":{},"body":{"interfaces/MouseDownListener.html":{}}}],["mousedown(ev",{"_index":732,"title":{},"body":{"interfaces/MouseDownListener.html":{}}}],["mousedownlisten",{"_index":728,"title":{"interfaces/MouseDownListener.html":{}},"body":{"interfaces/MouseDownListener.html":{}}}],["mousedrag",{"_index":736,"title":{},"body":{"interfaces/MouseDragListener.html":{}}}],["mousedrag(ev",{"_index":737,"title":{},"body":{"interfaces/MouseDragListener.html":{}}}],["mousedraglisten",{"_index":734,"title":{"interfaces/MouseDragListener.html":{}},"body":{"interfaces/MouseDragListener.html":{}}}],["mouseev",{"_index":712,"title":{},"body":{"interfaces/ClickListener.html":{},"interfaces/DblClickListener.html":{},"interfaces/MouseDownListener.html":{},"interfaces/MouseDragListener.html":{},"interfaces/MouseOutListener.html":{},"interfaces/MouseOverListener.html":{},"interfaces/MouseUpListener.html":{}}}],["mouseout",{"_index":741,"title":{},"body":{"interfaces/MouseOutListener.html":{}}}],["mouseout(ev",{"_index":742,"title":{},"body":{"interfaces/MouseOutListener.html":{}}}],["mouseoutlisten",{"_index":739,"title":{"interfaces/MouseOutListener.html":{}},"body":{"interfaces/MouseOutListener.html":{}}}],["mouseov",{"_index":746,"title":{},"body":{"interfaces/MouseOverListener.html":{}}}],["mouseover(ev",{"_index":747,"title":{},"body":{"interfaces/MouseOverListener.html":{}}}],["mouseoverlisten",{"_index":744,"title":{"interfaces/MouseOverListener.html":{}},"body":{"interfaces/MouseOverListener.html":{}}}],["mouseup",{"_index":751,"title":{},"body":{"interfaces/MouseUpListener.html":{}}}],["mouseup(ev",{"_index":752,"title":{},"body":{"interfaces/MouseUpListener.html":{}}}],["mouseuplisten",{"_index":749,"title":{"interfaces/MouseUpListener.html":{}},"body":{"interfaces/MouseUpListener.html":{}}}],["move",{"_index":51,"title":{},"body":{"index.html":{}}}],["ms",{"_index":401,"title":{},"body":{"changelog.html":{}}}],["multi",{"_index":551,"title":{},"body":{"modules/GridModule.html":{}}}],["multipl",{"_index":258,"title":{},"body":{"index.html":{}}}],["n",{"_index":411,"title":{},"body":{"changelog.html":{}}}],["name",{"_index":141,"title":{},"body":{"index.html":{},"injectables/GridMessageService.html":{},"pipes/IsFixedPipe.html":{},"pipes/IsGroupPipe.html":{},"pipes/IsRowVisiblePipe.html":{},"pipes/IsVisiblePipe.html":{},"classes/Cell.html":{},"classes/EmptyFactory.html":{},"classes/FormatterParser.html":{},"classes/HtmlUtil.html":{},"classes/InjectableFactory.html":{},"classes/RowChange.html":{},"classes/SortInfo.html":{},"interfaces/ClickListener.html":{},"interfaces/DblClickListener.html":{},"interfaces/MouseDownListener.html":{},"interfaces/MouseDragListener.html":{},"interfaces/MouseOutListener.html":{},"interfaces/MouseOverListener.html":{},"interfaces/MouseUpListener.html":{}}}],["name.3.1.3",{"_index":400,"title":{},"body":{"changelog.html":{}}}],["navig",{"_index":197,"title":{},"body":{"index.html":{}}}],["ndata",{"_index":270,"title":{},"body":{"index.html":{}}}],["nearli",{"_index":29,"title":{},"body":{"index.html":{}}}],["need",{"_index":611,"title":{},"body":{"classes/Cell.html":{}}}],["new",{"_index":198,"title":{},"body":{"index.html":{},"changelog.html":{},"injectables/GridMessageService.html":{},"classes/EmptyFactory.html":{},"classes/InjectableFactory.html":{},"interfaces/EmptyConstructor.html":{},"interfaces/InjectableConstructor.html":{}}}],["new(injector",{"_index":681,"title":{},"body":{"classes/InjectableFactory.html":{},"interfaces/InjectableConstructor.html":{}}}],["newrownum",{"_index":685,"title":{},"body":{"classes/RowChange.html":{}}}],["newvalu",{"_index":230,"title":{},"body":{"index.html":{}}}],["next",{"_index":82,"title":{},"body":{"index.html":{}}}],["ng",{"_index":2,"title":{},"body":{"dependencies.html":{},"index.html":{},"modules/GridModule.html":{}}}],["ngbmodul",{"_index":528,"title":{},"body":{"modules/GridModule.html":{}}}],["ngbmodule.forroot",{"_index":553,"title":{},"body":{"modules/GridModule.html":{}}}],["ngmodul",{"_index":522,"title":{},"body":{"modules/GridModule.html":{}}}],["ngoninit",{"_index":115,"title":{},"body":{"index.html":{}}}],["nlab",{"_index":301,"title":{},"body":{"index.html":{}}}],["no_ev",{"_index":757,"title":{},"body":{"miscellaneous/variables.html":{}}}],["noninfring",{"_index":499,"title":{},"body":{"license.html":{}}}],["note",{"_index":100,"title":{},"body":{"index.html":{}}}],["notic",{"_index":487,"title":{},"body":{"license.html":{}}}],["npm",{"_index":343,"title":{},"body":{"index.html":{}}}],["npmignore.2.0.1",{"_index":438,"title":{},"body":{"changelog.html":{}}}],["npmpack",{"_index":60,"title":{},"body":{"index.html":{}}}],["npmpublish",{"_index":61,"title":{},"body":{"index.html":{}}}],["null",{"_index":669,"title":{},"body":{"classes/HtmlUtil.html":{},"classes/SortInfo.html":{}}}],["number",{"_index":180,"title":{},"body":{"index.html":{},"injectables/GridMessageService.html":{},"classes/Cell.html":{},"classes/RowChange.html":{},"miscellaneous/variables.html":{}}}],["numer",{"_index":455,"title":{},"body":{"changelog.html":{}}}],["o",{"_index":616,"title":{},"body":{"classes/Cell.html":{}}}],["o.isfix",{"_index":596,"title":{},"body":{"pipes/IsFixedPipe.html":{}}}],["o.isgroup",{"_index":600,"title":{},"body":{"pipes/IsGroupPipe.html":{}}}],["o.isutil",{"_index":601,"title":{},"body":{"pipes/IsGroupPipe.html":{}}}],["o.vis",{"_index":606,"title":{},"body":{"pipes/IsRowVisiblePipe.html":{},"pipes/IsVisiblePipe.html":{}}}],["object",{"_index":123,"title":{},"body":{"index.html":{},"classes/Cell.html":{}}}],["object.assign(thi",{"_index":619,"title":{},"body":{"classes/Cell.html":{}}}],["objects.fixedcolumn",{"_index":163,"title":{},"body":{"index.html":{}}}],["observ",{"_index":454,"title":{},"body":{"changelog.html":{},"injectables/GridMessageService.html":{}}}],["observable.of(new",{"_index":118,"title":{},"body":{"index.html":{}}}],["obtain",{"_index":472,"title":{},"body":{"license.html":{}}}],["odd.3.1.4",{"_index":399,"title":{},"body":{"changelog.html":{}}}],["old",{"_index":232,"title":{},"body":{"index.html":{}}}],["oldrownum",{"_index":686,"title":{},"body":{"classes/RowChange.html":{}}}],["oldvalu",{"_index":229,"title":{},"body":{"index.html":{}}}],["on",{"_index":85,"title":{},"body":{"index.html":{}}}],["oncellsav",{"_index":224,"title":{},"body":{"index.html":{}}}],["onrowsav",{"_index":196,"title":{},"body":{"index.html":{}}}],["option",{"_index":139,"title":{},"body":{"index.html":{},"injectables/GridMessageService.html":{},"pipes/IsFixedPipe.html":{},"pipes/IsGroupPipe.html":{},"pipes/IsRowVisiblePipe.html":{},"pipes/IsVisiblePipe.html":{},"classes/Cell.html":{},"classes/EmptyFactory.html":{},"classes/FormatterParser.html":{},"classes/HtmlUtil.html":{},"classes/InjectableFactory.html":{},"classes/RowChange.html":{},"classes/SortInfo.html":{},"interfaces/ClickListener.html":{},"interfaces/DblClickListener.html":{},"interfaces/EventListenerArg.html":{},"interfaces/MouseDownListener.html":{},"interfaces/MouseDragListener.html":{},"interfaces/MouseOutListener.html":{},"interfaces/MouseOverListener.html":{},"interfaces/MouseUpListener.html":{}}}],["organization.3.1.6",{"_index":395,"title":{},"body":{"changelog.html":{}}}],["origin",{"_index":238,"title":{},"body":{"index.html":{}}}],["originalrowdata",{"_index":236,"title":{},"body":{"index.html":{}}}],["otherwis",{"_index":509,"title":{},"body":{"license.html":{}}}],["out",{"_index":381,"title":{},"body":{"overview.html":{},"license.html":{},"modules/GridModule.html":{}}}],["out.interface.t",{"_index":740,"title":{},"body":{"interfaces/MouseOutListener.html":{}}}],["out.interface.ts:3",{"_index":743,"title":{},"body":{"interfaces/MouseOutListener.html":{}}}],["over.interface.t",{"_index":745,"title":{},"body":{"interfaces/MouseOverListener.html":{}}}],["over.interface.ts:3",{"_index":748,"title":{},"body":{"interfaces/MouseOverListener.html":{}}}],["overview",{"_index":358,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["pack",{"_index":64,"title":{},"body":{"index.html":{}}}],["packag",{"_index":0,"title":{"dependencies.html":{}},"body":{"index.html":{}}}],["package.json",{"_index":55,"title":{},"body":{"index.html":{}}}],["page",{"_index":76,"title":{},"body":{"index.html":{}}}],["paramet",{"_index":572,"title":{},"body":{"injectables/GridMessageService.html":{},"pipes/IsFixedPipe.html":{},"pipes/IsGroupPipe.html":{},"pipes/IsRowVisiblePipe.html":{},"pipes/IsVisiblePipe.html":{},"classes/Cell.html":{},"classes/EmptyFactory.html":{},"classes/FormatterParser.html":{},"classes/HtmlUtil.html":{},"classes/InjectableFactory.html":{},"classes/RowChange.html":{},"classes/SortInfo.html":{},"interfaces/ClickListener.html":{},"interfaces/DblClickListener.html":{},"interfaces/MouseDownListener.html":{},"interfaces/MouseDragListener.html":{},"interfaces/MouseOutListener.html":{},"interfaces/MouseOverListener.html":{},"interfaces/MouseUpListener.html":{}}}],["parser",{"_index":636,"title":{},"body":{"classes/FormatterParser.html":{}}}],["parser.t",{"_index":634,"title":{},"body":{"classes/FormatterParser.html":{}}}],["parser.ts:12",{"_index":642,"title":{},"body":{"classes/FormatterParser.html":{}}}],["parser.ts:16",{"_index":644,"title":{},"body":{"classes/FormatterParser.html":{}}}],["parser.ts:6",{"_index":646,"title":{},"body":{"classes/FormatterParser.html":{}}}],["parser.ts:8",{"_index":645,"title":{},"body":{"classes/FormatterParser.html":{}}}],["parsevalu",{"_index":639,"title":{},"body":{"classes/FormatterParser.html":{}}}],["parsevalue(valu",{"_index":643,"title":{},"body":{"classes/FormatterParser.html":{}}}],["particular",{"_index":497,"title":{},"body":{"license.html":{}}}],["pass",{"_index":130,"title":{},"body":{"index.html":{}}}],["paus",{"_index":429,"title":{},"body":{"changelog.html":{}}}],["per",{"_index":181,"title":{},"body":{"index.html":{}}}],["perform",{"_index":207,"title":{},"body":{"index.html":{}}}],["permiss",{"_index":466,"title":{},"body":{"license.html":{}}}],["permit",{"_index":483,"title":{},"body":{"license.html":{}}}],["person",{"_index":471,"title":{},"body":{"license.html":{}}}],["pipe",{"_index":385,"title":{"pipes/IsFixedPipe.html":{},"pipes/IsGroupPipe.html":{},"pipes/IsRowVisiblePipe.html":{},"pipes/IsVisiblePipe.html":{}},"body":{"overview.html":{},"pipes/IsFixedPipe.html":{},"pipes/IsGroupPipe.html":{},"pipes/IsRowVisiblePipe.html":{},"pipes/IsVisiblePipe.html":{}}}],["pipetransform",{"_index":594,"title":{},"body":{"pipes/IsFixedPipe.html":{},"pipes/IsGroupPipe.html":{},"pipes/IsRowVisiblePipe.html":{},"pipes/IsVisiblePipe.html":{}}}],["point",{"_index":266,"title":{},"body":{"index.html":{},"classes/HtmlUtil.html":{}}}],["point.getpoint(this.getid(",{"_index":670,"title":{},"body":{"classes/HtmlUtil.html":{}}}],["popup",{"_index":420,"title":{},"body":{"changelog.html":{}}}],["popup).selectedrow",{"_index":250,"title":{},"body":{"index.html":{}}}],["popup.compon",{"_index":545,"title":{},"body":{"modules/GridModule.html":{}}}],["portion",{"_index":490,"title":{},"body":{"license.html":{}}}],["possibl",{"_index":75,"title":{},"body":{"index.html":{}}}],["prevent",{"_index":431,"title":{},"body":{"changelog.html":{}}}],["previou",{"_index":81,"title":{},"body":{"index.html":{}}}],["privat",{"_index":562,"title":{},"body":{"injectables/GridMessageService.html":{},"classes/InjectableFactory.html":{},"interfaces/InjectableConstructor.html":{}}}],["prod",{"_index":357,"title":{},"body":{"index.html":{}}}],["product",{"_index":355,"title":{},"body":{"index.html":{}}}],["promis",{"_index":453,"title":{},"body":{"changelog.html":{}}}],["propag",{"_index":406,"title":{},"body":{"changelog.html":{}}}],["properti",{"_index":561,"title":{},"body":{"injectables/GridMessageService.html":{},"classes/Cell.html":{},"classes/FormatterParser.html":{},"classes/RowChange.html":{},"classes/SortInfo.html":{},"interfaces/Dictionary.html":{},"interfaces/EventListenerArg.html":{}}}],["proprietari",{"_index":519,"title":{},"body":{"modules/GridModule.html":{}}}],["provid",{"_index":108,"title":{},"body":{"index.html":{},"overview.html":{},"license.html":{},"modules/GridModule.html":{}}}],["public",{"_index":418,"title":{},"body":{"changelog.html":{},"classes/SortInfo.html":{}}}],["publish",{"_index":48,"title":{},"body":{"index.html":{},"license.html":{}}}],["publish.bas",{"_index":65,"title":{},"body":{"index.html":{}}}],["pull",{"_index":354,"title":{},"body":{"index.html":{},"classes/HtmlUtil.html":{}}}],["pure",{"_index":291,"title":{},"body":{"index.html":{},"pipes/IsFixedPipe.html":{}}}],["purpos",{"_index":498,"title":{},"body":{"license.html":{}}}],["rang",{"_index":74,"title":{},"body":{"index.html":{}}}],["re",{"_index":286,"title":{},"body":{"index.html":{}}}],["readm",{"_index":439,"title":{},"body":{"changelog.html":{}}}],["readme.2.1.0",{"_index":426,"title":{},"body":{"changelog.html":{}}}],["readme.md",{"_index":459,"title":{},"body":{"changelog.html":{}}}],["rearrang",{"_index":393,"title":{},"body":{"changelog.html":{}}}],["refactor",{"_index":442,"title":{},"body":{"changelog.html":{}}}],["referenc",{"_index":451,"title":{},"body":{"changelog.html":{}}}],["refresh",{"_index":284,"title":{},"body":{"index.html":{}}}],["releas",{"_index":458,"title":{},"body":{"changelog.html":{}}}],["remov",{"_index":427,"title":{},"body":{"changelog.html":{}}}],["render",{"_index":282,"title":{},"body":{"index.html":{},"changelog.html":{},"classes/Cell.html":{}}}],["renderer.compon",{"_index":538,"title":{},"body":{"modules/GridModule.html":{}}}],["renderer2",{"_index":299,"title":{},"body":{"index.html":{}}}],["report",{"_index":161,"title":{},"body":{"index.html":{}}}],["request",{"_index":338,"title":{},"body":{"index.html":{},"changelog.html":{}}}],["requir",{"_index":58,"title":{},"body":{"index.html":{}}}],["reset",{"_index":380,"title":{},"body":{"overview.html":{},"modules/GridModule.html":{}}}],["resiz",{"_index":758,"title":{},"body":{"miscellaneous/variables.html":{}}}],["restrict",{"_index":477,"title":{},"body":{"license.html":{}}}],["result",{"_index":10,"title":{},"body":{"dependencies.html":{},"index.html":{},"overview.html":{},"changelog.html":{},"license.html":{},"modules.html":{},"modules/GridModule.html":{},"injectables/GridMessageService.html":{},"pipes/IsFixedPipe.html":{},"pipes/IsGroupPipe.html":{},"pipes/IsRowVisiblePipe.html":{},"pipes/IsVisiblePipe.html":{},"classes/Cell.html":{},"classes/EmptyFactory.html":{},"classes/FormatterParser.html":{},"classes/HtmlUtil.html":{},"classes/InjectableFactory.html":{},"classes/RowChange.html":{},"classes/SortInfo.html":{},"interfaces/ClickListener.html":{},"interfaces/DblClickListener.html":{},"interfaces/Dictionary.html":{},"interfaces/EmptyConstructor.html":{},"interfaces/EventListenerArg.html":{},"interfaces/InjectableConstructor.html":{},"interfaces/MouseDownListener.html":{},"interfaces/MouseDragListener.html":{},"interfaces/MouseOutListener.html":{},"interfaces/MouseOverListener.html":{},"interfaces/MouseUpListener.html":{},"miscellaneous/variables.html":{}}}],["retriev",{"_index":90,"title":{},"body":{"index.html":{}}}],["return",{"_index":117,"title":{},"body":{"index.html":{},"modules/GridModule.html":{},"injectables/GridMessageService.html":{},"pipes/IsFixedPipe.html":{},"pipes/IsGroupPipe.html":{},"pipes/IsRowVisiblePipe.html":{},"pipes/IsVisiblePipe.html":{},"classes/EmptyFactory.html":{},"classes/FormatterParser.html":{},"classes/HtmlUtil.html":{},"classes/InjectableFactory.html":{},"classes/SortInfo.html":{},"interfaces/ClickListener.html":{},"interfaces/DblClickListener.html":{},"interfaces/EmptyConstructor.html":{},"interfaces/InjectableConstructor.html":{},"interfaces/MouseDownListener.html":{},"interfaces/MouseDragListener.html":{},"interfaces/MouseOutListener.html":{},"interfaces/MouseOverListener.html":{},"interfaces/MouseUpListener.html":{}}}],["returning.sortev",{"_index":271,"title":{},"body":{"index.html":{}}}],["revers",{"_index":397,"title":{},"body":{"changelog.html":{}}}],["right",{"_index":339,"title":{},"body":{"index.html":{},"changelog.html":{},"license.html":{}}}],["root",{"_index":218,"title":{},"body":{"index.html":{}}}],["row",{"_index":83,"title":{},"body":{"index.html":{},"changelog.html":{},"modules/GridModule.html":{},"pipes/IsRowVisiblePipe.html":{}}}],["row/row",{"_index":605,"title":{},"body":{"pipes/IsRowVisiblePipe.html":{}}}],["rowchang",{"_index":682,"title":{"classes/RowChange.html":{}},"body":{"classes/RowChange.html":{}}}],["rownum",{"_index":235,"title":{},"body":{"index.html":{}}}],["rows[i].key",{"_index":225,"title":{},"body":{"index.html":{}}}],["run",{"_index":341,"title":{},"body":{"index.html":{}}}],["rxjs/rx",{"_index":583,"title":{},"body":{"injectables/GridMessageService.html":{}}}],["same",{"_index":193,"title":{},"body":{"index.html":{}}}],["save",{"_index":444,"title":{},"body":{"changelog.html":{}}}],["scroll",{"_index":192,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["scrollbar",{"_index":434,"title":{},"body":{"changelog.html":{}}}],["see",{"_index":105,"title":{},"body":{"index.html":{},"changelog.html":{},"classes/InjectableFactory.html":{},"interfaces/InjectableConstructor.html":{}}}],["select",{"_index":73,"title":{},"body":{"index.html":{},"changelog.html":{}}}],["selectfilterrender",{"_index":332,"title":{},"body":{"index.html":{},"overview.html":{},"modules/GridModule.html":{}}}],["sell",{"_index":482,"title":{},"body":{"license.html":{}}}],["servic",{"_index":450,"title":{},"body":{"changelog.html":{}}}],["service.config",{"_index":135,"title":{},"body":{"index.html":{}}}],["services/grid",{"_index":549,"title":{},"body":{"modules/GridModule.html":{}}}],["set",{"_index":219,"title":{},"body":{"index.html":{}}}],["setasc",{"_index":697,"title":{},"body":{"classes/SortInfo.html":{}}}],["setasc(asc",{"_index":701,"title":{},"body":{"classes/SortInfo.html":{}}}],["setconfig",{"_index":640,"title":{},"body":{"classes/FormatterParser.html":{}}}],["setconfig(config",{"_index":297,"title":{},"body":{"index.html":{},"classes/FormatterParser.html":{}}}],["setfield",{"_index":698,"title":{},"body":{"classes/SortInfo.html":{}}}],["setfield(field",{"_index":703,"title":{},"body":{"classes/SortInfo.html":{}}}],["sever",{"_index":292,"title":{},"body":{"index.html":{}}}],["shall",{"_index":488,"title":{},"body":{"license.html":{}}}],["shortcut",{"_index":210,"title":{},"body":{"index.html":{}}}],["show",{"_index":155,"title":{},"body":{"index.html":{}}}],["showicon",{"_index":310,"title":{},"body":{"index.html":{}}}],["shown",{"_index":175,"title":{},"body":{"index.html":{}}}],["side",{"_index":166,"title":{},"body":{"index.html":{}}}],["simpl",{"_index":37,"title":{},"body":{"index.html":{},"classes/FormatterParser.html":{}}}],["size",{"_index":78,"title":{},"body":{"index.html":{}}}],["size.saveondirtyrowchang",{"_index":194,"title":{},"body":{"index.html":{}}}],["softwar",{"_index":473,"title":{},"body":{"license.html":{}}}],["sort",{"_index":66,"title":{},"body":{"index.html":{},"changelog.html":{}}}],["sorted.glob",{"_index":276,"title":{},"body":{"index.html":{}}}],["sortev",{"_index":273,"title":{},"body":{"index.html":{}}}],["sortinfo",{"_index":272,"title":{"classes/SortInfo.html":{}},"body":{"index.html":{},"classes/SortInfo.html":{}}}],["sorting.3.1.1",{"_index":404,"title":{},"body":{"changelog.html":{}}}],["sourc",{"_index":91,"title":{},"body":{"index.html":{},"modules/GridModule.html":{},"injectables/GridMessageService.html":{},"pipes/IsFixedPipe.html":{},"pipes/IsGroupPipe.html":{},"pipes/IsRowVisiblePipe.html":{},"pipes/IsVisiblePipe.html":{},"classes/Cell.html":{},"classes/EmptyFactory.html":{},"classes/FormatterParser.html":{},"classes/HtmlUtil.html":{},"classes/InjectableFactory.html":{},"classes/RowChange.html":{},"classes/SortInfo.html":{},"interfaces/ClickListener.html":{},"interfaces/DblClickListener.html":{},"interfaces/Dictionary.html":{},"interfaces/EmptyConstructor.html":{},"interfaces/EventListenerArg.html":{},"interfaces/InjectableConstructor.html":{},"interfaces/MouseDownListener.html":{},"interfaces/MouseDragListener.html":{},"interfaces/MouseOutListener.html":{},"interfaces/MouseOverListener.html":{},"interfaces/MouseUpListener.html":{}}}],["specif",{"_index":96,"title":{},"body":{"index.html":{}}}],["specifi",{"_index":182,"title":{},"body":{"index.html":{}}}],["speed",{"_index":287,"title":{},"body":{"index.html":{}}}],["spinner",{"_index":430,"title":{},"body":{"changelog.html":{}}}],["spinner.eventlisten",{"_index":205,"title":{},"body":{"index.html":{}}}],["spreadsheet",{"_index":160,"title":{},"body":{"index.html":{}}}],["src/grid/cell/cell.t",{"_index":608,"title":{},"body":{"classes/Cell.html":{}}}],["src/grid/cell/cell.ts:5",{"_index":618,"title":{},"body":{"classes/Cell.html":{}}}],["src/grid/cell/cell.ts:6",{"_index":617,"title":{},"body":{"classes/Cell.html":{}}}],["src/grid/cell/cell.ts:7",{"_index":615,"title":{},"body":{"classes/Cell.html":{}}}],["src/grid/column/formatters/formatt",{"_index":633,"title":{},"body":{"classes/FormatterParser.html":{}}}],["src/grid/event/click.interface.t",{"_index":710,"title":{},"body":{"interfaces/ClickListener.html":{}}}],["src/grid/event/click.interface.ts:3",{"_index":713,"title":{},"body":{"interfaces/ClickListener.html":{}}}],["src/grid/event/dbl",{"_index":715,"title":{},"body":{"interfaces/DblClickListener.html":{}}}],["src/grid/event/ev",{"_index":724,"title":{},"body":{"interfaces/EventListenerArg.html":{}}}],["src/grid/event/mous",{"_index":729,"title":{},"body":{"interfaces/MouseDownListener.html":{},"interfaces/MouseDragListener.html":{},"interfaces/MouseOutListener.html":{},"interfaces/MouseOverListener.html":{},"interfaces/MouseUpListener.html":{}}}],["src/grid/grid.component.t",{"_index":762,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/grid/grid.module.t",{"_index":515,"title":{},"body":{"modules/GridModule.html":{}}}],["src/grid/model/dictionary.interface.t",{"_index":721,"title":{},"body":{"interfaces/Dictionary.html":{}}}],["src/grid/model/dictionary.interface.ts:2",{"_index":723,"title":{},"body":{"interfaces/Dictionary.html":{}}}],["src/grid/model/dictionary.interface.ts:3",{"_index":722,"title":{},"body":{"interfaces/Dictionary.html":{}}}],["src/grid/services/grid",{"_index":559,"title":{},"body":{"injectables/GridMessageService.html":{},"miscellaneous/variables.html":{}}}],["src/grid/utils/empty.factory.t",{"_index":621,"title":{},"body":{"classes/EmptyFactory.html":{},"interfaces/EmptyConstructor.html":{}}}],["src/grid/utils/empty.factory.ts:4",{"_index":627,"title":{},"body":{"classes/EmptyFactory.html":{}}}],["src/grid/utils/empty.factory.ts:7",{"_index":628,"title":{},"body":{"classes/EmptyFactory.html":{}}}],["src/grid/utils/html",{"_index":649,"title":{},"body":{"classes/HtmlUtil.html":{}}}],["src/grid/utils/i",{"_index":587,"title":{},"body":{"pipes/IsFixedPipe.html":{},"pipes/IsGroupPipe.html":{},"pipes/IsRowVisiblePipe.html":{},"pipes/IsVisiblePipe.html":{}}}],["src/grid/utils/injectable.factory.t",{"_index":672,"title":{},"body":{"classes/InjectableFactory.html":{},"interfaces/InjectableConstructor.html":{}}}],["src/grid/utils/injectable.factory.ts:10",{"_index":679,"title":{},"body":{"classes/InjectableFactory.html":{}}}],["src/grid/utils/injectable.factory.ts:7",{"_index":677,"title":{},"body":{"classes/InjectableFactory.html":{}}}],["src/grid/utils/row",{"_index":683,"title":{},"body":{"classes/RowChange.html":{}}}],["src/grid/utils/sort",{"_index":692,"title":{},"body":{"classes/SortInfo.html":{}}}],["start",{"_index":13,"title":{"index.html":{},"changelog.html":{},"license.html":{}},"body":{}}],["state",{"_index":172,"title":{},"body":{"index.html":{}}}],["static",{"_index":554,"title":{},"body":{"modules/GridModule.html":{},"classes/HtmlUtil.html":{}}}],["statu",{"_index":269,"title":{},"body":{"index.html":{}}}],["stop",{"_index":405,"title":{},"body":{"changelog.html":{}}}],["storag",{"_index":423,"title":{},"body":{"changelog.html":{}}}],["string",{"_index":72,"title":{},"body":{"index.html":{},"injectables/GridMessageService.html":{},"classes/HtmlUtil.html":{},"classes/SortInfo.html":{},"interfaces/Dictionary.html":{}}}],["style",{"_index":222,"title":{},"body":{"index.html":{}}}],["subject",{"_index":485,"title":{},"body":{"license.html":{},"injectables/GridMessageService.html":{}}}],["sublicens",{"_index":480,"title":{},"body":{"license.html":{}}}],["substanti",{"_index":489,"title":{},"body":{"license.html":{}}}],["such",{"_index":652,"title":{},"body":{"classes/HtmlUtil.html":{}}}],["support",{"_index":35,"title":{},"body":{"index.html":{},"changelog.html":{},"modules.html":{}}}],["svg",{"_index":512,"title":{},"body":{"modules.html":{}}}],["syntax",{"_index":107,"title":{},"body":{"index.html":{},"changelog.html":{}}}],["t",{"_index":629,"title":{},"body":{"classes/EmptyFactory.html":{},"classes/InjectableFactory.html":{},"interfaces/EmptyConstructor.html":{},"interfaces/InjectableConstructor.html":{}}}],["tab",{"_index":759,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tabl",{"_index":33,"title":{},"body":{"index.html":{}}}],["take",{"_index":262,"title":{},"body":{"index.html":{}}}],["taken",{"_index":98,"title":{},"body":{"index.html":{}}}],["templat",{"_index":202,"title":{},"body":{"index.html":{}}}],["templateref",{"_index":201,"title":{},"body":{"index.html":{}}}],["texteditrender",{"_index":372,"title":{},"body":{"overview.html":{},"modules/GridModule.html":{}}}],["textfilterrender",{"_index":318,"title":{},"body":{"index.html":{},"overview.html":{},"modules/GridModule.html":{}}}],["them.pages",{"_index":183,"title":{},"body":{"index.html":{}}}],["theme",{"_index":162,"title":{},"body":{"index.html":{}}}],["thing",{"_index":288,"title":{},"body":{"index.html":{},"classes/HtmlUtil.html":{}}}],["this._message.asobserv",{"_index":579,"title":{},"body":{"injectables/GridMessageService.html":{}}}],["this._message.next(\"error",{"_index":584,"title":{},"body":{"injectables/GridMessageService.html":{}}}],["this._message.next(\"warn",{"_index":585,"title":{},"body":{"injectables/GridMessageService.html":{}}}],["this._messageobserv",{"_index":586,"title":{},"body":{"injectables/GridMessageService.html":{}}}],["this.asc",{"_index":707,"title":{},"body":{"classes/SortInfo.html":{}}}],["this.config",{"_index":647,"title":{},"body":{"classes/FormatterParser.html":{}}}],["this.datarequest",{"_index":116,"title":{},"body":{"index.html":{}}}],["this.emptyconstructor",{"_index":631,"title":{},"body":{"classes/EmptyFactory.html":{},"interfaces/EmptyConstructor.html":{}}}],["this.field",{"_index":708,"title":{},"body":{"classes/SortInfo.html":{}}}],["this.ic(this.injector",{"_index":680,"title":{},"body":{"classes/InjectableFactory.html":{},"interfaces/InjectableConstructor.html":{}}}],["this.newrownum",{"_index":691,"title":{},"body":{"classes/RowChange.html":{}}}],["this.oldrownum",{"_index":690,"title":{},"body":{"classes/RowChange.html":{}}}],["those",{"_index":173,"title":{},"body":{"index.html":{}}}],["through",{"_index":40,"title":{},"body":{"index.html":{}}}],["time",{"_index":342,"title":{},"body":{"index.html":{}}}],["titl",{"_index":156,"title":{},"body":{"index.html":{}}}],["to.configur",{"_index":143,"title":{},"body":{"index.html":{}}}],["toast",{"_index":249,"title":{},"body":{"index.html":{}}}],["todo",{"_index":337,"title":{},"body":{"index.html":{}}}],["togeth",{"_index":168,"title":{},"body":{"index.html":{}}}],["tort",{"_index":508,"title":{},"body":{"license.html":{}}}],["transform",{"_index":591,"title":{},"body":{"pipes/IsFixedPipe.html":{},"pipes/IsGroupPipe.html":{},"pipes/IsRowVisiblePipe.html":{},"pipes/IsVisiblePipe.html":{}}}],["transform(list",{"_index":592,"title":{},"body":{"pipes/IsFixedPipe.html":{},"pipes/IsGroupPipe.html":{},"pipes/IsRowVisiblePipe.html":{},"pipes/IsVisiblePipe.html":{}}}],["transpil",{"_index":350,"title":{},"body":{"index.html":{}}}],["true",{"_index":171,"title":{},"body":{"index.html":{},"modules/GridModule.html":{},"classes/SortInfo.html":{}}}],["two",{"_index":126,"title":{},"body":{"index.html":{}}}],["type",{"_index":122,"title":{},"body":{"index.html":{},"injectables/GridMessageService.html":{},"pipes/IsFixedPipe.html":{},"classes/Cell.html":{},"classes/EmptyFactory.html":{},"classes/FormatterParser.html":{},"classes/HtmlUtil.html":{},"classes/InjectableFactory.html":{},"classes/RowChange.html":{},"classes/SortInfo.html":{},"interfaces/ClickListener.html":{},"interfaces/DblClickListener.html":{},"interfaces/Dictionary.html":{},"interfaces/EventListenerArg.html":{},"interfaces/InjectableConstructor.html":{},"interfaces/MouseDownListener.html":{},"interfaces/MouseDragListener.html":{},"interfaces/MouseOutListener.html":{},"interfaces/MouseOverListener.html":{},"interfaces/MouseUpListener.html":{},"miscellaneous/variables.html":{}}}],["undefin",{"_index":124,"title":{},"body":{"index.html":{},"changelog.html":{},"pipes/IsFixedPipe.html":{},"pipes/IsGroupPipe.html":{},"pipes/IsRowVisiblePipe.html":{},"pipes/IsVisiblePipe.html":{}}}],["univers",{"_index":464,"title":{},"body":{"license.html":{},"modules/GridModule.html":{}}}],["up",{"_index":289,"title":{},"body":{"index.html":{}}}],["up.interface.t",{"_index":750,"title":{},"body":{"interfaces/MouseUpListener.html":{}}}],["up.interface.ts:3",{"_index":753,"title":{},"body":{"interfaces/MouseUpListener.html":{}}}],["upon",{"_index":261,"title":{},"body":{"index.html":{}}}],["us",{"_index":59,"title":{},"body":{"index.html":{},"license.html":{}}}],["usag",{"_index":99,"title":{},"body":{"index.html":{}}}],["user",{"_index":147,"title":{},"body":{"index.html":{},"changelog.html":{}}}],["usevalu",{"_index":557,"title":{},"body":{"modules/GridModule.html":{}}}],["usual",{"_index":63,"title":{},"body":{"index.html":{}}}],["utah",{"_index":465,"title":{},"body":{"license.html":{},"modules/GridModule.html":{}}}],["util.t",{"_index":650,"title":{},"body":{"classes/HtmlUtil.html":{}}}],["util.ts:23",{"_index":663,"title":{},"body":{"classes/HtmlUtil.html":{}}}],["util.ts:38",{"_index":665,"title":{},"body":{"classes/HtmlUtil.html":{}}}],["util.ts:8",{"_index":659,"title":{},"body":{"classes/HtmlUtil.html":{}}}],["utils/i",{"_index":532,"title":{},"body":{"modules/GridModule.html":{}}}],["valid",{"_index":446,"title":{},"body":{"changelog.html":{}}}],["valu",{"_index":233,"title":{},"body":{"index.html":{},"changelog.html":{},"injectables/GridMessageService.html":{},"classes/Cell.html":{},"classes/FormatterParser.html":{},"classes/SortInfo.html":{},"interfaces/Dictionary.html":{},"miscellaneous/variables.html":{}}}],["values.busytempl",{"_index":200,"title":{},"body":{"index.html":{}}}],["variabl",{"_index":755,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["variou",{"_index":77,"title":{},"body":{"index.html":{}}}],["vertic",{"_index":285,"title":{},"body":{"index.html":{}}}],["view",{"_index":311,"title":{},"body":{"index.html":{},"changelog.html":{}}}],["viewconfig",{"_index":305,"title":{},"body":{"index.html":{}}}],["viewrender",{"_index":303,"title":{},"body":{"index.html":{}}}],["visibl",{"_index":153,"title":{},"body":{"index.html":{}}}],["visible.pip",{"_index":533,"title":{},"body":{"modules/GridModule.html":{}}}],["visible.pipe.t",{"_index":602,"title":{},"body":{"pipes/IsRowVisiblePipe.html":{},"pipes/IsVisiblePipe.html":{}}}],["visible.pipe.ts:9",{"_index":604,"title":{},"body":{"pipes/IsRowVisiblePipe.html":{},"pipes/IsVisiblePipe.html":{}}}],["visual",{"_index":391,"title":{},"body":{"changelog.html":{}}}],["void",{"_index":573,"title":{},"body":{"injectables/GridMessageService.html":{},"classes/FormatterParser.html":{},"classes/SortInfo.html":{}}}],["wait",{"_index":417,"title":{},"body":{"changelog.html":{}}}],["want",{"_index":214,"title":{},"body":{"index.html":{}}}],["warn",{"_index":215,"title":{},"body":{"index.html":{},"injectables/GridMessageService.html":{}}}],["warn(messag",{"_index":574,"title":{},"body":{"injectables/GridMessageService.html":{}}}],["warranti",{"_index":491,"title":{},"body":{"license.html":{}}}],["way",{"_index":127,"title":{},"body":{"index.html":{}}}],["whether",{"_index":506,"title":{},"body":{"license.html":{}}}],["width",{"_index":435,"title":{},"body":{"changelog.html":{}}}],["wish",{"_index":248,"title":{},"body":{"index.html":{}}}],["withcomponents(compon",{"_index":558,"title":{},"body":{"modules/GridModule.html":{}}}],["without",{"_index":476,"title":{},"body":{"license.html":{},"classes/FormatterParser.html":{}}}],["work",{"_index":95,"title":{},"body":{"index.html":{}}}],["ye",{"_index":661,"title":{},"body":{"classes/HtmlUtil.html":{}}}],["you.logwarn",{"_index":213,"title":{},"body":{"index.html":{}}}],["zoom",{"_index":379,"title":{},"body":{"overview.html":{},"modules/GridModule.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n    Dependencies\n\n\n    \n        @ng-bootstrap/ng-bootstrap : 1.1.x\n    \n        bootstrap : >=4.3.1 \n    \n        moment : >=2.19.3\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nHuntsman Cancer Institute's Angular Grid Library\nhci-ng-grid Demo on Github\nIntro\nThis grid is designed to be a full featured grid that can handle nearly anything that complex data tables may\nbe expected to support.  By default, the grid is simple and basic, but becomes full featured through\nconfiguration.Install\n\"dependencies\": {\n    \"hci-ng-grid\": \"4.0.0-beta.5\"\n}import {GridModule} from \"hci-ng-grid\";@NgModule({\n    imports: [\n        GridModule.forRoot()\n    ]\n})Publishing\nCompiled code gets moved to the dist folder with a copy of the package.json.  Custom commands are required for\npackaging and publishing.  Use npmPack and npmPublish instead of the usual pack and publish.Basic Features\n\nSorting: Change sorting by clicking on column header.\nFiltering: String, select, range filtering with the possibility for custom filters.\nPaging: Paging with various page sizes, first, last, previous and next.\nRow Grouping: Rows can be grouped by one or more columns.\nExternal Data Call: Callback to retrieve data from external source.\nCustom Events: Listeners can be added to work for specific events and custom actions can be taken.\n\nUsage\nNote, there are so many features to this grid that not all are currently listed here.  See the demo for full examples.\nThe basic syntax for data provided by the implementing component.\n\nThe basic syntax for an external data call.\n\nAnd a function using mocked external data call.\ndataRequest: (externalInfo: ExternalInfo) => {};\n\nngOnInit() {\n  this.dataRequest = (externalInfo: ExternalInfo) => {\n    return Observable.of(new ExternalData(this.dataGeneratorService.getData(250), externalInfo)).delay(500);\n  };\n}Inputs\ndata\ntype: Object[]\ndefault: undefined\nProvide the grid with an array of rows as objects.  Two way binding to this data.dataCall\ntype: Function\ndefault: undefined\nA function that is called to retrieve data.  The function is passed filtering, sorting and paging info.id\ntype: string\ndefault: undefined\nThe html id for the grid and the id that can be used to get the grid from the global grid service.config\ntype: any\ndefault: {}\nA json object that contains configuration options for the grid.linkedGroups\ntype: string[]\ndefault: undefined\nThe group names that this grid should be linked to.configurable\ntype: boolean\ndefault: false\nFlag if the user should be allowed to modify the grid's configuration (e.g. what colums are visible and how big).title\ntype: string\ndefault: undefined\nShows this title in a title bar above the grid.theme\ntype: string\ndefault: \"spreadsheet\"\noptions: \"spreadsheet\", \"report\", or your own\nThe name of the theme to use.  columns\ntype: Column[]\ndefault: undefined\nAn array of column configuration objects.fixedColumns\ntype: string[]\ndefault: undefined\nA list of column names that should be fixed to the left side of the grid.groupBy\ntype: string[]\ndefault: undefined\nA list of column names that should be used to group rows together.* Currently disabled *\ngroupByCollapsed\ntype: boolean\ndefault: true\nThe state for grouped rows if those rows in a group should be hidden or shown by default.externalFiltering\ntype: boolean\ndefault: false\nTrue if filtering should be handled by the external data call.externalSorting\ntype: boolean\ndefault: false\nTrue if sorting should be handled by the external data call.externalPaging\ntype: boolean\ndefault: false\nTrue if paging should be handled by the external data call.pageSize\ntype: number\ndefault: undefined\nThe number of rows per page.  If not specified it will show all of them.pageSizes\ntype: number[]\ndefault: [10, 25, 50]\nAn array of possible page sizes that the user can choose from.nVisibleRows\ntype: number\ndefault: -1\nThe number of visible rows.  A page might have 100 rows, but you can limit the size of the grid to 10 rows which would be scrolling for the user.  The default is -1 which is the same as the page size.saveOnDirtyRowChange\ntype: boolean\ndefault: false\nIf true, will emit a (onRowSave) event if you navigate to a new row and the previous row has dirty values.busyTemplate\ntype: TemplateRef\ndefault: undefined\nA custom template shown when data is loaded.  If you don't like the default spinner.eventListeners\ntype: EventListenerArg[]\ndefault: []\nAn array of listeners that can perform actions on any sort of click or key events.mode\ntype: string\ndefault: undefined\nA shortcut for creating listeners.  Rather than passing in your own listeners, specify a mode and the required listeners will be created for you.logWarnings\ntype: boolean\ndefault: true\nTrue if you want warnings to show in the console.display\ntype: string\ndefault: flow-root\nSets the display on the root component.  Although you could also do this with style on the grid.Outputs\nonCellSave\ntype: any\n$event: { key: rows[i].key,\n          i: i,\n          j: j,\n          field: columns[j].field,\n          oldValue: oldValue,\n          newValue: newValue }\nThe row key, location, field, old and new value of the cell.onRowSave\ntype: any\n$event: { key: rows[i].key,\n          rowNum: i,\n          row: originalRowData }\nEmits the key, row number and the data for the row in the format originally passed in.onConfigChange\ntype: any\n$event: config\nEmits the current configuration for the grid.cellClick\ntype: any\n$event: any\nDetermined by the event listener which can emit any type of data.cellDblClick\ntype: any\n$event: any\nDetermined by the event listener which can emit any type of data.rowClick\ntype: any\n$event: any\nDetermined by the event listener which can emit any type of data.rowDblClick\ntype: any\n$event: any\nDetermined by the event listener which can emit any type of data.warning\ntype: string\n$event: warning message as a string\nListen to this to handle warnings from the grid as you wish (e.g. as a toast popup).selectedRows\ntype: any[]\n$event: [key1, key2, ...]\nThis is an array of any instead of number because the row key could be anything.filterEvent\ntype: FilterInfo[]\n$event: FilterInfo[]\nThis is the array of filters used when a column's filters are applied.  In the case of a select where there are multiple\nFilterInfos, this includes the full list and not the one that changed.  This event is fired upon click.  It will take\nsome delay for data to come back at which point the filterEvent would be fired.dataFiltered\ntype: any\n$event: {type, status, nData}\nThis is emitted when a filter event returns data.  It will provide the number of rows returning.sortEvent\ntype: SortInfo\n$event: SortInfo\nThis is the sortInfo emitted when a column header is clicked.  It will take\nsome delay for data to come back at which point the sortEvent would be fired.dataSorted\ntype: any\n$event: {type, status, field}\nThis is emitted when a sort event returns data.  It will provide the field being sorted.Global Config\nThe root module can take configuration json that can be used to set defaults for every grid.\nFor example, if you want every grid in your application to use the same theme and you don't want\nto specify that theme in every instance of the grid, you can do the following:\nGridModule.forRoot({\n  theme: \"report\"\n})Advanced Features\nRendering Cells\nEvery refresh of data and every vertical scroll will re-render the visible rows and cells.  To speed things\nup, each cell is limited to rendering pure HTML.  However, there are several options of how to render and\nthe option of custom rendering.\nEvery cell is rendering with a class that implements the CellViewRenderer interface.  The two methods\nrequired to implement are\nsetConfig(config: any);\n\ncreateElement(renderer: Renderer2, column: Column, value: any, i: number, j: number): HTMLElement;As an example, the following is an example of a number range renderer.\n{\n    field: \"nLabs\",\n    name: \"# Labs\",\n    viewRenderer: CellNumberRangeView,\n    viewConfig: { low: 15, high: 85, showIcon: true }\n}The class is passed in as the viewRenderer and any config is passed in through the viewConfig.\nFiltering\nLike view rendering, built in and custom components can be used to render the filter.  The difference\nis rather than pure HTML, a filter is a component that extends a base class FilterRenderer.  The\nfollowing are examples of built in filters.\n{\n    field: \"firstName\",\n    name: \"First Name\",\n    filterRenderer: TextFilterRenderer\n},\n{\n    field: \"dob\",\n    name: \"Date of Birth\",\n    dataType: \"date\",\n    format: \"MM/DD/YYYY\",\n    editRenderer: DateEditRenderer,\n    filterRenderer: CompareFilterRenderer\n},\n{\n    field: \"gender\",\n    name: \"Gender\",\n    editRenderer: ChoiceEditRenderer,\n    choices: [ {value: \"Female\", display: \"Female\"}, {value: \"Male\", display: \"Male\"} ],\n    filterRenderer: SelectFilterRenderer\n}Known Issues\n\nRow Groups works upon load, but breaks when filtering is introduced.\n\nTODOs\n\nThere are only left fixed colums, but some have requested right fixed columns.\n\nBuilding and Demo\nTo run the demo for the first time, run the following commands:\nnpm install\nnpm run install-demo\nnpm run run-demoIf package.json doesn't change, after making a change to the grid run:\nnpm run build\nnpm run run-demoThe grid build automatically copies the transpiled files to the demo/node_modules/hci-ng-grid which mimics pulling\nthe dependency from npm.\nTo mimic a production build and be able to run the demo anywhere, use \"npm run run-demo-prod\".\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n            \n                \n                    \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_GridModule\n\n\n\ncluster_GridModule_declarations\n\n\n\ncluster_GridModule_GridComponent_providers\n\n\n\ncluster_GridModule_exports\n\n\n\n\nGridComponent\n\nGridComponent\n\n\n\nGridModule\n\nGridModule\n\nGridModule -->\n\nGridComponent->GridModule\n\n\n\n\n\nColumnHeaderComponent\n\nColumnHeaderComponent\n\nGridModule -->\n\nColumnHeaderComponent->GridModule\n\n\n\n\n\nIsVisiblePipe\n\nIsVisiblePipe\n\nGridModule -->\n\nIsVisiblePipe->GridModule\n\n\n\n\n\nIsGroupPipe\n\nIsGroupPipe\n\nGridModule -->\n\nIsGroupPipe->GridModule\n\n\n\n\n\nIsFixedPipe\n\nIsFixedPipe\n\nGridModule -->\n\nIsFixedPipe->GridModule\n\n\n\n\n\nIsRowVisiblePipe\n\nIsRowVisiblePipe\n\nGridModule -->\n\nIsRowVisiblePipe->GridModule\n\n\n\n\n\nTextEditRenderer\n\nTextEditRenderer\n\nGridModule -->\n\nTextEditRenderer->GridModule\n\n\n\n\n\nDateEditRenderer\n\nDateEditRenderer\n\nGridModule -->\n\nDateEditRenderer->GridModule\n\n\n\n\n\nChoiceEditRenderer\n\nChoiceEditRenderer\n\nGridModule -->\n\nChoiceEditRenderer->GridModule\n\n\n\n\n\nTextFilterRenderer\n\nTextFilterRenderer\n\nGridModule -->\n\nTextFilterRenderer->GridModule\n\n\n\n\n\nSelectFilterRenderer\n\nSelectFilterRenderer\n\nGridModule -->\n\nSelectFilterRenderer->GridModule\n\n\n\n\n\nCompareFilterRenderer\n\nCompareFilterRenderer\n\nGridModule -->\n\nCompareFilterRenderer->GridModule\n\n\n\n\n\nBigTextPopup\n\nBigTextPopup\n\nGridModule -->\n\nBigTextPopup->GridModule\n\n\n\n\n\nConfigMenuComponent\n\nConfigMenuComponent\n\nGridModule -->\n\nConfigMenuComponent->GridModule\n\n\n\n\n\nConfigMultiChoiceComponent\n\nConfigMultiChoiceComponent\n\nGridModule -->\n\nConfigMultiChoiceComponent->GridModule\n\n\n\n\n\nGridComponent \n\nGridComponent \n\nGridComponent  -->\n\nGridModule->GridComponent \n\n\n\n\n\nGridService\n\nGridService\n\nGridComponent -->\n\nGridService->GridComponent\n\n\n\n\n\nGridEventService\n\nGridEventService\n\nGridComponent -->\n\nGridEventService->GridComponent\n\n\n\n\n\nGridMessageService\n\nGridMessageService\n\nGridComponent -->\n\nGridMessageService->GridComponent\n\n\n\n\n\n\n                \n                \n                \n                    Zoom in\n                    Reset\n                    Zoom out\n                \n            \n\n    \n            \n                \n                    \n                        \n                        \n                            1 module\n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                        11 components\n                    \n                \n            \n            \n                \n                    \n                        \n                        4 injectables\n                    \n                \n            \n            \n                \n                    \n                        \n                        4 pipes\n                    \n                \n            \n            \n                \n                    \n                        \n                        34 classes\n                    \n                \n            \n            \n                \n                    \n                        \n                        12 interfaces\n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"changelog.html":{"url":"changelog.html","title":"getting-started - changelog","body":"\n                   \n\nChange Log\n4.0.0\n- Add new rows of data.\n- Visualize invalid fields.\n- Some rearrange of grid/service organization.3.1.6\n- Fix choice filter undefined check.3.1.5\n- Fix reverse right coloring when left columns are odd.3.1.4\n- Fix filter value column name.3.1.3\n- Fix date filtering and date-ms compare.3.1.2\n- Fix dealing with undefined in default sorting.3.1.1\n- Stop propagation on filter button.3.1.0\n- Filter to customizable function.\n- Sort to customizable function.\n- Emitters for filter and sort events.\n- Column drag n drop.\n- Fix: Empty choice array on http error.3.0.0\n- Generalize column wait configuration.  Changes public api.\n- Fixes to popup behavior.\n- Column allows externalConfig storage.\n- Default format/parser more generic.2.1.1\n- Fix syntax in README.2.1.0\n- Removed allowing auto column generation when no columns configured.\n- Added wait listeners to pause configuration while waiting on any requests.\n- Add spinner for loading and prevent data display if no columns.\n- Bump height if view has scrollbar.\n- Fix column width calculation.2.0.2\n- Fix keywords and add .npmignore.2.0.1\n- Fix readme and license in artifact.2.0.0\n- Refactor of rendering and how data/config/events are listened to.\n- Listeners for saving cells and rows.\n- Customization of busy, and view renderers.\n- Validation support and improved formatting/parsing especially for dates.\n- User configuration added.\n- Global grid service for referencing and connecting grids.\n- Row selection improved.\n- External data calls from Promise to Observable.\n- Numerous fixes.1.0.0\n- Initial Release.  See README.md for features.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nCopyright (c) 2018 Huntsman Cancer Institute at the University of Utah\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        GridModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/GridModule.html":{"url":"modules/GridModule.html","title":"module - GridModule","body":"\n                   \n\n\n\n\n  Modules\n  GridModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_GridModule\n\n\n\ncluster_GridModule_declarations\n\n\n\ncluster_GridModule_GridComponent_providers\n\n\n\ncluster_GridModule_exports\n\n\n\n\nGridComponent\n\nGridComponent\n\n\n\nGridModule\n\nGridModule\n\nGridModule -->\n\nGridComponent->GridModule\n\n\n\n\n\nColumnHeaderComponent\n\nColumnHeaderComponent\n\nGridModule -->\n\nColumnHeaderComponent->GridModule\n\n\n\n\n\nIsVisiblePipe\n\nIsVisiblePipe\n\nGridModule -->\n\nIsVisiblePipe->GridModule\n\n\n\n\n\nIsGroupPipe\n\nIsGroupPipe\n\nGridModule -->\n\nIsGroupPipe->GridModule\n\n\n\n\n\nIsFixedPipe\n\nIsFixedPipe\n\nGridModule -->\n\nIsFixedPipe->GridModule\n\n\n\n\n\nIsRowVisiblePipe\n\nIsRowVisiblePipe\n\nGridModule -->\n\nIsRowVisiblePipe->GridModule\n\n\n\n\n\nTextEditRenderer\n\nTextEditRenderer\n\nGridModule -->\n\nTextEditRenderer->GridModule\n\n\n\n\n\nDateEditRenderer\n\nDateEditRenderer\n\nGridModule -->\n\nDateEditRenderer->GridModule\n\n\n\n\n\nChoiceEditRenderer\n\nChoiceEditRenderer\n\nGridModule -->\n\nChoiceEditRenderer->GridModule\n\n\n\n\n\nTextFilterRenderer\n\nTextFilterRenderer\n\nGridModule -->\n\nTextFilterRenderer->GridModule\n\n\n\n\n\nSelectFilterRenderer\n\nSelectFilterRenderer\n\nGridModule -->\n\nSelectFilterRenderer->GridModule\n\n\n\n\n\nCompareFilterRenderer\n\nCompareFilterRenderer\n\nGridModule -->\n\nCompareFilterRenderer->GridModule\n\n\n\n\n\nBigTextPopup\n\nBigTextPopup\n\nGridModule -->\n\nBigTextPopup->GridModule\n\n\n\n\n\nConfigMenuComponent\n\nConfigMenuComponent\n\nGridModule -->\n\nConfigMenuComponent->GridModule\n\n\n\n\n\nConfigMultiChoiceComponent\n\nConfigMultiChoiceComponent\n\nGridModule -->\n\nConfigMultiChoiceComponent->GridModule\n\n\n\n\n\nGridComponent \n\nGridComponent \n\nGridComponent  -->\n\nGridModule->GridComponent \n\n\n\n\n\nGridService\n\nGridService\n\nGridComponent -->\n\nGridService->GridComponent\n\n\n\n\n\nGridEventService\n\nGridEventService\n\nGridComponent -->\n\nGridEventService->GridComponent\n\n\n\n\n\nGridMessageService\n\nGridMessageService\n\nGridComponent -->\n\nGridMessageService->GridComponent\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/grid/grid.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                GridComponent\n                            \n                            \n                                ColumnHeaderComponent\n                            \n                            \n                                IsVisiblePipe\n                            \n                            \n                                IsGroupPipe\n                            \n                            \n                                IsFixedPipe\n                            \n                            \n                                IsRowVisiblePipe\n                            \n                            \n                                TextEditRenderer\n                            \n                            \n                                DateEditRenderer\n                            \n                            \n                                ChoiceEditRenderer\n                            \n                            \n                                TextFilterRenderer\n                            \n                            \n                                SelectFilterRenderer\n                            \n                            \n                                CompareFilterRenderer\n                            \n                            \n                                BigTextPopup\n                            \n                            \n                                ConfigMenuComponent\n                            \n                            \n                                ConfigMultiChoiceComponent\n                            \n                    \n                \n                \n                    EntryComponents\n                    \n                            \n                                TextEditRenderer\n                            \n                            \n                                DateEditRenderer\n                            \n                            \n                                ChoiceEditRenderer\n                            \n                            \n                                TextFilterRenderer\n                            \n                            \n                                SelectFilterRenderer\n                            \n                            \n                                CompareFilterRenderer\n                            \n                            \n                                BigTextPopup\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    GridComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        /*\n * Copyright (c) 2016 Huntsman Cancer Institute at the University of Utah, Confidential and Proprietary\n */\nimport {ANALYZE_FOR_ENTRY_COMPONENTS, ModuleWithProviders, NgModule} from \"@angular/core\";\nimport {CommonModule} from \"@angular/common\";\nimport {FormsModule} from \"@angular/forms\";\n\nimport {NgbModule} from \"@ng-bootstrap/ng-bootstrap\";\n\nimport {GridComponent} from \"./grid.component\";\nimport {ColumnHeaderComponent} from \"./column/column-header.component\";\nimport {IsVisiblePipe} from \"./utils/is-visible.pipe\";\nimport {IsGroupPipe} from \"./utils/is-group.pipe\";\nimport {IsFixedPipe} from \"./utils/is-fixed.pipe\";\nimport {IsRowVisiblePipe} from \"./utils/is-row-visible.pipe\";\nimport {TextEditRenderer} from \"./cell/editRenderers/text-edit-renderer.component\";\nimport {TextFilterRenderer} from \"./column/filterRenderers/text-filter-renderer.component\";\nimport {CompareFilterRenderer} from \"./column/filterRenderers/compare-filter-renderer.component\";\nimport {ChoiceEditRenderer} from \"./cell/editRenderers/choice-edit-renderer.component\";\nimport {DateEditRenderer} from \"./cell/editRenderers/date-edit-renderer.component\";\nimport {SelectFilterRenderer} from \"./column/filterRenderers/select-filter-renderer.component\";\nimport {BigTextPopup} from \"./cell/viewPopupRenderer/bigtext-popup.component\";\nimport {ConfigMenuComponent} from \"./config/config-menu.component\";\nimport {GridGlobalService} from \"./services/grid-global.service\";\nimport {ConfigMultiChoiceComponent} from \"./config/config-multi-choice.component\";\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    NgbModule.forRoot()\n  ],\n  declarations: [\n    GridComponent,\n    ColumnHeaderComponent,\n    IsVisiblePipe,\n    IsGroupPipe,\n    IsFixedPipe,\n    IsRowVisiblePipe,\n    TextEditRenderer,\n    DateEditRenderer,\n    ChoiceEditRenderer,\n    TextFilterRenderer,\n    SelectFilterRenderer,\n    CompareFilterRenderer,\n    BigTextPopup,\n    ConfigMenuComponent,\n    ConfigMultiChoiceComponent\n  ],\n  entryComponents: [\n    TextEditRenderer,\n    DateEditRenderer,\n    ChoiceEditRenderer,\n    TextFilterRenderer,\n    SelectFilterRenderer,\n    CompareFilterRenderer,\n    BigTextPopup\n  ],\n  exports: [\n    GridComponent\n  ]\n})\nexport class GridModule {\n\n  static forRoot(globalConfig?: any, components?: any[]): ModuleWithProviders {\n    return {\n      providers: [\n        GridGlobalService,\n        {provide: \"globalConfig\", useValue: (globalConfig) ? globalConfig : {}},\n        {\n          provide: ANALYZE_FOR_ENTRY_COMPONENTS,\n          useValue: components,\n          multi: true\n        }\n      ],\n      ngModule: GridModule\n    };\n  }\n\n  static withComponents(components: any[]): ModuleWithProviders {\n    return {\n      ngModule: GridModule,\n      providers: [\n        {\n          provide: ANALYZE_FOR_ENTRY_COMPONENTS,\n          useValue: components,\n          multi: true\n        }\n      ]\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GridMessageService.html":{"url":"injectables/GridMessageService.html","title":"injectable - GridMessageService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  GridMessageService\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/grid/services/grid-message.service.ts\n        \n\n\n\n            \n                Index\n                \n                    \n                        \n                            \n                                Properties\n                            \n                        \n                        \n                            \n                                \n                                    \n                                            Private\n                                        _level\n                                    \n                                    \n                                            Private\n                                        _message\n                                    \n                                    \n                                            Private\n                                        _messageObservable\n                                    \n                                \n                            \n                        \n                        \n                            \n                                Methods\n                            \n                        \n                        \n                            \n                                \n                                    \n                                        error\n                                    \n                                    \n                                        warn\n                                    \n                                \n                            \n                        \n                        \n                            \n                                Accessors\n                            \n                        \n                        \n                            \n                                \n                                    \n                                        messageObservable\n                                    \n                                \n                            \n                        \n                    \n                \n            \n\n\n            \n                \n                    \n                        Methods\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        error\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            error(message: string)\n                                \n                            \n            \n            \n                                    \n                                        \n                                                Defined in src/grid/services/grid-message.service.ts:12\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                                Type\n                                                            Optional\n                                                        \n                                                    \n                                                    \n                                                            \n                                                                message\n                                                                \n                                                                    \n                                                                                string\n                                                                    \n                                                                \n                                                                \n                                                                        no\n                                                                \n                                                                \n            \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     void\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        warn\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            warn(message: string)\n                                \n                            \n            \n            \n                                    \n                                        \n                                                Defined in src/grid/services/grid-message.service.ts:16\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                                Type\n                                                            Optional\n                                                        \n                                                    \n                                                    \n                                                            \n                                                                message\n                                                                \n                                                                    \n                                                                                string\n                                                                    \n                                                                \n                                                                \n                                                                        no\n                                                                \n                                                                \n            \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     void\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n            \n\n            \n                \n                    \n                        Properties\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                            Private\n                                        _level\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                    _level:     number\n            \n                                \n                            \n                                \n                                    \n                                        Type :     number\n            \n                                    \n                                \n                                \n                                    \n                                        Default value : 2\n                                    \n                                \n                                    \n                                        \n                                                Defined in src/grid/services/grid-message.service.ts:10\n                                        \n                                    \n            \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                            Private\n                                        _message\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                    _message:     Subject\n            \n                                \n                            \n                                \n                                    \n                                        Type :     Subject\n            \n                                    \n                                \n                                \n                                    \n                                        Default value : new Subject()\n                                    \n                                \n                                    \n                                        \n                                                Defined in src/grid/services/grid-message.service.ts:8\n                                        \n                                    \n            \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                            Private\n                                        _messageObservable\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                    _messageObservable:     Observable\n            \n                                \n                            \n                                \n                                    \n                                        Type :     Observable\n            \n                                    \n                                \n                                \n                                    \n                                        Default value : this._message.asObservable()\n                                    \n                                \n                                    \n                                        \n                                                Defined in src/grid/services/grid-message.service.ts:9\n                                        \n                                    \n            \n            \n                        \n                    \n            \n\n            \n                \n                    Accessors\n                \n                    \n                        \n                            \n                                \n                                    \n                                    messageObservable\n                                \n                            \n            \n                            \n                                \n                                    getmessageObservable()\n                                \n                            \n                                        \n                                            \n                                                Defined in src/grid/services/grid-message.service.ts:20\n                                            \n                                        \n            \n                        \n                    \n            \n    \n\n\n    \n        import {Injectable} from \"@angular/core\";\n\nimport {Subject, Observable} from \"rxjs/Rx\";\n\n@Injectable()\nexport class GridMessageService {\n\n  private _message: Subject = new Subject();\n  private _messageObservable: Observable = this._message.asObservable();\n  private _level: number = 2;\n\n  error(message: string) {\n    this._message.next(\"ERROR: \" + message);\n  }\n\n  warn(message: string) {\n    this._message.next(\"WARN: \" + message);\n  }\n\n  get messageObservable(): Observable {\n    return this._messageObservable;\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/IsFixedPipe.html":{"url":"pipes/IsFixedPipe.html","title":"pipe - IsFixedPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Pipes\n  IsFixedPipe\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n\n    \n\n        \n            File\n        \n        \n            src/grid/utils/is-fixed.pipe.ts\n        \n\n\n\n        \n            Metadata\n            \n                \n                    \n                        name\n                        isFixed\n                    \n                \n            \n        \n\n            \n                \n                    \n                        Methods\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        transform\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            transform(list: Array, fixed: boolean)\n                                \n                            \n            \n            \n                                    \n                                        \n                                                Defined in src/grid/utils/is-fixed.pipe.ts:10\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                                Type\n                                                            Optional\n                                                        \n                                                    \n                                                    \n                                                            \n                                                                list\n                                                                \n                                                                    \n                                                                                Array\n                                                                    \n                                                                \n                                                                \n                                                                        no\n                                                                \n                                                                \n            \n                                                            \n                                                            \n                                                                fixed\n                                                                \n                                                                    \n                                                                                boolean\n                                                                    \n                                                                \n                                                                \n                                                                        no\n                                                                \n                                                                \n            \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     any\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n            \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from \"@angular/core\";\n\nimport { Column } from \"../column/column\";\n\n@Pipe({\n  name: \"isFixed\",\n  pure: false\n})\nexport class IsFixedPipe implements PipeTransform {\n  transform(list: Array, fixed: boolean) {\n    if (list === undefined) {\n      return list;\n    } else {\n      return list.filter((o: Column) => o.isFixed === fixed);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/IsGroupPipe.html":{"url":"pipes/IsGroupPipe.html","title":"pipe - IsGroupPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Pipes\n  IsGroupPipe\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n\n    \n\n        \n            File\n        \n        \n            src/grid/utils/is-group.pipe.ts\n        \n\n\n\n        \n            Metadata\n            \n                \n                    \n                        name\n                        isGroup\n                    \n                \n            \n        \n\n            \n                \n                    \n                        Methods\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        transform\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            transform(list: )\n                                \n                            \n            \n            \n                                    \n                                        \n                                                Defined in src/grid/utils/is-group.pipe.ts:9\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Optional\n                                                        \n                                                    \n                                                    \n                                                            \n                                                                list\n                                                                \n                                                                \n                                                                \n                                                                        no\n                                                                \n                                                                \n            \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     any\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n            \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from \"@angular/core\";\n\nimport { Column } from \"../column/column\";\n\n@Pipe({\n  name: \"isGroup\"\n})\nexport class IsGroupPipe implements PipeTransform {\n  transform(list) {\n    if (list === undefined) {\n      return list;\n    } else {\n      return list.filter((o: Column) => o.isGroup || o.isUtility);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/IsRowVisiblePipe.html":{"url":"pipes/IsRowVisiblePipe.html","title":"pipe - IsRowVisiblePipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Pipes\n  IsRowVisiblePipe\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n\n    \n\n        \n            File\n        \n        \n            src/grid/utils/is-row-visible.pipe.ts\n        \n\n\n\n        \n            Metadata\n            \n                \n                    \n                        name\n                        isRowVisible\n                    \n                \n            \n        \n\n            \n                \n                    \n                        Methods\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        transform\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            transform(list: )\n                                \n                            \n            \n            \n                                    \n                                        \n                                                Defined in src/grid/utils/is-row-visible.pipe.ts:9\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Optional\n                                                        \n                                                    \n                                                    \n                                                            \n                                                                list\n                                                                \n                                                                \n                                                                \n                                                                        no\n                                                                \n                                                                \n            \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     any\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n            \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from \"@angular/core\";\n\nimport { Row } from \"../row/row\";\n\n@Pipe({\n  name: \"isRowVisible\"\n})\nexport class IsRowVisiblePipe implements PipeTransform {\n  transform(list) {\n    if (list === undefined) {\n      return list;\n    } else {\n      return list.filter((o: Row) => o.visible);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/IsVisiblePipe.html":{"url":"pipes/IsVisiblePipe.html","title":"pipe - IsVisiblePipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Pipes\n  IsVisiblePipe\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n\n    \n\n        \n            File\n        \n        \n            src/grid/utils/is-visible.pipe.ts\n        \n\n\n\n        \n            Metadata\n            \n                \n                    \n                        name\n                        isVisible\n                    \n                \n            \n        \n\n            \n                \n                    \n                        Methods\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        transform\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            transform(list: )\n                                \n                            \n            \n            \n                                    \n                                        \n                                                Defined in src/grid/utils/is-visible.pipe.ts:9\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Optional\n                                                        \n                                                    \n                                                    \n                                                            \n                                                                list\n                                                                \n                                                                \n                                                                \n                                                                        no\n                                                                \n                                                                \n            \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     any\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n            \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from \"@angular/core\";\n\nimport { Column } from \"../column/column\";\n\n@Pipe({\n  name: \"isVisible\"\n})\nexport class IsVisiblePipe implements PipeTransform {\n  transform(list) {\n    if (list === undefined) {\n      return list;\n    } else {\n      return list.filter((o: Column) => o.visible);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Cell.html":{"url":"classes/Cell.html","title":"class - Cell","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  Cell\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/grid/cell/cell.ts\n        \n\n            \n                Description\n            \n            \n                A holder for the cell's data and other metadata needed for rendering or data management.\n\n            \n\n\n\n\n            \n                Index\n                \n                    \n                        \n                            \n                                Properties\n                            \n                        \n                        \n                            \n                                \n                                    \n                                        dirty\n                                    \n                                    \n                                        key\n                                    \n                                    \n                                        value\n                                    \n                                \n                            \n                        \n                    \n                \n            \n\n            \n                Constructor\n                    \n                        \n                            \n                                \n            constructor(o: Object)\n                                \n                            \n                                    \n                                        \n                                            Defined in src/grid/cell/cell.ts:7\n                                        \n                                    \n            \n                            \n                                \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                                Type\n                                                            Optional\n                                                        \n                                                    \n                                                    \n                                                            \n                                                                o\n                                                              \n                                                                    \n                                                                                Object\n                                                                    \n                                                              \n                                                                \n                                                                        no\n                                                                \n                                                                \n                                                            \n                                                    \n                                                \n                                        \n                                \n                            \n                        \n                    \n            \n\n\n\n            \n                \n                    \n                        Properties\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        dirty\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                    dirty:     boolean\n            \n                                \n                            \n                                \n                                    \n                                        Type :     boolean\n            \n                                    \n                                \n                                \n                                    \n                                        Default value : false\n                                    \n                                \n                                    \n                                        \n                                                Defined in src/grid/cell/cell.ts:7\n                                        \n                                    \n            \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        key\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                    key:     number\n            \n                                \n                            \n                                \n                                    \n                                        Type :     number\n            \n                                    \n                                \n                                    \n                                        \n                                                Defined in src/grid/cell/cell.ts:6\n                                        \n                                    \n            \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        value\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                    value:     any\n            \n                                \n                            \n                                \n                                    \n                                        Type :     any\n            \n                                    \n                                \n                                    \n                                        \n                                                Defined in src/grid/cell/cell.ts:5\n                                        \n                                    \n            \n            \n                        \n                    \n            \n\n    \n\n\n    \n        export class Cell {\n  value: any;\n  key: number;\n  dirty: boolean = false;\n\n  constructor(o: Object) {\n    Object.assign(this, o);\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/EmptyFactory.html":{"url":"classes/EmptyFactory.html","title":"class - EmptyFactory","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  EmptyFactory\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/grid/utils/empty.factory.ts\n        \n\n            \n                Description\n            \n            \n                Allows instantiation of any generic type if the type has no constructor arguments.\n\n            \n\n\n\n\n            \n                Index\n                \n                    \n                        \n                            \n                                Methods\n                            \n                        \n                        \n                            \n                                \n                                    \n                                        getInstance\n                                    \n                                \n                            \n                        \n                    \n                \n            \n\n            \n                Constructor\n                    \n                        \n                            \n                                \n            constructor(emptyConstructor: EmptyConstructor)\n                                \n                            \n                                    \n                                        \n                                            Defined in src/grid/utils/empty.factory.ts:4\n                                        \n                                    \n            \n                            \n                                \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                                Type\n                                                            Optional\n                                                        \n                                                    \n                                                    \n                                                            \n                                                                emptyConstructor\n                                                              \n                                                                    \n                                                                                EmptyConstructor\n                                                                    \n                                                              \n                                                                \n                                                                        no\n                                                                \n                                                                \n                                                            \n                                                    \n                                                \n                                        \n                                \n                            \n                        \n                    \n            \n\n            \n                \n                    \n                        Methods\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        getInstance\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            getInstance()\n                                \n                            \n            \n            \n                                    \n                                        \n                                                Defined in src/grid/utils/empty.factory.ts:7\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                            Returns :     T\n            \n                                        \n                                \n                            \n                        \n                    \n            \n\n\n\n    \n\n\n    \n        export class EmptyFactory {\n  constructor(private emptyConstructor: EmptyConstructor) {}\n\n  getInstance(): T {\n    return new this.emptyConstructor();\n  }\n}\n\nexport interface EmptyConstructor {\n  new(): T;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FormatterParser.html":{"url":"classes/FormatterParser.html","title":"class - FormatterParser","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  FormatterParser\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/grid/column/formatters/formatter-parser.ts\n        \n\n            \n                Description\n            \n            \n                Most simple formatter parser which just returns the value without modification.\n\n            \n\n\n\n\n            \n                Index\n                \n                    \n                        \n                            \n                                Properties\n                            \n                        \n                        \n                            \n                                \n                                    \n                                        config\n                                    \n                                \n                            \n                        \n                        \n                            \n                                Methods\n                            \n                        \n                        \n                            \n                                \n                                    \n                                        formatValue\n                                    \n                                    \n                                        parseValue\n                                    \n                                    \n                                        setConfig\n                                    \n                                \n                            \n                        \n                    \n                \n            \n\n\n            \n                \n                    \n                        Methods\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        formatValue\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            formatValue(value: any)\n                                \n                            \n            \n            \n                                    \n                                        \n                                                Defined in src/grid/column/formatters/formatter-parser.ts:12\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                                Type\n                                                            Optional\n                                                        \n                                                    \n                                                    \n                                                            \n                                                                value\n                                                                \n                                                                    \n                                                                                any\n                                                                    \n                                                                \n                                                                \n                                                                        no\n                                                                \n                                                                \n            \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     any\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        parseValue\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            parseValue(value: any)\n                                \n                            \n            \n            \n                                    \n                                        \n                                                Defined in src/grid/column/formatters/formatter-parser.ts:16\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                                Type\n                                                            Optional\n                                                        \n                                                    \n                                                    \n                                                            \n                                                                value\n                                                                \n                                                                    \n                                                                                any\n                                                                    \n                                                                \n                                                                \n                                                                        no\n                                                                \n                                                                \n            \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     any\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        setConfig\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            setConfig(config: any)\n                                \n                            \n            \n            \n                                    \n                                        \n                                                Defined in src/grid/column/formatters/formatter-parser.ts:8\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                                Type\n                                                            Optional\n                                                        \n                                                    \n                                                    \n                                                            \n                                                                config\n                                                                \n                                                                    \n                                                                                any\n                                                                    \n                                                                \n                                                                \n                                                                        no\n                                                                \n                                                                \n            \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     void\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n            \n\n\n            \n                \n                    \n                        Properties\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        config\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                    config:     any\n            \n                                \n                            \n                                \n                                    \n                                        Type :     any\n            \n                                    \n                                \n                                \n                                    \n                                        Default value : {}\n                                    \n                                \n                                    \n                                        \n                                                Defined in src/grid/column/formatters/formatter-parser.ts:6\n                                        \n                                    \n            \n            \n                        \n                    \n            \n\n    \n\n\n    \n        export class FormatterParser {\n\n  config: any = {};\n\n  setConfig(config: any) {\n    this.config = config;\n  }\n\n  formatValue(value: any): any {\n    return value;\n  }\n\n  parseValue(value: any): any {\n    return value;\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/HtmlUtil.html":{"url":"classes/HtmlUtil.html","title":"class - HtmlUtil","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  HtmlUtil\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/grid/utils/html-util.ts\n        \n\n            \n                Description\n            \n            \n                Convenience class for pulling things such as id from an element.\n\n            \n\n\n\n\n            \n                Index\n                \n                    \n                        \n                            \n                                Methods\n                            \n                        \n                        \n                            \n                                \n                                    \n                                            Static\n                                        getId\n                                    \n                                    \n                                            Static\n                                        getIdElement\n                                    \n                                    \n                                            Static\n                                        getLocation\n                                    \n                                \n                            \n                        \n                    \n                \n            \n\n\n            \n                \n                    \n                        Methods\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                            Static\n                                        getId\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                        \n                                    getId(e: HTMLElement, id?: string)\n                                \n                            \n            \n            \n                                    \n                                        \n                                                Defined in src/grid/utils/html-util.ts:8\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                                Type\n                                                            Optional\n                                                        \n                                                    \n                                                    \n                                                            \n                                                                e\n                                                                \n                                                                    \n                                                                                HTMLElement\n                                                                    \n                                                                \n                                                                \n                                                                        no\n                                                                \n                                                                \n            \n                                                            \n                                                            \n                                                                id\n                                                                \n                                                                    \n                                                                                string\n                                                                    \n                                                                \n                                                                \n                                                                        yes\n                                                                \n                                                                \n            \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     string\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                            Static\n                                        getIdElement\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                        \n                                    getIdElement(e: HTMLElement)\n                                \n                            \n            \n            \n                                    \n                                        \n                                                Defined in src/grid/utils/html-util.ts:23\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                                Type\n                                                            Optional\n                                                        \n                                                    \n                                                    \n                                                            \n                                                                e\n                                                                \n                                                                    \n                                                                                HTMLElement\n                                                                    \n                                                                \n                                                                \n                                                                        no\n                                                                \n                                                                \n            \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     HTMLElement\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                            Static\n                                        getLocation\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                        \n                                    getLocation(e: HTMLElement)\n                                \n                            \n            \n            \n                                    \n                                        \n                                                Defined in src/grid/utils/html-util.ts:38\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                                Type\n                                                            Optional\n                                                        \n                                                    \n                                                    \n                                                            \n                                                                e\n                                                                \n                                                                    \n                                                                                HTMLElement\n                                                                    \n                                                                \n                                                                \n                                                                        no\n                                                                \n                                                                \n            \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     Point\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n            \n\n\n\n    \n\n\n    \n        import {Point} from \"./point\";\n\n/**\n * Convenience class for pulling things such as id from an element.\n */\nexport class HtmlUtil {\n\n  static getId(e: HTMLElement, id?: string): string {\n    if (!e) {\n      return \"\";\n    }\n    while ((!id && e.id === \"\") || (id && !e.id.startsWith(id))) {\n      if (e.parentElement) {\n        e = e.parentElement;\n      } else {\n        break;\n      }\n    }\n\n    return e.id;\n  }\n\n  static getIdElement(e: HTMLElement): HTMLElement {\n    if (!e) {\n      return null;\n    }\n    while (e.id === \"\") {\n      if (e.parentElement) {\n        e = e.parentElement;\n      } else {\n        break;\n      }\n    }\n\n    return e;\n  }\n\n  static getLocation(e: HTMLElement): Point {\n    return Point.getPoint(this.getId(e));\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/InjectableFactory.html":{"url":"classes/InjectableFactory.html","title":"class - InjectableFactory","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  InjectableFactory\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/grid/utils/injectable.factory.ts\n        \n\n            \n                Description\n            \n            \n                Allows instantiation of any generic type if the type expects an injector argument.  See the implementation of\nthe EventListener.\n\n            \n\n\n\n\n            \n                Index\n                \n                    \n                        \n                            \n                                Methods\n                            \n                        \n                        \n                            \n                                \n                                    \n                                        getInstance\n                                    \n                                \n                            \n                        \n                    \n                \n            \n\n            \n                Constructor\n                    \n                        \n                            \n                                \n            constructor(ic: InjectableConstructor, injector: Injector)\n                                \n                            \n                                    \n                                        \n                                            Defined in src/grid/utils/injectable.factory.ts:7\n                                        \n                                    \n            \n                            \n                                \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                                Type\n                                                            Optional\n                                                        \n                                                    \n                                                    \n                                                            \n                                                                ic\n                                                              \n                                                                    \n                                                                                InjectableConstructor\n                                                                    \n                                                              \n                                                                \n                                                                        no\n                                                                \n                                                                \n                                                            \n                                                            \n                                                                injector\n                                                              \n                                                                    \n                                                                                Injector\n                                                                    \n                                                              \n                                                                \n                                                                        no\n                                                                \n                                                                \n                                                            \n                                                    \n                                                \n                                        \n                                \n                            \n                        \n                    \n            \n\n            \n                \n                    \n                        Methods\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        getInstance\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            getInstance()\n                                \n                            \n            \n            \n                                    \n                                        \n                                                Defined in src/grid/utils/injectable.factory.ts:10\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                            Returns :     T\n            \n                                        \n                                \n                            \n                        \n                    \n            \n\n\n\n    \n\n\n    \n        import {Injector} from \"@angular/core\";\n\n/**\n * Allows instantiation of any generic type if the type expects an injector argument.  See the implementation of\n * the EventListener.\n */\nexport class InjectableFactory {\n  constructor(private ic: InjectableConstructor, private injector: Injector) {}\n\n  getInstance(): T {\n    return new this.ic(this.injector);\n  }\n}\n\nexport interface InjectableConstructor {\n  new(injector: Injector): T;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RowChange.html":{"url":"classes/RowChange.html","title":"class - RowChange","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  RowChange\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/grid/utils/row-change.ts\n        \n\n\n\n\n\n            \n                Index\n                \n                    \n                        \n                            \n                                Properties\n                            \n                        \n                        \n                            \n                                \n                                    \n                                        newRowNum\n                                    \n                                    \n                                        oldRowNum\n                                    \n                                \n                            \n                        \n                    \n                \n            \n\n            \n                Constructor\n                    \n                        \n                            \n                                \n            constructor(oldRowNum: number, newRowNum: number)\n                                \n                            \n                                    \n                                        \n                                            Defined in src/grid/utils/row-change.ts:4\n                                        \n                                    \n            \n                            \n                                \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                                Type\n                                                            Optional\n                                                        \n                                                    \n                                                    \n                                                            \n                                                                oldRowNum\n                                                              \n                                                                    \n                                                                                number\n                                                                    \n                                                              \n                                                                \n                                                                        no\n                                                                \n                                                                \n                                                            \n                                                            \n                                                                newRowNum\n                                                              \n                                                                    \n                                                                                number\n                                                                    \n                                                              \n                                                                \n                                                                        no\n                                                                \n                                                                \n                                                            \n                                                    \n                                                \n                                        \n                                \n                            \n                        \n                    \n            \n\n\n\n            \n                \n                    \n                        Properties\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        newRowNum\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                    newRowNum:     number\n            \n                                \n                            \n                                \n                                    \n                                        Type :     number\n            \n                                    \n                                \n                                    \n                                        \n                                                Defined in src/grid/utils/row-change.ts:4\n                                        \n                                    \n            \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        oldRowNum\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                    oldRowNum:     number\n            \n                                \n                            \n                                \n                                    \n                                        Type :     number\n            \n                                    \n                                \n                                    \n                                        \n                                                Defined in src/grid/utils/row-change.ts:3\n                                        \n                                    \n            \n            \n                        \n                    \n            \n\n    \n\n\n    \n        export class RowChange {\n\n  oldRowNum: number;\n  newRowNum: number;\n\n  constructor(oldRowNum: number, newRowNum: number) {\n    this.oldRowNum = oldRowNum;\n    this.newRowNum = newRowNum;\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SortInfo.html":{"url":"classes/SortInfo.html","title":"class - SortInfo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  SortInfo\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/grid/utils/sort-info.ts\n        \n\n\n\n\n\n            \n                Index\n                \n                    \n                        \n                            \n                                Properties\n                            \n                        \n                        \n                            \n                                \n                                    \n                                            Public\n                                        asc\n                                    \n                                    \n                                            Public\n                                        field\n                                    \n                                \n                            \n                        \n                        \n                            \n                                Methods\n                            \n                        \n                        \n                            \n                                \n                                    \n                                        getAsc\n                                    \n                                    \n                                        getField\n                                    \n                                    \n                                        setAsc\n                                    \n                                    \n                                        setField\n                                    \n                                \n                            \n                        \n                    \n                \n            \n\n\n            \n                \n                    \n                        Methods\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        getAsc\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            getAsc()\n                                \n                            \n            \n            \n                                    \n                                        \n                                                Defined in src/grid/utils/sort-info.ts:5\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                            Returns :     boolean\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        getField\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            getField()\n                                \n                            \n            \n            \n                                    \n                                        \n                                                Defined in src/grid/utils/sort-info.ts:13\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                            Returns :     string\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        setAsc\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            setAsc(asc: boolean)\n                                \n                            \n            \n            \n                                    \n                                        \n                                                Defined in src/grid/utils/sort-info.ts:9\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                                Type\n                                                            Optional\n                                                        \n                                                    \n                                                    \n                                                            \n                                                                asc\n                                                                \n                                                                    \n                                                                                boolean\n                                                                    \n                                                                \n                                                                \n                                                                        no\n                                                                \n                                                                \n            \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     void\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        setField\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            setField(field: string)\n                                \n                            \n            \n            \n                                    \n                                        \n                                                Defined in src/grid/utils/sort-info.ts:17\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                                Type\n                                                            Optional\n                                                        \n                                                    \n                                                    \n                                                            \n                                                                field\n                                                                \n                                                                    \n                                                                                string\n                                                                    \n                                                                \n                                                                \n                                                                        no\n                                                                \n                                                                \n            \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     void\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n            \n\n\n            \n                \n                    \n                        Properties\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                            Public\n                                        asc\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                    asc:     boolean\n            \n                                \n                            \n                                \n                                    \n                                        Type :     boolean\n            \n                                    \n                                \n                                \n                                    \n                                        Default value : true\n                                    \n                                \n                                    \n                                        \n                                                Defined in src/grid/utils/sort-info.ts:2\n                                        \n                                    \n            \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                            Public\n                                        field\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                    field:     string\n            \n                                \n                            \n                                \n                                    \n                                        Type :     string\n            \n                                    \n                                \n                                \n                                    \n                                        Default value : null\n                                    \n                                \n                                    \n                                        \n                                                Defined in src/grid/utils/sort-info.ts:3\n                                        \n                                    \n            \n            \n                        \n                    \n            \n\n    \n\n\n    \n        export class SortInfo {\n  public asc: boolean = true;\n  public field: string = null;\n\n  getAsc(): boolean {\n    return this.asc;\n  }\n\n  setAsc(asc: boolean) {\n    this.asc = asc;\n  }\n\n  getField(): string {\n    return this.field;\n  }\n\n  setField(field: string) {\n    this.field = field;\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ClickListener.html":{"url":"interfaces/ClickListener.html","title":"interface - ClickListener","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ClickListener\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/grid/event/click.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    click\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n                \n                    \n                        Methods\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        click\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            click(event: MouseEvent)\n                                \n                            \n            \n            \n                                    \n                                        \n                                                Defined in src/grid/event/click.interface.ts:3\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                                Type\n                                                            Optional\n                                                        \n                                                    \n                                                    \n                                                            \n                                                                event\n                                                                \n                                                                    \n                                                                                MouseEvent\n                                                                    \n                                                                \n                                                                \n                                                                        no\n                                                                \n                                                                \n            \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     boolean\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n            \n\n\n    \n\n\n    \n        export interface ClickListener {\n\n  click(event: MouseEvent): boolean;\n\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DblClickListener.html":{"url":"interfaces/DblClickListener.html","title":"interface - DblClickListener","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  DblClickListener\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/grid/event/dbl-click.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    dblclick\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n                \n                    \n                        Methods\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        dblclick\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            dblclick(event: MouseEvent)\n                                \n                            \n            \n            \n                                    \n                                        \n                                                Defined in src/grid/event/dbl-click.interface.ts:3\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                                Type\n                                                            Optional\n                                                        \n                                                    \n                                                    \n                                                            \n                                                                event\n                                                                \n                                                                    \n                                                                                MouseEvent\n                                                                    \n                                                                \n                                                                \n                                                                        no\n                                                                \n                                                                \n            \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     boolean\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n            \n\n\n    \n\n\n    \n        export interface DblClickListener {\n\n  dblclick(event: MouseEvent): boolean;\n\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Dictionary.html":{"url":"interfaces/Dictionary.html","title":"interface - Dictionary","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Dictionary\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/grid/model/dictionary.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        display\n                                \n                                \n                                        value\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        display\n                                    \n                                \n                                \n                                    \n                                        display:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n                                    \n                                        \n                                            Defined in src/grid/model/dictionary.interface.ts:3\n                                        \n                                    \n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        value\n                                    \n                                \n                                \n                                    \n                                        value:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n                                    \n                                        \n                                            Defined in src/grid/model/dictionary.interface.ts:2\n                                        \n                                    \n\n                        \n                    \n            \n    \n\n\n    \n        export interface Dictionary {\n  value: string;\n  display: string;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/EmptyConstructor.html":{"url":"interfaces/EmptyConstructor.html","title":"interface - EmptyConstructor","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  EmptyConstructor\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/grid/utils/empty.factory.ts\n        \n\n\n\n\n\n\n    \n\n\n    \n        export class EmptyFactory {\n  constructor(private emptyConstructor: EmptyConstructor) {}\n\n  getInstance(): T {\n    return new this.emptyConstructor();\n  }\n}\n\nexport interface EmptyConstructor {\n  new(): T;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/EventListenerArg.html":{"url":"interfaces/EventListenerArg.html","title":"interface - EventListenerArg","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  EventListenerArg\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/grid/event/event-listener-arg.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        config\n                                \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        config\n                                    \n                                \n                                \n                                    \n                                        config:     any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/grid/event/event-listener-arg.interface.ts:5\n                                        \n                                    \n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     Type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Type\n\n                                        \n                                    \n\n\n\n\n                                    \n                                        \n                                            Defined in src/grid/event/event-listener-arg.interface.ts:4\n                                        \n                                    \n\n                        \n                    \n            \n    \n\n\n    \n        import {Type} from \"@angular/core\";\n\nexport interface EventListenerArg {\n  type: Type;\n  config?: any;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/InjectableConstructor.html":{"url":"interfaces/InjectableConstructor.html","title":"interface - InjectableConstructor","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  InjectableConstructor\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/grid/utils/injectable.factory.ts\n        \n\n\n\n\n\n\n    \n\n\n    \n        import {Injector} from \"@angular/core\";\n\n/**\n * Allows instantiation of any generic type if the type expects an injector argument.  See the implementation of\n * the EventListener.\n */\nexport class InjectableFactory {\n  constructor(private ic: InjectableConstructor, private injector: Injector) {}\n\n  getInstance(): T {\n    return new this.ic(this.injector);\n  }\n}\n\nexport interface InjectableConstructor {\n  new(injector: Injector): T;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MouseDownListener.html":{"url":"interfaces/MouseDownListener.html","title":"interface - MouseDownListener","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  MouseDownListener\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/grid/event/mouse-down.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    mouseDown\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n                \n                    \n                        Methods\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        mouseDown\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            mouseDown(event: MouseEvent)\n                                \n                            \n            \n            \n                                    \n                                        \n                                                Defined in src/grid/event/mouse-down.interface.ts:3\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                                Type\n                                                            Optional\n                                                        \n                                                    \n                                                    \n                                                            \n                                                                event\n                                                                \n                                                                    \n                                                                                MouseEvent\n                                                                    \n                                                                \n                                                                \n                                                                        no\n                                                                \n                                                                \n            \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     boolean\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n            \n\n\n    \n\n\n    \n        export interface MouseDownListener {\n\n  mouseDown(event: MouseEvent): boolean;\n\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MouseDragListener.html":{"url":"interfaces/MouseDragListener.html","title":"interface - MouseDragListener","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  MouseDragListener\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/grid/event/mouse-drag.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    mouseDrag\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n                \n                    \n                        Methods\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        mouseDrag\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            mouseDrag(event: MouseEvent)\n                                \n                            \n            \n            \n                                    \n                                        \n                                                Defined in src/grid/event/mouse-drag.interface.ts:3\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                                Type\n                                                            Optional\n                                                        \n                                                    \n                                                    \n                                                            \n                                                                event\n                                                                \n                                                                    \n                                                                                MouseEvent\n                                                                    \n                                                                \n                                                                \n                                                                        no\n                                                                \n                                                                \n            \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     boolean\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n            \n\n\n    \n\n\n    \n        export interface MouseDragListener {\n\n  mouseDrag(event: MouseEvent): boolean;\n\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MouseOutListener.html":{"url":"interfaces/MouseOutListener.html","title":"interface - MouseOutListener","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  MouseOutListener\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/grid/event/mouse-out.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    mouseOut\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n                \n                    \n                        Methods\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        mouseOut\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            mouseOut(event: MouseEvent)\n                                \n                            \n            \n            \n                                    \n                                        \n                                                Defined in src/grid/event/mouse-out.interface.ts:3\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                                Type\n                                                            Optional\n                                                        \n                                                    \n                                                    \n                                                            \n                                                                event\n                                                                \n                                                                    \n                                                                                MouseEvent\n                                                                    \n                                                                \n                                                                \n                                                                        no\n                                                                \n                                                                \n            \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     boolean\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n            \n\n\n    \n\n\n    \n        export interface MouseOutListener {\n\n  mouseOut(event: MouseEvent): boolean;\n\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MouseOverListener.html":{"url":"interfaces/MouseOverListener.html","title":"interface - MouseOverListener","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  MouseOverListener\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/grid/event/mouse-over.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    mouseOver\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n                \n                    \n                        Methods\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        mouseOver\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            mouseOver(event: MouseEvent)\n                                \n                            \n            \n            \n                                    \n                                        \n                                                Defined in src/grid/event/mouse-over.interface.ts:3\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                                Type\n                                                            Optional\n                                                        \n                                                    \n                                                    \n                                                            \n                                                                event\n                                                                \n                                                                    \n                                                                                MouseEvent\n                                                                    \n                                                                \n                                                                \n                                                                        no\n                                                                \n                                                                \n            \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     boolean\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n            \n\n\n    \n\n\n    \n        export interface MouseOverListener {\n\n  mouseOver(event: MouseEvent): boolean;\n\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MouseUpListener.html":{"url":"interfaces/MouseUpListener.html","title":"interface - MouseUpListener","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  MouseUpListener\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/grid/event/mouse-up.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    mouseUp\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n                \n                    \n                        Methods\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        mouseUp\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            mouseUp(event: MouseEvent)\n                                \n                            \n            \n            \n                                    \n                                        \n                                                Defined in src/grid/event/mouse-up.interface.ts:3\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                                Type\n                                                            Optional\n                                                        \n                                                    \n                                                    \n                                                            \n                                                                event\n                                                                \n                                                                    \n                                                                                MouseEvent\n                                                                    \n                                                                \n                                                                \n                                                                        no\n                                                                \n                                                                \n            \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     boolean\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n            \n\n\n    \n\n\n    \n        export interface MouseUpListener {\n\n  mouseUp(event: MouseEvent): boolean;\n\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ARROW\n                        \n                        \n                            CLICK\n                        \n                        \n                            NO_EVENT\n                        \n                        \n                            RESIZE\n                        \n                        \n                            SCROLL\n                        \n                        \n                            TAB\n                        \n                    \n                \n            \n        \n    \n\n\n    src/grid/services/grid-event.service.ts\n    \n                \n                \n                    \n                        \n                            \n                            \n                                \n                                ARROW\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n                            ARROW:     number\n    \n                        \n                    \n                        \n                            \n                                Type :     number\n    \n                            \n                        \n                        \n                            \n                                Default value : 2\n                            \n                        \n    \n    \n                \n            \n            \n                \n                    \n                        \n                            \n                            \n                                \n                                CLICK\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n                            CLICK:     number\n    \n                        \n                    \n                        \n                            \n                                Type :     number\n    \n                            \n                        \n                        \n                            \n                                Default value : 0\n                            \n                        \n    \n    \n                \n            \n            \n                \n                    \n                        \n                            \n                            \n                                \n                                TAB\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n                            TAB:     number\n    \n                        \n                    \n                        \n                            \n                                Type :     number\n    \n                            \n                        \n                        \n                            \n                                Default value : 1\n                            \n                        \n    \n    \n                \n            \n    \n    src/grid/grid.component.ts\n    \n                \n                \n                    \n                        \n                            \n                            \n                                \n                                NO_EVENT\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n                            NO_EVENT:     number\n    \n                        \n                    \n                        \n                            \n                                Type :     number\n    \n                            \n                        \n                        \n                            \n                                Default value : -1\n                            \n                        \n    \n    \n                \n            \n            \n                \n                    \n                        \n                            \n                            \n                                \n                                RESIZE\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n                            RESIZE:     number\n    \n                        \n                    \n                        \n                            \n                                Type :     number\n    \n                            \n                        \n                        \n                            \n                                Default value : 0\n                            \n                        \n    \n    \n                \n            \n            \n                \n                    \n                        \n                            \n                            \n                                \n                                SCROLL\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n                            SCROLL:     number\n    \n                        \n                    \n                        \n                            \n                                Type :     number\n    \n                            \n                        \n                        \n                            \n                                Default value : 1\n                            \n                        \n    \n    \n                \n            \n    \n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
