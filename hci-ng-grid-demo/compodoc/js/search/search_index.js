var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.6","fields":["title","body"],"fieldVectors":[["title/components/BigTextPopup.html",[0,1.363,1,1.789]],["body/components/BigTextPopup.html",[0,1.956,1,2.804,2,2.196,3,0.118,4,0.103,5,3.19,6,1.903,7,1.903,8,0.103,9,4.79,10,2.858,11,1.746,12,5.356,13,1.459,14,4.272,15,3.352,16,3.838,17,3.953,18,0.016,19,3.934,20,3.398,21,5.174,22,2.7,23,5.534,24,4.382,25,4.3,26,4.3,27,4.3,28,3.934,29,4.3,30,4.79,31,5.534,32,3.19,33,3.398,34,5.534,35,5.534,36,4.734,37,5.534,38,2.456,39,5.534,40,2.573,41,6.659,42,0.196,43,0.597,44,2.845,45,3.007,46,1.589,47,1.907,48,4.3,49,2.092,50,2.132,51,0.28,52,5.329,53,1.156,54,3.678,55,3.678,56,0.406,57,3.302,58,0.379,59,0.977,60,0.774,61,2.827,62,3.302,63,0.301,64,0.317,65,0.295,66,0.274,67,0.902,68,2.566,69,1.956,70,3.302,71,2.858,72,1.996,73,3.302,74,1.795,75,3.302,76,2.566,77,2.028,78,2.566,79,2.566,80,1.903,81,1.824,82,1.156,83,3.302,84,3.302,85,3.302,86,3.302,87,3.302,88,1.065,89,3.302,90,3.302,91,1.459,92,3.302,93,0.51,94,0.528,95,0.118,96,0.142,97,3.302,98,3.302,99,3.302,100,1.698,101,2.573,102,2.573,103,1.903,104,3.285,105,1.903,106,1.903,107,1.532,108,1.816,109,1.698,110,2.729,111,1.532,112,0.874,113,1.903,114,1.459,115,1.903,116,2.729,117,1.532,118,1.903,119,1.532,120,1.698,121,1.903,122,1.073,123,1.903,124,1.459,125,1.33,126,1.611,127,2.092,128,1.459,129,1.459,130,1.903,131,1.903,132,0.007,133,0.009,134,0.007]],["title/classes/Cell.html",[81,1.486,96,0.166]],["body/classes/Cell.html",[3,0.193,4,0.169,8,0.169,13,2.388,18,0.016,42,0.32,43,0.828,56,0.4,63,0.294,64,0.268,65,0.296,66,0.268,81,2.529,88,1.477,95,0.193,96,0.233,132,0.011,133,0.013,134,0.011,135,0.986,136,4.677,137,1.83,138,5.404,139,5.404,140,3.375,141,5.404,142,3.841,143,5.404,144,6.119,145,3.842,146,1.023,147,1.993,148,6.564,149,4.341,150,6.564,151,4.666,152,1.25,153,0.944,154,1.738,155,5.404,156,5.404,157,5.404]],["title/classes/CellEditRenderer.html",[96,0.166,158,2.997]],["body/classes/CellEditRenderer.html",[2,1.524,3,0.073,4,0.064,8,0.064,17,1.894,18,0.016,22,0.997,42,0.195,43,0.414,44,3.473,45,3.67,46,1.874,47,1.659,48,4.015,49,2.563,50,2.235,51,0.195,52,3.665,53,0.802,54,2.553,55,2.553,56,0.415,58,0.4,59,0.997,60,0.77,63,0.355,64,0.323,65,0.305,66,0.323,67,0.984,68,2.553,69,1.826,76,2.553,77,2.529,78,2.553,79,2.553,80,1.894,81,2.671,82,1.472,88,1.437,91,2.439,93,0.594,94,0.327,95,0.073,96,0.223,108,0.87,112,1.728,125,1.324,132,0.004,133,0.006,134,0.004,135,0.373,137,0.693,140,3.2,146,1.039,147,0.754,149,2.896,151,2.335,152,1.243,153,0.964,154,1.368,158,2.553,159,6.632,160,6.006,161,1.453,162,2.335,163,2.56,164,2.162,165,2.844,166,3.286,167,1.603,168,2.335,169,2.118,170,4.119,171,3.388,172,4.119,173,2.602,174,4.119,175,4.119,176,3.565,177,4.119,178,4.083,179,3.286,180,3.286,181,3.286,182,3.286,183,3.286,184,3.286,185,3.286,186,2.844,187,3.286,188,2.162,189,3.286,190,2.045,191,2.045,192,1.589,193,1.77,194,1.018,195,3.286,196,1.355,197,1.589,198,1.77,199,1.77,200,2.045,201,2.045,202,1.77,203,2.045,204,2.045,205,1.77,206,3.673,207,1.589,208,1.75,209,2.045,210,2.045,211,1.589,212,1.77,213,2.045,214,2.844,215,1.9,216,3.286,217,1.232,218,2.045,219,1.262,220,3.286,221,2.045,222,3.104,223,4.717,224,2.844,225,2.553,226,2.844,227,3.286,228,2.045,229,2.844,230,2.844,231,2.335,232,3.286,233,2.335,234,2.162,235,1.256,236,3.286,237,2.045,238,2.045,239,3.286,240,2.045,241,3.286,242,2.045,243,2.045,244,3.286,245,2.045,246,3.286,247,2.045,248,3.286,249,2.335,250,2.553,251,1.77,252,1.589,253,2.045,254,2.045,255,1.77,256,1.324,257,2.045,258,1.256,259,1.345,260,1.453,261,1.77,262,0.948,263,1.453,264,1.77,265,1.589,266,1.589,267,1.589,268,1.453,269,1.345,270,2.045,271,1.77,272,2.844,273,4.776,274,1.77,275,1.603,276,0.824,277,2.045,278,3.104,279,2.045,280,1.77,281,1.345,282,1.77,283,1.345,284,1.345,285,2.045,286,2.045,287,2.374,288,3.2,289,3.665,290,1.77,291,4.119,292,2.844,293,2.045,294,2.844,295,2.045,296,0.565,297,2.045,298,2.045,299,1.77,300,0.997,301,1.589,302,2.045,303,1.453,304,2.045,305,2.045,306,1.345,307,2.045,308,2.045,309,1.589,310,2.045,311,1.453,312,1.256,313,2.045]],["title/classes/CellHoverPopupListener.html",[96,0.166,314,2.997]],["body/classes/CellHoverPopupListener.html",[3,0.149,4,0.131,8,0.131,11,2.056,17,2.41,18,0.016,42,0.248,43,0.703,46,1.801,51,0.33,53,1.361,56,0.398,58,0.371,59,0.851,60,0.98,61,2.761,63,0.341,64,0.311,65,0.294,66,0.311,67,0.796,69,1.969,72,2.644,74,3.029,93,0.75,94,0.668,95,0.149,96,0.18,108,1.771,122,2.037,132,0.008,133,0.011,134,0.008,135,0.763,146,0.581,152,1.194,153,0.73,154,1.771,167,2.039,173,2.416,194,0.903,208,1.888,215,1.684,217,1.876,219,1.361,256,2.245,296,0.835,314,4.33,315,4.824,316,4.33,317,3.618,318,3.172,319,1.811,320,4.457,321,2.866,322,4.824,323,2.866,324,2.272,325,2.272,326,2.272,327,2.272,328,4.824,329,4.181,330,2.272,331,2.149,332,2.272,333,2.149,334,2.149,335,2.039,336,2.039,337,2.039,338,2.149,339,1.939,340,1.939,341,2.272,342,2.272,343,3.248,344,4.181,345,2.567,346,4.181,347,3.248,348,3.667,349,2.567,350,4.181,351,2.272,352,4.181,353,2.972,354,5.573,355,4.181,356,5.573,357,4.181,358,4.181,359,5.573,360,4.181,361,4.181]],["title/classes/CellNumberRangeView.html",[96,0.166,362,2.742]],["body/classes/CellNumberRangeView.html",[3,0.132,4,0.115,8,0.115,18,0.016,20,2.263,22,1.797,42,0.218,43,0.645,49,2.596,50,1.42,51,0.303,53,1.249,56,0.392,58,0.348,59,0.781,60,1.199,63,0.319,64,0.291,65,0.29,66,0.291,67,0.702,69,1.807,81,1.42,82,1.549,88,1.768,91,2.804,93,0.633,94,0.589,95,0.132,96,0.159,112,1.984,127,2.26,132,0.007,133,0.01,134,0.007,135,0.672,146,0.984,152,0.974,153,1.026,154,1.556,163,1.709,196,1.058,262,1.709,296,0.441,303,2.619,311,2.619,312,2.263,319,1.662,351,2.002,362,3.636,363,5.207,364,3.981,365,2.263,366,3.02,367,5.085,368,5.875,369,5.085,370,5.875,371,5.085,372,3.141,373,2.948,374,2.619,375,4.564,376,3.685,377,2.619,378,5.085,379,2.619,380,3.189,381,2.948,382,3.685,383,3.685,384,3.141,385,3.189,386,2.425,387,5.115,388,5.875,389,5.115,390,5.115,391,5.115,392,5.115,393,5.875,394,5.115,395,5.115,396,5.115,397,4.427,398,3.189,399,5.115,400,3.366,401,5.115,402,3.685,403,4.427,404,3.685,405,5.115,406,3.685,407,1.628,408,3.189,409,2.263,410,4.564,411,3.189,412,5.115,413,2.619,414,2.619,415,2.619,416,2.863,417,2.863,418,2.619]],["title/classes/CellPopupRenderer.html",[12,2.742,96,0.166]],["body/classes/CellPopupRenderer.html",[0,1.657,3,0.116,4,0.102,8,0.102,12,3.332,17,4.468,18,0.016,42,0.278,43,0.591,44,3.836,45,4.054,46,2.101,47,2.212,48,4.946,49,2.427,50,2.632,51,0.278,52,4.667,53,1.145,54,3.643,55,3.643,56,0.402,58,0.356,59,0.918,60,1.099,63,0.326,64,0.298,65,0.294,66,0.298,67,0.62,68,3.643,69,2.249,71,4.058,72,2.533,74,1.77,76,3.643,77,3.372,78,3.643,79,3.643,80,2.702,81,2.874,88,1.491,91,2.929,93,0.592,94,0.521,95,0.116,96,0.14,127,2.072,132,0.006,133,0.009,134,0.006,135,0.594,137,1.103,140,2.41,146,0.652,147,1.202,149,2.879,161,2.316,162,3.332,169,3.273,188,3.085,192,2.531,197,2.531,199,4.058,202,2.82,207,2.531,211,2.531,212,2.82,259,2.144,263,2.316,265,2.531,266,2.531,267,2.531,271,2.82,272,2.82,273,5.199,276,2.564,278,3.085,280,4.058,282,4.058,283,2.144,294,2.82,299,2.82,316,3.643,345,2,419,6.457,420,3.643,421,5.737,422,6.007,423,4.688,424,4.058,425,4.058,426,4.058,427,4.688,428,4.058,429,4.688,430,4.688,431,4.688,432,4.058,433,4.688,434,4.688,435,4.688,436,4.058,437,3.643,438,4.058,439,4.058,440,2.82,441,2.82,442,3.258,443,3.258,444,3.258,445,2.82,446,3.258,447,2.144,448,3.258,449,3.258,450,3.258,451,3.258,452,3.643,453,3.258,454,4.688,455,4.688]],["title/classes/CellTextView.html",[96,0.166,456,2.997]],["body/classes/CellTextView.html",[3,0.152,4,0.133,8,0.133,18,0.016,29,3.3,32,2.448,42,0.252,43,0.71,49,2.793,50,1.637,51,0.334,53,1.375,56,0.381,58,0.399,59,0.86,60,1.32,63,0.366,64,0.334,65,0.282,66,0.334,67,0.809,69,1.99,81,1.637,88,1.619,91,2.974,93,0.681,94,0.679,95,0.152,96,0.183,109,2.184,112,2.094,127,3.395,132,0.008,133,0.011,134,0.008,135,0.775,146,0.936,163,1.97,169,2.184,196,1.22,262,1.97,269,2.795,275,2.748,276,1.711,296,0.675,319,1.83,363,5.116,365,2.608,366,3.249,372,3.459,373,3.247,377,3.019,380,3.677,381,3.247,384,3.459,385,3.677,386,2.795,400,2.795,407,2.793,456,4.377,457,4.875,458,4.875,459,4.248,460,3.677,461,4.004,462,4.978,463,3.061,464,2.608,465,3.706,466,2.795,467,3.019,468,3.3,469,3.019,470,4.248,471,5.633,472,4.248,473,4.248,474,3.019,475,3.677]],["title/interfaces/CellViewRenderer.html",[366,1.983,476,0.868]],["body/interfaces/CellViewRenderer.html",[3,0.157,4,0.137,8,0.137,18,0.016,42,0.26,43,0.726,49,2.84,50,2.476,51,0.341,53,1.407,56,0.349,58,0.381,60,1.351,63,0.349,64,0.319,65,0.259,66,0.319,67,1.384,69,2.036,88,1.635,91,3.015,93,0.692,94,0.703,95,0.157,112,2.122,132,0.009,133,0.011,134,0.009,135,1.051,137,1.952,146,0.894,149,3.538,153,1.007,163,3.164,215,2.321,222,3.791,231,4.096,234,3.791,235,2.699,262,2.039,287,3.321,363,4.849,366,2.963,372,3.538,373,3.321,381,3.321,384,3.538,476,0.989,477,1.854,478,3.805,479,4.873,480,4.396,481,4.396,482,4.987,483,5.762,484,4.987,485,5.762,486,4.987,487,4.987,488,4.396,489,4.987,490,5.762,491,4.987,492,3.791,493,4.096,494,5.762,495,5.762,496,4.987,497,3.125,498,2.534]],["title/classes/CheckRowSelectView.html",[96,0.166,493,2.742]],["body/classes/CheckRowSelectView.html",[3,0.135,4,0.118,8,0.118,18,0.016,42,0.224,43,0.656,49,2.835,50,1.456,51,0.308,53,1.271,56,0.366,58,0.353,59,0.795,60,1.22,63,0.324,64,0.295,65,0.271,66,0.295,67,0.72,69,1.839,80,3,81,1.456,82,1.643,88,1.565,91,2.835,93,0.641,94,0.604,95,0.135,96,0.163,112,1.994,125,2.924,132,0.007,133,0.01,134,0.007,135,1.269,146,0.967,153,0.909,154,1.001,163,1.753,169,1.943,262,1.753,275,3.13,276,1.523,296,0.453,319,1.691,365,2.321,366,3.061,372,3.196,373,3,374,2.687,377,2.687,379,2.687,381,3,384,3.196,386,2.487,400,4.427,413,3.7,414,4.943,417,4.045,461,3.7,462,4.56,463,3.486,464,2.321,474,4.232,493,3.7,499,6.019,500,3.295,501,5.954,502,5.954,503,4.506,504,5.205,505,5.205,506,5.205,507,3.78,508,2.937,509,3.78,510,5.205,511,3.78,512,5.205,513,3.78,514,3.272,515,2.054,516,1.943,517,5.205,518,5.205,519,3.78,520,3.7,521,5.205,522,5.205,523,4.506,524,3.78,525,3.78,526,6.415,527,5.954,528,3.78,529,3.78,530,5.205,531,5.205,532,3.78,533,3.78]],["title/classes/ClickCellEditListener.html",[96,0.166,534,2.997]],["body/classes/ClickCellEditListener.html",[3,0.153,4,0.134,8,0.134,11,2.093,18,0.016,38,1.585,42,0.254,43,0.716,46,1.825,51,0.336,53,1.386,56,0.4,58,0.376,59,0.867,60,1.007,61,2.782,63,0.345,64,0.315,65,0.296,66,0.315,67,0.818,69,1.518,72,2.393,74,3.084,81,2.187,93,0.757,94,0.687,95,0.153,96,0.185,108,1.79,112,1.138,122,2.065,132,0.008,133,0.011,134,0.008,135,0.784,146,0.597,152,1.21,153,0.751,154,1.79,167,2.096,173,2.449,194,0.928,208,1.922,215,1.731,217,1.901,219,1.386,256,2.56,296,0.81,318,3.189,319,1.844,321,2.918,323,2.918,324,2.335,325,2.335,326,2.335,327,2.335,330,2.335,331,2.209,332,2.335,333,2.209,334,2.209,335,2.096,336,2.096,337,2.096,338,2.209,339,1.993,340,1.993,341,2.335,342,2.335,345,2.638,348,3.734,349,2.638,351,3.084,353,3.054,496,3.718,534,4.41,535,4.41,536,3.718,537,3.663,538,2.633,539,3.734,540,4.296,541,2.827,542,5.675,543,4.296,544,4.296,545,4.296,546,4.296]],["title/interfaces/ClickListener.html",[476,0.868,537,2.223]],["body/interfaces/ClickListener.html",[3,0.21,4,0.183,8,0.183,18,0.015,42,0.348,51,0.409,56,0.319,58,0.348,63,0.319,64,0.291,65,0.236,66,0.291,95,0.21,132,0.012,133,0.014,134,0.012,152,1.314,217,2.191,219,1.434,476,1.321,477,2.476,537,3.976,538,3.2,539,4.539,547,5.082,548,5.872]],["title/classes/ClickRowSelectListener.html",[96,0.166,549,2.997]],["body/classes/ClickRowSelectListener.html",[3,0.144,4,0.126,8,0.126,11,2.007,18,0.016,42,0.239,43,0.686,46,1.769,51,0.322,53,1.609,56,0.406,58,0.39,59,0.941,60,1.443,61,2.732,63,0.358,64,0.327,65,0.301,66,0.327,67,1.036,69,1.425,72,2.294,74,2.192,93,0.741,94,0.645,95,0.144,96,0.174,108,1.822,122,2,125,1.625,132,0.008,133,0.011,134,0.008,135,0.736,146,0.856,152,1.35,153,0.951,154,1.631,167,1.968,173,2.373,194,0.871,196,1.159,208,1.843,215,1.625,217,1.842,219,1.328,256,2.192,296,0.652,300,1.968,318,3.149,319,1.768,321,2.798,323,2.798,324,2.192,325,2.192,326,2.192,327,2.192,330,2.192,331,2.074,332,2.192,333,2.074,334,2.074,335,1.968,336,1.968,337,1.968,338,2.074,339,1.871,340,1.871,341,2.192,342,2.192,345,2.477,348,3.581,349,2.477,351,2.192,353,2.867,445,3.491,500,2.913,535,5.122,537,3.549,538,2.524,539,3.581,541,2.654,549,4.228,550,3.134,551,5.33,552,4.034,553,4.034,554,4.034,555,3.134,556,3.491,557,4.034,558,4.034,559,4.034,560,4.71,561,2.477,562,5.33]],["title/classes/ClickView.html",[96,0.166,563,2.997]],["body/classes/ClickView.html",[3,0.13,4,0.113,5,2.917,8,0.113,18,0.016,20,2.228,38,2.149,42,0.215,43,0.638,49,2.786,50,1.398,51,0.3,53,1.236,56,0.383,58,0.345,59,0.773,60,1.186,63,0.317,64,0.289,65,0.284,66,0.289,67,0.964,69,1.788,81,1.398,82,1.805,88,1.585,91,2.786,93,0.628,94,0.58,95,0.13,96,0.156,112,1.979,132,0.007,133,0.01,134,0.007,135,1.063,146,0.81,152,0.964,163,1.683,169,1.866,196,1.042,208,1.229,262,1.683,275,3.075,276,1.462,296,0.606,319,1.644,365,2.228,366,2.996,372,3.108,373,2.917,374,2.58,375,2.82,377,2.58,379,2.58,381,2.917,384,3.108,386,2.388,400,2.388,410,3.932,413,2.58,414,3.597,417,2.82,460,3.141,461,3.597,462,4.713,463,3.426,464,2.228,466,3.33,474,2.58,508,2.82,514,4.38,515,3.603,516,2.602,520,4.142,523,3.141,538,1.683,563,3.932,564,6.221,565,5.827,566,5.457,567,3.629,568,3.629,569,5.061,570,6.304,571,5.061,572,5.827,573,5.061,574,5.061,575,3.629,576,5.061,577,5.827,578,3.629,579,5.061,580,5.061,581,3.629,582,3.629,583,1.398,584,3.629,585,3.629,586,3.629,587,3.629,588,5.061,589,3.141,590,3.629,591,5.061,592,3.629]],["title/classes/ClickViewListener.html",[96,0.166,593,2.997]],["body/classes/ClickViewListener.html",[3,0.154,4,0.135,8,0.135,11,2.102,18,0.016,42,0.256,43,0.719,46,1.831,51,0.338,53,1.392,56,0.401,58,0.378,59,0.871,60,1.014,61,2.787,63,0.347,64,0.316,65,0.297,66,0.316,67,0.823,69,1.528,72,2.403,74,3.097,93,0.779,94,0.691,95,0.154,96,0.186,108,1.795,122,2.071,132,0.009,133,0.011,134,0.009,135,0.789,145,3.097,146,0.601,152,1.214,153,0.755,154,1.145,167,2.109,173,2.457,194,0.934,208,2.16,215,1.742,217,1.907,219,1.392,256,2.568,296,0.683,300,2.109,318,3.193,319,1.852,321,2.931,323,2.931,324,2.35,325,2.35,326,2.35,327,2.35,330,2.35,331,2.223,332,2.35,333,2.223,334,2.223,335,2.109,336,2.109,337,2.109,338,2.223,339,2.006,340,2.006,341,2.35,342,2.35,345,2.655,348,3.75,349,2.655,351,2.35,353,3.074,364,2.35,537,3.675,538,2.644,539,3.75,541,2.845,593,4.429,594,4.933,595,3.743,596,4.324,597,3.743,598,4.324,599,4.324,600,4.324,601,4.324,602,3.743,603,4.324,604,3.743,605,4.324]],["title/classes/ColumnDndListener.html",[96,0.166,606,2.997]],["body/classes/ColumnDndListener.html",[3,0.099,4,0.087,8,0.087,11,1.536,18,0.016,42,0.247,43,0.525,46,1.436,50,1.926,51,0.247,53,1.016,56,0.403,58,0.371,59,0.636,60,0.65,61,2.411,63,0.34,64,0.31,65,0.301,66,0.31,67,0.528,69,2.359,77,1.702,82,1.016,91,2.21,93,0.699,94,0.443,95,0.099,96,0.119,108,1.719,112,1.577,122,1.624,125,1.677,132,0.005,133,0.008,134,0.005,135,0.506,137,0.939,146,0.695,152,1.378,153,0.873,154,1.808,163,2.578,167,1.352,169,1.425,173,1.926,194,0.599,208,2.119,215,1.117,217,2.141,219,1.528,256,2.4,266,2.154,276,1.117,278,2.74,283,1.824,296,0.818,300,2.711,301,4.319,318,2.88,319,1.353,321,2.141,323,2.141,324,1.506,325,1.506,326,1.506,327,1.506,330,1.506,331,1.425,332,1.506,333,1.425,334,1.425,335,1.352,336,1.352,337,1.352,338,1.425,339,2.319,340,1.286,341,1.506,342,1.506,343,4.319,347,3.885,349,1.702,447,1.824,583,1.604,606,3.885,607,6.114,608,2.399,609,3.885,610,3.604,611,3.604,612,3.29,613,3.29,614,3.29,615,3.554,616,5.558,617,4.328,618,5,619,4.328,620,5,621,3.235,622,3.235,623,3.604,624,3.235,625,2.772,626,2.772,627,2.772,628,2.772,629,2.772,630,2.772,631,3.235,632,2.772,633,3.235,634,2.772,635,3.604,636,2.772,637,3.235,638,2.772,639,2.399,640,2.399,641,2.399,642,2.772,643,2.772,644,4.163,645,2.772,646,2.772,647,4.235,648,2.772,649,4.811,650,2.772,651,2.772,652,2.772,653,5.416,654,2.772,655,5,656,5,657,5.558,658,2.772,659,2.772,660,4.163,661,2.399,662,2.399,663,2.959,664,2.772,665,5.558,666,2.772,667,2.772,668,2.772,669,3.604,670,2.772,671,2.772,672,2.772,673,2.772,674,2.772,675,2.772,676,2.772,677,1.824,678,2.772,679,2.772,680,2.399,681,2.959,682,2.399,683,5,684,2.772,685,2.772,686,2.772]],["title/components/ColumnHeaderComponent.html",[0,1.363,111,1.789]],["body/components/ColumnHeaderComponent.html",[0,1.501,1,0.994,2,1.582,3,0.077,4,0.067,5,2.449,6,1.235,7,1.235,8,0.067,13,0.947,14,3.88,15,3.155,16,1.235,17,2.449,18,0.016,32,2.449,33,2.609,38,2.39,40,1.854,42,0.252,43,0.43,44,3.038,45,2.633,46,1.618,47,2.941,50,1.867,51,0.202,56,0.391,58,0.334,59,0.937,63,0.263,64,0.279,65,0.279,66,0.24,67,0.408,69,1.991,77,2.094,82,0.523,88,1.09,91,2.141,93,0.636,94,0.343,95,0.077,96,0.092,100,1.102,101,1.854,102,1.854,103,1.235,104,2.633,105,1.235,106,1.235,107,0.994,108,1.782,109,1.102,110,1.966,111,2.247,112,1.809,113,1.235,114,0.947,115,1.235,116,1.966,117,0.994,118,1.235,119,0.994,120,1.102,121,1.235,122,0.696,123,1.235,124,0.947,125,0.863,126,1.045,127,2.863,128,0.947,129,0.947,130,1.235,131,1.235,132,0.004,133,0.007,134,0.004,137,0.726,146,0.674,147,0.79,152,1.125,153,0.846,154,1.624,169,1.754,186,2.952,188,1.41,208,1.641,217,1.891,219,1.291,252,1.665,255,1.854,258,1.316,259,1.41,269,2.244,274,2.952,275,2.58,276,2.131,278,2.796,281,1.41,283,2.244,296,0.257,407,2.49,463,2.309,465,3.707,466,3.888,467,3.02,468,3.301,516,2.185,520,3.02,583,1.314,647,4.2,663,2.424,669,1.854,680,1.854,681,2.424,682,1.854,687,6.276,688,1.854,689,3.411,690,2.65,691,3.411,692,3.411,693,2.65,694,2.952,695,3.02,696,4.249,697,4.249,698,5.634,699,4.877,700,4.249,701,3.678,702,4.249,703,4.249,704,4.249,705,4.249,706,4.249,707,4.249,708,4.249,709,3.411,710,2.796,711,2.633,712,3.411,713,3.411,714,4.249,715,1.854,716,3.411,717,3.411,718,4.249,719,4.845,720,4.249,721,3.411,722,2.143,723,4.249,724,2.143,725,2.143,726,2.143,727,3.411,728,2.143,729,2.143,730,2.143,731,3.411,732,2.143,733,3.411,734,2.143,735,2.143,736,2.143,737,2.309,738,2.143,739,2.143,740,2.143,741,2.143,742,2.143,743,2.143,744,1.966,745,1.854,746,2.143,747,2.094,748,3.411,749,1.045,750,1.102,751,2.143,752,2.143,753,2.143,754,1.235,755,2.143,756,2.143,757,2.143,758,2.143,759,3.411,760,2.143,761,2.143,762,2.143,763,5.909,764,1.316,765,2.143,766,2.143,767,2.143,768,2.143,769,2.143,770,1.854,771,1.665,772,1.854,773,2.143,774,2.143,775,2.143,776,1.854,777,2.143,778,2.143,779,2.143,780,3.411,781,4.249,782,2.143,783,2.143,784,2.143,785,2.143,786,3.411,787,2.143,788,2.143,789,2.143,790,2.143,791,2.143,792,3.411,793,3.411,794,2.143,795,3.411,796,2.143,797,3.411,798,2.143,799,2.143,800,4.249,801,4.249,802,2.143,803,4.249,804,3.411,805,2.143,806,2.143,807,5.289,808,2.143,809,2.143,810,2.143,811,2.143,812,2.143,813,2.143,814,2.143,815,2.143]],["title/components/CompareFilterRenderer.html",[0,1.363,114,1.704]],["body/components/CompareFilterRenderer.html",[0,1.262,1,0.772,2,1.288,3,0.059,4,0.052,5,2.058,6,0.959,7,0.959,8,0.052,11,1.024,13,0.736,14,3.608,15,2.821,16,0.959,18,0.016,19,2.539,20,3.073,21,2.775,22,2.713,24,3.293,28,3.557,32,2.058,33,3.844,38,1.709,40,1.509,42,0.099,43,0.35,44,1.836,45,1.941,46,1.026,50,0.641,51,0.164,53,1.018,56,0.407,58,0.412,59,1.02,60,0.837,61,2.658,63,0.302,64,0.295,65,0.286,66,0.276,67,0.882,82,1.131,88,0.938,93,0.385,94,0.266,95,0.059,96,0.072,100,0.856,101,1.509,102,1.509,103,0.959,104,2.265,105,0.959,106,0.959,107,0.772,108,1.578,109,0.856,110,1.6,111,0.772,112,1.104,113,0.959,114,1.842,115,2.058,116,1.6,117,0.772,118,0.959,119,0.772,120,0.856,121,0.959,122,0.541,123,0.959,124,0.736,125,0.671,126,0.812,127,1.227,128,0.736,129,3.23,130,0.959,131,0.959,132,0.003,133,0.005,134,0.003,137,0.564,140,1.427,146,1.036,151,1.973,152,0.794,153,0.972,154,1.719,171,1.705,194,0.771,196,1.437,208,1.695,217,0.831,219,0.406,224,2.403,250,2.775,275,2.441,276,2.016,281,2.35,284,3.293,287,0.959,290,1.441,296,0.333,303,1.973,311,1.973,312,3.26,407,2.987,409,3.547,464,2.193,469,2.963,492,1.095,498,2.058,561,1.022,583,1.928,710,2.35,711,1.941,715,2.517,737,3.84,744,2.058,747,1.705,749,0.812,750,0.856,764,2.193,816,5.851,817,1.183,818,2.403,819,2.403,820,2.403,821,2.403,822,2.403,823,1.827,824,2.403,825,1.973,826,3.571,827,3.571,828,2.775,829,3.091,830,3.571,831,2.539,832,2.539,833,2.539,834,4.331,835,3.091,836,3.091,837,5.777,838,3.571,839,5.004,840,5.004,841,5.004,842,5,843,2.35,844,5,845,4.331,846,3.091,847,3.091,848,3.091,849,3.091,850,3.091,851,3.091,852,3.571,853,2.775,854,3.571,855,3.571,856,3.571,857,1.705,858,1.973,859,2.776,860,2.776,861,2.403,862,3.26,863,2.157,864,3.774,865,2.539,866,2.539,867,1.705,868,2.539,869,1.827,870,1.973,871,1.293,872,1.095,873,1.293,874,1.665,875,2.403,876,1.665,877,2.776,878,1.665,879,2.776,880,1.665,881,2.403,882,1.665,883,2.403,884,2.776,885,1.665,886,1.665,887,2.403,888,1.665,889,1.665,890,1.293,891,1.293,892,1.293,893,1.293,894,1.293,895,1.293,896,1.293,897,1.095,898,1.293,899,1.293,900,1.293,901,1.665,902,1.665,903,1.665,904,1.665,905,2.776,906,4.168,907,5.004,908,2.776,909,2.776,910,3.608,911,2.776,912,2.403,913,2.776,914,2.776,915,1.665,916,1.665,917,2.403,918,1.665,919,1.293,920,1.293,921,1.293,922,1.293,923,1.293,924,1.293,925,1.183,926,1.293,927,1.441,928,4.595,929,1.973,930,3.557,931,2.157,932,3.608,933,1.973,934,2.157,935,1.827,936,2.157,937,1.665,938,1.665,939,1.293,940,3.091,941,2.775,942,1.665,943,1.665,944,1.665,945,1.665,946,1.665,947,1.665,948,2.403,949,2.776,950,1.665,951,1.665,952,1.441,953,2.776,954,2.157,955,1.665,956,1.293]],["title/components/ConfigMenuComponent.html",[0,1.363,117,1.789]],["body/components/ConfigMenuComponent.html",[0,1.304,1,0.809,2,1.338,3,0.062,4,0.054,5,2.127,6,1.005,7,1.005,8,0.054,13,0.771,14,3.66,15,2.807,16,1.005,18,0.016,19,4.18,20,3.9,21,3.979,22,3.453,24,4.749,25,4.569,26,4.934,27,5.183,28,4.18,30,3.195,32,3.979,33,3.9,36,2.624,38,1.064,40,1.568,42,0.103,43,0.364,44,2.787,47,0.702,51,0.171,56,0.371,58,0.359,59,0.898,63,0.32,64,0.308,65,0.268,66,0.291,67,1.12,77,3.329,82,1.629,88,1.323,93,0.512,94,0.279,95,0.062,96,0.075,100,0.897,101,1.568,102,1.568,103,1.005,104,2.331,105,1.005,106,1.005,107,0.809,108,1.682,109,1.484,110,1.663,111,0.809,112,1.356,113,1.005,114,0.771,115,1.005,116,1.663,117,1.99,118,1.005,119,0.809,120,0.897,121,1.005,122,1.394,123,1.005,124,0.771,125,0.702,126,0.851,127,1.275,128,0.771,129,0.771,130,1.005,131,1.005,132,0.003,133,0.006,134,0.003,145,2.583,146,0.94,147,0.643,153,0.305,169,1.898,219,0.901,222,1.899,256,1.487,258,1.071,260,1.239,268,1.239,275,2.868,276,1.487,278,3.869,284,2.429,296,0.346,306,2.429,319,0.937,373,1.663,375,2.868,378,4.432,407,2.598,408,3.195,409,4.096,447,2.429,463,2.006,464,4.096,465,2.429,466,2.429,500,2.598,516,3.023,583,2.534,647,4.907,663,2.624,677,3.369,690,2.868,699,3.195,711,2.331,715,1.568,744,2.739,754,1.005,764,3.144,828,3.979,831,2.624,832,2.624,833,2.624,867,1.772,897,1.147,935,1.147,957,5.364,958,1.509,959,3.691,960,3.691,961,2.242,962,3.731,963,2.885,964,3.691,965,4.432,966,5.121,967,3.979,968,5.089,969,3.691,970,5.88,971,4.432,972,3.195,973,3.691,974,3.691,975,3.691,976,3.691,977,5.121,978,3.691,979,5.089,980,6.351,981,3.195,982,3.691,983,3.691,984,3.691,985,3.691,986,3.691,987,3.691,988,3.691,989,3.691,990,3.691,991,3.691,992,3.691,993,4.432,994,2.868,995,3.195,996,3.64,997,2.868,998,3.691,999,3.691,1000,4.114,1001,3.195,1002,2.497,1003,4.29,1004,2.885,1005,2.885,1006,2.885,1007,2.885,1008,1.744,1009,2.885,1010,1.744,1011,2.885,1012,3.369,1013,1.744,1014,2.242,1015,1.744,1016,1.744,1017,2.885,1018,1.744,1019,2.885,1020,1.744,1021,1.744,1022,2.885,1023,1.744,1024,2.885,1025,1.744,1026,2.885,1027,1.744,1028,2.885,1029,1.744,1030,1.355,1031,1.744,1032,3.691,1033,1.744,1034,1.744,1035,1.744,1036,1.355,1037,1.509,1038,1.509,1039,1.509,1040,1.744,1041,1.744,1042,1.744,1043,1.744,1044,1.744,1045,1.744,1046,1.509,1047,1.744,1048,2.885,1049,1.744,1050,1.744,1051,1.744,1052,2.885,1053,2.885,1054,2.885,1055,1.744,1056,1.744]],["title/components/ConfigMultiChoiceComponent.html",[0,1.363,119,1.789]],["body/components/ConfigMultiChoiceComponent.html",[0,1.713,1,1.222,2,1.858,3,0.094,4,0.082,5,2.794,6,1.518,7,1.518,8,0.082,13,1.164,14,4.079,15,3.127,16,1.518,18,0.016,19,3.445,20,2.976,24,3.189,28,3.445,32,2.794,33,2.976,36,3.445,38,2.263,40,2.177,42,0.156,43,0.505,51,0.237,56,0.393,58,0.363,59,0.89,63,0.294,64,0.304,65,0.285,66,0.268,67,0.502,82,1.557,88,0.901,93,0.284,94,0.421,95,0.094,96,0.114,100,1.354,101,2.177,102,2.177,103,1.518,104,2.943,105,1.518,106,1.518,107,1.222,108,1.783,109,2.785,110,2.309,111,1.222,112,0.697,113,1.518,114,1.164,115,1.518,116,2.309,117,1.222,118,1.518,119,2.512,120,3.834,121,1.518,122,0.856,123,1.518,124,1.164,125,1.061,126,1.285,127,1.77,128,1.164,129,1.164,130,1.518,131,1.518,132,0.005,133,0.008,134,0.005,146,0.914,151,4.534,152,0.763,153,0.7,154,1.543,194,0.569,219,1.422,230,4.195,256,1.953,275,2.993,288,4.527,289,3.766,296,0.836,300,1.285,407,2.819,409,2.976,464,2.976,516,2.492,583,2.087,695,3.445,711,2.943,715,2.177,744,3.537,828,4.767,869,2.636,872,3.564,912,5.311,957,5.672,968,4.195,971,4.195,972,4.195,1002,3.467,1014,3.766,1046,2.28,1057,2.28,1058,4.847,1059,4.847,1060,4.847,1061,4.006,1062,4.006,1063,4.006,1064,5.416,1065,4.847,1066,2.634,1067,2.634,1068,2.634,1069,2.634,1070,2.634,1071,2.634,1072,4.006,1073,2.634,1074,4.006,1075,4.847,1076,2.634,1077,4.006,1078,2.634,1079,2.634,1080,4.006,1081,2.634,1082,2.634,1083,2.634,1084,2.634,1085,3.467,1086,4.847,1087,2.634,1088,2.634,1089,2.634,1090,2.634,1091,2.634,1092,5.416,1093,4.006,1094,2.634,1095,4.006,1096,2.28,1097,2.634,1098,4.006,1099,4.006,1100,4.847,1101,2.634,1102,2.634,1103,4.847,1104,5.416,1105,4.006,1106,4.006]],["title/classes/DateIso8601Formatter.html",[96,0.166,1107,2.997]],["body/classes/DateIso8601Formatter.html",[3,0.142,4,0.124,8,0.124,11,1.987,18,0.016,42,0.235,43,0.679,51,0.319,53,1.599,56,0.399,58,0.418,59,0.823,60,1.432,61,2.524,63,0.384,64,0.35,65,0.296,66,0.35,67,1.247,82,1.599,93,0.58,95,0.142,96,0.171,132,0.008,133,0.011,134,0.008,135,0.725,137,1.346,146,1.022,153,0.941,171,4.433,194,1.163,196,1.881,296,0.785,309,3.087,420,4.185,561,2.44,825,3.828,1107,4.185,1108,5.32,1109,3.439,1110,4.662,1111,5.386,1112,5.386,1113,5.386,1114,5.386,1115,5.441,1116,5.386,1117,5.386,1118,5.386,1119,4.433,1120,4.656,1121,4.656,1122,4.185,1123,3.973,1124,3.087,1125,4.343,1126,3.973,1127,4.343,1128,3.973,1129,3.973,1130,3.087,1131,3.087,1132,3.087,1133,4.185,1134,2.824,1135,2.824,1136,4.662,1137,3.439,1138,4.185,1139,4.662,1140,4.662,1141,3.439,1142,3.973,1143,2.614]],["title/classes/DateMsFormatter.html",[96,0.166,1144,2.997]],["body/classes/DateMsFormatter.html",[3,0.149,4,0.13,8,0.13,11,2.054,18,0.016,42,0.247,43,0.702,51,0.33,53,1.632,56,0.404,58,0.424,59,0.85,60,1.468,61,2.575,63,0.389,64,0.355,65,0.299,66,0.355,67,1.273,82,1.529,88,0.939,93,0.6,95,0.149,96,0.18,132,0.008,133,0.011,134,0.008,135,0.762,146,1.033,153,0.973,171,4.275,194,1.202,196,1.92,296,0.801,309,3.243,561,2.563,1108,5.41,1115,5.28,1119,4.489,1120,4.751,1121,4.751,1122,4.326,1124,3.243,1125,4.453,1127,4.453,1130,3.243,1131,3.243,1132,3.243,1133,4.326,1134,2.967,1135,2.967,1136,4.819,1137,3.613,1138,3.243,1139,4.819,1140,4.819,1141,3.613,1144,4.326,1145,3.613,1146,4.174,1147,4.174,1148,4.174,1149,4.174,1150,4.174,1151,4.174]],["title/interfaces/DblClickListener.html",[476,0.868,1152,2.742]],["body/interfaces/DblClickListener.html",[3,0.209,4,0.183,8,0.183,18,0.015,42,0.346,51,0.407,56,0.318,58,0.346,63,0.318,64,0.29,65,0.235,66,0.29,95,0.209,132,0.012,133,0.014,134,0.012,152,1.31,217,2.187,219,1.427,476,1.315,477,2.465,1152,4.891,1153,5.955,1154,5.06,1155,5.955,1156,5.955,1157,5.846]],["title/interfaces/Dictionary.html",[476,0.868,1012,2.538]],["body/interfaces/Dictionary.html",[3,0.21,4,0.184,8,0.184,18,0.015,42,0.349,43,0.871,65,0.278,82,1.907,95,0.21,132,0.012,133,0.014,134,0.012,146,1.052,407,3.343,476,1.324,477,2.482,1012,4.545,1158,5.094]],["title/interfaces/EmptyConstructor.html",[476,0.868,1159,2.742]],["body/interfaces/EmptyConstructor.html",[3,0.212,4,0.185,8,0.185,18,0.016,95,0.248,96,0.255,132,0.012,133,0.014,134,0.012,194,1.497,296,0.71,476,1.333,477,2.498,754,3.415,1159,5.388,1160,4.603,1161,4.211,1162,4.211,1163,4.929,1164,5.128]],["title/classes/EmptyFactory.html",[96,0.166,1161,2.742]],["body/classes/EmptyFactory.html",[3,0.198,4,0.173,8,0.173,18,0.016,42,0.328,51,0.395,56,0.362,58,0.328,63,0.301,64,0.275,65,0.288,66,0.275,95,0.238,96,0.239,132,0.011,133,0.013,134,0.011,135,1.011,137,1.876,147,2.458,194,1.439,252,4.304,296,0.664,476,1.246,754,3.193,1159,5.477,1160,4.304,1161,4.736,1162,5.271,1163,5.08,1164,4.795,1165,3.645,1166,4.304,1167,4.304,1168,5.54,1169,5.54,1170,5.54]],["title/classes/EventListener.html",[96,0.166,318,1.626]],["body/classes/EventListener.html",[3,0.15,4,0.131,8,0.131,18,0.016,42,0.248,43,0.703,46,2.059,51,0.33,53,1.362,56,0.398,58,0.33,59,0.852,60,1.308,63,0.341,64,0.311,65,0.294,66,0.311,67,1.062,93,0.721,94,0.669,95,0.15,96,0.27,108,1.968,122,2.377,132,0.008,133,0.011,134,0.008,135,0.764,137,1.418,146,0.582,147,2.058,152,1.062,153,0.732,162,3.966,167,2.722,168,3.966,173,2.762,194,1.205,196,1.203,208,1.89,215,2.248,219,1.634,256,2.248,259,2.755,260,2.976,261,3.624,263,2.976,264,3.624,287,2.413,296,0.502,318,2.353,321,3.226,323,2.869,331,2.869,333,2.869,334,2.869,335,2.722,336,2.722,337,2.722,338,2.869,823,3.671,1036,3.253,1171,5.775,1172,3.624,1173,5.579,1174,3.671,1175,5.579,1176,5.579,1177,5.579,1178,5.415,1179,5.579,1180,4.187,1181,4.187,1182,4.187,1183,4.187,1184,4.187,1185,4.187,1186,4.187,1187,4.187,1188,3.624,1189,5.579,1190,4.187,1191,4.187]],["title/interfaces/EventListenerArg.html",[476,0.868,1192,2.742]],["body/interfaces/EventListenerArg.html",[3,0.208,4,0.182,8,0.182,18,0.015,42,0.345,43,0.866,65,0.322,66,0.341,67,1.436,93,0.628,94,0.933,95,0.208,132,0.012,133,0.014,134,0.012,339,2.706,476,1.312,477,2.46,1171,4.532,1192,4.884,1193,5.049]],["title/classes/EventMeta.html",[96,0.166,1194,2.742]],["body/classes/EventMeta.html",[3,0.137,4,0.12,8,0.12,18,0.016,42,0.227,43,0.663,47,2.977,51,0.311,56,0.414,58,0.401,59,0.916,63,0.351,64,0.32,65,0.288,66,0.32,82,1.284,95,0.137,96,0.165,132,0.008,133,0.01,134,0.008,135,0.7,146,0.834,147,1.414,152,1.529,153,1.048,154,1.85,215,2.417,296,0.81,416,5.66,1194,4.264,1195,6.633,1196,3.319,1197,5.999,1198,5.999,1199,5.999,1200,6.455,1201,5.015,1202,3.459,1203,7.476,1204,7.476,1205,5.257,1206,5.257,1207,3.835,1208,3.835,1209,3.835,1210,3.835,1211,3.835,1212,3.835,1213,3.835,1214,3.835,1215,3.835,1216,3.835,1217,3.835,1218,3.835,1219,3.835,1220,3.835,1221,3.835,1222,3.835,1223,6.763,1224,6.763,1225,6.763,1226,3.835,1227,3.835,1228,3.835]],["title/classes/FilterRenderer.html",[96,0.166,737,2.096]],["body/classes/FilterRenderer.html",[3,0.121,4,0.106,8,0.106,15,1.499,18,0.016,22,2.74,42,0.201,43,0.608,44,3.862,45,4.082,46,2.119,51,0.286,53,1.178,56,0.423,58,0.432,59,1.098,60,1.131,63,0.305,64,0.278,65,0.297,66,0.278,67,1.279,88,1.086,93,0.659,94,0.542,95,0.121,96,0.146,108,0.898,112,1.83,129,2.704,132,0.007,133,0.01,134,0.007,135,0.619,146,0.781,147,1.251,153,0.981,154,1.278,161,2.411,188,3.175,192,2.635,193,2.935,194,0.732,197,3.749,198,2.935,205,2.935,207,2.635,211,2.635,214,2.935,217,1.68,219,0.828,251,2.935,259,2.232,263,2.411,265,2.635,267,2.635,268,3.43,269,2.232,296,0.406,300,1.654,440,2.935,441,2.935,710,4.026,711,3.325,715,2.622,737,2.622,744,2.781,747,3.449,749,1.654,750,1.744,770,2.935,771,2.635,772,2.935,857,3.449,858,3.992,862,3.757,864,4.349,865,4.349,866,4.349,867,2.963,868,4.349,869,3.175,870,3.992,872,4.026,897,3.175,925,3.43,929,2.411,930,4.349,933,3.43,935,2.232,936,2.635,1085,4.176,1229,6.763,1230,3.391,1231,3.391,1232,3.391,1233,3.391,1234,3.391,1235,3.391,1236,3.391,1237,3.391,1238,3.391,1239,3.391,1240,3.391,1241,2.935,1242,3.391]],["title/classes/FormatterParser.html",[96,0.166,1119,2.368]],["body/classes/FormatterParser.html",[3,0.183,4,0.16,8,0.16,18,0.016,42,0.304,43,0.802,51,0.377,53,1.552,56,0.393,58,0.428,59,0.784,60,1.49,63,0.376,64,0.342,65,0.291,66,0.342,67,1.414,95,0.183,96,0.221,132,0.01,133,0.013,134,0.01,135,0.936,137,1.738,146,1.052,153,0.896,268,3.647,296,0.762,1119,3.904,1120,4.52,1121,4.52,1125,4.52,1127,4.52,1134,3.647,1135,3.647,1243,6.426,1244,4.441,1245,3.986,1246,3.986,1247,4.441,1248,5.131,1249,5.131,1250,5.131,1251,5.131]],["title/injectables/GridEventService.html",[173,1.486,1252,2.223]],["body/injectables/GridEventService.html",[3,0.065,4,0.057,8,0.057,18,0.016,38,2.486,42,0.108,43,0.376,46,1.5,47,3.006,49,2.716,51,0.177,56,0.407,58,0.42,59,0.939,63,0.324,64,0.296,65,0.275,66,0.296,72,3.081,74,3.927,80,2.535,81,2.013,88,1.7,93,0.621,94,0.29,95,0.157,96,0.078,108,1.383,112,0.79,132,0.004,133,0.006,134,0.004,137,0.615,142,2.122,145,2.839,146,0.768,147,1.101,152,0.995,153,0.964,173,1.464,188,1.195,194,1.455,196,1.656,206,4.57,222,1.964,229,2.584,231,2.122,233,2.122,234,2.5,256,1.958,258,1.116,276,1.202,287,3.011,296,0.77,306,1.195,345,1.116,364,2.999,415,4.244,437,2.319,492,1.964,497,1.291,500,2.308,538,2.04,555,3.418,583,2.562,597,1.573,604,2.584,677,1.964,754,1.047,823,2.894,910,2.584,996,3.127,1174,2.894,1188,3.807,1194,5.193,1252,1.72,1253,1.291,1254,4.944,1255,1.412,1256,2.985,1257,2.985,1258,2.985,1259,2.985,1260,2.894,1261,2.584,1262,3.799,1263,3.799,1264,3.799,1265,3.799,1266,4.859,1267,3.807,1268,3.799,1269,3.799,1270,3.799,1271,3.799,1272,2.985,1273,2.985,1274,4.399,1275,4.399,1276,3.799,1277,3.799,1278,4.399,1279,4.399,1280,4.399,1281,3.799,1282,4.399,1283,4.399,1284,4.399,1285,3.799,1286,2.985,1287,2.985,1288,2.985,1289,2.985,1290,2.985,1291,2.985,1292,2.985,1293,2.985,1294,5.97,1295,4.859,1296,1.817,1297,2.584,1298,2.319,1299,2.985,1300,2.985,1301,2.985,1302,2.584,1303,2.985,1304,2.584,1305,2.584,1306,2.985,1307,2.985,1308,2.985,1309,2.985,1310,2.985,1311,5.764,1312,1.817,1313,2.584,1314,2.985,1315,1.817,1316,1.817,1317,1.817,1318,1.817,1319,1.817,1320,1.817,1321,1.817,1322,1.817,1323,1.817,1324,1.817,1325,1.817,1326,1.817,1327,2.985,1328,1.817,1329,2.985,1330,1.817,1331,2.985,1332,1.817,1333,2.985,1334,1.817,1335,2.985,1336,1.817,1337,1.817,1338,1.817,1339,1.817,1340,1.817,1341,1.817,1342,1.817,1343,1.817,1344,1.817,1345,1.817,1346,1.817,1347,1.817,1348,1.573,1349,1.817,1350,1.817,1351,1.291,1352,1.817,1353,3.799,1354,2.319,1355,1.817,1356,3.799,1357,5.224,1358,4.859,1359,1.817,1360,1.817,1361,2.985,1362,2.985,1363,1.817,1364,4.859,1365,1.817,1366,2.985,1367,1.817,1368,1.817,1369,2.985,1370,1.817,1371,1.817,1372,1.817,1373,1.817,1374,1.817,1375,4.399,1376,4.399,1377,1.817,1378,1.817,1379,1.817,1380,5.519,1381,1.817,1382,1.817,1383,1.817,1384,1.573,1385,4.399,1386,1.817,1387,1.817,1388,4.859,1389,1.817,1390,1.817,1391,1.817,1392,1.817]],["title/injectables/GridGlobalService.html",[962,2.538,1252,2.223]],["body/injectables/GridGlobalService.html",[3,0.114,4,0.1,8,0.1,15,2.039,18,0.016,38,1.702,42,0.189,43,0.582,46,2.151,47,1.284,51,0.273,56,0.391,58,0.39,59,0.964,63,0.358,64,0.326,65,0.285,66,0.326,67,1.033,82,1.9,88,1.038,93,0.64,94,0.509,95,0.114,96,0.137,108,1.929,132,0.006,133,0.009,134,0.006,137,1.079,145,1.732,146,1.013,147,1.175,153,1.102,168,3.28,194,0.996,233,4.227,249,3.28,256,2.395,287,2.66,296,0.553,337,1.555,407,2.628,498,3.911,515,3.776,610,3.994,747,3.651,749,1.555,750,1.639,771,4.62,857,3.651,962,3.036,1001,4.695,1012,3.569,1030,4.215,1038,2.758,1039,2.758,1165,3.036,1252,2.66,1253,2.265,1254,4.793,1348,2.758,1393,2.758,1394,4.614,1395,5.147,1396,3.585,1397,3.994,1398,3.994,1399,5.424,1400,5.424,1401,4.614,1402,5.946,1403,4.614,1404,4.614,1405,5.946,1406,4.614,1407,3.187,1408,3.187,1409,3.994,1410,4.614,1411,3.187,1412,3.187,1413,4.614,1414,3.187,1415,4.614,1416,3.187,1417,4.614,1418,3.187,1419,4.614,1420,3.187,1421,4.614,1422,3.187,1423,3.187,1424,5.147,1425,5.147,1426,3.187,1427,3.187,1428,3.187,1429,3.187,1430,4.614,1431,3.187,1432,3.187,1433,5.946,1434,3.187,1435,3.187,1436,3.187,1437,3.187,1438,3.187,1439,4.614,1440,3.187,1441,3.187,1442,4.614,1443,4.614,1444,3.187,1445,3.187,1446,3.187]],["title/injectables/GridMessageService.html",[1252,2.223,1447,2.538]],["body/injectables/GridMessageService.html",[3,0.167,4,0.146,8,0.146,18,0.016,42,0.277,43,0.756,47,3.096,51,0.355,56,0.402,58,0.355,59,0.916,63,0.326,64,0.297,65,0.291,66,0.297,82,1.804,88,1.349,93,0.646,94,0.748,95,0.167,96,0.202,132,0.009,133,0.012,134,0.009,146,0.921,153,1.157,194,1.295,206,5.133,258,2.872,296,0.56,306,3.946,954,4.66,1202,3.946,1252,3.457,1253,3.324,1254,4.944,1447,3.946,1448,4.048,1449,6.621,1450,6.621,1451,6.621,1452,5.997,1453,6.621,1454,5.997,1455,4.676,1456,6.045,1457,5.997,1458,4.676,1459,4.676,1460,4.676,1461,5.426,1462,5.997,1463,4.676,1464,4.676,1465,4.676,1466,4.676,1467,4.676,1468,4.676]],["title/modules/GridModule.html",[1469,2.742,1470,2.538]],["body/modules/GridModule.html",[1,3.262,2,3.098,3,0.119,4,0.104,8,0.104,18,0.016,46,1.597,51,0.197,56,0.259,58,0.282,63,0.259,64,0.236,65,0.192,66,0.236,93,0.834,94,0.533,95,0.119,96,0.144,100,1.713,107,3.262,111,3.098,114,3.108,117,3.098,119,3.098,120,2.859,122,2.505,124,3.108,126,3.43,128,3.108,129,2.458,132,0.007,133,0.009,134,0.007,160,3.702,173,2.143,208,1.614,235,2.925,260,2.368,262,1.545,296,0.571,500,1.472,843,2.192,862,2.046,961,4.321,962,3.135,1036,2.589,1037,2.884,1409,5.253,1447,3.659,1469,2.368,1470,5.273,1471,2.589,1472,2.192,1473,4.814,1474,2.589,1475,4.814,1476,2.884,1477,2.884,1478,2.884,1479,2.884,1480,4.395,1481,4.395,1482,4.395,1483,4.395,1484,4.124,1485,3.332,1486,4.764,1487,4.314,1488,3.332,1489,4.764,1490,3.332,1491,6.421,1492,3.332,1493,4.764,1494,3.332,1495,2.884,1496,2.884,1497,3.332,1498,2.589,1499,2.589,1500,2.884,1501,2.884,1502,2.884,1503,3.332,1504,3.332,1505,5.561,1506,6.069,1507,4.764,1508,3.332,1509,4.764,1510,3.332,1511,4.764,1512,3.332,1513,3.332,1514,6.069,1515,4.764,1516,3.332,1517,3.332,1518,3.332,1519,6.421,1520,3.332,1521,3.332,1522,3.332,1523,3.332,1524,3.332,1525,3.332,1526,4.764,1527,3.332,1528,3.332,1529,2.884,1530,4.814,1531,5.561]],["title/classes/GroupKeyListener.html",[96,0.166,1532,2.997]],["body/classes/GroupKeyListener.html",[3,0.144,4,0.126,8,0.126,11,2.005,18,0.016,42,0.239,43,0.685,46,1.767,51,0.322,53,1.608,56,0.406,58,0.39,59,0.94,60,1.442,61,2.731,63,0.358,64,0.327,65,0.3,66,0.327,67,1.035,69,1.423,82,0.983,93,0.71,94,0.644,95,0.144,96,0.174,108,1.822,122,1.999,132,0.008,133,0.011,134,0.008,135,0.735,145,3.344,146,0.756,152,1.31,153,0.95,154,1.629,167,1.965,173,2.371,194,0.87,196,1.157,208,1.841,215,1.623,217,1.841,219,1.327,256,2.19,296,0.651,300,1.965,318,3.148,319,1.766,321,2.795,323,2.795,324,2.189,325,2.189,326,2.189,327,2.189,330,2.189,331,2.071,332,2.189,333,2.071,334,2.071,335,1.965,336,1.965,337,1.965,338,2.071,339,1.868,340,1.868,341,2.189,342,2.189,348,3.577,349,2.473,351,2.189,537,3.546,538,2.521,539,3.577,541,2.65,551,5.326,555,3.129,556,3.486,560,3.486,561,2.473,562,5.326,1532,4.223,1533,5.702,1534,3.486,1535,4.028,1536,4.028,1537,4.028,1538,4.028,1539,4.028,1540,4.223,1541,4.028,1542,4.028,1543,4.028,1544,4.028,1545,3.129,1546,4.028]],["title/classes/HtmlUtil.html",[96,0.166,340,1.789]],["body/classes/HtmlUtil.html",[3,0.161,4,0.141,8,0.141,18,0.016,42,0.267,51,0.347,56,0.354,58,0.386,63,0.354,64,0.323,65,0.262,66,0.323,69,2.741,72,2.906,82,1.744,93,0.486,95,0.161,96,0.281,102,3.187,132,0.009,133,0.012,134,0.009,135,0.824,137,1.53,235,2.773,296,0.856,312,4.639,340,2.72,351,2.454,515,4.05,823,3.859,1487,5.428,1545,4.556,1547,5.966,1548,3.909,1549,5.864,1550,5.076,1551,5.076,1552,5.864,1553,5.864,1554,5.864,1555,5.864,1556,4.516,1557,5.864,1558,4.516,1559,5.864,1560,4.516,1561,6.512,1562,4.516,1563,6.893,1564,4.516]],["title/interfaces/InjectableConstructor.html",[476,0.868,1565,2.742]],["body/interfaces/InjectableConstructor.html",[3,0.202,4,0.176,8,0.176,18,0.016,47,2.275,65,0.271,93,0.608,94,0.903,95,0.241,96,0.243,132,0.011,133,0.013,134,0.011,164,3.715,194,1.219,296,0.676,318,2.381,476,1.27,477,2.381,754,3.254,1162,4.013,1163,4.791,1165,3.715,1166,4.387,1167,4.387,1178,5.925,1565,5.121,1566,4.387,1567,4.887,1568,4.887,1569,4.887,1570,4.013,1571,4.887,1572,4.887,1573,4.887]],["title/classes/InjectableFactory.html",[96,0.166,1570,2.742]],["body/classes/InjectableFactory.html",[3,0.186,4,0.163,8,0.163,18,0.016,42,0.309,47,2.1,51,0.38,56,0.349,58,0.309,63,0.283,64,0.258,65,0.3,66,0.258,93,0.561,94,0.833,95,0.229,96,0.225,132,0.01,133,0.013,134,0.01,135,0.951,137,1.765,147,1.922,164,4.225,194,1.125,296,0.624,318,2.707,476,1.173,754,3.004,1162,5.162,1163,4.946,1165,4.225,1166,4.988,1167,4.988,1178,6.124,1565,5.162,1566,4.049,1567,5.557,1568,5.557,1569,5.557,1570,4.564,1571,5.557,1572,4.511,1573,4.511,1574,5.212,1575,5.212,1576,5.212]],["title/pipes/IsFixedPipe.html",[1480,2.538,1577,1.983]],["body/pipes/IsFixedPipe.html",[3,0.191,4,0.167,8,0.167,13,2.369,18,0.016,51,0.317,56,0.291,58,0.317,63,0.291,64,0.349,65,0.216,66,0.266,93,0.703,94,0.857,95,0.191,96,0.231,112,1.729,132,0.011,133,0.013,134,0.011,152,1.341,154,1.419,196,1.539,262,2.486,296,0.783,319,1.741,447,4.825,1480,4.298,1577,3.358,1578,3.527,1579,4.298,1580,4.639,1581,6.531,1582,3.81,1583,4.643,1584,5.473,1585,5.36,1586,4.326,1587,4.643,1588,4.639,1589,3.81,1590,5.36]],["title/pipes/IsGroupPipe.html",[1481,2.538,1577,1.983]],["body/pipes/IsGroupPipe.html",[3,0.196,4,0.172,8,0.172,13,2.428,18,0.016,51,0.325,56,0.299,58,0.325,63,0.299,64,0.353,66,0.272,93,0.714,94,0.878,95,0.196,96,0.237,112,1.755,132,0.011,133,0.013,134,0.011,196,1.578,262,2.548,296,0.794,319,1.785,1481,4.362,1577,3.409,1578,3.615,1579,4.362,1582,3.905,1583,4.713,1586,4.372,1587,4.713,1589,3.905,1591,4.755,1592,6.63,1593,5.493,1594,5.493,1595,5.493]],["title/pipes/IsRowVisiblePipe.html",[1482,2.538,1577,1.983]],["body/pipes/IsRowVisiblePipe.html",[3,0.196,4,0.172,8,0.172,13,2.428,18,0.016,51,0.325,56,0.299,58,0.325,63,0.299,64,0.353,66,0.272,93,0.714,94,0.878,95,0.196,96,0.237,132,0.011,133,0.013,134,0.011,196,1.578,296,0.794,319,1.785,497,3.905,500,3.268,1482,4.362,1577,3.409,1578,3.615,1579,4.362,1582,3.905,1583,4.713,1586,4.372,1587,4.713,1589,3.905,1596,4.268,1597,6.63,1598,4.755,1599,4.755]],["title/pipes/IsVisiblePipe.html",[1483,2.538,1577,1.983]],["body/pipes/IsVisiblePipe.html",[3,0.197,4,0.172,8,0.172,13,2.438,18,0.016,51,0.327,56,0.3,58,0.327,63,0.3,64,0.354,66,0.273,93,0.716,94,0.882,95,0.197,96,0.238,112,1.76,132,0.011,133,0.013,134,0.011,196,1.584,262,2.559,296,0.796,319,1.792,1483,4.373,1577,3.417,1578,3.63,1579,4.373,1582,3.921,1583,4.724,1586,4.38,1587,4.724,1589,3.921,1596,4.286,1598,4.775,1599,4.775,1600,6.646]],["title/interfaces/MouseDownListener.html",[476,0.868,612,2.538]],["body/interfaces/MouseDownListener.html",[3,0.209,4,0.183,8,0.183,18,0.015,42,0.346,51,0.407,56,0.318,58,0.346,63,0.318,64,0.29,65,0.235,66,0.29,95,0.209,132,0.012,133,0.014,134,0.012,152,1.31,217,2.187,219,1.427,476,1.315,477,2.465,612,4.527,621,5.346,631,5.346,1601,4.225,1602,5.06,1603,5.846]],["title/interfaces/MouseDragListener.html",[476,0.868,613,2.538]],["body/interfaces/MouseDragListener.html",[3,0.209,4,0.183,8,0.183,18,0.015,42,0.346,51,0.407,56,0.318,58,0.346,63,0.318,64,0.29,65,0.235,66,0.29,95,0.209,132,0.012,133,0.014,134,0.012,152,1.31,217,2.187,219,1.427,476,1.315,477,2.465,613,4.527,622,5.346,633,5.346,1601,4.225,1604,5.06,1605,5.846]],["title/interfaces/MouseOutListener.html",[476,0.868,615,2.742]],["body/interfaces/MouseOutListener.html",[3,0.209,4,0.183,8,0.183,18,0.015,42,0.346,51,0.407,56,0.318,58,0.346,63,0.318,64,0.29,65,0.235,66,0.29,95,0.209,132,0.012,133,0.014,134,0.012,152,1.31,217,2.187,219,1.427,476,1.315,477,2.465,615,4.891,623,5.955,635,5.955,1601,4.225,1606,5.06,1607,5.846]],["title/interfaces/MouseOverListener.html",[320,2.742,476,0.868]],["body/interfaces/MouseOverListener.html",[3,0.209,4,0.183,8,0.183,18,0.015,42,0.346,51,0.407,56,0.318,58,0.346,63,0.318,64,0.29,65,0.235,66,0.29,95,0.209,132,0.012,133,0.014,134,0.012,152,1.31,217,2.187,219,1.427,320,4.891,322,5.955,328,5.955,476,1.315,477,2.465,1601,4.225,1608,5.06,1609,5.846]],["title/interfaces/MouseUpListener.html",[476,0.868,614,2.538]],["body/interfaces/MouseUpListener.html",[3,0.209,4,0.183,8,0.183,18,0.015,42,0.346,51,0.407,56,0.318,58,0.346,63,0.318,64,0.29,65,0.235,66,0.29,95,0.209,132,0.012,133,0.014,134,0.012,152,1.31,217,2.187,219,1.427,476,1.315,477,2.465,614,4.527,624,5.346,637,5.346,1601,4.225,1610,5.06,1611,5.846]],["title/classes/NumberFormatter.html",[96,0.166,1612,2.997]],["body/classes/NumberFormatter.html",[3,0.161,4,0.141,8,0.141,11,2.158,18,0.016,42,0.267,43,0.738,51,0.347,53,1.681,56,0.405,58,0.447,59,0.894,60,1.524,61,2.652,63,0.398,64,0.363,65,0.3,66,0.363,67,1.311,93,0.485,95,0.161,96,0.194,132,0.009,133,0.012,134,0.009,135,0.821,137,1.525,146,1.085,153,0.786,171,3.593,196,1.867,296,0.825,861,5.064,875,5.064,881,5.064,1119,4.573,1120,4.159,1121,4.159,1124,3.497,1125,3.2,1127,3.2,1130,3.497,1131,3.497,1132,3.497,1134,4.621,1135,4.621,1245,4.546,1246,4.546,1247,5.064,1612,4.546,1613,3.896,1614,4.501,1615,4.501,1616,4.501]],["title/classes/Point.html",[72,1.626,96,0.166]],["body/classes/Point.html",[3,0.118,4,0.103,8,0.103,18,0.016,38,2.358,42,0.195,43,0.596,47,2.68,49,3.241,51,0.28,56,0.419,58,0.443,59,0.722,63,0.399,64,0.363,65,0.301,66,0.363,72,3.247,82,1.474,88,1.746,95,0.118,96,0.142,132,0.006,133,0.009,134,0.006,135,0.601,147,1.215,152,1.434,154,1.251,194,1.02,196,0.946,235,2.023,283,2.168,296,0.879,303,2.342,311,2.342,312,2.023,351,1.79,515,1.79,1201,4.294,1202,3.11,1487,3.928,1617,2.851,1618,5.526,1619,5.526,1620,4.09,1621,4.726,1622,4.726,1623,4.726,1624,4.726,1625,4.726,1626,5.526,1627,6.038,1628,4.726,1629,4.726,1630,4.09,1631,4.726,1632,3.294,1633,3.294,1634,3.294,1635,4.726,1636,3.294,1637,4.726,1638,3.294,1639,4.726,1640,3.294,1641,4.726,1642,3.294,1643,4.726,1644,3.294,1645,4.726,1646,3.294,1647,4.726,1648,3.294,1649,3.294,1650,4.726,1651,3.294,1652,3.294,1653,3.294,1654,3.294,1655,3.294,1656,3.294,1657,3.294,1658,3.294,1659,3.294,1660,3.294,1661,3.294,1662,3.294,1663,3.294,1664,3.294,1665,3.294,1666,4.09,1667,3.294,1668,3.294,1669,3.294,1670,3.294,1671,6.853,1672,6.853,1673,5.526,1674,5.526,1675,3.294,1676,3.294]],["title/classes/Range.html",[96,0.166,364,2.096]],["body/classes/Range.html",[3,0.143,4,0.125,8,0.125,18,0.016,42,0.236,43,0.681,47,2.848,51,0.32,56,0.413,58,0.419,59,1.003,63,0.384,64,0.35,65,0.285,66,0.35,72,3.392,82,1.319,93,0.43,95,0.143,96,0.172,132,0.008,133,0.011,134,0.008,135,0.728,147,1.472,152,1.029,194,1.322,215,2.176,222,3.555,296,0.786,364,2.936,965,6.364,967,5.79,1201,5.099,1202,3.555,1677,3.454,1678,6.124,1679,6.124,1680,4.676,1681,5.402,1682,5.402,1683,5.402,1684,3.991,1685,5.402,1686,3.991,1687,5.402,1688,3.991,1689,3.991,1690,5.402,1691,3.991,1692,3.991,1693,3.991,1694,3.991,1695,3.991,1696,3.991,1697,3.991,1698,3.991,1699,3.991,1700,6.857,1701,6.857,1702,3.991,1703,3.991,1704,3.991,1705,3.991,1706,5.402,1707,6.563,1708,5.402,1709,5.402,1710,5.402,1711,3.991,1712,3.991]],["title/classes/RangeSelectListener.html",[96,0.166,1713,2.997]],["body/classes/RangeSelectListener.html",[3,0.123,4,0.107,8,0.107,11,1.796,18,0.016,42,0.203,43,0.614,46,1.625,51,0.288,53,1.189,56,0.402,58,0.385,59,0.744,60,0.805,61,2.6,63,0.353,64,0.322,65,0.298,66,0.322,67,0.654,80,3.547,82,1.189,93,0.727,94,0.549,95,0.123,96,0.148,108,1.63,122,1.838,125,1.962,132,0.007,133,0.01,134,0.007,135,0.627,137,1.164,146,0.787,152,1.373,153,0.988,154,1.72,167,1.676,173,2.179,194,0.742,208,2.201,215,1.384,217,2.157,219,1.502,256,2.479,296,0.778,300,2.759,301,4.395,318,3.04,319,1.582,321,2.504,323,2.504,324,1.867,325,1.867,326,1.867,327,1.867,330,1.867,331,1.766,332,1.867,333,1.766,334,1.766,335,1.676,336,1.676,337,1.676,338,1.766,339,1.594,340,1.594,341,1.867,342,1.867,343,5.746,347,4.781,364,3.344,418,3.461,538,2.259,550,2.669,609,4.781,612,3.722,613,3.722,614,3.722,617,5.623,619,4.896,621,3.784,622,3.784,624,3.784,631,3.784,633,3.784,637,3.784,639,2.974,640,2.974,641,2.974,649,4.896,653,4.896,1174,3.204,1260,4.44,1305,5.326,1713,3.784,1714,5.84,1715,4.87,1716,4.87,1717,4.215,1718,4.87,1719,4.87,1720,4.215,1721,3.436,1722,3.436,1723,3.436,1724,3.436,1725,3.436,1726,3.436,1727,2.974,1728,3.436,1729,3.436,1730,3.436,1731,3.436,1732,3.436,1733,3.436]],["title/classes/Row.html",[96,0.166,500,1.704]],["body/classes/Row.html",[3,0.117,4,0.102,8,0.102,18,0.016,38,2.221,42,0.194,43,0.593,47,3.051,51,0.279,56,0.429,58,0.442,59,1.014,63,0.393,64,0.359,65,0.31,66,0.359,80,3.174,81,2.697,82,1.709,88,1.723,93,0.353,95,0.117,96,0.141,104,2.557,132,0.006,133,0.009,134,0.006,135,0.597,140,2.832,145,2.993,146,0.837,149,2.889,152,1.378,153,1.052,154,1.689,196,0.94,208,2.039,296,0.764,410,4.279,500,2.934,583,1.813,776,4.767,994,2.544,996,3.915,1202,3.096,1260,3.624,1540,4.279,1620,4.072,1734,2.834,1735,5.507,1736,5.507,1737,5.507,1738,5.507,1739,5.507,1740,3.656,1741,4.705,1742,5.507,1743,4.705,1744,6.021,1745,4.767,1746,3.274,1747,3.274,1748,3.274,1749,3.274,1750,3.274,1751,3.274,1752,3.274,1753,3.274,1754,3.274,1755,3.274,1756,4.705,1757,3.274,1758,4.705,1759,4.705,1760,5.507,1761,3.274,1762,3.274,1763,3.274,1764,3.274,1765,3.274,1766,3.274,1767,3.274,1768,3.274,1769,3.274,1770,3.274,1771,3.274,1772,3.274,1773,3.274,1774,3.274,1775,3.274,1776,3.274,1777,3.274,1778,3.274,1779,3.274,1780,3.274,1781,3.274,1782,3.274,1783,3.274,1784,3.274,1785,3.274,1786,3.274,1787,3.274,1788,3.274,1789,3.274,1790,3.274,1791,3.274,1792,3.274,1793,3.274,1794,3.274,1795,3.274]],["title/classes/RowChange.html",[96,0.166,1351,2.742]],["body/classes/RowChange.html",[3,0.196,4,0.172,8,0.172,18,0.016,42,0.325,43,0.836,56,0.387,63,0.299,64,0.272,65,0.287,66,0.272,88,1.787,95,0.196,96,0.237,132,0.011,133,0.013,134,0.011,135,1.002,147,2.026,1351,4.713,1384,6.551,1796,6.4,1797,4.755,1798,7.779,1799,6.63,1800,6.63,1801,5.493,1802,5.493,1803,5.493]],["title/classes/RowDblClickListener.html",[96,0.166,1804,2.997]],["body/classes/RowDblClickListener.html",[3,0.159,4,0.139,8,0.139,11,2.146,18,0.016,42,0.264,43,0.734,46,1.86,51,0.345,53,1.421,56,0.404,58,0.383,59,0.889,60,1.046,61,2.812,63,0.352,64,0.321,65,0.299,66,0.321,67,0.85,82,1.09,93,0.739,94,0.714,95,0.159,96,0.192,108,1.817,122,2.103,132,0.009,133,0.011,134,0.009,135,0.814,146,0.621,152,1.233,153,0.78,154,1.182,167,2.177,173,2.495,194,0.964,208,1.971,215,1.798,217,1.937,219,1.421,256,2.344,296,0.697,300,2.177,318,3.213,319,1.89,321,2.992,323,2.992,324,2.425,325,2.425,326,2.425,327,2.425,330,2.425,331,2.295,332,2.425,333,2.295,334,2.295,335,2.177,336,2.177,337,2.177,338,2.295,339,2.07,340,2.07,341,2.425,342,2.425,500,1.972,515,3.519,541,2.937,583,1.72,1152,4.602,1155,5.037,1156,5.037,1727,3.863,1804,4.521,1805,5.037,1806,5.604,1807,3.863,1808,4.463,1809,4.463,1810,4.463,1811,4.463]],["title/classes/RowGroup.html",[96,0.166,479,2.538]],["body/classes/RowGroup.html",[3,0.159,4,0.139,8,0.139,15,1.969,18,0.016,38,1.643,42,0.264,43,0.733,51,0.344,56,0.414,58,0.344,59,1.047,63,0.316,64,0.288,65,0.307,66,0.288,82,1.736,88,1.6,93,0.48,95,0.159,96,0.192,108,1.18,132,0.009,133,0.011,134,0.009,135,0.813,140,3.326,146,0.9,147,1.643,152,1.306,153,1.13,154,1.816,194,1.255,479,3.825,583,1.717,749,2.173,750,2.291,1540,5.526,1812,6.652,1813,3.856,1814,7.429,1815,6.469,1816,6.156,1817,6.469,1818,6.857,1819,5.813,1820,5.813,1821,5.813,1822,4.456,1823,4.456,1824,4.456,1825,4.456,1826,4.456,1827,7.533,1828,4.456,1829,4.456,1830,5.813,1831,4.456,1832,4.456,1833,5.813,1834,4.456]],["title/classes/RowGroupView.html",[96,0.166,1835,2.997]],["body/classes/RowGroupView.html",[3,0.137,4,0.12,8,0.12,18,0.016,22,1.873,42,0.227,43,0.663,49,2.653,50,1.48,51,0.312,53,1.285,56,0.368,58,0.383,59,0.804,60,1.233,63,0.351,64,0.32,65,0.272,66,0.32,67,0.731,69,1.86,81,1.48,88,1.572,91,2.854,93,0.696,94,0.614,95,0.137,96,0.166,112,2.07,127,1.697,132,0.008,133,0.01,134,0.008,135,0.701,146,0.898,163,1.781,235,2.358,262,1.781,269,2.527,275,3.151,276,2.12,296,0.631,319,1.71,365,2.358,366,3.087,372,3.231,373,3.033,374,2.73,379,2.73,381,3.033,384,3.231,386,2.527,397,4.555,398,3.324,400,3.463,403,4.555,407,2.854,409,3.687,411,5.59,413,3.741,414,4.268,416,4.089,418,2.73,457,4.555,458,4.555,461,3.741,462,4.591,463,2.087,465,3.463,466,2.527,467,2.73,468,2.984,474,2.73,475,3.324,479,4.795,497,2.73,498,4.124,508,2.984,516,2.706,520,3.741,583,2.313,589,3.324,701,3.324,831,2.73,832,2.73,833,2.73,979,5.196,1835,4.089,1836,6.048,1837,3.84,1838,3.84,1839,5.262,1840,5.262,1841,6.004,1842,6.988,1843,3.84,1844,6.004,1845,3.84,1846,3.84,1847,3.84,1848,3.84,1849,5.262,1850,5.262,1851,3.84,1852,3.84,1853,3.84]],["title/components/SelectFilterRenderer.html",[0,1.363,124,1.704]],["body/components/SelectFilterRenderer.html",[0,1.398,1,0.894,2,1.453,3,0.069,4,0.06,5,2.28,6,1.111,7,1.111,8,0.06,11,1.155,13,0.852,14,3.769,15,2.939,16,1.111,18,0.016,22,2.445,24,2.603,25,3.074,26,3.074,27,3.074,29,3.074,32,3.514,33,4.015,36,2.812,38,2.412,40,1.702,42,0.114,43,0.395,44,2.034,45,2.15,46,1.136,50,0.742,51,0.185,53,0.765,56,0.406,58,0.41,59,1.044,60,0.452,61,2.739,63,0.215,64,0.248,65,0.272,66,0.196,67,0.868,88,0.89,93,0.426,94,0.308,95,0.069,96,0.083,100,0.991,101,1.702,102,1.702,103,1.111,104,2.476,105,1.111,106,1.111,107,0.894,108,1.659,109,3.222,110,1.805,111,0.894,112,1.422,113,1.111,114,0.852,115,1.111,116,1.805,117,0.894,118,1.111,119,0.894,120,0.991,121,1.111,122,0.626,123,1.111,124,2.014,125,2.164,126,0.94,127,1.384,128,0.852,129,3.187,130,1.111,131,1.111,132,0.004,133,0.006,134,0.004,137,1.061,140,1.61,146,0.82,152,0.868,153,0.938,154,1.562,169,2.034,178,3.424,196,0.553,208,1.698,217,0.937,219,0.47,275,2.62,276,2.164,281,2.603,284,4.012,287,1.111,312,1.183,407,1.748,409,4.33,463,2.15,465,2.603,469,1.37,492,1.268,498,3.095,503,3.424,515,2.15,516,2.034,583,2.634,710,2.603,711,2.15,715,1.702,737,3.944,744,2.28,747,1.923,749,0.94,750,0.991,764,2.429,817,1.37,818,2.711,819,2.711,820,2.711,821,2.711,822,2.711,823,2.061,824,2.711,825,2.226,829,3.424,831,3.818,832,3.818,833,3.818,834,4.648,835,3.424,836,3.424,842,5.277,843,2.603,844,5.277,845,4.648,846,3.424,847,3.424,848,3.424,849,3.424,850,3.424,851,3.424,853,3.074,857,2.798,858,2.226,862,3.475,863,2.433,864,4.023,865,2.812,866,2.812,867,1.923,868,2.812,869,2.061,870,2.226,871,1.497,872,1.268,873,1.497,890,1.497,891,1.497,892,1.497,893,1.497,894,1.497,895,1.497,896,1.497,897,1.268,898,1.497,899,1.497,900,1.497,917,2.711,919,1.497,920,1.497,921,1.497,922,1.497,923,1.497,924,1.497,925,1.37,926,1.497,927,1.668,929,2.226,930,3.239,931,2.433,932,4.338,933,2.226,934,2.433,935,3.534,939,1.497,941,1.497,956,1.497,967,3.074,981,3.424,1143,2.603,1298,2.433,1545,1.497,1586,2.429,1854,5.424,1855,3.956,1856,3.956,1857,3.956,1858,6.097,1859,3.956,1860,3.956,1861,3.956,1862,3.956,1863,4.556,1864,4.556,1865,1.927,1866,1.927,1867,1.927,1868,1.927,1869,3.132,1870,1.927,1871,3.132,1872,2.711,1873,1.927,1874,3.132,1875,1.668,1876,1.927,1877,1.927,1878,4.556,1879,5.012,1880,1.668,1881,3.132,1882,1.927]],["title/components/TextFilterRenderer.html",[0,1.363,128,1.704]],["body/components/TextFilterRenderer.html",[0,1.72,1,1.23,2,1.868,3,0.095,4,0.083,6,1.529,7,1.529,8,0.083,11,1.485,13,1.172,14,4.085,15,3.169,16,1.529,18,0.016,22,2.851,38,1.485,40,2.188,42,0.157,43,0.508,44,2.503,45,3.343,46,1.398,50,1.022,51,0.238,53,1.327,56,0.423,58,0.439,59,1.125,60,1.141,61,2.893,63,0.318,64,0.317,65,0.297,66,0.29,67,1.113,82,1.188,88,1.095,93,0.524,94,0.424,95,0.095,96,0.114,100,1.364,101,2.188,102,2.188,103,1.529,104,2.954,105,1.529,106,1.529,107,1.23,108,1.821,109,1.364,110,2.321,111,1.23,112,1.439,113,1.529,114,1.172,115,1.529,116,2.321,117,1.23,118,1.529,119,1.23,120,1.364,121,1.529,122,0.862,123,1.529,124,1.172,125,1.069,126,1.294,127,2.402,128,2.402,129,3.365,130,1.529,131,1.529,132,0.005,133,0.008,134,0.005,146,0.938,153,0.95,154,1.439,194,0.573,196,1.157,208,1.649,217,1.748,219,0.983,288,4.223,300,1.294,469,2.862,561,1.629,710,4.207,711,2.645,715,2.188,737,4.138,744,2.806,747,2.473,749,1.294,750,1.364,817,1.885,857,2.473,858,2.862,862,3.926,863,3.129,864,4.545,865,3.46,866,3.46,867,2.473,868,3.46,869,2.65,870,2.862,871,2.061,872,1.745,873,2.061,887,3.485,890,2.061,891,2.061,892,2.061,893,2.061,894,2.061,895,2.061,896,2.061,897,1.745,898,2.061,899,2.061,900,2.061,919,2.061,920,2.061,921,2.061,922,2.061,923,2.061,924,2.061,925,1.885,926,2.061,928,2.296,929,2.862,930,4.154,931,3.129,933,2.862,934,3.129,935,2.65,936,3.782,939,2.061,940,2.296,941,3.129,948,2.296,952,2.296,956,2.061,1241,2.296,1487,2.862,1875,2.296,1880,2.296,1883,6.051,1884,4.027,1885,2.652,1886,4.027,1887,2.652,1888,2.652,1889,2.652,1890,2.652,1891,2.652,1892,2.652,1893,2.652,1894,2.652,1895,2.652,1896,4.027,1897,2.652,1898,2.652,1899,2.652,1900,2.652,1901,2.652,1902,4.027]],["title/changelog.html",[1903,2.497,1904,2.497,1905,3.214]],["body/changelog.html",[17,2.525,18,0.011,22,2.137,108,1.699,109,2.956,112,1.922,129,3.126,132,0.009,133,0.011,134,0.009,140,3.503,142,3.115,146,0.609,153,1.004,163,2.667,164,2.883,165,3.793,194,0.946,196,1.651,225,3.404,226,3.793,233,3.115,234,2.883,249,4.561,258,2.691,276,1.765,281,2.883,407,1.936,463,2.381,491,3.793,500,2.541,516,2.253,609,3.404,611,3.793,661,3.793,662,3.793,677,4.222,681,3.115,693,3.404,695,4.087,749,2.137,750,2.956,825,3.115,867,2.691,883,6.633,997,4.467,1115,4.087,1138,3.404,1165,2.883,1174,2.883,1260,2.883,1297,3.793,1395,3.793,1396,3.404,1398,3.793,1461,3.404,1474,3.404,1584,3.404,1630,3.793,1740,4.986,1872,3.793,1906,4.382,1907,4.382,1908,3.793,1909,4.382,1910,4.382,1911,5.749,1912,3.793,1913,4.976,1914,5.749,1915,4.382,1916,4.382,1917,4.382,1918,4.382,1919,4.382,1920,4.382,1921,4.382,1922,4.382,1923,4.382,1924,4.382,1925,4.382,1926,4.382,1927,4.382,1928,4.382,1929,4.382,1930,4.382,1931,4.382,1932,4.382,1933,5.749,1934,4.976,1935,4.382,1936,4.382,1937,4.382,1938,4.382,1939,4.382,1940,5.749,1941,4.382,1942,4.382,1943,4.382,1944,4.382,1945,4.382,1946,3.793,1947,4.382,1948,3.793,1949,4.382,1950,4.382,1951,4.382,1952,4.382,1953,4.382,1954,4.976,1955,4.976,1956,4.382,1957,4.382,1958,4.382,1959,4.382,1960,4.382,1961,4.382,1962,4.382,1963,4.382,1964,4.382,1965,4.382,1966,4.382,1967,4.382,1968,3.793,1969,4.382,1970,4.382,1971,4.382,1972,4.382,1973,4.382,1974,4.382,1975,3.404,1976,5.749,1977,4.382,1978,4.382,1979,3.793,1980,3.793,1981,4.382,1982,4.382,1983,4.382,1984,4.382,1985,4.382,1986,4.382,1987,3.793]],["title/coverage.html",[1988,4.568]],["body/coverage.html",[0,2.489,1,1.353,8,0.091,9,2.524,10,2.524,12,2.073,17,1.681,18,0.016,38,2.939,46,0.837,65,0.117,72,1.23,81,1.666,88,0.656,96,0.34,107,1.353,111,1.353,112,0.772,114,1.289,117,1.353,119,1.353,120,1.499,122,0.947,124,1.289,125,1.175,126,1.422,127,1.289,128,1.289,129,2.277,132,0.006,133,0.009,134,0.006,136,2.524,158,2.266,159,2.524,160,4.004,161,3.663,163,1.353,173,1.124,194,0.63,314,2.266,315,2.524,316,2.266,317,2.524,318,1.23,320,2.073,339,1.353,340,1.353,362,2.073,363,3.663,364,2.35,365,3.737,366,1.499,415,2.073,419,2.524,452,2.266,456,2.266,476,1.627,478,2.524,479,1.919,493,2.073,498,1.681,499,2.524,500,2.519,534,2.266,535,3.359,536,2.524,537,1.681,538,1.353,547,2.524,549,2.266,550,3.359,563,2.266,564,2.524,593,2.266,594,2.524,595,2.524,606,2.266,607,2.524,608,2.524,612,1.919,613,1.919,614,1.919,615,2.073,681,3.073,687,2.524,688,2.524,737,1.585,764,1.791,816,2.524,817,4.326,957,3.359,958,2.524,962,1.919,1012,1.919,1057,2.524,1096,2.524,1107,2.266,1108,3.359,1109,2.524,1119,1.791,1143,3.391,1144,2.266,1145,2.524,1152,2.073,1153,2.524,1154,2.524,1158,2.524,1159,2.073,1160,3.359,1161,2.073,1171,3.359,1172,2.524,1192,2.073,1193,2.524,1194,2.073,1195,2.524,1196,2.524,1229,2.524,1243,2.524,1244,2.524,1252,3.285,1254,4.195,1255,4.428,1351,2.073,1354,2.266,1393,2.524,1447,1.919,1448,2.524,1480,1.919,1481,1.919,1482,1.919,1483,1.919,1532,2.266,1533,2.524,1534,2.524,1547,2.524,1548,2.524,1565,2.073,1566,3.359,1570,2.073,1577,2.93,1579,3.75,1580,2.524,1591,2.524,1596,3.359,1601,3.737,1602,2.524,1604,2.524,1606,2.524,1608,2.524,1610,2.524,1612,2.266,1613,2.524,1617,2.524,1666,2.524,1677,2.524,1713,2.266,1714,2.524,1734,2.524,1796,2.524,1797,2.524,1804,2.266,1805,2.524,1806,2.524,1807,2.524,1812,2.524,1813,2.524,1835,2.266,1836,2.524,1854,2.524,1883,2.524,1988,2.524,1989,2.524,1990,2.916,1991,2.916,1992,5.153,1993,4.324,1994,5.153,1995,2.916,1996,2.916,1997,2.916,1998,2.916,1999,5.153,2000,2.916,2001,2.916,2002,2.916,2003,2.916,2004,4.324,2005,5.699,2006,2.916,2007,4.324,2008,2.916,2009,2.916,2010,2.524,2011,2.916,2012,2.916,2013,2.916,2014,2.916,2015,2.916,2016,2.916,2017,5.268,2018,6.086,2019,2.916,2020,4.324,2021,6.599,2022,4.324,2023,3.742,2024,2.916,2025,4.324,2026,2.916,2027,2.916,2028,2.916,2029,4.933,2030,2.916,2031,6.375,2032,2.524,2033,7.233,2034,2.524,2035,2.266,2036,2.916,2037,2.916,2038,2.916,2039,2.916,2040,2.916,2041,2.916,2042,4.324,2043,4.324,2044,2.916,2045,2.916,2046,2.916,2047,2.916,2048,2.916]],["title/dependencies.html",[1472,3.055,2049,3.214]],["body/dependencies.html",[15,2.735,18,0.015,108,1.639,132,0.012,133,0.014,134,0.012,749,3.019,750,3.182,1133,4.808,1472,4.072,2050,6.188,2051,6.188]],["title/index.html",[42,0.19,1903,2.497,1904,2.497]],["body/index.html",[0,1.388,2,0.885,4,0.06,11,0.704,15,1.736,18,0.015,40,1.037,49,1.736,50,0.735,51,0.113,58,0.184,59,0.6,60,0.447,64,0.265,65,0.315,67,0.748,72,1.31,74,1.037,81,1.197,82,1.592,88,1.438,91,0.843,93,0.205,96,0.169,101,2.135,107,0.885,108,1.893,112,1.556,114,0.843,124,0.843,125,1.251,128,0.843,129,1.736,132,0.004,133,0.006,134,0.004,140,3.676,142,3.544,144,1.651,145,2.905,146,0.63,149,1.907,152,1.119,153,1.324,154,1.415,162,1.356,163,0.885,164,1.255,168,2.208,171,1.907,176,3.401,194,1.076,196,1.982,208,2.058,215,0.768,219,1.758,225,3.053,231,3.219,234,2.585,249,3.544,250,3.053,276,1.251,284,1.255,289,2.413,292,2.688,296,0.229,319,0.62,335,1.515,336,0.93,339,2.101,362,1.356,364,1.688,366,0.981,367,1.651,369,1.651,371,1.651,381,1.099,407,1.736,418,1.356,420,1.482,421,2.688,424,2.688,425,3.401,426,2.688,428,3.401,432,3.92,436,1.651,437,2.413,439,2.688,447,2.585,452,1.482,467,1.356,476,0.429,482,2.688,484,1.651,486,1.651,487,2.688,489,4.315,492,2.98,498,2.265,500,2.76,515,2.135,516,0.981,538,1.441,566,1.651,583,1.197,602,4.315,647,2.208,663,3.219,677,2.585,690,3.053,693,4.379,694,4.627,695,2.208,711,1.037,715,1.037,737,2.461,745,2.688,749,2.209,764,1.171,853,1.482,857,2.781,954,3.519,993,4.315,994,1.482,995,2.688,996,2.793,997,4.967,1000,1.651,1014,1.482,1030,4.565,1110,1.651,1115,2.208,1122,1.482,1143,2.044,1174,2.044,1192,1.356,1245,1.482,1260,2.044,1261,2.688,1267,2.688,1298,1.482,1302,1.651,1304,1.651,1313,1.651,1396,2.413,1397,1.651,1424,2.688,1425,2.688,1456,1.651,1461,1.482,1469,1.356,1470,1.255,1472,1.255,1498,1.482,1499,1.482,1529,1.651,1530,3.401,1550,1.651,1551,1.651,1584,4.153,1586,2.413,1588,2.688,1680,1.651,1717,3.401,1720,1.651,1740,1.482,1745,1.651,1816,4.627,1908,1.651,1912,1.651,1913,5.085,1934,3.92,1946,1.651,1948,2.688,1954,1.651,1955,4.315,1975,1.482,1979,3.401,1980,1.651,1987,3.401,2023,1.651,2035,1.482,2052,1.907,2053,1.907,2054,5.635,2055,1.907,2056,1.907,2057,3.106,2058,1.907,2059,1.907,2060,1.907,2061,1.907,2062,1.907,2063,3.106,2064,1.907,2065,1.907,2066,1.907,2067,3.106,2068,3.106,2069,1.907,2070,1.907,2071,3.106,2072,1.907,2073,1.907,2074,1.907,2075,1.651,2076,3.106,2077,6.246,2078,3.106,2079,3.929,2080,1.907,2081,3.92,2082,1.907,2083,1.907,2084,3.106,2085,1.907,2086,1.907,2087,1.907,2088,1.907,2089,1.907,2090,1.907,2091,1.907,2092,3.106,2093,3.106,2094,5.345,2095,1.907,2096,3.106,2097,1.907,2098,3.106,2099,1.907,2100,1.907,2101,1.907,2102,3.106,2103,1.907,2104,1.651,2105,1.907,2106,1.907,2107,1.907,2108,4.529,2109,1.907,2110,1.907,2111,1.907,2112,1.907,2113,1.907,2114,1.907,2115,1.907,2116,1.907,2117,1.907,2118,1.907,2119,1.907,2120,3.929,2121,1.907,2122,1.907,2123,1.907,2124,1.907,2125,1.651,2126,1.907,2127,3.106,2128,3.106,2129,1.907,2130,1.907,2131,3.106,2132,1.651,2133,1.907,2134,1.907,2135,1.907,2136,1.907,2137,1.907,2138,1.907,2139,1.907,2140,4.529,2141,3.106,2142,1.907,2143,1.907,2144,1.907,2145,1.907,2146,1.907,2147,1.907,2148,1.907,2149,1.907,2150,1.907,2151,1.907,2152,1.907,2153,1.907,2154,3.106,2155,1.907,2156,1.907,2157,1.907,2158,1.907,2159,1.907,2160,1.907,2161,3.106,2162,1.907,2163,1.907,2164,1.907,2165,1.907,2166,1.907,2167,3.106,2168,1.907,2169,1.907,2170,4.529,2171,3.106,2172,1.907,2173,1.907,2174,3.929,2175,1.907,2176,1.907,2177,1.907,2178,1.907,2179,1.907,2180,1.907,2181,1.907,2182,3.106,2183,1.907,2184,1.907,2185,3.929,2186,1.907,2187,1.907,2188,1.907,2189,1.907,2190,1.907,2191,1.907,2192,1.907,2193,1.907,2194,3.106,2195,1.907,2196,1.907,2197,1.907,2198,1.907,2199,1.907,2200,1.907,2201,1.907,2202,4.529,2203,1.907,2204,1.907,2205,1.907,2206,1.907,2207,1.907,2208,1.907,2209,1.907,2210,1.907,2211,1.907,2212,1.907,2213,1.907,2214,1.907,2215,3.106,2216,1.907,2217,1.907,2218,1.907,2219,1.907,2220,1.907,2221,1.907,2222,3.929,2223,3.106,2224,3.106,2225,1.907,2226,1.907,2227,3.106,2228,1.907,2229,3.929,2230,1.907,2231,3.929,2232,1.907,2233,1.907,2234,1.907,2235,1.907,2236,1.907,2237,1.907,2238,1.907,2239,3.92,2240,1.907,2241,1.907,2242,1.907,2243,1.907,2244,1.907,2245,1.907,2246,1.651,2247,1.907,2248,1.907,2249,1.907,2250,1.907,2251,1.907,2252,3.106,2253,1.907,2254,3.106,2255,1.907,2256,1.907,2257,1.907,2258,1.907,2259,1.907,2260,3.106,2261,1.907,2262,3.106,2263,3.106,2264,3.106,2265,1.907,2266,1.907,2267,1.907,2268,6.521,2269,1.907,2270,5.635,2271,3.106,2272,1.907,2273,1.907,2274,1.907,2275,3.929,2276,1.907,2277,1.907,2278,1.651,2279,1.907,2280,1.651,2281,1.907,2282,1.907,2283,1.907,2284,1.907,2285,1.907,2286,1.907,2287,1.907]],["title/license.html",[1903,2.497,1904,2.497,1968,2.782]],["body/license.html",[18,0.013,132,0.01,133,0.013,134,0.01,206,3.676,219,1.262,438,4.476,843,3.402,1246,5.387,1495,6.001,1496,4.476,1498,4.018,1499,4.018,1500,4.476,1501,4.476,1502,4.476,1989,4.476,2075,5.53,2081,5.53,2104,4.476,2125,4.476,2132,4.476,2239,4.476,2246,4.476,2278,5.53,2280,4.476,2288,5.171,2289,6.389,2290,5.171,2291,5.171,2292,5.171,2293,5.171,2294,5.171,2295,5.171,2296,7.823,2297,5.171,2298,5.171,2299,5.171,2300,6.389,2301,5.171,2302,5.171,2303,5.171,2304,5.171,2305,5.171,2306,5.171,2307,5.171,2308,5.171,2309,5.171,2310,5.171,2311,5.171,2312,5.171,2313,6.389,2314,6.389,2315,5.171,2316,5.171,2317,5.171,2318,5.171,2319,5.171,2320,5.171,2321,5.171,2322,5.171,2323,5.171,2324,5.171,2325,5.171,2326,5.171,2327,5.171,2328,5.171,2329,5.171,2330,5.171,2331,5.171,2332,5.171,2333,5.171,2334,5.171,2335,5.171,2336,5.171,2337,5.171,2338,5.171,2339,5.171,2340,5.171]],["title/modules.html",[1471,4.101]],["body/modules.html",[18,0.014,132,0.012,133,0.014,134,0.012,1470,4.111,1471,4.854,1975,4.854,2341,6.247,2342,6.247,2343,6.247]],["title/overview.html",[2344,4.568]],["body/overview.html",[1,3.097,2,2.208,18,0.016,46,1.918,100,2.448,107,3.097,111,3.097,114,2.951,117,3.097,119,3.097,122,2.566,124,2.951,126,3.257,128,2.951,132,0.009,133,0.012,134,0.009,135,0.869,173,2.572,477,2.007,583,1.834,843,3.133,862,2.923,961,3.699,1143,3.133,1253,3.384,1447,4.393,1469,4.312,1470,5.369,1472,3.133,1473,4.121,1474,3.699,1475,4.121,1476,4.121,1477,4.121,1478,4.121,1479,4.121,1480,4.393,1481,4.393,1482,4.393,1483,4.393,1484,5.251,1578,3.133,2010,5.251,2017,4.121,2344,4.121,2345,4.761]],["title/miscellaneous/variables.html",[2346,2.782,2347,4.018]],["body/miscellaneous/variables.html",[18,0.016,38,2.43,42,0.322,65,0.309,88,1.726,132,0.011,133,0.013,134,0.011,146,1.067,153,1.34,306,3.578,415,4.683,538,3.056,583,2.731,1254,3.578,1255,5.725,1354,5.119,2029,4.706,2032,5.702,2034,5.702,2035,5.119,2346,4.706,2347,4.706,2348,7.089,2349,7.089]]],"invertedIndex":[["",{"_index":18,"title":{},"body":{"components/BigTextPopup.html":{},"classes/Cell.html":{},"classes/CellEditRenderer.html":{},"classes/CellHoverPopupListener.html":{},"classes/CellNumberRangeView.html":{},"classes/CellPopupRenderer.html":{},"classes/CellTextView.html":{},"interfaces/CellViewRenderer.html":{},"classes/CheckRowSelectView.html":{},"classes/ClickCellEditListener.html":{},"interfaces/ClickListener.html":{},"classes/ClickRowSelectListener.html":{},"classes/ClickView.html":{},"classes/ClickViewListener.html":{},"classes/ColumnDndListener.html":{},"components/ColumnHeaderComponent.html":{},"components/CompareFilterRenderer.html":{},"components/ConfigMenuComponent.html":{},"components/ConfigMultiChoiceComponent.html":{},"classes/DateIso8601Formatter.html":{},"classes/DateMsFormatter.html":{},"interfaces/DblClickListener.html":{},"interfaces/Dictionary.html":{},"interfaces/EmptyConstructor.html":{},"classes/EmptyFactory.html":{},"classes/EventListener.html":{},"interfaces/EventListenerArg.html":{},"classes/EventMeta.html":{},"classes/FilterRenderer.html":{},"classes/FormatterParser.html":{},"injectables/GridEventService.html":{},"injectables/GridGlobalService.html":{},"injectables/GridMessageService.html":{},"modules/GridModule.html":{},"classes/GroupKeyListener.html":{},"classes/HtmlUtil.html":{},"interfaces/InjectableConstructor.html":{},"classes/InjectableFactory.html":{},"pipes/IsFixedPipe.html":{},"pipes/IsGroupPipe.html":{},"pipes/IsRowVisiblePipe.html":{},"pipes/IsVisiblePipe.html":{},"interfaces/MouseDownListener.html":{},"interfaces/MouseDragListener.html":{},"interfaces/MouseOutListener.html":{},"interfaces/MouseOverListener.html":{},"interfaces/MouseUpListener.html":{},"classes/NumberFormatter.html":{},"classes/Point.html":{},"classes/Range.html":{},"classes/RangeSelectListener.html":{},"classes/Row.html":{},"classes/RowChange.html":{},"classes/RowDblClickListener.html":{},"classes/RowGroup.html":{},"classes/RowGroupView.html":{},"components/SelectFilterRenderer.html":{},"components/TextFilterRenderer.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":38,"title":{},"body":{"components/BigTextPopup.html":{},"classes/ClickCellEditListener.html":{},"classes/ClickView.html":{},"components/ColumnHeaderComponent.html":{},"components/CompareFilterRenderer.html":{},"components/ConfigMenuComponent.html":{},"components/ConfigMultiChoiceComponent.html":{},"injectables/GridEventService.html":{},"injectables/GridGlobalService.html":{},"classes/Point.html":{},"classes/Row.html":{},"classes/RowGroup.html":{},"components/SelectFilterRenderer.html":{},"components/TextFilterRenderer.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["0.0",{"_index":851,"title":{},"body":{"components/CompareFilterRenderer.html":{},"components/SelectFilterRenderer.html":{}}}],["0.25",{"_index":39,"title":{},"body":{"components/BigTextPopup.html":{}}}],["0.5rem",{"_index":979,"title":{},"body":{"components/ConfigMenuComponent.html":{},"classes/RowGroupView.html":{}}}],["0/1",{"_index":2033,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":2036,"title":{},"body":{"coverage.html":{}}}],["0/15",{"_index":2020,"title":{},"body":{"coverage.html":{}}}],["0/17",{"_index":2037,"title":{},"body":{"coverage.html":{}}}],["0/18",{"_index":2019,"title":{},"body":{"coverage.html":{}}}],["0/19",{"_index":2013,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":2021,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":2022,"title":{},"body":{"coverage.html":{}}}],["0/30",{"_index":2015,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":2046,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":2005,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":2044,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":2007,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":2004,"title":{},"body":{"coverage.html":{}}}],["007bff",{"_index":838,"title":{},"body":{"components/CompareFilterRenderer.html":{}}}],["00aa00",{"_index":700,"title":{},"body":{"components/ColumnHeaderComponent.html":{}}}],["1",{"_index":583,"title":{},"body":{"classes/ClickView.html":{},"classes/ColumnDndListener.html":{},"components/ColumnHeaderComponent.html":{},"components/CompareFilterRenderer.html":{},"components/ConfigMenuComponent.html":{},"components/ConfigMultiChoiceComponent.html":{},"injectables/GridEventService.html":{},"classes/Row.html":{},"classes/RowDblClickListener.html":{},"classes/RowGroup.html":{},"classes/RowGroupView.html":{},"components/SelectFilterRenderer.html":{},"index.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["1.0",{"_index":845,"title":{},"body":{"components/CompareFilterRenderer.html":{},"components/SelectFilterRenderer.html":{}}}],["1.0.0",{"_index":927,"title":{},"body":{"components/CompareFilterRenderer.html":{},"components/SelectFilterRenderer.html":{}}}],["1.0.x",{"_index":2050,"title":{},"body":{"dependencies.html":{}}}],["1/10",{"_index":2025,"title":{},"body":{"coverage.html":{}}}],["1/14",{"_index":2002,"title":{},"body":{"coverage.html":{}}}],["1/19",{"_index":2008,"title":{},"body":{"coverage.html":{}}}],["1/3",{"_index":2043,"title":{},"body":{"coverage.html":{}}}],["1/4",{"_index":2045,"title":{},"body":{"coverage.html":{}}}],["1/5",{"_index":1993,"title":{},"body":{"coverage.html":{}}}],["1/8",{"_index":2018,"title":{},"body":{"coverage.html":{}}}],["1/9",{"_index":2016,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":1143,"title":{},"body":{"classes/DateIso8601Formatter.html":{},"components/SelectFilterRenderer.html":{},"coverage.html":{},"index.html":{},"overview.html":{}}}],["100",{"_index":284,"title":{},"body":{"classes/CellEditRenderer.html":{},"components/CompareFilterRenderer.html":{},"components/ConfigMenuComponent.html":{},"components/SelectFilterRenderer.html":{},"index.html":{}}}],["10px",{"_index":828,"title":{},"body":{"components/CompareFilterRenderer.html":{},"components/ConfigMenuComponent.html":{},"components/ConfigMultiChoiceComponent.html":{}}}],["11",{"_index":1999,"title":{},"body":{"coverage.html":{}}}],["12",{"_index":2017,"title":{},"body":{"coverage.html":{},"overview.html":{}}}],["13",{"_index":1096,"title":{},"body":{"components/ConfigMultiChoiceComponent.html":{},"coverage.html":{}}}],["15",{"_index":452,"title":{},"body":{"classes/CellPopupRenderer.html":{},"coverage.html":{},"index.html":{}}}],["15px",{"_index":968,"title":{},"body":{"components/ConfigMenuComponent.html":{},"components/ConfigMultiChoiceComponent.html":{}}}],["16",{"_index":2027,"title":{},"body":{"coverage.html":{}}}],["18",{"_index":1994,"title":{},"body":{"coverage.html":{}}}],["1px",{"_index":26,"title":{},"body":{"components/BigTextPopup.html":{},"components/ConfigMenuComponent.html":{},"components/SelectFilterRenderer.html":{}}}],["2",{"_index":306,"title":{},"body":{"classes/CellEditRenderer.html":{},"components/ConfigMenuComponent.html":{},"injectables/GridEventService.html":{},"injectables/GridMessageService.html":{},"miscellaneous/variables.html":{}}}],["2.0s",{"_index":847,"title":{},"body":{"components/CompareFilterRenderer.html":{},"components/SelectFilterRenderer.html":{}}}],["2.19.3",{"_index":2051,"title":{},"body":{"dependencies.html":{}}}],["2/11",{"_index":2039,"title":{},"body":{"coverage.html":{}}}],["2/12",{"_index":2028,"title":{},"body":{"coverage.html":{}}}],["2/13",{"_index":2003,"title":{},"body":{"coverage.html":{}}}],["2/17",{"_index":2026,"title":{},"body":{"coverage.html":{}}}],["2/36",{"_index":2012,"title":{},"body":{"coverage.html":{}}}],["2/4",{"_index":2006,"title":{},"body":{"coverage.html":{}}}],["2/8",{"_index":2024,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":1992,"title":{},"body":{"coverage.html":{}}}],["200",{"_index":1896,"title":{},"body":{"components/TextFilterRenderer.html":{}}}],["2000",{"_index":448,"title":{},"body":{"classes/CellPopupRenderer.html":{}}}],["200px",{"_index":1855,"title":{},"body":{"components/SelectFilterRenderer.html":{}}}],["2016",{"_index":1497,"title":{},"body":{"modules/GridModule.html":{}}}],["2018",{"_index":2288,"title":{},"body":{"license.html":{}}}],["25",{"_index":2023,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["250",{"_index":925,"title":{},"body":{"components/CompareFilterRenderer.html":{},"classes/FilterRenderer.html":{},"components/SelectFilterRenderer.html":{},"components/TextFilterRenderer.html":{}}}],["250px",{"_index":23,"title":{},"body":{"components/BigTextPopup.html":{}}}],["25px",{"_index":406,"title":{},"body":{"classes/CellNumberRangeView.html":{}}}],["27",{"_index":1101,"title":{},"body":{"components/ConfigMultiChoiceComponent.html":{}}}],["2px",{"_index":36,"title":{},"body":{"components/BigTextPopup.html":{},"components/ConfigMenuComponent.html":{},"components/ConfigMultiChoiceComponent.html":{},"components/SelectFilterRenderer.html":{}}}],["3/29",{"_index":2014,"title":{},"body":{"coverage.html":{}}}],["3/32",{"_index":2038,"title":{},"body":{"coverage.html":{}}}],["3/62",{"_index":2011,"title":{},"body":{"coverage.html":{}}}],["30",{"_index":791,"title":{},"body":{"components/ColumnHeaderComponent.html":{}}}],["30/166",{"_index":2041,"title":{},"body":{"coverage.html":{}}}],["300",{"_index":917,"title":{},"body":{"components/CompareFilterRenderer.html":{},"components/SelectFilterRenderer.html":{}}}],["30px",{"_index":794,"title":{},"body":{"components/ColumnHeaderComponent.html":{}}}],["31/149",{"_index":2030,"title":{},"body":{"coverage.html":{}}}],["32",{"_index":2345,"title":{},"body":{"overview.html":{}}}],["33",{"_index":2042,"title":{},"body":{"coverage.html":{}}}],["37",{"_index":1374,"title":{},"body":{"injectables/GridEventService.html":{}}}],["38",{"_index":1378,"title":{},"body":{"injectables/GridEventService.html":{}}}],["38px",{"_index":827,"title":{},"body":{"components/CompareFilterRenderer.html":{}}}],["39",{"_index":1377,"title":{},"body":{"injectables/GridEventService.html":{}}}],["3px",{"_index":974,"title":{},"body":{"components/ConfigMenuComponent.html":{}}}],["4",{"_index":2010,"title":{},"body":{"coverage.html":{},"overview.html":{}}}],["40",{"_index":1379,"title":{},"body":{"injectables/GridEventService.html":{}}}],["40vw",{"_index":966,"title":{},"body":{"components/ConfigMenuComponent.html":{}}}],["5",{"_index":681,"title":{},"body":{"classes/ColumnDndListener.html":{},"components/ColumnHeaderComponent.html":{},"changelog.html":{},"coverage.html":{}}}],["5.0.0",{"_index":1907,"title":{},"body":{"changelog.html":{}}}],["5.0.x",{"_index":2065,"title":{},"body":{"index.html":{}}}],["5/38",{"_index":1997,"title":{},"body":{"coverage.html":{}}}],["5/44",{"_index":2000,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":764,"title":{},"body":{"components/ColumnHeaderComponent.html":{},"components/CompareFilterRenderer.html":{},"components/ConfigMenuComponent.html":{},"components/SelectFilterRenderer.html":{},"coverage.html":{},"index.html":{}}}],["500",{"_index":841,"title":{},"body":{"components/CompareFilterRenderer.html":{}}}],["5px",{"_index":33,"title":{},"body":{"components/BigTextPopup.html":{},"components/ColumnHeaderComponent.html":{},"components/CompareFilterRenderer.html":{},"components/ConfigMenuComponent.html":{},"components/ConfigMultiChoiceComponent.html":{},"components/SelectFilterRenderer.html":{}}}],["6",{"_index":1910,"title":{},"body":{"changelog.html":{}}}],["6/33",{"_index":1995,"title":{},"body":{"coverage.html":{}}}],["6px",{"_index":975,"title":{},"body":{"components/ConfigMenuComponent.html":{}}}],["7",{"_index":2001,"title":{},"body":{"coverage.html":{}}}],["8",{"_index":1909,"title":{},"body":{"changelog.html":{}}}],["80",{"_index":830,"title":{},"body":{"components/CompareFilterRenderer.html":{}}}],["85",{"_index":2253,"title":{},"body":{"index.html":{}}}],["8601",{"_index":1114,"title":{},"body":{"classes/DateIso8601Formatter.html":{}}}],["8px",{"_index":29,"title":{},"body":{"components/BigTextPopup.html":{},"classes/CellTextView.html":{},"components/SelectFilterRenderer.html":{}}}],["9",{"_index":1666,"title":{},"body":{"classes/Point.html":{},"coverage.html":{}}}],["90",{"_index":1860,"title":{},"body":{"components/SelectFilterRenderer.html":{}}}],["9000",{"_index":809,"title":{},"body":{"components/ColumnHeaderComponent.html":{}}}],["9500",{"_index":666,"title":{},"body":{"classes/ColumnDndListener.html":{}}}],["_alt",{"_index":1197,"title":{},"body":{"classes/EventMeta.html":{}}}],["_ctrl",{"_index":1198,"title":{},"body":{"classes/EventMeta.html":{}}}],["_groupkey",{"_index":1735,"title":{},"body":{"classes/Row.html":{}}}],["_i",{"_index":1618,"title":{},"body":{"classes/Point.html":{}}}],["_j",{"_index":1619,"title":{},"body":{"classes/Point.html":{}}}],["_key",{"_index":1736,"title":{},"body":{"classes/Row.html":{}}}],["_level",{"_index":1449,"title":{},"body":{"injectables/GridMessageService.html":{}}}],["_max",{"_index":1678,"title":{},"body":{"classes/Range.html":{}}}],["_message",{"_index":1450,"title":{},"body":{"injectables/GridMessageService.html":{}}}],["_messageobservable",{"_index":1451,"title":{},"body":{"injectables/GridMessageService.html":{}}}],["_min",{"_index":1679,"title":{},"body":{"classes/Range.html":{}}}],["_rownum",{"_index":1737,"title":{},"body":{"classes/Row.html":{}}}],["_selected",{"_index":1738,"title":{},"body":{"classes/Row.html":{}}}],["_shift",{"_index":1199,"title":{},"body":{"classes/EventMeta.html":{}}}],["_visible",{"_index":1739,"title":{},"body":{"classes/Row.html":{}}}],["a.length",{"_index":305,"title":{},"body":{"classes/CellEditRenderer.html":{}}}],["a[0",{"_index":308,"title":{},"body":{"classes/CellEditRenderer.html":{}}}],["a[1",{"_index":310,"title":{},"body":{"classes/CellEditRenderer.html":{}}}],["a[this.value",{"_index":1105,"title":{},"body":{"components/ConfigMultiChoiceComponent.html":{}}}],["above",{"_index":2132,"title":{},"body":{"index.html":{},"license.html":{}}}],["absolute",{"_index":274,"title":{},"body":{"classes/CellEditRenderer.html":{},"components/ColumnHeaderComponent.html":{}}}],["accessors",{"_index":1202,"title":{},"body":{"classes/EventMeta.html":{},"injectables/GridMessageService.html":{},"classes/Point.html":{},"classes/Range.html":{},"classes/Row.html":{}}}],["action",{"_index":2334,"title":{},"body":{"license.html":{}}}],["actions",{"_index":2098,"title":{},"body":{"index.html":{}}}],["activeonrowheader",{"_index":170,"title":{},"body":{"classes/CellEditRenderer.html":{}}}],["actual_component",{"_index":131,"title":{},"body":{"components/BigTextPopup.html":{},"components/ColumnHeaderComponent.html":{},"components/CompareFilterRenderer.html":{},"components/ConfigMenuComponent.html":{},"components/ConfigMultiChoiceComponent.html":{},"components/SelectFilterRenderer.html":{},"components/TextFilterRenderer.html":{}}}],["add",{"_index":1740,"title":{},"body":{"classes/Row.html":{},"changelog.html":{},"index.html":{}}}],["add(cell",{"_index":1754,"title":{},"body":{"classes/Row.html":{}}}],["addchoice",{"_index":1061,"title":{},"body":{"components/ConfigMultiChoiceComponent.html":{}}}],["addchoice(o",{"_index":1072,"title":{},"body":{"components/ConfigMultiChoiceComponent.html":{}}}],["added",{"_index":1954,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["adding",{"_index":1060,"title":{},"body":{"components/ConfigMultiChoiceComponent.html":{}}}],["addinput",{"_index":1062,"title":{},"body":{"components/ConfigMultiChoiceComponent.html":{}}}],["addinput(event",{"_index":1074,"title":{},"body":{"components/ConfigMultiChoiceComponent.html":{}}}],["addition",{"_index":490,"title":{},"body":{"interfaces/CellViewRenderer.html":{}}}],["additional",{"_index":422,"title":{},"body":{"classes/CellPopupRenderer.html":{}}}],["advanced",{"_index":2240,"title":{},"body":{"index.html":{}}}],["align",{"_index":831,"title":{},"body":{"components/CompareFilterRenderer.html":{},"components/ConfigMenuComponent.html":{},"classes/RowGroupView.html":{},"components/SelectFilterRenderer.html":{}}}],["allow",{"_index":248,"title":{},"body":{"classes/CellEditRenderer.html":{}}}],["allowed",{"_index":2124,"title":{},"body":{"index.html":{}}}],["allowing",{"_index":1951,"title":{},"body":{"changelog.html":{}}}],["allownegativei",{"_index":1647,"title":{},"body":{"classes/Point.html":{}}}],["allows",{"_index":1165,"title":{},"body":{"classes/EmptyFactory.html":{},"injectables/GridGlobalService.html":{},"interfaces/InjectableConstructor.html":{},"classes/InjectableFactory.html":{},"changelog.html":{}}}],["alt",{"_index":416,"title":{},"body":{"classes/CellNumberRangeView.html":{},"classes/EventMeta.html":{},"classes/RowGroupView.html":{}}}],["alt(alt",{"_index":1226,"title":{},"body":{"classes/EventMeta.html":{}}}],["although",{"_index":2176,"title":{},"body":{"index.html":{}}}],["analyze_for_entry_components",{"_index":1505,"title":{},"body":{"modules/GridModule.html":{}}}],["and/or",{"_index":2307,"title":{},"body":{"license.html":{}}}],["angular",{"_index":1908,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["angular/common",{"_index":1508,"title":{},"body":{"modules/GridModule.html":{}}}],["angular/core",{"_index":94,"title":{},"body":{"components/BigTextPopup.html":{},"classes/CellEditRenderer.html":{},"classes/CellHoverPopupListener.html":{},"classes/CellNumberRangeView.html":{},"classes/CellPopupRenderer.html":{},"classes/CellTextView.html":{},"interfaces/CellViewRenderer.html":{},"classes/CheckRowSelectView.html":{},"classes/ClickCellEditListener.html":{},"classes/ClickRowSelectListener.html":{},"classes/ClickView.html":{},"classes/ClickViewListener.html":{},"classes/ColumnDndListener.html":{},"components/ColumnHeaderComponent.html":{},"components/CompareFilterRenderer.html":{},"components/ConfigMenuComponent.html":{},"components/ConfigMultiChoiceComponent.html":{},"classes/EventListener.html":{},"interfaces/EventListenerArg.html":{},"classes/FilterRenderer.html":{},"injectables/GridEventService.html":{},"injectables/GridGlobalService.html":{},"injectables/GridMessageService.html":{},"modules/GridModule.html":{},"classes/GroupKeyListener.html":{},"interfaces/InjectableConstructor.html":{},"classes/InjectableFactory.html":{},"pipes/IsFixedPipe.html":{},"pipes/IsGroupPipe.html":{},"pipes/IsRowVisiblePipe.html":{},"pipes/IsVisiblePipe.html":{},"classes/RangeSelectListener.html":{},"classes/RowDblClickListener.html":{},"classes/RowGroupView.html":{},"components/SelectFilterRenderer.html":{},"components/TextFilterRenderer.html":{}}}],["angular/forms",{"_index":1510,"title":{},"body":{"modules/GridModule.html":{}}}],["angular/material/menu",{"_index":1512,"title":{},"body":{"modules/GridModule.html":{}}}],["animation",{"_index":846,"title":{},"body":{"components/CompareFilterRenderer.html":{},"components/SelectFilterRenderer.html":{}}}],["another",{"_index":610,"title":{},"body":{"classes/ColumnDndListener.html":{},"injectables/GridGlobalService.html":{}}}],["anything",{"_index":2059,"title":{},"body":{"index.html":{}}}],["anything.filterevent",{"_index":2214,"title":{},"body":{"index.html":{}}}],["anywhere",{"_index":2286,"title":{},"body":{"index.html":{}}}],["api",{"_index":1941,"title":{},"body":{"changelog.html":{}}}],["appear.newrowpostcall",{"_index":2181,"title":{},"body":{"index.html":{}}}],["append",{"_index":826,"title":{},"body":{"components/CompareFilterRenderer.html":{}}}],["appendlocation",{"_index":565,"title":{},"body":{"classes/ClickView.html":{}}}],["application",{"_index":2238,"title":{},"body":{"index.html":{}}}],["applied",{"_index":2217,"title":{},"body":{"index.html":{}}}],["arg.interface.ts",{"_index":1193,"title":{},"body":{"interfaces/EventListenerArg.html":{},"coverage.html":{}}}],["argument",{"_index":1568,"title":{},"body":{"interfaces/InjectableConstructor.html":{},"classes/InjectableFactory.html":{}}}],["arguments",{"_index":252,"title":{},"body":{"classes/CellEditRenderer.html":{},"components/ColumnHeaderComponent.html":{},"classes/EmptyFactory.html":{}}}],["arising",{"_index":2338,"title":{},"body":{"license.html":{}}}],["array",{"_index":1584,"title":{},"body":{"pipes/IsFixedPipe.html":{},"changelog.html":{},"index.html":{}}}],["arrow",{"_index":415,"title":{},"body":{"classes/CellNumberRangeView.html":{},"injectables/GridEventService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["arrowfrom",{"_index":1272,"title":{},"body":{"injectables/GridEventService.html":{}}}],["arrowfrom(location",{"_index":1293,"title":{},"body":{"injectables/GridEventService.html":{}}}],["arrowfromlocation",{"_index":1273,"title":{},"body":{"injectables/GridEventService.html":{}}}],["arrowfromlocation(i",{"_index":1310,"title":{},"body":{"injectables/GridEventService.html":{}}}],["arrows",{"_index":1852,"title":{},"body":{"classes/RowGroupView.html":{}}}],["artifact.2.0.0",{"_index":1969,"title":{},"body":{"changelog.html":{}}}],["asc",{"_index":702,"title":{},"body":{"components/ColumnHeaderComponent.html":{}}}],["associated",{"_index":2297,"title":{},"body":{"license.html":{}}}],["authors",{"_index":2327,"title":{},"body":{"license.html":{}}}],["auto",{"_index":463,"title":{},"body":{"classes/CellTextView.html":{},"classes/CheckRowSelectView.html":{},"classes/ClickView.html":{},"components/ColumnHeaderComponent.html":{},"components/ConfigMenuComponent.html":{},"classes/RowGroupView.html":{},"components/SelectFilterRenderer.html":{},"changelog.html":{}}}],["automatically",{"_index":2277,"title":{},"body":{"index.html":{}}}],["b",{"_index":912,"title":{},"body":{"components/CompareFilterRenderer.html":{},"components/ConfigMultiChoiceComponent.html":{}}}],["b[this.value",{"_index":1106,"title":{},"body":{"components/ConfigMultiChoiceComponent.html":{}}}],["back",{"_index":2224,"title":{},"body":{"index.html":{}}}],["backend",{"_index":1112,"title":{},"body":{"classes/DateIso8601Formatter.html":{}}}],["background",{"_index":19,"title":{},"body":{"components/BigTextPopup.html":{},"components/CompareFilterRenderer.html":{},"components/ConfigMenuComponent.html":{},"components/ConfigMultiChoiceComponent.html":{}}}],["bar",{"_index":2131,"title":{},"body":{"index.html":{}}}],["base",{"_index":162,"title":{},"body":{"classes/CellEditRenderer.html":{},"classes/CellPopupRenderer.html":{},"classes/EventListener.html":{},"index.html":{}}}],["based",{"_index":229,"title":{},"body":{"classes/CellEditRenderer.html":{},"injectables/GridEventService.html":{}}}],["basic",{"_index":425,"title":{},"body":{"classes/CellPopupRenderer.html":{},"index.html":{}}}],["becomes",{"_index":2062,"title":{},"body":{"index.html":{}}}],["behavior",{"_index":491,"title":{},"body":{"interfaces/CellViewRenderer.html":{},"changelog.html":{}}}],["behaviorsubject",{"_index":257,"title":{},"body":{"classes/CellEditRenderer.html":{}}}],["being",{"_index":2235,"title":{},"body":{"index.html":{}}}],["between",{"_index":913,"title":{},"body":{"components/CompareFilterRenderer.html":{}}}],["big).title",{"_index":2129,"title":{},"body":{"index.html":{}}}],["bigtext",{"_index":16,"title":{},"body":{"components/BigTextPopup.html":{},"components/ColumnHeaderComponent.html":{},"components/CompareFilterRenderer.html":{},"components/ConfigMenuComponent.html":{},"components/ConfigMultiChoiceComponent.html":{},"components/SelectFilterRenderer.html":{},"components/TextFilterRenderer.html":{}}}],["bigtextpopup",{"_index":1,"title":{"components/BigTextPopup.html":{}},"body":{"components/BigTextPopup.html":{},"components/ColumnHeaderComponent.html":{},"components/CompareFilterRenderer.html":{},"components/ConfigMenuComponent.html":{},"components/ConfigMultiChoiceComponent.html":{},"modules/GridModule.html":{},"components/SelectFilterRenderer.html":{},"components/TextFilterRenderer.html":{},"coverage.html":{},"overview.html":{}}}],["binding",{"_index":2115,"title":{},"body":{"index.html":{}}}],["birth",{"_index":2258,"title":{},"body":{"index.html":{}}}],["black",{"_index":25,"title":{},"body":{"components/BigTextPopup.html":{},"components/ConfigMenuComponent.html":{},"components/SelectFilterRenderer.html":{}}}],["boolean",{"_index":152,"title":{},"body":{"classes/Cell.html":{},"classes/CellEditRenderer.html":{},"classes/CellHoverPopupListener.html":{},"classes/CellNumberRangeView.html":{},"classes/ClickCellEditListener.html":{},"interfaces/ClickListener.html":{},"classes/ClickRowSelectListener.html":{},"classes/ClickView.html":{},"classes/ClickViewListener.html":{},"classes/ColumnDndListener.html":{},"components/ColumnHeaderComponent.html":{},"components/CompareFilterRenderer.html":{},"components/ConfigMultiChoiceComponent.html":{},"interfaces/DblClickListener.html":{},"classes/EventListener.html":{},"classes/EventMeta.html":{},"injectables/GridEventService.html":{},"classes/GroupKeyListener.html":{},"pipes/IsFixedPipe.html":{},"interfaces/MouseDownListener.html":{},"interfaces/MouseDragListener.html":{},"interfaces/MouseOutListener.html":{},"interfaces/MouseOverListener.html":{},"interfaces/MouseUpListener.html":{},"classes/Point.html":{},"classes/Range.html":{},"classes/RangeSelectListener.html":{},"classes/Row.html":{},"classes/RowDblClickListener.html":{},"classes/RowGroup.html":{},"components/SelectFilterRenderer.html":{},"index.html":{}}}],["bootstrap",{"_index":1474,"title":{},"body":{"modules/GridModule.html":{},"changelog.html":{},"overview.html":{}}}],["border",{"_index":24,"title":{},"body":{"components/BigTextPopup.html":{},"components/CompareFilterRenderer.html":{},"components/ConfigMenuComponent.html":{},"components/ConfigMultiChoiceComponent.html":{},"components/SelectFilterRenderer.html":{}}}],["bottom",{"_index":464,"title":{},"body":{"classes/CellTextView.html":{},"classes/CheckRowSelectView.html":{},"classes/ClickView.html":{},"components/CompareFilterRenderer.html":{},"components/ConfigMenuComponent.html":{},"components/ConfigMultiChoiceComponent.html":{}}}],["bound",{"_index":223,"title":{},"body":{"classes/CellEditRenderer.html":{}}}],["box",{"_index":34,"title":{},"body":{"components/BigTextPopup.html":{}}}],["break",{"_index":1545,"title":{},"body":{"classes/GroupKeyListener.html":{},"classes/HtmlUtil.html":{},"components/SelectFilterRenderer.html":{}}}],["browse",{"_index":2343,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":2341,"title":{},"body":{"modules.html":{}}}],["btn",{"_index":1857,"title":{},"body":{"components/SelectFilterRenderer.html":{}}}],["bubble",{"_index":971,"title":{},"body":{"components/ConfigMenuComponent.html":{},"components/ConfigMultiChoiceComponent.html":{}}}],["bubble.selected",{"_index":977,"title":{},"body":{"components/ConfigMenuComponent.html":{}}}],["build",{"_index":2275,"title":{},"body":{"index.html":{}}}],["building",{"_index":2267,"title":{},"body":{"index.html":{}}}],["built",{"_index":2254,"title":{},"body":{"index.html":{}}}],["bump",{"_index":1962,"title":{},"body":{"changelog.html":{}}}],["busy",{"_index":1974,"title":{},"body":{"changelog.html":{}}}],["button",{"_index":2180,"title":{},"body":{"index.html":{}}}],["button.3.1.0",{"_index":1932,"title":{},"body":{"changelog.html":{}}}],["c",{"_index":1496,"title":{},"body":{"modules/GridModule.html":{},"license.html":{}}}],["calculation.2.0.2",{"_index":1964,"title":{},"body":{"changelog.html":{}}}],["call",{"_index":2094,"title":{},"body":{"index.html":{}}}],["call.externalpaging",{"_index":2144,"title":{},"body":{"index.html":{}}}],["call.externalsorting",{"_index":2143,"title":{},"body":{"index.html":{}}}],["callback",{"_index":2095,"title":{},"body":{"index.html":{}}}],["called",{"_index":1313,"title":{},"body":{"injectables/GridEventService.html":{},"index.html":{}}}],["calls",{"_index":1914,"title":{},"body":{"changelog.html":{}}}],["cancer",{"_index":1499,"title":{},"body":{"modules/GridModule.html":{},"index.html":{},"license.html":{}}}],["case",{"_index":1302,"title":{},"body":{"injectables/GridEventService.html":{},"index.html":{}}}],["catch",{"_index":311,"title":{},"body":{"classes/CellEditRenderer.html":{},"classes/CellNumberRangeView.html":{},"components/CompareFilterRenderer.html":{},"classes/Point.html":{}}}],["cell",{"_index":81,"title":{"classes/Cell.html":{}},"body":{"components/BigTextPopup.html":{},"classes/Cell.html":{},"classes/CellEditRenderer.html":{},"classes/CellNumberRangeView.html":{},"classes/CellPopupRenderer.html":{},"classes/CellTextView.html":{},"classes/CheckRowSelectView.html":{},"classes/ClickCellEditListener.html":{},"classes/ClickView.html":{},"injectables/GridEventService.html":{},"classes/Row.html":{},"classes/RowGroupView.html":{},"coverage.html":{},"index.html":{}}}],["cell's",{"_index":139,"title":{},"body":{"classes/Cell.html":{}}}],["cell({key",{"_index":195,"title":{},"body":{"classes/CellEditRenderer.html":{}}}],["cell.dirty",{"_index":1794,"title":{},"body":{"classes/Row.html":{}}}],["cell.onrowsave",{"_index":2197,"title":{},"body":{"index.html":{}}}],["cell/cell",{"_index":1789,"title":{},"body":{"classes/Row.html":{}}}],["cell/editrenderers/choice",{"_index":1522,"title":{},"body":{"modules/GridModule.html":{}}}],["cell/editrenderers/text",{"_index":1518,"title":{},"body":{"modules/GridModule.html":{}}}],["cell/viewpopuprenderer/bigtext",{"_index":1524,"title":{},"body":{"modules/GridModule.html":{}}}],["celleditrenderer",{"_index":158,"title":{"classes/CellEditRenderer.html":{}},"body":{"classes/CellEditRenderer.html":{},"coverage.html":{}}}],["cellhoverpopuplistener",{"_index":314,"title":{"classes/CellHoverPopupListener.html":{}},"body":{"classes/CellHoverPopupListener.html":{},"coverage.html":{}}}],["cellnumberrangeview",{"_index":362,"title":{"classes/CellNumberRangeView.html":{}},"body":{"classes/CellNumberRangeView.html":{},"coverage.html":{},"index.html":{}}}],["cellpopuprenderer",{"_index":12,"title":{"classes/CellPopupRenderer.html":{}},"body":{"components/BigTextPopup.html":{},"classes/CellPopupRenderer.html":{},"coverage.html":{}}}],["cellpopuprenderer:14",{"_index":89,"title":{},"body":{"components/BigTextPopup.html":{}}}],["cellpopuprenderer:15",{"_index":90,"title":{},"body":{"components/BigTextPopup.html":{}}}],["cellpopuprenderer:17",{"_index":86,"title":{},"body":{"components/BigTextPopup.html":{}}}],["cellpopuprenderer:18",{"_index":85,"title":{},"body":{"components/BigTextPopup.html":{}}}],["cellpopuprenderer:19",{"_index":92,"title":{},"body":{"components/BigTextPopup.html":{}}}],["cellpopuprenderer:20",{"_index":84,"title":{},"body":{"components/BigTextPopup.html":{}}}],["cellpopuprenderer:22",{"_index":87,"title":{},"body":{"components/BigTextPopup.html":{}}}],["cellpopuprenderer:31",{"_index":62,"title":{},"body":{"components/BigTextPopup.html":{}}}],["cellpopuprenderer:33",{"_index":73,"title":{},"body":{"components/BigTextPopup.html":{}}}],["cellpopuprenderer:38",{"_index":70,"title":{},"body":{"components/BigTextPopup.html":{}}}],["cellpopuprenderer:46",{"_index":75,"title":{},"body":{"components/BigTextPopup.html":{}}}],["cells",{"_index":1260,"title":{},"body":{"injectables/GridEventService.html":{},"classes/RangeSelectListener.html":{},"classes/Row.html":{},"changelog.html":{},"index.html":{}}}],["celltextview",{"_index":456,"title":{"classes/CellTextView.html":{}},"body":{"classes/CellTextView.html":{},"coverage.html":{}}}],["cellviewrenderer",{"_index":366,"title":{"interfaces/CellViewRenderer.html":{}},"body":{"classes/CellNumberRangeView.html":{},"classes/CellTextView.html":{},"interfaces/CellViewRenderer.html":{},"classes/CheckRowSelectView.html":{},"classes/ClickView.html":{},"classes/RowGroupView.html":{},"coverage.html":{},"index.html":{}}}],["center",{"_index":833,"title":{},"body":{"components/CompareFilterRenderer.html":{},"components/ConfigMenuComponent.html":{},"classes/RowGroupView.html":{},"components/SelectFilterRenderer.html":{}}}],["cfg",{"_index":980,"title":{},"body":{"components/ConfigMenuComponent.html":{}}}],["change",{"_index":234,"title":{},"body":{"classes/CellEditRenderer.html":{},"interfaces/CellViewRenderer.html":{},"injectables/GridEventService.html":{},"changelog.html":{},"index.html":{}}}],["change.ts",{"_index":1797,"title":{},"body":{"classes/RowChange.html":{},"coverage.html":{}}}],["change.ts:3",{"_index":1801,"title":{},"body":{"classes/RowChange.html":{}}}],["change.ts:4",{"_index":1800,"title":{},"body":{"classes/RowChange.html":{}}}],["changed",{"_index":853,"title":{},"body":{"components/CompareFilterRenderer.html":{},"components/SelectFilterRenderer.html":{},"index.html":{}}}],["changedetectorref",{"_index":44,"title":{},"body":{"components/BigTextPopup.html":{},"classes/CellEditRenderer.html":{},"classes/CellPopupRenderer.html":{},"components/ColumnHeaderComponent.html":{},"components/CompareFilterRenderer.html":{},"components/ConfigMenuComponent.html":{},"classes/FilterRenderer.html":{},"components/SelectFilterRenderer.html":{},"components/TextFilterRenderer.html":{}}}],["changelog",{"_index":1905,"title":{"changelog.html":{}},"body":{}}],["changes",{"_index":1297,"title":{},"body":{"injectables/GridEventService.html":{},"changelog.html":{}}}],["charge",{"_index":2293,"title":{},"body":{"license.html":{}}}],["check",{"_index":503,"title":{},"body":{"classes/CheckRowSelectView.html":{},"components/SelectFilterRenderer.html":{}}}],["check.3.1.5",{"_index":1922,"title":{},"body":{"changelog.html":{}}}],["checkedicon",{"_index":501,"title":{},"body":{"classes/CheckRowSelectView.html":{}}}],["checkrowselectview",{"_index":493,"title":{"classes/CheckRowSelectView.html":{}},"body":{"interfaces/CellViewRenderer.html":{},"classes/CheckRowSelectView.html":{},"coverage.html":{}}}],["chevron",{"_index":575,"title":{},"body":{"classes/ClickView.html":{}}}],["child(even",{"_index":983,"title":{},"body":{"components/ConfigMenuComponent.html":{}}}],["choice",{"_index":109,"title":{},"body":{"components/BigTextPopup.html":{},"classes/CellTextView.html":{},"components/ColumnHeaderComponent.html":{},"components/CompareFilterRenderer.html":{},"components/ConfigMenuComponent.html":{},"components/ConfigMultiChoiceComponent.html":{},"components/SelectFilterRenderer.html":{},"components/TextFilterRenderer.html":{},"changelog.html":{}}}],["choice'},{'name",{"_index":121,"title":{},"body":{"components/BigTextPopup.html":{},"components/ColumnHeaderComponent.html":{},"components/CompareFilterRenderer.html":{},"components/ConfigMenuComponent.html":{},"components/ConfigMultiChoiceComponent.html":{},"components/SelectFilterRenderer.html":{},"components/TextFilterRenderer.html":{}}}],["choice.component",{"_index":1528,"title":{},"body":{"modules/GridModule.html":{}}}],["choice.component.ts",{"_index":1057,"title":{},"body":{"components/ConfigMultiChoiceComponent.html":{},"coverage.html":{}}}],["choice.component.ts:115",{"_index":1073,"title":{},"body":{"components/ConfigMultiChoiceComponent.html":{}}}],["choice.component.ts:125",{"_index":1082,"title":{},"body":{"components/ConfigMultiChoiceComponent.html":{}}}],["choice.component.ts:175",{"_index":1081,"title":{},"body":{"components/ConfigMultiChoiceComponent.html":{}}}],["choice.component.ts:64",{"_index":1068,"title":{},"body":{"components/ConfigMultiChoiceComponent.html":{}}}],["choice.component.ts:65",{"_index":1070,"title":{},"body":{"components/ConfigMultiChoiceComponent.html":{}}}],["choice.component.ts:66",{"_index":1067,"title":{},"body":{"components/ConfigMultiChoiceComponent.html":{}}}],["choice.component.ts:67",{"_index":1069,"title":{},"body":{"components/ConfigMultiChoiceComponent.html":{}}}],["choice.component.ts:69",{"_index":1066,"title":{},"body":{"components/ConfigMultiChoiceComponent.html":{}}}],["choice.component.ts:71",{"_index":1071,"title":{},"body":{"components/ConfigMultiChoiceComponent.html":{}}}],["choice.component.ts:73",{"_index":1084,"title":{},"body":{"components/ConfigMultiChoiceComponent.html":{}}}],["choice.component.ts:74",{"_index":1083,"title":{},"body":{"components/ConfigMultiChoiceComponent.html":{}}}],["choice.component.ts:76",{"_index":1079,"title":{},"body":{"components/ConfigMultiChoiceComponent.html":{}}}],["choice.component.ts:86",{"_index":1078,"title":{},"body":{"components/ConfigMultiChoiceComponent.html":{}}}],["choice.component.ts:95",{"_index":1076,"title":{},"body":{"components/ConfigMultiChoiceComponent.html":{}}}],["choice.display",{"_index":1045,"title":{},"body":{"components/ConfigMenuComponent.html":{}}}],["choice.selected",{"_index":1879,"title":{},"body":{"components/SelectFilterRenderer.html":{}}}],["choice.value",{"_index":1044,"title":{},"body":{"components/ConfigMenuComponent.html":{}}}],["choice[column.choicedisplay",{"_index":1862,"title":{},"body":{"components/SelectFilterRenderer.html":{}}}],["choice[display",{"_index":1059,"title":{},"body":{"components/ConfigMultiChoiceComponent.html":{}}}],["choice[this.column.choicevalue",{"_index":1881,"title":{},"body":{"components/SelectFilterRenderer.html":{}}}],["choice[this.display",{"_index":1090,"title":{},"body":{"components/ConfigMultiChoiceComponent.html":{}}}],["choice[this.value",{"_index":1089,"title":{},"body":{"components/ConfigMultiChoiceComponent.html":{}}}],["choiceeditrenderer",{"_index":107,"title":{},"body":{"components/BigTextPopup.html":{},"components/ColumnHeaderComponent.html":{},"components/CompareFilterRenderer.html":{},"components/ConfigMenuComponent.html":{},"components/ConfigMultiChoiceComponent.html":{},"modules/GridModule.html":{},"components/SelectFilterRenderer.html":{},"components/TextFilterRenderer.html":{},"coverage.html":{},"index.html":{},"overview.html":{}}}],["choices",{"_index":1014,"title":{},"body":{"components/ConfigMenuComponent.html":{},"components/ConfigMultiChoiceComponent.html":{},"index.html":{}}}],["choose",{"_index":2150,"title":{},"body":{"index.html":{}}}],["circle",{"_index":417,"title":{},"body":{"classes/CellNumberRangeView.html":{},"classes/CheckRowSelectView.html":{},"classes/ClickView.html":{}}}],["claim",{"_index":2330,"title":{},"body":{"license.html":{}}}],["class",{"_index":96,"title":{"classes/Cell.html":{},"classes/CellEditRenderer.html":{},"classes/CellHoverPopupListener.html":{},"classes/CellNumberRangeView.html":{},"classes/CellPopupRenderer.html":{},"classes/CellTextView.html":{},"classes/CheckRowSelectView.html":{},"classes/ClickCellEditListener.html":{},"classes/ClickRowSelectListener.html":{},"classes/ClickView.html":{},"classes/ClickViewListener.html":{},"classes/ColumnDndListener.html":{},"classes/DateIso8601Formatter.html":{},"classes/DateMsFormatter.html":{},"classes/EmptyFactory.html":{},"classes/EventListener.html":{},"classes/EventMeta.html":{},"classes/FilterRenderer.html":{},"classes/FormatterParser.html":{},"classes/GroupKeyListener.html":{},"classes/HtmlUtil.html":{},"classes/InjectableFactory.html":{},"classes/NumberFormatter.html":{},"classes/Point.html":{},"classes/Range.html":{},"classes/RangeSelectListener.html":{},"classes/Row.html":{},"classes/RowChange.html":{},"classes/RowDblClickListener.html":{},"classes/RowGroup.html":{},"classes/RowGroupView.html":{}},"body":{"components/BigTextPopup.html":{},"classes/Cell.html":{},"classes/CellEditRenderer.html":{},"classes/CellHoverPopupListener.html":{},"classes/CellNumberRangeView.html":{},"classes/CellPopupRenderer.html":{},"classes/CellTextView.html":{},"classes/CheckRowSelectView.html":{},"classes/ClickCellEditListener.html":{},"classes/ClickRowSelectListener.html":{},"classes/ClickView.html":{},"classes/ClickViewListener.html":{},"classes/ColumnDndListener.html":{},"components/ColumnHeaderComponent.html":{},"components/CompareFilterRenderer.html":{},"components/ConfigMenuComponent.html":{},"components/ConfigMultiChoiceComponent.html":{},"classes/DateIso8601Formatter.html":{},"classes/DateMsFormatter.html":{},"interfaces/EmptyConstructor.html":{},"classes/EmptyFactory.html":{},"classes/EventListener.html":{},"classes/EventMeta.html":{},"classes/FilterRenderer.html":{},"classes/FormatterParser.html":{},"injectables/GridEventService.html":{},"injectables/GridGlobalService.html":{},"injectables/GridMessageService.html":{},"modules/GridModule.html":{},"classes/GroupKeyListener.html":{},"classes/HtmlUtil.html":{},"interfaces/InjectableConstructor.html":{},"classes/InjectableFactory.html":{},"pipes/IsFixedPipe.html":{},"pipes/IsGroupPipe.html":{},"pipes/IsRowVisiblePipe.html":{},"pipes/IsVisiblePipe.html":{},"classes/NumberFormatter.html":{},"classes/Point.html":{},"classes/Range.html":{},"classes/RangeSelectListener.html":{},"classes/Row.html":{},"classes/RowChange.html":{},"classes/RowDblClickListener.html":{},"classes/RowGroup.html":{},"classes/RowGroupView.html":{},"components/SelectFilterRenderer.html":{},"components/TextFilterRenderer.html":{},"coverage.html":{},"index.html":{}}}],["classes",{"_index":135,"title":{},"body":{"classes/Cell.html":{},"classes/CellEditRenderer.html":{},"classes/CellHoverPopupListener.html":{},"classes/CellNumberRangeView.html":{},"classes/CellPopupRenderer.html":{},"classes/CellTextView.html":{},"interfaces/CellViewRenderer.html":{},"classes/CheckRowSelectView.html":{},"classes/ClickCellEditListener.html":{},"classes/ClickRowSelectListener.html":{},"classes/ClickView.html":{},"classes/ClickViewListener.html":{},"classes/ColumnDndListener.html":{},"classes/DateIso8601Formatter.html":{},"classes/DateMsFormatter.html":{},"classes/EmptyFactory.html":{},"classes/EventListener.html":{},"classes/EventMeta.html":{},"classes/FilterRenderer.html":{},"classes/FormatterParser.html":{},"classes/GroupKeyListener.html":{},"classes/HtmlUtil.html":{},"classes/InjectableFactory.html":{},"classes/NumberFormatter.html":{},"classes/Point.html":{},"classes/Range.html":{},"classes/RangeSelectListener.html":{},"classes/Row.html":{},"classes/RowChange.html":{},"classes/RowDblClickListener.html":{},"classes/RowGroup.html":{},"classes/RowGroupView.html":{},"overview.html":{}}}],["classname",{"_index":1541,"title":{},"body":{"classes/GroupKeyListener.html":{}}}],["classname.replace(\"group",{"_index":1544,"title":{},"body":{"classes/GroupKeyListener.html":{}}}],["classname.startswith(\"group",{"_index":1543,"title":{},"body":{"classes/GroupKeyListener.html":{}}}],["clearpushfilter",{"_index":1401,"title":{},"body":{"injectables/GridGlobalService.html":{}}}],["clearpushfilter(group",{"_index":1410,"title":{},"body":{"injectables/GridGlobalService.html":{}}}],["clearselectedlocation",{"_index":1274,"title":{},"body":{"injectables/GridEventService.html":{}}}],["click",{"_index":538,"title":{},"body":{"classes/ClickCellEditListener.html":{},"interfaces/ClickListener.html":{},"classes/ClickRowSelectListener.html":{},"classes/ClickView.html":{},"classes/ClickViewListener.html":{},"injectables/GridEventService.html":{},"classes/GroupKeyListener.html":{},"classes/RangeSelectListener.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["click(event",{"_index":539,"title":{},"body":{"classes/ClickCellEditListener.html":{},"interfaces/ClickListener.html":{},"classes/ClickRowSelectListener.html":{},"classes/ClickViewListener.html":{},"classes/GroupKeyListener.html":{}}}],["click.interface",{"_index":541,"title":{},"body":{"classes/ClickCellEditListener.html":{},"classes/ClickRowSelectListener.html":{},"classes/ClickViewListener.html":{},"classes/GroupKeyListener.html":{},"classes/RowDblClickListener.html":{}}}],["click.interface.ts",{"_index":1154,"title":{},"body":{"interfaces/DblClickListener.html":{},"coverage.html":{}}}],["click.interface.ts:3",{"_index":1157,"title":{},"body":{"interfaces/DblClickListener.html":{}}}],["click.listener.ts",{"_index":1807,"title":{},"body":{"classes/RowDblClickListener.html":{},"coverage.html":{}}}],["click.listener.ts:9",{"_index":1808,"title":{},"body":{"classes/RowDblClickListener.html":{}}}],["clickcelleditlistener",{"_index":534,"title":{"classes/ClickCellEditListener.html":{}},"body":{"classes/ClickCellEditListener.html":{},"coverage.html":{}}}],["clicked",{"_index":2232,"title":{},"body":{"index.html":{}}}],["clicking",{"_index":2088,"title":{},"body":{"index.html":{}}}],["clicklistener",{"_index":537,"title":{"interfaces/ClickListener.html":{}},"body":{"classes/ClickCellEditListener.html":{},"interfaces/ClickListener.html":{},"classes/ClickRowSelectListener.html":{},"classes/ClickViewListener.html":{},"classes/GroupKeyListener.html":{},"coverage.html":{}}}],["clickout(event",{"_index":814,"title":{},"body":{"components/ColumnHeaderComponent.html":{}}}],["clickrowselectlistener",{"_index":549,"title":{"classes/ClickRowSelectListener.html":{}},"body":{"classes/ClickRowSelectListener.html":{},"coverage.html":{}}}],["clickrowselectlistener.click",{"_index":557,"title":{},"body":{"classes/ClickRowSelectListener.html":{}}}],["clicks",{"_index":1259,"title":{},"body":{"injectables/GridEventService.html":{}}}],["clickview",{"_index":563,"title":{"classes/ClickView.html":{}},"body":{"classes/ClickView.html":{},"coverage.html":{}}}],["clickviewlistener",{"_index":593,"title":{"classes/ClickViewListener.html":{}},"body":{"classes/ClickViewListener.html":{},"coverage.html":{}}}],["clone",{"_index":616,"title":{},"body":{"classes/ColumnDndListener.html":{}}}],["close",{"_index":870,"title":{},"body":{"components/CompareFilterRenderer.html":{},"classes/FilterRenderer.html":{},"components/SelectFilterRenderer.html":{},"components/TextFilterRenderer.html":{}}}],["cluster_gridmodule",{"_index":1476,"title":{},"body":{"modules/GridModule.html":{},"overview.html":{}}}],["cluster_gridmodule_declarations",{"_index":1477,"title":{},"body":{"modules/GridModule.html":{},"overview.html":{}}}],["cluster_gridmodule_exports",{"_index":1479,"title":{},"body":{"modules/GridModule.html":{},"overview.html":{}}}],["cluster_gridmodule_gridcomponent_providers",{"_index":1478,"title":{},"body":{"modules/GridModule.html":{},"overview.html":{}}}],["code",{"_index":2070,"title":{},"body":{"index.html":{}}}],["color",{"_index":20,"title":{},"body":{"components/BigTextPopup.html":{},"classes/CellNumberRangeView.html":{},"classes/ClickView.html":{},"components/CompareFilterRenderer.html":{},"components/ConfigMenuComponent.html":{},"components/ConfigMultiChoiceComponent.html":{}}}],["coloring",{"_index":1924,"title":{},"body":{"changelog.html":{}}}],["column",{"_index":112,"title":{},"body":{"components/BigTextPopup.html":{},"classes/CellEditRenderer.html":{},"classes/CellNumberRangeView.html":{},"classes/CellTextView.html":{},"interfaces/CellViewRenderer.html":{},"classes/CheckRowSelectView.html":{},"classes/ClickCellEditListener.html":{},"classes/ClickView.html":{},"classes/ColumnDndListener.html":{},"components/ColumnHeaderComponent.html":{},"components/CompareFilterRenderer.html":{},"components/ConfigMenuComponent.html":{},"components/ConfigMultiChoiceComponent.html":{},"classes/FilterRenderer.html":{},"injectables/GridEventService.html":{},"pipes/IsFixedPipe.html":{},"pipes/IsGroupPipe.html":{},"pipes/IsVisiblePipe.html":{},"classes/RowGroupView.html":{},"components/SelectFilterRenderer.html":{},"components/TextFilterRenderer.html":{},"changelog.html":{},"coverage.html":{},"index.html":{}}}],["column's",{"_index":2216,"title":{},"body":{"index.html":{}}}],["column.editable",{"_index":509,"title":{},"body":{"classes/CheckRowSelectView.html":{}}}],["column.formatvalue(value",{"_index":472,"title":{},"body":{"classes/CellTextView.html":{}}}],["column.name",{"_index":699,"title":{},"body":{"components/ColumnHeaderComponent.html":{},"components/ConfigMenuComponent.html":{}}}],["column/column",{"_index":262,"title":{},"body":{"classes/CellEditRenderer.html":{},"classes/CellNumberRangeView.html":{},"classes/CellTextView.html":{},"interfaces/CellViewRenderer.html":{},"classes/CheckRowSelectView.html":{},"classes/ClickView.html":{},"modules/GridModule.html":{},"pipes/IsFixedPipe.html":{},"pipes/IsGroupPipe.html":{},"pipes/IsVisiblePipe.html":{},"classes/RowGroupView.html":{}}}],["column/filterrenderers/compare",{"_index":1521,"title":{},"body":{"modules/GridModule.html":{}}}],["column/filterrenderers/select",{"_index":1523,"title":{},"body":{"modules/GridModule.html":{}}}],["column/filterrenderers/text",{"_index":1520,"title":{},"body":{"modules/GridModule.html":{}}}],["columndndlistener",{"_index":606,"title":{"classes/ColumnDndListener.html":{}},"body":{"classes/ColumnDndListener.html":{},"coverage.html":{}}}],["columnheadercomponent",{"_index":111,"title":{"components/ColumnHeaderComponent.html":{}},"body":{"components/BigTextPopup.html":{},"components/ColumnHeaderComponent.html":{},"components/CompareFilterRenderer.html":{},"components/ConfigMenuComponent.html":{},"components/ConfigMultiChoiceComponent.html":{},"modules/GridModule.html":{},"components/SelectFilterRenderer.html":{},"components/TextFilterRenderer.html":{},"coverage.html":{},"overview.html":{}}}],["columns",{"_index":677,"title":{},"body":{"classes/ColumnDndListener.html":{},"components/ConfigMenuComponent.html":{},"injectables/GridEventService.html":{},"changelog.html":{},"index.html":{}}}],["columns[j].field",{"_index":2195,"title":{},"body":{"index.html":{}}}],["columnsresorted",{"_index":676,"title":{},"body":{"classes/ColumnDndListener.html":{}}}],["colums",{"_index":2128,"title":{},"body":{"index.html":{}}}],["come",{"_index":2223,"title":{},"body":{"index.html":{}}}],["coming",{"_index":1111,"title":{},"body":{"classes/DateIso8601Formatter.html":{}}}],["command",{"_index":2185,"title":{},"body":{"index.html":{}}}],["commands",{"_index":2078,"title":{},"body":{"index.html":{}}}],["commonmodule",{"_index":1507,"title":{},"body":{"modules/GridModule.html":{}}}],["compare",{"_index":115,"title":{},"body":{"components/BigTextPopup.html":{},"components/ColumnHeaderComponent.html":{},"components/CompareFilterRenderer.html":{},"components/ConfigMenuComponent.html":{},"components/ConfigMultiChoiceComponent.html":{},"components/SelectFilterRenderer.html":{},"components/TextFilterRenderer.html":{}}}],["compare.3.1.2",{"_index":1928,"title":{},"body":{"changelog.html":{}}}],["comparefilterrenderer",{"_index":114,"title":{"components/CompareFilterRenderer.html":{}},"body":{"components/BigTextPopup.html":{},"components/ColumnHeaderComponent.html":{},"components/CompareFilterRenderer.html":{},"components/ConfigMenuComponent.html":{},"components/ConfigMultiChoiceComponent.html":{},"modules/GridModule.html":{},"components/SelectFilterRenderer.html":{},"components/TextFilterRenderer.html":{},"coverage.html":{},"index.html":{},"overview.html":{}}}],["compareindexes",{"_index":1760,"title":{},"body":{"classes/Row.html":{}}}],["comparison",{"_index":819,"title":{},"body":{"components/CompareFilterRenderer.html":{},"components/SelectFilterRenderer.html":{}}}],["compiled",{"_index":2069,"title":{},"body":{"index.html":{}}}],["completes.outputs",{"_index":2192,"title":{},"body":{"index.html":{}}}],["complex",{"_index":436,"title":{},"body":{"classes/CellPopupRenderer.html":{},"index.html":{}}}],["component",{"_index":0,"title":{"components/BigTextPopup.html":{},"components/ColumnHeaderComponent.html":{},"components/CompareFilterRenderer.html":{},"components/ConfigMenuComponent.html":{},"components/ConfigMultiChoiceComponent.html":{},"components/SelectFilterRenderer.html":{},"components/TextFilterRenderer.html":{}},"body":{"components/BigTextPopup.html":{},"classes/CellPopupRenderer.html":{},"components/ColumnHeaderComponent.html":{},"components/CompareFilterRenderer.html":{},"components/ConfigMenuComponent.html":{},"components/ConfigMultiChoiceComponent.html":{},"components/SelectFilterRenderer.html":{},"components/TextFilterRenderer.html":{},"coverage.html":{},"index.html":{}}}],["component_template",{"_index":105,"title":{},"body":{"components/BigTextPopup.html":{},"components/ColumnHeaderComponent.html":{},"components/CompareFilterRenderer.html":{},"components/ConfigMenuComponent.html":{},"components/ConfigMultiChoiceComponent.html":{},"components/SelectFilterRenderer.html":{},"components/TextFilterRenderer.html":{}}}],["componentfactoryresolver",{"_index":719,"title":{},"body":{"components/ColumnHeaderComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/BigTextPopup.html":{},"classes/CellEditRenderer.html":{},"components/ColumnHeaderComponent.html":{},"components/CompareFilterRenderer.html":{},"components/ConfigMenuComponent.html":{},"components/ConfigMultiChoiceComponent.html":{},"modules/GridModule.html":{},"components/SelectFilterRenderer.html":{},"components/TextFilterRenderer.html":{},"index.html":{},"overview.html":{}}}],["conditions",{"_index":2312,"title":{},"body":{"license.html":{}}}],["confidential",{"_index":1503,"title":{},"body":{"modules/GridModule.html":{}}}],["config",{"_index":67,"title":{},"body":{"components/BigTextPopup.html":{},"classes/CellEditRenderer.html":{},"classes/CellHoverPopupListener.html":{},"classes/CellNumberRangeView.html":{},"classes/CellPopupRenderer.html":{},"classes/CellTextView.html":{},"interfaces/CellViewRenderer.html":{},"classes/CheckRowSelectView.html":{},"classes/ClickCellEditListener.html":{},"classes/ClickRowSelectListener.html":{},"classes/ClickView.html":{},"classes/ClickViewListener.html":{},"classes/ColumnDndListener.html":{},"components/ColumnHeaderComponent.html":{},"components/CompareFilterRenderer.html":{},"components/ConfigMenuComponent.html":{},"components/ConfigMultiChoiceComponent.html":{},"classes/DateIso8601Formatter.html":{},"classes/DateMsFormatter.html":{},"classes/EventListener.html":{},"interfaces/EventListenerArg.html":{},"classes/FilterRenderer.html":{},"classes/FormatterParser.html":{},"injectables/GridGlobalService.html":{},"classes/GroupKeyListener.html":{},"classes/NumberFormatter.html":{},"classes/RangeSelectListener.html":{},"classes/RowDblClickListener.html":{},"classes/RowGroupView.html":{},"components/SelectFilterRenderer.html":{},"components/TextFilterRenderer.html":{},"index.html":{}}}],["config.appendlocation",{"_index":571,"title":{},"body":{"classes/ClickView.html":{}}}],["config.checkedicon",{"_index":510,"title":{},"body":{"classes/CheckRowSelectView.html":{}}}],["config.format",{"_index":1136,"title":{},"body":{"classes/DateIso8601Formatter.html":{},"classes/DateMsFormatter.html":{}}}],["config.high",{"_index":392,"title":{},"body":{"classes/CellNumberRangeView.html":{}}}],["config.highcolor",{"_index":395,"title":{},"body":{"classes/CellNumberRangeView.html":{}}}],["config.icon",{"_index":573,"title":{},"body":{"classes/ClickView.html":{}}}],["config.id",{"_index":569,"title":{},"body":{"classes/ClickView.html":{}}}],["config.low",{"_index":390,"title":{},"body":{"classes/CellNumberRangeView.html":{}}}],["config.lowcolor",{"_index":394,"title":{},"body":{"classes/CellNumberRangeView.html":{}}}],["config.multiselect",{"_index":562,"title":{},"body":{"classes/ClickRowSelectListener.html":{},"classes/GroupKeyListener.html":{}}}],["config.showicon",{"_index":396,"title":{},"body":{"classes/CellNumberRangeView.html":{}}}],["config.stopevent",{"_index":1189,"title":{},"body":{"classes/EventListener.html":{}}}],["config.style",{"_index":576,"title":{},"body":{"classes/ClickView.html":{}}}],["config.theme",{"_index":990,"title":{},"body":{"components/ConfigMenuComponent.html":{}}}],["config.uncheckedicon",{"_index":512,"title":{},"body":{"classes/CheckRowSelectView.html":{}}}],["config/config",{"_index":1526,"title":{},"body":{"modules/GridModule.html":{}}}],["config[key",{"_index":1053,"title":{},"body":{"components/ConfigMenuComponent.html":{}}}],["configmenucomponent",{"_index":117,"title":{"components/ConfigMenuComponent.html":{}},"body":{"components/BigTextPopup.html":{},"components/ColumnHeaderComponent.html":{},"components/CompareFilterRenderer.html":{},"components/ConfigMenuComponent.html":{},"components/ConfigMultiChoiceComponent.html":{},"modules/GridModule.html":{},"components/SelectFilterRenderer.html":{},"components/TextFilterRenderer.html":{},"coverage.html":{},"overview.html":{}}}],["configmultichoicecomponent",{"_index":119,"title":{"components/ConfigMultiChoiceComponent.html":{}},"body":{"components/BigTextPopup.html":{},"components/ColumnHeaderComponent.html":{},"components/CompareFilterRenderer.html":{},"components/ConfigMenuComponent.html":{},"components/ConfigMultiChoiceComponent.html":{},"modules/GridModule.html":{},"components/SelectFilterRenderer.html":{},"components/TextFilterRenderer.html":{},"coverage.html":{},"overview.html":{}}}],["configsubscription",{"_index":998,"title":{},"body":{"components/ConfigMenuComponent.html":{}}}],["configuration",{"_index":249,"title":{},"body":{"classes/CellEditRenderer.html":{},"injectables/GridGlobalService.html":{},"changelog.html":{},"index.html":{}}}],["configuration.install",{"_index":2064,"title":{},"body":{"index.html":{}}}],["configured",{"_index":1953,"title":{},"body":{"changelog.html":{}}}],["connecting",{"_index":1981,"title":{},"body":{"changelog.html":{}}}],["connection",{"_index":2339,"title":{},"body":{"license.html":{}}}],["console.debug(\"addinput",{"_index":1091,"title":{},"body":{"components/ConfigMultiChoiceComponent.html":{}}}],["console.debug(\"celleditrenderer.setformat",{"_index":302,"title":{},"body":{"classes/CellEditRenderer.html":{}}}],["console.debug(\"cellhoverpopuplistener.mouseover",{"_index":346,"title":{},"body":{"classes/CellHoverPopupListener.html":{}}}],["console.debug(\"clickcelleditlistener.click",{"_index":542,"title":{},"body":{"classes/ClickCellEditListener.html":{}}}],["console.debug(\"clickviewlistener.click",{"_index":598,"title":{},"body":{"classes/ClickViewListener.html":{}}}],["console.debug(\"columndndlistener.mousedown",{"_index":651,"title":{},"body":{"classes/ColumnDndListener.html":{}}}],["console.debug(\"columndndlistener.mousedrag",{"_index":679,"title":{},"body":{"classes/ColumnDndListener.html":{}}}],["console.debug(\"columndndlistener.mouseout",{"_index":685,"title":{},"body":{"classes/ColumnDndListener.html":{}}}],["console.debug(\"columndndlistener.mouseup",{"_index":668,"title":{},"body":{"classes/ColumnDndListener.html":{}}}],["console.debug(\"configmenucomponent.update",{"_index":1056,"title":{},"body":{"components/ConfigMenuComponent.html":{}}}],["console.debug(\"configmenucomponent.updatearray",{"_index":1051,"title":{},"body":{"components/ConfigMenuComponent.html":{}}}],["console.debug(\"configmultichoicecomponent.ngoninit",{"_index":1087,"title":{},"body":{"components/ConfigMultiChoiceComponent.html":{}}}],["console.debug(\"eventlistener",{"_index":1187,"title":{},"body":{"classes/EventListener.html":{}}}],["console.debug(\"gridglobalservice",{"_index":1428,"title":{},"body":{"injectables/GridGlobalService.html":{}}}],["console.debug(\"gridglobalservice.register",{"_index":1435,"title":{},"body":{"injectables/GridGlobalService.html":{}}}],["console.debug(\"gridglobalservice.registergroup",{"_index":1436,"title":{},"body":{"injectables/GridGlobalService.html":{}}}],["console.debug(\"hci",{"_index":555,"title":{},"body":{"classes/ClickRowSelectListener.html":{},"injectables/GridEventService.html":{},"classes/GroupKeyListener.html":{}}}],["console.debug(\"mousedrag",{"_index":1732,"title":{},"body":{"classes/RangeSelectListener.html":{}}}],["console.debug(\"mouseup",{"_index":1730,"title":{},"body":{"classes/RangeSelectListener.html":{}}}],["console.debug(\"outputrowclick",{"_index":601,"title":{},"body":{"classes/ClickViewListener.html":{}}}],["console.debug(\"rangeselectlistener.mousedown",{"_index":1726,"title":{},"body":{"classes/RangeSelectListener.html":{}}}],["console.debug(\"rowdblclicklistener.dblclick",{"_index":1809,"title":{},"body":{"classes/RowDblClickListener.html":{}}}],["console.debug(value",{"_index":1052,"title":{},"body":{"components/ConfigMenuComponent.html":{}}}],["console.display",{"_index":2172,"title":{},"body":{"index.html":{}}}],["const",{"_index":1353,"title":{},"body":{"injectables/GridEventService.html":{}}}],["constructor",{"_index":147,"title":{},"body":{"classes/Cell.html":{},"classes/CellEditRenderer.html":{},"classes/CellPopupRenderer.html":{},"components/ColumnHeaderComponent.html":{},"components/ConfigMenuComponent.html":{},"classes/EmptyFactory.html":{},"classes/EventListener.html":{},"classes/EventMeta.html":{},"classes/FilterRenderer.html":{},"injectables/GridEventService.html":{},"injectables/GridGlobalService.html":{},"classes/InjectableFactory.html":{},"classes/Point.html":{},"classes/Range.html":{},"classes/RowChange.html":{},"classes/RowGroup.html":{}}}],["constructor(@inject(\"globalconfig",{"_index":1427,"title":{},"body":{"injectables/GridGlobalService.html":{}}}],["constructor(alt",{"_index":1205,"title":{},"body":{"classes/EventMeta.html":{}}}],["constructor(emptyconstructor",{"_index":1168,"title":{},"body":{"classes/EmptyFactory.html":{}}}],["constructor(globalconfig",{"_index":1407,"title":{},"body":{"injectables/GridGlobalService.html":{}}}],["constructor(gridglobalservice",{"_index":1008,"title":{},"body":{"components/ConfigMenuComponent.html":{}}}],["constructor(gridservice",{"_index":188,"title":{},"body":{"classes/CellEditRenderer.html":{},"classes/CellPopupRenderer.html":{},"components/ColumnHeaderComponent.html":{},"classes/FilterRenderer.html":{},"injectables/GridEventService.html":{}}}],["constructor(groupkey",{"_index":1820,"title":{},"body":{"classes/RowGroup.html":{}}}],["constructor(i",{"_index":1631,"title":{},"body":{"classes/Point.html":{}}}],["constructor(ic",{"_index":1574,"title":{},"body":{"classes/InjectableFactory.html":{}}}],["constructor(injector",{"_index":1177,"title":{},"body":{"classes/EventListener.html":{}}}],["constructor(min",{"_index":1682,"title":{},"body":{"classes/Range.html":{}}}],["constructor(o",{"_index":148,"title":{},"body":{"classes/Cell.html":{}}}],["constructor(oldrownum",{"_index":1799,"title":{},"body":{"classes/RowChange.html":{}}}],["constructor(private",{"_index":754,"title":{},"body":{"components/ColumnHeaderComponent.html":{},"components/ConfigMenuComponent.html":{},"interfaces/EmptyConstructor.html":{},"classes/EmptyFactory.html":{},"injectables/GridEventService.html":{},"interfaces/InjectableConstructor.html":{},"classes/InjectableFactory.html":{}}}],["contain",{"_index":429,"title":{},"body":{"classes/CellPopupRenderer.html":{}}}],["container",{"_index":716,"title":{},"body":{"components/ColumnHeaderComponent.html":{}}}],["contains",{"_index":1680,"title":{},"body":{"classes/Range.html":{},"index.html":{}}}],["contains(point",{"_index":1685,"title":{},"body":{"classes/Range.html":{}}}],["content",{"_index":433,"title":{},"body":{"classes/CellPopupRenderer.html":{}}}],["content\")).offsetwidth",{"_index":785,"title":{},"body":{"components/ColumnHeaderComponent.html":{}}}],["contract",{"_index":2335,"title":{},"body":{"license.html":{}}}],["control",{"_index":1859,"title":{},"body":{"components/SelectFilterRenderer.html":{}}}],["controls",{"_index":691,"title":{},"body":{"components/ColumnHeaderComponent.html":{}}}],["convenience",{"_index":1549,"title":{},"body":{"classes/HtmlUtil.html":{}}}],["copies",{"_index":2278,"title":{},"body":{"index.html":{},"license.html":{}}}],["copy",{"_index":2075,"title":{},"body":{"index.html":{},"license.html":{}}}],["copyright",{"_index":1495,"title":{},"body":{"modules/GridModule.html":{},"license.html":{}}}],["correctly",{"_index":76,"title":{},"body":{"components/BigTextPopup.html":{},"classes/CellEditRenderer.html":{},"classes/CellPopupRenderer.html":{}}}],["count",{"_index":1814,"title":{},"body":{"classes/RowGroup.html":{}}}],["coverage",{"_index":1988,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["created",{"_index":168,"title":{},"body":{"classes/CellEditRenderer.html":{},"classes/EventListener.html":{},"injectables/GridGlobalService.html":{},"index.html":{}}}],["createelement",{"_index":372,"title":{},"body":{"classes/CellNumberRangeView.html":{},"classes/CellTextView.html":{},"interfaces/CellViewRenderer.html":{},"classes/CheckRowSelectView.html":{},"classes/ClickView.html":{},"classes/RowGroupView.html":{}}}],["createelement(renderer",{"_index":381,"title":{},"body":{"classes/CellNumberRangeView.html":{},"classes/CellTextView.html":{},"interfaces/CellViewRenderer.html":{},"classes/CheckRowSelectView.html":{},"classes/ClickView.html":{},"classes/RowGroupView.html":{},"index.html":{}}}],["creategroupkey",{"_index":1741,"title":{},"body":{"classes/Row.html":{}}}],["creategroupkey(headercolumns",{"_index":1756,"title":{},"body":{"classes/Row.html":{}}}],["creating",{"_index":335,"title":{},"body":{"classes/CellHoverPopupListener.html":{},"classes/ClickCellEditListener.html":{},"classes/ClickRowSelectListener.html":{},"classes/ClickViewListener.html":{},"classes/ColumnDndListener.html":{},"classes/EventListener.html":{},"classes/GroupKeyListener.html":{},"classes/RangeSelectListener.html":{},"classes/RowDblClickListener.html":{},"index.html":{}}}],["ctrl",{"_index":1203,"title":{},"body":{"classes/EventMeta.html":{}}}],["ctrl(ctrl",{"_index":1227,"title":{},"body":{"classes/EventMeta.html":{}}}],["current",{"_index":1298,"title":{},"body":{"injectables/GridEventService.html":{},"components/SelectFilterRenderer.html":{},"index.html":{}}}],["currentel",{"_index":354,"title":{},"body":{"classes/CellHoverPopupListener.html":{}}}],["currentlocation",{"_index":356,"title":{},"body":{"classes/CellHoverPopupListener.html":{}}}],["currentlocation.equals(location",{"_index":358,"title":{},"body":{"classes/CellHoverPopupListener.html":{}}}],["currently",{"_index":2102,"title":{},"body":{"index.html":{}}}],["currentrange",{"_index":1262,"title":{},"body":{"injectables/GridEventService.html":{}}}],["custom",{"_index":2077,"title":{},"body":{"index.html":{}}}],["customizable",{"_index":1933,"title":{},"body":{"changelog.html":{}}}],["customization",{"_index":1973,"title":{},"body":{"changelog.html":{}}}],["damages",{"_index":2331,"title":{},"body":{"license.html":{}}}],["data",{"_index":140,"title":{},"body":{"classes/Cell.html":{},"classes/CellEditRenderer.html":{},"classes/CellPopupRenderer.html":{},"components/CompareFilterRenderer.html":{},"classes/Row.html":{},"classes/RowGroup.html":{},"components/SelectFilterRenderer.html":{},"changelog.html":{},"index.html":{}}}],["data.celldblclick",{"_index":2203,"title":{},"body":{"index.html":{}}}],["data.datacall",{"_index":2116,"title":{},"body":{"index.html":{}}}],["data.rowclick",{"_index":2204,"title":{},"body":{"index.html":{}}}],["data.rowdblclick",{"_index":2205,"title":{},"body":{"index.html":{}}}],["data.warning",{"_index":2206,"title":{},"body":{"index.html":{}}}],["data/config/events",{"_index":1970,"title":{},"body":{"changelog.html":{}}}],["database.newrowpostcallsuccess",{"_index":2184,"title":{},"body":{"index.html":{}}}],["datarequest",{"_index":2107,"title":{},"body":{"index.html":{}}}],["datatype",{"_index":2259,"title":{},"body":{"index.html":{}}}],["date",{"_index":1115,"title":{},"body":{"classes/DateIso8601Formatter.html":{},"classes/DateMsFormatter.html":{},"changelog.html":{},"index.html":{}}}],["dateeditrenderer",{"_index":2261,"title":{},"body":{"index.html":{}}}],["dateiso8601formatter",{"_index":1107,"title":{"classes/DateIso8601Formatter.html":{}},"body":{"classes/DateIso8601Formatter.html":{},"coverage.html":{}}}],["datemsformatter",{"_index":1144,"title":{"classes/DateMsFormatter.html":{}},"body":{"classes/DateMsFormatter.html":{},"coverage.html":{}}}],["dates",{"_index":825,"title":{},"body":{"components/CompareFilterRenderer.html":{},"classes/DateIso8601Formatter.html":{},"components/SelectFilterRenderer.html":{},"changelog.html":{}}}],["dbl",{"_index":1806,"title":{},"body":{"classes/RowDblClickListener.html":{},"coverage.html":{}}}],["dblclick",{"_index":1155,"title":{},"body":{"interfaces/DblClickListener.html":{},"classes/RowDblClickListener.html":{}}}],["dblclick(event",{"_index":1156,"title":{},"body":{"interfaces/DblClickListener.html":{},"classes/RowDblClickListener.html":{}}}],["dblclicklistener",{"_index":1152,"title":{"interfaces/DblClickListener.html":{}},"body":{"interfaces/DblClickListener.html":{},"classes/RowDblClickListener.html":{},"coverage.html":{}}}],["dd",{"_index":1118,"title":{},"body":{"classes/DateIso8601Formatter.html":{}}}],["deal",{"_index":2298,"title":{},"body":{"license.html":{}}}],["dealing",{"_index":1929,"title":{},"body":{"changelog.html":{}}}],["dealings",{"_index":2340,"title":{},"body":{"license.html":{}}}],["declarations",{"_index":1473,"title":{},"body":{"modules/GridModule.html":{},"overview.html":{}}}],["decorators",{"_index":1892,"title":{},"body":{"components/TextFilterRenderer.html":{}}}],["default",{"_index":153,"title":{},"body":{"classes/Cell.html":{},"classes/CellEditRenderer.html":{},"classes/CellHoverPopupListener.html":{},"classes/CellNumberRangeView.html":{},"interfaces/CellViewRenderer.html":{},"classes/CheckRowSelectView.html":{},"classes/ClickCellEditListener.html":{},"classes/ClickRowSelectListener.html":{},"classes/ClickViewListener.html":{},"classes/ColumnDndListener.html":{},"components/ColumnHeaderComponent.html":{},"components/CompareFilterRenderer.html":{},"components/ConfigMenuComponent.html":{},"components/ConfigMultiChoiceComponent.html":{},"classes/DateIso8601Formatter.html":{},"classes/DateMsFormatter.html":{},"classes/EventListener.html":{},"classes/EventMeta.html":{},"classes/FilterRenderer.html":{},"classes/FormatterParser.html":{},"injectables/GridEventService.html":{},"injectables/GridGlobalService.html":{},"injectables/GridMessageService.html":{},"classes/GroupKeyListener.html":{},"classes/NumberFormatter.html":{},"classes/RangeSelectListener.html":{},"classes/Row.html":{},"classes/RowDblClickListener.html":{},"classes/RowGroup.html":{},"components/SelectFilterRenderer.html":{},"components/TextFilterRenderer.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["default.externalgrouping",{"_index":2139,"title":{},"body":{"index.html":{}}}],["defaults",{"_index":2237,"title":{},"body":{"index.html":{}}}],["defined",{"_index":56,"title":{},"body":{"components/BigTextPopup.html":{},"classes/Cell.html":{},"classes/CellEditRenderer.html":{},"classes/CellHoverPopupListener.html":{},"classes/CellNumberRangeView.html":{},"classes/CellPopupRenderer.html":{},"classes/CellTextView.html":{},"interfaces/CellViewRenderer.html":{},"classes/CheckRowSelectView.html":{},"classes/ClickCellEditListener.html":{},"interfaces/ClickListener.html":{},"classes/ClickRowSelectListener.html":{},"classes/ClickView.html":{},"classes/ClickViewListener.html":{},"classes/ColumnDndListener.html":{},"components/ColumnHeaderComponent.html":{},"components/CompareFilterRenderer.html":{},"components/ConfigMenuComponent.html":{},"components/ConfigMultiChoiceComponent.html":{},"classes/DateIso8601Formatter.html":{},"classes/DateMsFormatter.html":{},"interfaces/DblClickListener.html":{},"classes/EmptyFactory.html":{},"classes/EventListener.html":{},"classes/EventMeta.html":{},"classes/FilterRenderer.html":{},"classes/FormatterParser.html":{},"injectables/GridEventService.html":{},"injectables/GridGlobalService.html":{},"injectables/GridMessageService.html":{},"modules/GridModule.html":{},"classes/GroupKeyListener.html":{},"classes/HtmlUtil.html":{},"classes/InjectableFactory.html":{},"pipes/IsFixedPipe.html":{},"pipes/IsGroupPipe.html":{},"pipes/IsRowVisiblePipe.html":{},"pipes/IsVisiblePipe.html":{},"interfaces/MouseDownListener.html":{},"interfaces/MouseDragListener.html":{},"interfaces/MouseOutListener.html":{},"interfaces/MouseOverListener.html":{},"interfaces/MouseUpListener.html":{},"classes/NumberFormatter.html":{},"classes/Point.html":{},"classes/Range.html":{},"classes/RangeSelectListener.html":{},"classes/Row.html":{},"classes/RowChange.html":{},"classes/RowDblClickListener.html":{},"classes/RowGroup.html":{},"classes/RowGroupView.html":{},"components/SelectFilterRenderer.html":{},"components/TextFilterRenderer.html":{}}}],["delay",{"_index":745,"title":{},"body":{"components/ColumnHeaderComponent.html":{},"index.html":{}}}],["demo",{"_index":2054,"title":{},"body":{"index.html":{}}}],["demo/node_modules/hci",{"_index":2281,"title":{},"body":{"index.html":{}}}],["demoif",{"_index":2272,"title":{},"body":{"index.html":{}}}],["demothe",{"_index":2276,"title":{},"body":{"index.html":{}}}],["dependencies",{"_index":1472,"title":{"dependencies.html":{}},"body":{"modules/GridModule.html":{},"dependencies.html":{},"index.html":{},"overview.html":{}}}],["dependency",{"_index":2283,"title":{},"body":{"index.html":{}}}],["depending",{"_index":2179,"title":{},"body":{"index.html":{}}}],["description",{"_index":137,"title":{},"body":{"classes/Cell.html":{},"classes/CellEditRenderer.html":{},"classes/CellPopupRenderer.html":{},"interfaces/CellViewRenderer.html":{},"classes/ColumnDndListener.html":{},"components/ColumnHeaderComponent.html":{},"components/CompareFilterRenderer.html":{},"classes/DateIso8601Formatter.html":{},"classes/EmptyFactory.html":{},"classes/EventListener.html":{},"classes/FormatterParser.html":{},"injectables/GridEventService.html":{},"injectables/GridGlobalService.html":{},"classes/HtmlUtil.html":{},"classes/InjectableFactory.html":{},"classes/NumberFormatter.html":{},"classes/RangeSelectListener.html":{},"components/SelectFilterRenderer.html":{}}}],["deselect",{"_index":1861,"title":{},"body":{"components/SelectFilterRenderer.html":{}}}],["deselectall",{"_index":1863,"title":{},"body":{"components/SelectFilterRenderer.html":{}}}],["designed",{"_index":420,"title":{},"body":{"classes/CellPopupRenderer.html":{},"classes/DateIso8601Formatter.html":{},"index.html":{}}}],["detects",{"_index":1718,"title":{},"body":{"classes/RangeSelectListener.html":{}}}],["determined",{"_index":2202,"title":{},"body":{"index.html":{}}}],["dictionary",{"_index":1012,"title":{"interfaces/Dictionary.html":{}},"body":{"components/ConfigMenuComponent.html":{},"interfaces/Dictionary.html":{},"injectables/GridGlobalService.html":{},"coverage.html":{}}}],["difference",{"_index":2255,"title":{},"body":{"index.html":{}}}],["different",{"_index":821,"title":{},"body":{"components/CompareFilterRenderer.html":{},"components/SelectFilterRenderer.html":{}}}],["direction",{"_index":1300,"title":{},"body":{"injectables/GridEventService.html":{}}}],["directive",{"_index":103,"title":{},"body":{"components/BigTextPopup.html":{},"components/ColumnHeaderComponent.html":{},"components/CompareFilterRenderer.html":{},"components/ConfigMenuComponent.html":{},"components/ConfigMultiChoiceComponent.html":{},"components/SelectFilterRenderer.html":{},"components/TextFilterRenderer.html":{}}}],["directives",{"_index":130,"title":{},"body":{"components/BigTextPopup.html":{},"components/ColumnHeaderComponent.html":{},"components/CompareFilterRenderer.html":{},"components/ConfigMenuComponent.html":{},"components/ConfigMultiChoiceComponent.html":{},"components/SelectFilterRenderer.html":{},"components/TextFilterRenderer.html":{}}}],["dirty",{"_index":144,"title":{},"body":{"classes/Cell.html":{},"index.html":{}}}],["disabled",{"_index":2137,"title":{},"body":{"index.html":{}}}],["display",{"_index":407,"title":{},"body":{"classes/CellNumberRangeView.html":{},"classes/CellTextView.html":{},"components/ColumnHeaderComponent.html":{},"components/CompareFilterRenderer.html":{},"components/ConfigMenuComponent.html":{},"components/ConfigMultiChoiceComponent.html":{},"interfaces/Dictionary.html":{},"injectables/GridGlobalService.html":{},"classes/RowGroupView.html":{},"components/SelectFilterRenderer.html":{},"changelog.html":{},"index.html":{}}}],["dist",{"_index":2073,"title":{},"body":{"index.html":{}}}],["distribute",{"_index":2305,"title":{},"body":{"license.html":{}}}],["div",{"_index":397,"title":{},"body":{"classes/CellNumberRangeView.html":{},"classes/RowGroupView.html":{}}}],["dnd.listener.ts",{"_index":608,"title":{},"body":{"classes/ColumnDndListener.html":{},"coverage.html":{}}}],["dnd.listener.ts:111",{"_index":636,"title":{},"body":{"classes/ColumnDndListener.html":{}}}],["dnd.listener.ts:15",{"_index":629,"title":{},"body":{"classes/ColumnDndListener.html":{}}}],["dnd.listener.ts:16",{"_index":627,"title":{},"body":{"classes/ColumnDndListener.html":{}}}],["dnd.listener.ts:17",{"_index":630,"title":{},"body":{"classes/ColumnDndListener.html":{}}}],["dnd.listener.ts:18",{"_index":625,"title":{},"body":{"classes/ColumnDndListener.html":{}}}],["dnd.listener.ts:19",{"_index":626,"title":{},"body":{"classes/ColumnDndListener.html":{}}}],["dnd.listener.ts:20",{"_index":628,"title":{},"body":{"classes/ColumnDndListener.html":{}}}],["dnd.listener.ts:22",{"_index":632,"title":{},"body":{"classes/ColumnDndListener.html":{}}}],["dnd.listener.ts:61",{"_index":638,"title":{},"body":{"classes/ColumnDndListener.html":{}}}],["dnd.listener.ts:94",{"_index":634,"title":{},"body":{"classes/ColumnDndListener.html":{}}}],["dob",{"_index":2257,"title":{},"body":{"index.html":{}}}],["document.body.offsetheight",{"_index":455,"title":{},"body":{"classes/CellPopupRenderer.html":{}}}],["document.body.offsetwidth",{"_index":454,"title":{},"body":{"classes/CellPopupRenderer.html":{}}}],["document:click",{"_index":717,"title":{},"body":{"components/ColumnHeaderComponent.html":{}}}],["document:click(event",{"_index":725,"title":{},"body":{"components/ColumnHeaderComponent.html":{}}}],["documentation",{"_index":1989,"title":{},"body":{"coverage.html":{},"license.html":{}}}],["doesn't",{"_index":2273,"title":{},"body":{"index.html":{}}}],["dom",{"_index":6,"title":{},"body":{"components/BigTextPopup.html":{},"components/ColumnHeaderComponent.html":{},"components/CompareFilterRenderer.html":{},"components/ConfigMenuComponent.html":{},"components/ConfigMultiChoiceComponent.html":{},"components/SelectFilterRenderer.html":{},"components/TextFilterRenderer.html":{}}}],["don't",{"_index":2161,"title":{},"body":{"index.html":{}}}],["dosort",{"_index":709,"title":{},"body":{"components/ColumnHeaderComponent.html":{}}}],["dosort(event",{"_index":727,"title":{},"body":{"components/ColumnHeaderComponent.html":{}}}],["down",{"_index":1305,"title":{},"body":{"injectables/GridEventService.html":{},"classes/RangeSelectListener.html":{}}}],["down.interface",{"_index":639,"title":{},"body":{"classes/ColumnDndListener.html":{},"classes/RangeSelectListener.html":{}}}],["down.interface.ts",{"_index":1602,"title":{},"body":{"interfaces/MouseDownListener.html":{},"coverage.html":{}}}],["down.interface.ts:3",{"_index":1603,"title":{},"body":{"interfaces/MouseDownListener.html":{}}}],["drag",{"_index":609,"title":{},"body":{"classes/ColumnDndListener.html":{},"classes/RangeSelectListener.html":{},"changelog.html":{}}}],["drag.interface",{"_index":640,"title":{},"body":{"classes/ColumnDndListener.html":{},"classes/RangeSelectListener.html":{}}}],["drag.interface.ts",{"_index":1604,"title":{},"body":{"interfaces/MouseDragListener.html":{},"coverage.html":{}}}],["drag.interface.ts:3",{"_index":1605,"title":{},"body":{"interfaces/MouseDragListener.html":{}}}],["dragging",{"_index":617,"title":{},"body":{"classes/ColumnDndListener.html":{},"classes/RangeSelectListener.html":{}}}],["drop",{"_index":662,"title":{},"body":{"classes/ColumnDndListener.html":{},"changelog.html":{}}}],["dropdown",{"_index":696,"title":{},"body":{"components/ColumnHeaderComponent.html":{}}}],["dto",{"_index":750,"title":{},"body":{"components/ColumnHeaderComponent.html":{},"components/CompareFilterRenderer.html":{},"classes/FilterRenderer.html":{},"injectables/GridGlobalService.html":{},"classes/RowGroup.html":{},"components/SelectFilterRenderer.html":{},"components/TextFilterRenderer.html":{},"changelog.html":{},"dependencies.html":{}}}],["dx",{"_index":1294,"title":{},"body":{"injectables/GridEventService.html":{}}}],["dx+1",{"_index":1308,"title":{},"body":{"injectables/GridEventService.html":{}}}],["dy",{"_index":1295,"title":{},"body":{"injectables/GridEventService.html":{}}}],["dy=0",{"_index":1301,"title":{},"body":{"injectables/GridEventService.html":{}}}],["dynamically",{"_index":167,"title":{},"body":{"classes/CellEditRenderer.html":{},"classes/CellHoverPopupListener.html":{},"classes/ClickCellEditListener.html":{},"classes/ClickRowSelectListener.html":{},"classes/ClickViewListener.html":{},"classes/ColumnDndListener.html":{},"classes/EventListener.html":{},"classes/GroupKeyListener.html":{},"classes/RangeSelectListener.html":{},"classes/RowDblClickListener.html":{}}}],["e",{"_index":312,"title":{},"body":{"classes/CellEditRenderer.html":{},"classes/CellNumberRangeView.html":{},"components/CompareFilterRenderer.html":{},"classes/HtmlUtil.html":{},"classes/Point.html":{},"components/SelectFilterRenderer.html":{}}}],["e.g",{"_index":2127,"title":{},"body":{"index.html":{}}}],["e.id",{"_index":1561,"title":{},"body":{"classes/HtmlUtil.html":{}}}],["e.id.startswith(id",{"_index":1562,"title":{},"body":{"classes/HtmlUtil.html":{}}}],["e.parentelement",{"_index":1563,"title":{},"body":{"classes/HtmlUtil.html":{}}}],["each",{"_index":2245,"title":{},"body":{"index.html":{}}}],["edit",{"_index":160,"title":{},"body":{"classes/CellEditRenderer.html":{},"modules/GridModule.html":{},"coverage.html":{}}}],["edit'},{'name",{"_index":110,"title":{},"body":{"components/BigTextPopup.html":{},"components/ColumnHeaderComponent.html":{},"components/CompareFilterRenderer.html":{},"components/ConfigMenuComponent.html":{},"components/ConfigMultiChoiceComponent.html":{},"components/SelectFilterRenderer.html":{},"components/TextFilterRenderer.html":{}}}],["edit.listener.ts",{"_index":536,"title":{},"body":{"classes/ClickCellEditListener.html":{},"coverage.html":{}}}],["edit.listener.ts:10",{"_index":540,"title":{},"body":{"classes/ClickCellEditListener.html":{}}}],["editable",{"_index":496,"title":{},"body":{"interfaces/CellViewRenderer.html":{},"classes/ClickCellEditListener.html":{}}}],["editor",{"_index":78,"title":{},"body":{"components/BigTextPopup.html":{},"classes/CellEditRenderer.html":{},"classes/CellPopupRenderer.html":{}}}],["editrenderer",{"_index":2260,"title":{},"body":{"index.html":{}}}],["eicon",{"_index":588,"title":{},"body":{"classes/ClickView.html":{}}}],["el",{"_index":720,"title":{},"body":{"components/ColumnHeaderComponent.html":{}}}],["element",{"_index":102,"title":{},"body":{"components/BigTextPopup.html":{},"components/ColumnHeaderComponent.html":{},"components/CompareFilterRenderer.html":{},"components/ConfigMenuComponent.html":{},"components/ConfigMultiChoiceComponent.html":{},"classes/HtmlUtil.html":{},"components/SelectFilterRenderer.html":{},"components/TextFilterRenderer.html":{}}}],["elementref",{"_index":45,"title":{},"body":{"components/BigTextPopup.html":{},"classes/CellEditRenderer.html":{},"classes/CellPopupRenderer.html":{},"components/ColumnHeaderComponent.html":{},"components/CompareFilterRenderer.html":{},"classes/FilterRenderer.html":{},"components/SelectFilterRenderer.html":{},"components/TextFilterRenderer.html":{}}}],["ellipsis",{"_index":468,"title":{},"body":{"classes/CellTextView.html":{},"components/ColumnHeaderComponent.html":{},"classes/RowGroupView.html":{}}}],["emit",{"_index":602,"title":{},"body":{"classes/ClickViewListener.html":{},"index.html":{}}}],["emits",{"_index":1261,"title":{},"body":{"injectables/GridEventService.html":{},"index.html":{}}}],["emitted",{"_index":2229,"title":{},"body":{"index.html":{}}}],["emitters",{"_index":1935,"title":{},"body":{"changelog.html":{}}}],["empty",{"_index":1936,"title":{},"body":{"changelog.html":{}}}],["emptyconstructor",{"_index":1159,"title":{"interfaces/EmptyConstructor.html":{}},"body":{"interfaces/EmptyConstructor.html":{},"classes/EmptyFactory.html":{},"coverage.html":{}}}],["emptyfactory",{"_index":1161,"title":{"classes/EmptyFactory.html":{}},"body":{"interfaces/EmptyConstructor.html":{},"classes/EmptyFactory.html":{},"coverage.html":{}}}],["entrycomponents",{"_index":1486,"title":{},"body":{"modules/GridModule.html":{}}}],["equal",{"_index":907,"title":{},"body":{"components/CompareFilterRenderer.html":{}}}],["equals",{"_index":1620,"title":{},"body":{"classes/Point.html":{},"classes/Row.html":{}}}],["equals(other",{"_index":1635,"title":{},"body":{"classes/Point.html":{}}}],["equals(row",{"_index":1759,"title":{},"body":{"classes/Row.html":{}}}],["equalsij",{"_index":1621,"title":{},"body":{"classes/Point.html":{}}}],["equalsij(i",{"_index":1637,"title":{},"body":{"classes/Point.html":{}}}],["error",{"_index":954,"title":{},"body":{"components/CompareFilterRenderer.html":{},"injectables/GridMessageService.html":{},"index.html":{}}}],["error(\"could",{"_index":1140,"title":{},"body":{"classes/DateIso8601Formatter.html":{},"classes/DateMsFormatter.html":{}}}],["error(message",{"_index":1454,"title":{},"body":{"injectables/GridMessageService.html":{}}}],["error.3.0.0",{"_index":1938,"title":{},"body":{"changelog.html":{}}}],["especially",{"_index":1978,"title":{},"body":{"changelog.html":{}}}],["event",{"_index":219,"title":{},"body":{"classes/CellEditRenderer.html":{},"classes/CellHoverPopupListener.html":{},"classes/ClickCellEditListener.html":{},"interfaces/ClickListener.html":{},"classes/ClickRowSelectListener.html":{},"classes/ClickViewListener.html":{},"classes/ColumnDndListener.html":{},"components/ColumnHeaderComponent.html":{},"components/CompareFilterRenderer.html":{},"components/ConfigMenuComponent.html":{},"components/ConfigMultiChoiceComponent.html":{},"interfaces/DblClickListener.html":{},"classes/EventListener.html":{},"classes/FilterRenderer.html":{},"classes/GroupKeyListener.html":{},"interfaces/MouseDownListener.html":{},"interfaces/MouseDragListener.html":{},"interfaces/MouseOutListener.html":{},"interfaces/MouseOverListener.html":{},"interfaces/MouseUpListener.html":{},"classes/RangeSelectListener.html":{},"classes/RowDblClickListener.html":{},"components/SelectFilterRenderer.html":{},"components/TextFilterRenderer.html":{},"index.html":{},"license.html":{}}}],["event.clientx",{"_index":680,"title":{},"body":{"classes/ColumnDndListener.html":{},"components/ColumnHeaderComponent.html":{}}}],["event.clienty",{"_index":682,"title":{},"body":{"classes/ColumnDndListener.html":{},"components/ColumnHeaderComponent.html":{}}}],["event.ctrlkey",{"_index":796,"title":{},"body":{"components/ColumnHeaderComponent.html":{}}}],["event.keycode",{"_index":1095,"title":{},"body":{"components/ConfigMultiChoiceComponent.html":{}}}],["event.preventdefault",{"_index":301,"title":{},"body":{"classes/CellEditRenderer.html":{},"classes/ColumnDndListener.html":{},"classes/RangeSelectListener.html":{}}}],["event.service",{"_index":261,"title":{},"body":{"classes/CellEditRenderer.html":{},"classes/EventListener.html":{}}}],["event.service.ts",{"_index":1255,"title":{},"body":{"injectables/GridEventService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["event.service.ts:108",{"_index":1336,"title":{},"body":{"injectables/GridEventService.html":{}}}],["event.service.ts:130",{"_index":1312,"title":{},"body":{"injectables/GridEventService.html":{}}}],["event.service.ts:151",{"_index":1296,"title":{},"body":{"injectables/GridEventService.html":{}}}],["event.service.ts:208",{"_index":1338,"title":{},"body":{"injectables/GridEventService.html":{}}}],["event.service.ts:218",{"_index":1326,"title":{},"body":{"injectables/GridEventService.html":{}}}],["event.service.ts:23",{"_index":1343,"title":{},"body":{"injectables/GridEventService.html":{}}}],["event.service.ts:234",{"_index":1317,"title":{},"body":{"injectables/GridEventService.html":{}}}],["event.service.ts:238",{"_index":1318,"title":{},"body":{"injectables/GridEventService.html":{}}}],["event.service.ts:24",{"_index":1344,"title":{},"body":{"injectables/GridEventService.html":{}}}],["event.service.ts:242",{"_index":1322,"title":{},"body":{"injectables/GridEventService.html":{}}}],["event.service.ts:246",{"_index":1320,"title":{},"body":{"injectables/GridEventService.html":{}}}],["event.service.ts:25",{"_index":1345,"title":{},"body":{"injectables/GridEventService.html":{}}}],["event.service.ts:250",{"_index":1321,"title":{},"body":{"injectables/GridEventService.html":{}}}],["event.service.ts:254",{"_index":1323,"title":{},"body":{"injectables/GridEventService.html":{}}}],["event.service.ts:258",{"_index":1324,"title":{},"body":{"injectables/GridEventService.html":{}}}],["event.service.ts:262",{"_index":1325,"title":{},"body":{"injectables/GridEventService.html":{}}}],["event.service.ts:27",{"_index":1347,"title":{},"body":{"injectables/GridEventService.html":{}}}],["event.service.ts:29",{"_index":1339,"title":{},"body":{"injectables/GridEventService.html":{}}}],["event.service.ts:30",{"_index":1346,"title":{},"body":{"injectables/GridEventService.html":{}}}],["event.service.ts:32",{"_index":1340,"title":{},"body":{"injectables/GridEventService.html":{}}}],["event.service.ts:33",{"_index":1341,"title":{},"body":{"injectables/GridEventService.html":{}}}],["event.service.ts:34",{"_index":1342,"title":{},"body":{"injectables/GridEventService.html":{}}}],["event.service.ts:36",{"_index":1292,"title":{},"body":{"injectables/GridEventService.html":{}}}],["event.service.ts:48",{"_index":1316,"title":{},"body":{"injectables/GridEventService.html":{}}}],["event.service.ts:52",{"_index":1319,"title":{},"body":{"injectables/GridEventService.html":{}}}],["event.service.ts:56",{"_index":1332,"title":{},"body":{"injectables/GridEventService.html":{}}}],["event.service.ts:60",{"_index":1328,"title":{},"body":{"injectables/GridEventService.html":{}}}],["event.service.ts:69",{"_index":1315,"title":{},"body":{"injectables/GridEventService.html":{}}}],["event.service.ts:75",{"_index":1330,"title":{},"body":{"injectables/GridEventService.html":{}}}],["event.service.ts:92",{"_index":1334,"title":{},"body":{"injectables/GridEventService.html":{}}}],["event.stoppropagation",{"_index":300,"title":{},"body":{"classes/CellEditRenderer.html":{},"classes/ClickRowSelectListener.html":{},"classes/ClickViewListener.html":{},"classes/ColumnDndListener.html":{},"components/ConfigMultiChoiceComponent.html":{},"classes/FilterRenderer.html":{},"classes/GroupKeyListener.html":{},"classes/RangeSelectListener.html":{},"classes/RowDblClickListener.html":{},"components/TextFilterRenderer.html":{}}}],["event.target).closest(\".hci",{"_index":671,"title":{},"body":{"classes/ColumnDndListener.html":{}}}],["event.target).closest(\"hci",{"_index":684,"title":{},"body":{"classes/ColumnDndListener.html":{}}}],["event.target).id",{"_index":347,"title":{},"body":{"classes/CellHoverPopupListener.html":{},"classes/ColumnDndListener.html":{},"classes/RangeSelectListener.html":{}}}],["event.target).value",{"_index":1094,"title":{},"body":{"components/ConfigMultiChoiceComponent.html":{}}}],["eventemitter",{"_index":872,"title":{},"body":{"components/CompareFilterRenderer.html":{},"components/ConfigMultiChoiceComponent.html":{},"classes/FilterRenderer.html":{},"components/SelectFilterRenderer.html":{},"components/TextFilterRenderer.html":{}}}],["eventlistener",{"_index":318,"title":{"classes/EventListener.html":{}},"body":{"classes/CellHoverPopupListener.html":{},"classes/ClickCellEditListener.html":{},"classes/ClickRowSelectListener.html":{},"classes/ClickViewListener.html":{},"classes/ColumnDndListener.html":{},"classes/EventListener.html":{},"classes/GroupKeyListener.html":{},"interfaces/InjectableConstructor.html":{},"classes/InjectableFactory.html":{},"classes/RangeSelectListener.html":{},"classes/RowDblClickListener.html":{},"coverage.html":{}}}],["eventlistener:12",{"_index":327,"title":{},"body":{"classes/CellHoverPopupListener.html":{},"classes/ClickCellEditListener.html":{},"classes/ClickRowSelectListener.html":{},"classes/ClickViewListener.html":{},"classes/ColumnDndListener.html":{},"classes/GroupKeyListener.html":{},"classes/RangeSelectListener.html":{},"classes/RowDblClickListener.html":{}}}],["eventlistener:13",{"_index":324,"title":{},"body":{"classes/CellHoverPopupListener.html":{},"classes/ClickCellEditListener.html":{},"classes/ClickRowSelectListener.html":{},"classes/ClickViewListener.html":{},"classes/ColumnDndListener.html":{},"classes/GroupKeyListener.html":{},"classes/RangeSelectListener.html":{},"classes/RowDblClickListener.html":{}}}],["eventlistener:14",{"_index":326,"title":{},"body":{"classes/CellHoverPopupListener.html":{},"classes/ClickCellEditListener.html":{},"classes/ClickRowSelectListener.html":{},"classes/ClickViewListener.html":{},"classes/ColumnDndListener.html":{},"classes/GroupKeyListener.html":{},"classes/RangeSelectListener.html":{},"classes/RowDblClickListener.html":{}}}],["eventlistener:15",{"_index":325,"title":{},"body":{"classes/CellHoverPopupListener.html":{},"classes/ClickCellEditListener.html":{},"classes/ClickRowSelectListener.html":{},"classes/ClickViewListener.html":{},"classes/ColumnDndListener.html":{},"classes/GroupKeyListener.html":{},"classes/RangeSelectListener.html":{},"classes/RowDblClickListener.html":{}}}],["eventlistener:26",{"_index":330,"title":{},"body":{"classes/CellHoverPopupListener.html":{},"classes/ClickCellEditListener.html":{},"classes/ClickRowSelectListener.html":{},"classes/ClickViewListener.html":{},"classes/ColumnDndListener.html":{},"classes/GroupKeyListener.html":{},"classes/RangeSelectListener.html":{},"classes/RowDblClickListener.html":{}}}],["eventlistener:41",{"_index":332,"title":{},"body":{"classes/CellHoverPopupListener.html":{},"classes/ClickCellEditListener.html":{},"classes/ClickRowSelectListener.html":{},"classes/ClickViewListener.html":{},"classes/ColumnDndListener.html":{},"classes/GroupKeyListener.html":{},"classes/RangeSelectListener.html":{},"classes/RowDblClickListener.html":{}}}],["eventlistenerarg",{"_index":1192,"title":{"interfaces/EventListenerArg.html":{}},"body":{"interfaces/EventListenerArg.html":{},"coverage.html":{},"index.html":{}}}],["eventmeta",{"_index":1194,"title":{"classes/EventMeta.html":{}},"body":{"classes/EventMeta.html":{},"injectables/GridEventService.html":{},"coverage.html":{}}}],["eventmeta.ctrl",{"_index":1373,"title":{},"body":{"injectables/GridEventService.html":{}}}],["eventmeta.isnull",{"_index":1371,"title":{},"body":{"injectables/GridEventService.html":{}}}],["events",{"_index":1174,"title":{},"body":{"classes/EventListener.html":{},"injectables/GridEventService.html":{},"classes/RangeSelectListener.html":{},"changelog.html":{},"index.html":{}}}],["events.mode",{"_index":2164,"title":{},"body":{"index.html":{}}}],["example",{"_index":492,"title":{},"body":{"interfaces/CellViewRenderer.html":{},"components/CompareFilterRenderer.html":{},"injectables/GridEventService.html":{},"components/SelectFilterRenderer.html":{},"index.html":{}}}],["examples",{"_index":426,"title":{},"body":{"classes/CellPopupRenderer.html":{},"index.html":{}}}],["expand",{"_index":1851,"title":{},"body":{"classes/RowGroupView.html":{}}}],["expanded",{"_index":1815,"title":{},"body":{"classes/RowGroup.html":{}}}],["expected",{"_index":2061,"title":{},"body":{"index.html":{}}}],["expects",{"_index":1567,"title":{},"body":{"interfaces/InjectableConstructor.html":{},"classes/InjectableFactory.html":{}}}],["export",{"_index":95,"title":{},"body":{"components/BigTextPopup.html":{},"classes/Cell.html":{},"classes/CellEditRenderer.html":{},"classes/CellHoverPopupListener.html":{},"classes/CellNumberRangeView.html":{},"classes/CellPopupRenderer.html":{},"classes/CellTextView.html":{},"interfaces/CellViewRenderer.html":{},"classes/CheckRowSelectView.html":{},"classes/ClickCellEditListener.html":{},"interfaces/ClickListener.html":{},"classes/ClickRowSelectListener.html":{},"classes/ClickView.html":{},"classes/ClickViewListener.html":{},"classes/ColumnDndListener.html":{},"components/ColumnHeaderComponent.html":{},"components/CompareFilterRenderer.html":{},"components/ConfigMenuComponent.html":{},"components/ConfigMultiChoiceComponent.html":{},"classes/DateIso8601Formatter.html":{},"classes/DateMsFormatter.html":{},"interfaces/DblClickListener.html":{},"interfaces/Dictionary.html":{},"interfaces/EmptyConstructor.html":{},"classes/EmptyFactory.html":{},"classes/EventListener.html":{},"interfaces/EventListenerArg.html":{},"classes/EventMeta.html":{},"classes/FilterRenderer.html":{},"classes/FormatterParser.html":{},"injectables/GridEventService.html":{},"injectables/GridGlobalService.html":{},"injectables/GridMessageService.html":{},"modules/GridModule.html":{},"classes/GroupKeyListener.html":{},"classes/HtmlUtil.html":{},"interfaces/InjectableConstructor.html":{},"classes/InjectableFactory.html":{},"pipes/IsFixedPipe.html":{},"pipes/IsGroupPipe.html":{},"pipes/IsRowVisiblePipe.html":{},"pipes/IsVisiblePipe.html":{},"interfaces/MouseDownListener.html":{},"interfaces/MouseDragListener.html":{},"interfaces/MouseOutListener.html":{},"interfaces/MouseOverListener.html":{},"interfaces/MouseUpListener.html":{},"classes/NumberFormatter.html":{},"classes/Point.html":{},"classes/Range.html":{},"classes/RangeSelectListener.html":{},"classes/Row.html":{},"classes/RowChange.html":{},"classes/RowDblClickListener.html":{},"classes/RowGroup.html":{},"classes/RowGroupView.html":{},"components/SelectFilterRenderer.html":{},"components/TextFilterRenderer.html":{}}}],["exports",{"_index":1475,"title":{},"body":{"modules/GridModule.html":{},"overview.html":{}}}],["express",{"_index":2320,"title":{},"body":{"license.html":{}}}],["extends",{"_index":11,"title":{},"body":{"components/BigTextPopup.html":{},"classes/CellHoverPopupListener.html":{},"classes/ClickCellEditListener.html":{},"classes/ClickRowSelectListener.html":{},"classes/ClickViewListener.html":{},"classes/ColumnDndListener.html":{},"components/CompareFilterRenderer.html":{},"classes/DateIso8601Formatter.html":{},"classes/DateMsFormatter.html":{},"classes/GroupKeyListener.html":{},"classes/NumberFormatter.html":{},"classes/RangeSelectListener.html":{},"classes/RowDblClickListener.html":{},"components/SelectFilterRenderer.html":{},"components/TextFilterRenderer.html":{},"index.html":{}}}],["extension",{"_index":166,"title":{},"body":{"classes/CellEditRenderer.html":{}}}],["external",{"_index":1913,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["external.externalfiltering",{"_index":2142,"title":{},"body":{"index.html":{}}}],["external.pagesize",{"_index":2145,"title":{},"body":{"index.html":{}}}],["externalconfig",{"_index":1943,"title":{},"body":{"changelog.html":{}}}],["externaldata(this.datageneratorservice.getdata(250",{"_index":2111,"title":{},"body":{"index.html":{}}}],["externalinfo",{"_index":2108,"title":{},"body":{"index.html":{}}}],["externalinfo)).delay(500",{"_index":2112,"title":{},"body":{"index.html":{}}}],["f0f0f0",{"_index":984,"title":{},"body":{"components/ConfigMenuComponent.html":{}}}],["fa",{"_index":414,"title":{},"body":{"classes/CellNumberRangeView.html":{},"classes/CheckRowSelectView.html":{},"classes/ClickView.html":{},"classes/RowGroupView.html":{}}}],["factory",{"_index":757,"title":{},"body":{"components/ColumnHeaderComponent.html":{}}}],["fade",{"_index":842,"title":{},"body":{"components/CompareFilterRenderer.html":{},"components/SelectFilterRenderer.html":{}}}],["false",{"_index":154,"title":{},"body":{"classes/Cell.html":{},"classes/CellEditRenderer.html":{},"classes/CellHoverPopupListener.html":{},"classes/CellNumberRangeView.html":{},"classes/CheckRowSelectView.html":{},"classes/ClickCellEditListener.html":{},"classes/ClickRowSelectListener.html":{},"classes/ClickViewListener.html":{},"classes/ColumnDndListener.html":{},"components/ColumnHeaderComponent.html":{},"components/CompareFilterRenderer.html":{},"components/ConfigMultiChoiceComponent.html":{},"classes/EventMeta.html":{},"classes/FilterRenderer.html":{},"classes/GroupKeyListener.html":{},"pipes/IsFixedPipe.html":{},"classes/Point.html":{},"classes/RangeSelectListener.html":{},"classes/Row.html":{},"classes/RowDblClickListener.html":{},"classes/RowGroup.html":{},"components/SelectFilterRenderer.html":{},"components/TextFilterRenderer.html":{},"index.html":{}}}],["far",{"_index":505,"title":{},"body":{"classes/CheckRowSelectView.html":{}}}],["fas",{"_index":413,"title":{},"body":{"classes/CellNumberRangeView.html":{},"classes/CheckRowSelectView.html":{},"classes/ClickView.html":{},"classes/RowGroupView.html":{}}}],["featured",{"_index":2057,"title":{},"body":{"index.html":{}}}],["features",{"_index":1987,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["female",{"_index":2263,"title":{},"body":{"index.html":{}}}],["few",{"_index":820,"title":{},"body":{"components/CompareFilterRenderer.html":{},"components/SelectFilterRenderer.html":{}}}],["field",{"_index":1030,"title":{},"body":{"components/ConfigMenuComponent.html":{},"injectables/GridGlobalService.html":{},"index.html":{}}}],["fields",{"_index":1918,"title":{},"body":{"changelog.html":{}}}],["file",{"_index":8,"title":{},"body":{"components/BigTextPopup.html":{},"classes/Cell.html":{},"classes/CellEditRenderer.html":{},"classes/CellHoverPopupListener.html":{},"classes/CellNumberRangeView.html":{},"classes/CellPopupRenderer.html":{},"classes/CellTextView.html":{},"interfaces/CellViewRenderer.html":{},"classes/CheckRowSelectView.html":{},"classes/ClickCellEditListener.html":{},"interfaces/ClickListener.html":{},"classes/ClickRowSelectListener.html":{},"classes/ClickView.html":{},"classes/ClickViewListener.html":{},"classes/ColumnDndListener.html":{},"components/ColumnHeaderComponent.html":{},"components/CompareFilterRenderer.html":{},"components/ConfigMenuComponent.html":{},"components/ConfigMultiChoiceComponent.html":{},"classes/DateIso8601Formatter.html":{},"classes/DateMsFormatter.html":{},"interfaces/DblClickListener.html":{},"interfaces/Dictionary.html":{},"interfaces/EmptyConstructor.html":{},"classes/EmptyFactory.html":{},"classes/EventListener.html":{},"interfaces/EventListenerArg.html":{},"classes/EventMeta.html":{},"classes/FilterRenderer.html":{},"classes/FormatterParser.html":{},"injectables/GridEventService.html":{},"injectables/GridGlobalService.html":{},"injectables/GridMessageService.html":{},"modules/GridModule.html":{},"classes/GroupKeyListener.html":{},"classes/HtmlUtil.html":{},"interfaces/InjectableConstructor.html":{},"classes/InjectableFactory.html":{},"pipes/IsFixedPipe.html":{},"pipes/IsGroupPipe.html":{},"pipes/IsRowVisiblePipe.html":{},"pipes/IsVisiblePipe.html":{},"interfaces/MouseDownListener.html":{},"interfaces/MouseDragListener.html":{},"interfaces/MouseOutListener.html":{},"interfaces/MouseOverListener.html":{},"interfaces/MouseUpListener.html":{},"classes/NumberFormatter.html":{},"classes/Point.html":{},"classes/Range.html":{},"classes/RangeSelectListener.html":{},"classes/Row.html":{},"classes/RowChange.html":{},"classes/RowDblClickListener.html":{},"classes/RowGroup.html":{},"classes/RowGroupView.html":{},"components/SelectFilterRenderer.html":{},"components/TextFilterRenderer.html":{},"coverage.html":{}}}],["files",{"_index":2280,"title":{},"body":{"index.html":{},"license.html":{}}}],["filter",{"_index":129,"title":{},"body":{"components/BigTextPopup.html":{},"components/ColumnHeaderComponent.html":{},"components/CompareFilterRenderer.html":{},"components/ConfigMenuComponent.html":{},"components/ConfigMultiChoiceComponent.html":{},"classes/FilterRenderer.html":{},"modules/GridModule.html":{},"components/SelectFilterRenderer.html":{},"components/TextFilterRenderer.html":{},"changelog.html":{},"coverage.html":{},"index.html":{}}}],["filter'},{'name",{"_index":116,"title":{},"body":{"components/BigTextPopup.html":{},"components/ColumnHeaderComponent.html":{},"components/CompareFilterRenderer.html":{},"components/ConfigMenuComponent.html":{},"components/ConfigMultiChoiceComponent.html":{},"components/SelectFilterRenderer.html":{},"components/TextFilterRenderer.html":{}}}],["filtercomponent",{"_index":703,"title":{},"body":{"components/ColumnHeaderComponent.html":{}}}],["filterevent",{"_index":2225,"title":{},"body":{"index.html":{}}}],["filterinfo",{"_index":2215,"title":{},"body":{"index.html":{}}}],["filterinfo.valid",{"_index":775,"title":{},"body":{"components/ColumnHeaderComponent.html":{}}}],["filterinfos",{"_index":2219,"title":{},"body":{"index.html":{}}}],["filtering",{"_index":693,"title":{},"body":{"components/ColumnHeaderComponent.html":{},"changelog.html":{},"index.html":{}}}],["filtermap.get(this.column.field",{"_index":1240,"title":{},"body":{"classes/FilterRenderer.html":{}}}],["filtermap.get(this.column.field).filter((filterinfo",{"_index":774,"title":{},"body":{"components/ColumnHeaderComponent.html":{}}}],["filtermap.has(this.column.field",{"_index":772,"title":{},"body":{"components/ColumnHeaderComponent.html":{},"classes/FilterRenderer.html":{}}}],["filterrenderer",{"_index":737,"title":{"classes/FilterRenderer.html":{}},"body":{"components/ColumnHeaderComponent.html":{},"components/CompareFilterRenderer.html":{},"classes/FilterRenderer.html":{},"components/SelectFilterRenderer.html":{},"components/TextFilterRenderer.html":{},"coverage.html":{},"index.html":{}}}],["filterrenderer:10",{"_index":871,"title":{},"body":{"components/CompareFilterRenderer.html":{},"components/SelectFilterRenderer.html":{},"components/TextFilterRenderer.html":{}}}],["filterrenderer:11",{"_index":873,"title":{},"body":{"components/CompareFilterRenderer.html":{},"components/SelectFilterRenderer.html":{},"components/TextFilterRenderer.html":{}}}],["filterrenderer:13",{"_index":922,"title":{},"body":{"components/CompareFilterRenderer.html":{},"components/SelectFilterRenderer.html":{},"components/TextFilterRenderer.html":{}}}],["filterrenderer:14",{"_index":920,"title":{},"body":{"components/CompareFilterRenderer.html":{},"components/SelectFilterRenderer.html":{},"components/TextFilterRenderer.html":{}}}],["filterrenderer:15",{"_index":924,"title":{},"body":{"components/CompareFilterRenderer.html":{},"components/SelectFilterRenderer.html":{},"components/TextFilterRenderer.html":{}}}],["filterrenderer:16",{"_index":926,"title":{},"body":{"components/CompareFilterRenderer.html":{},"components/SelectFilterRenderer.html":{},"components/TextFilterRenderer.html":{}}}],["filterrenderer:17",{"_index":923,"title":{},"body":{"components/CompareFilterRenderer.html":{},"components/SelectFilterRenderer.html":{},"components/TextFilterRenderer.html":{}}}],["filterrenderer:18",{"_index":921,"title":{},"body":{"components/CompareFilterRenderer.html":{},"components/SelectFilterRenderer.html":{},"components/TextFilterRenderer.html":{}}}],["filterrenderer:19",{"_index":919,"title":{},"body":{"components/CompareFilterRenderer.html":{},"components/SelectFilterRenderer.html":{},"components/TextFilterRenderer.html":{}}}],["filterrenderer:27",{"_index":894,"title":{},"body":{"components/CompareFilterRenderer.html":{},"components/SelectFilterRenderer.html":{},"components/TextFilterRenderer.html":{}}}],["filterrenderer:31",{"_index":893,"title":{},"body":{"components/CompareFilterRenderer.html":{},"components/SelectFilterRenderer.html":{},"components/TextFilterRenderer.html":{}}}],["filterrenderer:35",{"_index":891,"title":{},"body":{"components/CompareFilterRenderer.html":{},"components/SelectFilterRenderer.html":{},"components/TextFilterRenderer.html":{}}}],["filterrenderer:48",{"_index":890,"title":{},"body":{"components/CompareFilterRenderer.html":{},"components/SelectFilterRenderer.html":{},"components/TextFilterRenderer.html":{}}}],["filterrenderer:52",{"_index":892,"title":{},"body":{"components/CompareFilterRenderer.html":{},"components/SelectFilterRenderer.html":{},"components/TextFilterRenderer.html":{}}}],["filterrenderer:56",{"_index":896,"title":{},"body":{"components/CompareFilterRenderer.html":{},"components/SelectFilterRenderer.html":{},"components/TextFilterRenderer.html":{}}}],["filterrenderer:62",{"_index":895,"title":{},"body":{"components/CompareFilterRenderer.html":{},"components/SelectFilterRenderer.html":{},"components/TextFilterRenderer.html":{}}}],["filterrenderer:68",{"_index":898,"title":{},"body":{"components/CompareFilterRenderer.html":{},"components/SelectFilterRenderer.html":{},"components/TextFilterRenderer.html":{}}}],["filterrenderer:72",{"_index":899,"title":{},"body":{"components/CompareFilterRenderer.html":{},"components/SelectFilterRenderer.html":{},"components/TextFilterRenderer.html":{}}}],["filterrenderer:77",{"_index":900,"title":{},"body":{"components/CompareFilterRenderer.html":{},"components/SelectFilterRenderer.html":{},"components/TextFilterRenderer.html":{}}}],["filterrenderers/filter",{"_index":751,"title":{},"body":{"components/ColumnHeaderComponent.html":{}}}],["filters",{"_index":857,"title":{},"body":{"components/CompareFilterRenderer.html":{},"classes/FilterRenderer.html":{},"injectables/GridGlobalService.html":{},"components/SelectFilterRenderer.html":{},"components/TextFilterRenderer.html":{},"index.html":{}}}],["filterssubscribe",{"_index":865,"title":{},"body":{"components/CompareFilterRenderer.html":{},"classes/FilterRenderer.html":{},"components/SelectFilterRenderer.html":{},"components/TextFilterRenderer.html":{}}}],["finally",{"_index":2189,"title":{},"body":{"index.html":{}}}],["fired",{"_index":2221,"title":{},"body":{"index.html":{}}}],["fired.datafiltered",{"_index":2226,"title":{},"body":{"index.html":{}}}],["fired.datasorted",{"_index":2234,"title":{},"body":{"index.html":{}}}],["first",{"_index":428,"title":{},"body":{"classes/CellPopupRenderer.html":{},"index.html":{}}}],["firstname",{"_index":2256,"title":{},"body":{"index.html":{}}}],["firstsort",{"_index":704,"title":{},"body":{"components/ColumnHeaderComponent.html":{}}}],["fitness",{"_index":2324,"title":{},"body":{"license.html":{}}}],["fix",{"_index":883,"title":{},"body":{"components/CompareFilterRenderer.html":{},"changelog.html":{}}}],["fixed",{"_index":447,"title":{},"body":{"classes/CellPopupRenderer.html":{},"classes/ColumnDndListener.html":{},"components/ConfigMenuComponent.html":{},"pipes/IsFixedPipe.html":{},"index.html":{}}}],["fixed.pipe",{"_index":1517,"title":{},"body":{"modules/GridModule.html":{}}}],["fixed.pipe.ts",{"_index":1580,"title":{},"body":{"pipes/IsFixedPipe.html":{},"coverage.html":{}}}],["fixed.pipe.ts:10",{"_index":1585,"title":{},"body":{"pipes/IsFixedPipe.html":{}}}],["fixes",{"_index":1942,"title":{},"body":{"changelog.html":{}}}],["fixes.1.0.0",{"_index":1984,"title":{},"body":{"changelog.html":{}}}],["flag",{"_index":2123,"title":{},"body":{"index.html":{}}}],["flex",{"_index":409,"title":{},"body":{"classes/CellNumberRangeView.html":{},"components/CompareFilterRenderer.html":{},"components/ConfigMenuComponent.html":{},"components/ConfigMultiChoiceComponent.html":{},"classes/RowGroupView.html":{},"components/SelectFilterRenderer.html":{}}}],["flip",{"_index":1847,"title":{},"body":{"classes/RowGroupView.html":{}}}],["flow",{"_index":2173,"title":{},"body":{"index.html":{}}}],["folder",{"_index":2074,"title":{},"body":{"index.html":{}}}],["following",{"_index":2239,"title":{},"body":{"index.html":{},"license.html":{}}}],["font",{"_index":839,"title":{},"body":{"components/CompareFilterRenderer.html":{}}}],["footer",{"_index":2178,"title":{},"body":{"index.html":{}}}],["forces",{"_index":2141,"title":{},"body":{"index.html":{}}}],["form",{"_index":1858,"title":{},"body":{"components/SelectFilterRenderer.html":{}}}],["format",{"_index":171,"title":{},"body":{"classes/CellEditRenderer.html":{},"components/CompareFilterRenderer.html":{},"classes/DateIso8601Formatter.html":{},"classes/DateMsFormatter.html":{},"classes/NumberFormatter.html":{},"index.html":{}}}],["format(value",{"_index":875,"title":{},"body":{"components/CompareFilterRenderer.html":{},"classes/NumberFormatter.html":{}}}],["format.split",{"_index":304,"title":{},"body":{"classes/CellEditRenderer.html":{}}}],["format/parser",{"_index":1945,"title":{},"body":{"changelog.html":{}}}],["formatted",{"_index":471,"title":{},"body":{"classes/CellTextView.html":{}}}],["formattedvalue",{"_index":41,"title":{},"body":{"components/BigTextPopup.html":{}}}],["formatter",{"_index":1134,"title":{},"body":{"classes/DateIso8601Formatter.html":{},"classes/DateMsFormatter.html":{},"classes/FormatterParser.html":{},"classes/NumberFormatter.html":{}}}],["formatterparser",{"_index":1119,"title":{"classes/FormatterParser.html":{}},"body":{"classes/DateIso8601Formatter.html":{},"classes/DateMsFormatter.html":{},"classes/FormatterParser.html":{},"classes/NumberFormatter.html":{},"coverage.html":{}}}],["formatterparser:12",{"_index":1130,"title":{},"body":{"classes/DateIso8601Formatter.html":{},"classes/DateMsFormatter.html":{},"classes/NumberFormatter.html":{}}}],["formatterparser:16",{"_index":1131,"title":{},"body":{"classes/DateIso8601Formatter.html":{},"classes/DateMsFormatter.html":{},"classes/NumberFormatter.html":{}}}],["formatterparser:6",{"_index":1124,"title":{},"body":{"classes/DateIso8601Formatter.html":{},"classes/DateMsFormatter.html":{},"classes/NumberFormatter.html":{}}}],["formatterparser:8",{"_index":1132,"title":{},"body":{"classes/DateIso8601Formatter.html":{},"classes/DateMsFormatter.html":{},"classes/NumberFormatter.html":{}}}],["formatting/parsing",{"_index":1977,"title":{},"body":{"changelog.html":{}}}],["formattype",{"_index":172,"title":{},"body":{"classes/CellEditRenderer.html":{}}}],["formatvalue",{"_index":1120,"title":{},"body":{"classes/DateIso8601Formatter.html":{},"classes/DateMsFormatter.html":{},"classes/FormatterParser.html":{},"classes/NumberFormatter.html":{}}}],["formatvalue(value",{"_index":1125,"title":{},"body":{"classes/DateIso8601Formatter.html":{},"classes/DateMsFormatter.html":{},"classes/FormatterParser.html":{},"classes/NumberFormatter.html":{}}}],["formsmodule",{"_index":1509,"title":{},"body":{"modules/GridModule.html":{}}}],["forroot",{"_index":1488,"title":{},"body":{"modules/GridModule.html":{}}}],["forroot(globalconfig",{"_index":1489,"title":{},"body":{"modules/GridModule.html":{}}}],["free",{"_index":2292,"title":{},"body":{"license.html":{}}}],["from.nvisiblerows",{"_index":2151,"title":{},"body":{"index.html":{}}}],["full",{"_index":432,"title":{},"body":{"classes/CellPopupRenderer.html":{},"index.html":{}}}],["function",{"_index":1934,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["furnished",{"_index":2311,"title":{},"body":{"license.html":{}}}],["gap",{"_index":836,"title":{},"body":{"components/CompareFilterRenderer.html":{},"components/SelectFilterRenderer.html":{}}}],["ge",{"_index":909,"title":{},"body":{"components/CompareFilterRenderer.html":{}}}],["gender",{"_index":2262,"title":{},"body":{"index.html":{}}}],["general",{"_index":988,"title":{},"body":{"components/ConfigMenuComponent.html":{}}}],["generalize",{"_index":1939,"title":{},"body":{"changelog.html":{}}}],["generation",{"_index":1952,"title":{},"body":{"changelog.html":{}}}],["generic",{"_index":1167,"title":{},"body":{"classes/EmptyFactory.html":{},"interfaces/InjectableConstructor.html":{},"classes/InjectableFactory.html":{}}}],["generic.2.1.1",{"_index":1947,"title":{},"body":{"changelog.html":{}}}],["get(i",{"_index":1762,"title":{},"body":{"classes/Row.html":{}}}],["getalt",{"_index":1211,"title":{},"body":{"classes/EventMeta.html":{}}}],["getchoice",{"_index":457,"title":{},"body":{"classes/CellTextView.html":{},"classes/RowGroupView.html":{}}}],["getchoice(value",{"_index":458,"title":{},"body":{"classes/CellTextView.html":{},"classes/RowGroupView.html":{}}}],["getconcatenatedcells",{"_index":1742,"title":{},"body":{"classes/Row.html":{}}}],["getconfig",{"_index":866,"title":{},"body":{"components/CompareFilterRenderer.html":{},"classes/FilterRenderer.html":{},"components/SelectFilterRenderer.html":{},"components/TextFilterRenderer.html":{}}}],["getctrl",{"_index":1215,"title":{},"body":{"classes/EventMeta.html":{}}}],["getcurrentrange",{"_index":1275,"title":{},"body":{"injectables/GridEventService.html":{}}}],["getdisplay",{"_index":1002,"title":{},"body":{"components/ConfigMenuComponent.html":{},"components/ConfigMultiChoiceComponent.html":{}}}],["getdisplay(choices",{"_index":1011,"title":{},"body":{"components/ConfigMenuComponent.html":{}}}],["getdisplay(o",{"_index":1058,"title":{},"body":{"components/ConfigMultiChoiceComponent.html":{}}}],["getdisplay(themechoices",{"_index":989,"title":{},"body":{"components/ConfigMenuComponent.html":{}}}],["getdisplay(value",{"_index":1077,"title":{},"body":{"components/ConfigMultiChoiceComponent.html":{}}}],["getglobalconfig",{"_index":1402,"title":{},"body":{"injectables/GridGlobalService.html":{}}}],["getgroupkey",{"_index":1769,"title":{},"body":{"classes/Row.html":{}}}],["getheader",{"_index":1743,"title":{},"body":{"classes/Row.html":{}}}],["getheader(headercolumns",{"_index":1765,"title":{},"body":{"classes/Row.html":{}}}],["geti",{"_index":1655,"title":{},"body":{"classes/Point.html":{}}}],["getid",{"_index":1552,"title":{},"body":{"classes/HtmlUtil.html":{}}}],["getid(e",{"_index":1555,"title":{},"body":{"classes/HtmlUtil.html":{}}}],["getidelement",{"_index":1553,"title":{},"body":{"classes/HtmlUtil.html":{}}}],["getidelement(e",{"_index":1557,"title":{},"body":{"classes/HtmlUtil.html":{}}}],["getinstance",{"_index":1162,"title":{},"body":{"interfaces/EmptyConstructor.html":{},"classes/EmptyFactory.html":{},"interfaces/InjectableConstructor.html":{},"classes/InjectableFactory.html":{}}}],["getj",{"_index":1659,"title":{},"body":{"classes/Point.html":{}}}],["getkey",{"_index":1777,"title":{},"body":{"classes/Row.html":{}}}],["getlastdx",{"_index":1276,"title":{},"body":{"injectables/GridEventService.html":{}}}],["getlastdy",{"_index":1277,"title":{},"body":{"injectables/GridEventService.html":{}}}],["getlocation",{"_index":1554,"title":{},"body":{"classes/HtmlUtil.html":{}}}],["getlocation(e",{"_index":1559,"title":{},"body":{"classes/HtmlUtil.html":{}}}],["getmax",{"_index":1696,"title":{},"body":{"classes/Range.html":{}}}],["getmessageobservable",{"_index":1464,"title":{},"body":{"injectables/GridMessageService.html":{}}}],["getmin",{"_index":1692,"title":{},"body":{"classes/Range.html":{}}}],["getpoint",{"_index":1622,"title":{},"body":{"classes/Point.html":{}}}],["getpoint(id",{"_index":1639,"title":{},"body":{"classes/Point.html":{}}}],["getrownum",{"_index":1781,"title":{},"body":{"classes/Row.html":{}}}],["gets",{"_index":2071,"title":{},"body":{"index.html":{}}}],["getselected",{"_index":1785,"title":{},"body":{"classes/Row.html":{}}}],["getselectedlocation",{"_index":1278,"title":{},"body":{"injectables/GridEventService.html":{}}}],["getselectedlocationsubject",{"_index":1279,"title":{},"body":{"injectables/GridEventService.html":{}}}],["getselectedrange",{"_index":1280,"title":{},"body":{"injectables/GridEventService.html":{}}}],["getshift",{"_index":1219,"title":{},"body":{"classes/EventMeta.html":{}}}],["getting",{"_index":1903,"title":{"changelog.html":{},"index.html":{},"license.html":{}},"body":{}}],["getunselectsubject",{"_index":1281,"title":{},"body":{"injectables/GridEventService.html":{}}}],["getvisible",{"_index":1773,"title":{},"body":{"classes/Row.html":{}}}],["github",{"_index":2055,"title":{},"body":{"index.html":{}}}],["global",{"_index":1980,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["global.service",{"_index":1037,"title":{},"body":{"components/ConfigMenuComponent.html":{},"modules/GridModule.html":{}}}],["global.service.ts",{"_index":1393,"title":{},"body":{"injectables/GridGlobalService.html":{},"coverage.html":{}}}],["global.service.ts:15",{"_index":1423,"title":{},"body":{"injectables/GridGlobalService.html":{}}}],["global.service.ts:16",{"_index":1422,"title":{},"body":{"injectables/GridGlobalService.html":{}}}],["global.service.ts:18",{"_index":1426,"title":{},"body":{"injectables/GridGlobalService.html":{}}}],["global.service.ts:21",{"_index":1408,"title":{},"body":{"injectables/GridGlobalService.html":{}}}],["global.service.ts:33",{"_index":1412,"title":{},"body":{"injectables/GridGlobalService.html":{}}}],["global.service.ts:37",{"_index":1416,"title":{},"body":{"injectables/GridGlobalService.html":{}}}],["global.service.ts:41",{"_index":1418,"title":{},"body":{"injectables/GridGlobalService.html":{}}}],["global.service.ts:57",{"_index":1420,"title":{},"body":{"injectables/GridGlobalService.html":{}}}],["global.service.ts:75",{"_index":1414,"title":{},"body":{"injectables/GridGlobalService.html":{}}}],["global.service.ts:83",{"_index":1411,"title":{},"body":{"injectables/GridGlobalService.html":{}}}],["globalconfig",{"_index":1409,"title":{},"body":{"injectables/GridGlobalService.html":{},"modules/GridModule.html":{}}}],["globalconfig.themechoices",{"_index":1430,"title":{},"body":{"injectables/GridGlobalService.html":{}}}],["granted",{"_index":2291,"title":{},"body":{"license.html":{}}}],["gray",{"_index":973,"title":{},"body":{"components/ConfigMenuComponent.html":{}}}],["greater",{"_index":910,"title":{},"body":{"components/CompareFilterRenderer.html":{},"injectables/GridEventService.html":{}}}],["greaterthan",{"_index":1623,"title":{},"body":{"classes/Point.html":{}}}],["greaterthan(other",{"_index":1641,"title":{},"body":{"classes/Point.html":{}}}],["greaterthanorequal",{"_index":1624,"title":{},"body":{"classes/Point.html":{}}}],["greaterthanorequal(other",{"_index":1643,"title":{},"body":{"classes/Point.html":{}}}],["green",{"_index":375,"title":{},"body":{"classes/CellNumberRangeView.html":{},"classes/ClickView.html":{},"components/ConfigMenuComponent.html":{}}}],["grid",{"_index":108,"title":{},"body":{"components/BigTextPopup.html":{},"classes/CellEditRenderer.html":{},"classes/CellHoverPopupListener.html":{},"classes/ClickCellEditListener.html":{},"classes/ClickRowSelectListener.html":{},"classes/ClickViewListener.html":{},"classes/ColumnDndListener.html":{},"components/ColumnHeaderComponent.html":{},"components/CompareFilterRenderer.html":{},"components/ConfigMenuComponent.html":{},"components/ConfigMultiChoiceComponent.html":{},"classes/EventListener.html":{},"classes/FilterRenderer.html":{},"injectables/GridEventService.html":{},"injectables/GridGlobalService.html":{},"classes/GroupKeyListener.html":{},"classes/RangeSelectListener.html":{},"classes/RowDblClickListener.html":{},"classes/RowGroup.html":{},"components/SelectFilterRenderer.html":{},"components/TextFilterRenderer.html":{},"changelog.html":{},"dependencies.html":{},"index.html":{}}}],["grid\";@ngmodule",{"_index":2066,"title":{},"body":{"index.html":{}}}],["grid's",{"_index":2126,"title":{},"body":{"index.html":{}}}],["grid'},{'name",{"_index":123,"title":{},"body":{"components/BigTextPopup.html":{},"components/ColumnHeaderComponent.html":{},"components/CompareFilterRenderer.html":{},"components/ConfigMenuComponent.html":{},"components/ConfigMultiChoiceComponent.html":{},"components/SelectFilterRenderer.html":{},"components/TextFilterRenderer.html":{}}}],["grid.addfilters(field",{"_index":1445,"title":{},"body":{"injectables/GridGlobalService.html":{}}}],["grid.addnewrowbuttonlocation",{"_index":2177,"title":{},"body":{"index.html":{}}}],["grid.cellclick",{"_index":2201,"title":{},"body":{"index.html":{}}}],["grid.component",{"_index":1036,"title":{},"body":{"components/ConfigMenuComponent.html":{},"classes/EventListener.html":{},"modules/GridModule.html":{}}}],["grid.filter",{"_index":1446,"title":{},"body":{"injectables/GridGlobalService.html":{}}}],["grid.groupby",{"_index":2136,"title":{},"body":{"index.html":{}}}],["grid.id",{"_index":1443,"title":{},"body":{"injectables/GridGlobalService.html":{}}}],["grid.linkedgroups",{"_index":2119,"title":{},"body":{"index.html":{}}}],["grid.service",{"_index":1348,"title":{},"body":{"injectables/GridEventService.html":{},"injectables/GridGlobalService.html":{}}}],["grid.theme",{"_index":2133,"title":{},"body":{"index.html":{}}}],["grid.updateconfig(config",{"_index":1444,"title":{},"body":{"injectables/GridGlobalService.html":{}}}],["grid/service",{"_index":1920,"title":{},"body":{"changelog.html":{}}}],["gridarray",{"_index":1439,"title":{},"body":{"injectables/GridGlobalService.html":{}}}],["gridarray.push(gridservice",{"_index":1440,"title":{},"body":{"injectables/GridGlobalService.html":{}}}],["gridcomponent",{"_index":122,"title":{},"body":{"components/BigTextPopup.html":{},"classes/CellHoverPopupListener.html":{},"classes/ClickCellEditListener.html":{},"classes/ClickRowSelectListener.html":{},"classes/ClickViewListener.html":{},"classes/ColumnDndListener.html":{},"components/ColumnHeaderComponent.html":{},"components/CompareFilterRenderer.html":{},"components/ConfigMenuComponent.html":{},"components/ConfigMultiChoiceComponent.html":{},"classes/EventListener.html":{},"modules/GridModule.html":{},"classes/GroupKeyListener.html":{},"classes/RangeSelectListener.html":{},"classes/RowDblClickListener.html":{},"components/SelectFilterRenderer.html":{},"components/TextFilterRenderer.html":{},"coverage.html":{},"overview.html":{}}}],["gridevent.setcurrentlocation",{"_index":1360,"title":{},"body":{"injectables/GridEventService.html":{}}}],["gridevent.setselectedlocation",{"_index":1367,"title":{},"body":{"injectables/GridEventService.html":{}}}],["grideventservice",{"_index":173,"title":{"injectables/GridEventService.html":{}},"body":{"classes/CellEditRenderer.html":{},"classes/CellHoverPopupListener.html":{},"classes/ClickCellEditListener.html":{},"classes/ClickRowSelectListener.html":{},"classes/ClickViewListener.html":{},"classes/ColumnDndListener.html":{},"classes/EventListener.html":{},"injectables/GridEventService.html":{},"modules/GridModule.html":{},"classes/GroupKeyListener.html":{},"classes/RangeSelectListener.html":{},"classes/RowDblClickListener.html":{},"coverage.html":{},"overview.html":{}}}],["gridglobalservice",{"_index":962,"title":{"injectables/GridGlobalService.html":{}},"body":{"components/ConfigMenuComponent.html":{},"injectables/GridGlobalService.html":{},"modules/GridModule.html":{},"coverage.html":{}}}],["gridmessageservice",{"_index":1447,"title":{"injectables/GridMessageService.html":{}},"body":{"injectables/GridMessageService.html":{},"modules/GridModule.html":{},"coverage.html":{},"overview.html":{}}}],["gridmodule",{"_index":1470,"title":{"modules/GridModule.html":{}},"body":{"modules/GridModule.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["gridmodule.forroot",{"_index":2067,"title":{},"body":{"index.html":{}}}],["grids",{"_index":1395,"title":{},"body":{"injectables/GridGlobalService.html":{},"changelog.html":{}}}],["gridservice",{"_index":46,"title":{},"body":{"components/BigTextPopup.html":{},"classes/CellEditRenderer.html":{},"classes/CellHoverPopupListener.html":{},"classes/CellPopupRenderer.html":{},"classes/ClickCellEditListener.html":{},"classes/ClickRowSelectListener.html":{},"classes/ClickViewListener.html":{},"classes/ColumnDndListener.html":{},"components/ColumnHeaderComponent.html":{},"components/CompareFilterRenderer.html":{},"classes/EventListener.html":{},"classes/FilterRenderer.html":{},"injectables/GridEventService.html":{},"injectables/GridGlobalService.html":{},"modules/GridModule.html":{},"classes/GroupKeyListener.html":{},"classes/RangeSelectListener.html":{},"classes/RowDblClickListener.html":{},"components/SelectFilterRenderer.html":{},"components/TextFilterRenderer.html":{},"coverage.html":{},"overview.html":{}}}],["gridservice.id",{"_index":1433,"title":{},"body":{"injectables/GridGlobalService.html":{}}}],["group",{"_index":498,"title":{},"body":{"interfaces/CellViewRenderer.html":{},"components/CompareFilterRenderer.html":{},"injectables/GridGlobalService.html":{},"classes/RowGroupView.html":{},"components/SelectFilterRenderer.html":{},"coverage.html":{},"index.html":{}}}],["group.pipe",{"_index":1516,"title":{},"body":{"modules/GridModule.html":{}}}],["group.pipe.ts",{"_index":1591,"title":{},"body":{"pipes/IsGroupPipe.html":{},"coverage.html":{}}}],["group.pipe.ts:9",{"_index":1593,"title":{},"body":{"pipes/IsGroupPipe.html":{}}}],["group.ts",{"_index":1813,"title":{},"body":{"classes/RowGroup.html":{},"coverage.html":{}}}],["group.ts:10",{"_index":1821,"title":{},"body":{"classes/RowGroup.html":{}}}],["group.ts:17",{"_index":1829,"title":{},"body":{"classes/RowGroup.html":{}}}],["group.ts:21",{"_index":1831,"title":{},"body":{"classes/RowGroup.html":{}}}],["group.ts:5",{"_index":1824,"title":{},"body":{"classes/RowGroup.html":{}}}],["group.ts:6",{"_index":1826,"title":{},"body":{"classes/RowGroup.html":{}}}],["group.ts:7",{"_index":1822,"title":{},"body":{"classes/RowGroup.html":{}}}],["group.ts:8",{"_index":1825,"title":{},"body":{"classes/RowGroup.html":{}}}],["group.ts:9",{"_index":1828,"title":{},"body":{"classes/RowGroup.html":{}}}],["group_by",{"_index":779,"title":{},"body":{"components/ColumnHeaderComponent.html":{}}}],["groupbycollapsed",{"_index":2138,"title":{},"body":{"index.html":{}}}],["grouped",{"_index":2093,"title":{},"body":{"index.html":{}}}],["grouping",{"_index":1396,"title":{},"body":{"injectables/GridGlobalService.html":{},"changelog.html":{},"index.html":{}}}],["groupkey",{"_index":1540,"title":{},"body":{"classes/GroupKeyListener.html":{},"classes/Row.html":{},"classes/RowGroup.html":{}}}],["groupkeylistener",{"_index":1532,"title":{"classes/GroupKeyListener.html":{}},"body":{"classes/GroupKeyListener.html":{},"coverage.html":{}}}],["groupkeylistener.click",{"_index":1538,"title":{},"body":{"classes/GroupKeyListener.html":{}}}],["groups",{"_index":1667,"title":{},"body":{"classes/Point.html":{}}}],["groups[2",{"_index":1670,"title":{},"body":{"classes/Point.html":{}}}],["groupservicemap",{"_index":1399,"title":{},"body":{"injectables/GridGlobalService.html":{}}}],["grow",{"_index":1839,"title":{},"body":{"classes/RowGroupView.html":{}}}],["gt",{"_index":911,"title":{},"body":{"components/CompareFilterRenderer.html":{}}}],["handle",{"_index":225,"title":{},"body":{"classes/CellEditRenderer.html":{},"changelog.html":{},"index.html":{}}}],["handleclick",{"_index":174,"title":{},"body":{"classes/CellEditRenderer.html":{}}}],["handled",{"_index":2140,"title":{},"body":{"index.html":{}}}],["handles",{"_index":1257,"title":{},"body":{"injectables/GridEventService.html":{}}}],["hasfilters",{"_index":705,"title":{},"body":{"components/ColumnHeaderComponent.html":{}}}],["hci",{"_index":15,"title":{},"body":{"components/BigTextPopup.html":{},"components/ColumnHeaderComponent.html":{},"components/CompareFilterRenderer.html":{},"components/ConfigMenuComponent.html":{},"components/ConfigMultiChoiceComponent.html":{},"classes/FilterRenderer.html":{},"injectables/GridGlobalService.html":{},"classes/RowGroup.html":{},"components/SelectFilterRenderer.html":{},"components/TextFilterRenderer.html":{},"dependencies.html":{},"index.html":{}}}],["hcifilterdto",{"_index":747,"title":{},"body":{"components/ColumnHeaderComponent.html":{},"components/CompareFilterRenderer.html":{},"classes/FilterRenderer.html":{},"injectables/GridGlobalService.html":{},"components/SelectFilterRenderer.html":{},"components/TextFilterRenderer.html":{}}}],["hcifilterdto(this.column.field",{"_index":941,"title":{},"body":{"components/CompareFilterRenderer.html":{},"components/SelectFilterRenderer.html":{},"components/TextFilterRenderer.html":{}}}],["hcipagingdto",{"_index":1827,"title":{},"body":{"classes/RowGroup.html":{}}}],["hcisortdto",{"_index":748,"title":{},"body":{"components/ColumnHeaderComponent.html":{}}}],["header",{"_index":647,"title":{},"body":{"classes/ColumnDndListener.html":{},"components/ColumnHeaderComponent.html":{},"components/ConfigMenuComponent.html":{},"index.html":{}}}],["header'},{'name",{"_index":113,"title":{},"body":{"components/BigTextPopup.html":{},"components/ColumnHeaderComponent.html":{},"components/CompareFilterRenderer.html":{},"components/ConfigMenuComponent.html":{},"components/ConfigMultiChoiceComponent.html":{},"components/SelectFilterRenderer.html":{},"components/TextFilterRenderer.html":{}}}],["header.component",{"_index":1513,"title":{},"body":{"modules/GridModule.html":{}}}],["header.component.ts",{"_index":688,"title":{},"body":{"components/ColumnHeaderComponent.html":{},"coverage.html":{}}}],["header.component.ts:147",{"_index":729,"title":{},"body":{"components/ColumnHeaderComponent.html":{}}}],["header.component.ts:151",{"_index":735,"title":{},"body":{"components/ColumnHeaderComponent.html":{}}}],["header.component.ts:164",{"_index":728,"title":{},"body":{"components/ColumnHeaderComponent.html":{}}}],["header.component.ts:172",{"_index":734,"title":{},"body":{"components/ColumnHeaderComponent.html":{}}}],["header.component.ts:196",{"_index":732,"title":{},"body":{"components/ColumnHeaderComponent.html":{}}}],["header.component.ts:203",{"_index":726,"title":{},"body":{"components/ColumnHeaderComponent.html":{}}}],["header.component.ts:68",{"_index":722,"title":{},"body":{"components/ColumnHeaderComponent.html":{}}}],["header.component.ts:69",{"_index":724,"title":{},"body":{"components/ColumnHeaderComponent.html":{}}}],["header.component.ts:71",{"_index":736,"title":{},"body":{"components/ColumnHeaderComponent.html":{}}}],["header.component.ts:72",{"_index":738,"title":{},"body":{"components/ColumnHeaderComponent.html":{}}}],["header.component.ts:73",{"_index":739,"title":{},"body":{"components/ColumnHeaderComponent.html":{}}}],["header.component.ts:75",{"_index":743,"title":{},"body":{"components/ColumnHeaderComponent.html":{}}}],["header.component.ts:76",{"_index":742,"title":{},"body":{"components/ColumnHeaderComponent.html":{}}}],["header.component.ts:77",{"_index":740,"title":{},"body":{"components/ColumnHeaderComponent.html":{}}}],["header.component.ts:78",{"_index":741,"title":{},"body":{"components/ColumnHeaderComponent.html":{}}}],["header.component.ts:79",{"_index":721,"title":{},"body":{"components/ColumnHeaderComponent.html":{}}}],["header.component.ts:87",{"_index":730,"title":{},"body":{"components/ColumnHeaderComponent.html":{}}}],["headercolumns",{"_index":1758,"title":{},"body":{"classes/Row.html":{}}}],["headercontainer",{"_index":753,"title":{},"body":{"components/ColumnHeaderComponent.html":{}}}],["headers",{"_index":992,"title":{},"body":{"components/ConfigMenuComponent.html":{}}}],["headertext",{"_index":706,"title":{},"body":{"components/ColumnHeaderComponent.html":{}}}],["height",{"_index":281,"title":{},"body":{"classes/CellEditRenderer.html":{},"components/ColumnHeaderComponent.html":{},"components/CompareFilterRenderer.html":{},"components/SelectFilterRenderer.html":{},"changelog.html":{}}}],["here",{"_index":486,"title":{},"body":{"interfaces/CellViewRenderer.html":{},"index.html":{}}}],["hereby",{"_index":2290,"title":{},"body":{"license.html":{}}}],["hidden",{"_index":467,"title":{},"body":{"classes/CellTextView.html":{},"components/ColumnHeaderComponent.html":{},"classes/RowGroupView.html":{},"index.html":{}}}],["hiddenheadertext",{"_index":707,"title":{},"body":{"components/ColumnHeaderComponent.html":{}}}],["high",{"_index":367,"title":{},"body":{"classes/CellNumberRangeView.html":{},"index.html":{}}}],["highcolor",{"_index":368,"title":{},"body":{"classes/CellNumberRangeView.html":{}}}],["highvalue",{"_index":854,"title":{},"body":{"components/CompareFilterRenderer.html":{}}}],["highvaluechange",{"_index":859,"title":{},"body":{"components/CompareFilterRenderer.html":{}}}],["highvaluechange(value",{"_index":877,"title":{},"body":{"components/CompareFilterRenderer.html":{}}}],["holder",{"_index":138,"title":{},"body":{"classes/Cell.html":{}}}],["holders",{"_index":2328,"title":{},"body":{"license.html":{}}}],["horizontal",{"_index":1848,"title":{},"body":{"classes/RowGroupView.html":{}}}],["hostelement",{"_index":48,"title":{},"body":{"components/BigTextPopup.html":{},"classes/CellEditRenderer.html":{},"classes/CellPopupRenderer.html":{}}}],["hostlistener",{"_index":255,"title":{},"body":{"classes/CellEditRenderer.html":{},"components/ColumnHeaderComponent.html":{}}}],["hostlistener(\"document:click",{"_index":813,"title":{},"body":{"components/ColumnHeaderComponent.html":{}}}],["hostlistener(\"window:resize",{"_index":285,"title":{},"body":{"classes/CellEditRenderer.html":{}}}],["hostlisteners",{"_index":186,"title":{},"body":{"classes/CellEditRenderer.html":{},"components/ColumnHeaderComponent.html":{}}}],["hostrect",{"_index":449,"title":{},"body":{"classes/CellPopupRenderer.html":{}}}],["hostrect.left",{"_index":451,"title":{},"body":{"classes/CellPopupRenderer.html":{}}}],["hostrect.top",{"_index":453,"title":{},"body":{"classes/CellPopupRenderer.html":{}}}],["hover",{"_index":316,"title":{},"body":{"classes/CellHoverPopupListener.html":{},"classes/CellPopupRenderer.html":{},"coverage.html":{}}}],["html",{"_index":101,"title":{},"body":{"components/BigTextPopup.html":{},"components/ColumnHeaderComponent.html":{},"components/CompareFilterRenderer.html":{},"components/ConfigMenuComponent.html":{},"components/ConfigMultiChoiceComponent.html":{},"components/SelectFilterRenderer.html":{},"components/TextFilterRenderer.html":{},"index.html":{}}}],["htmlelement",{"_index":69,"title":{},"body":{"components/BigTextPopup.html":{},"classes/CellEditRenderer.html":{},"classes/CellHoverPopupListener.html":{},"classes/CellNumberRangeView.html":{},"classes/CellPopupRenderer.html":{},"classes/CellTextView.html":{},"interfaces/CellViewRenderer.html":{},"classes/CheckRowSelectView.html":{},"classes/ClickCellEditListener.html":{},"classes/ClickRowSelectListener.html":{},"classes/ClickView.html":{},"classes/ClickViewListener.html":{},"classes/ColumnDndListener.html":{},"components/ColumnHeaderComponent.html":{},"classes/GroupKeyListener.html":{},"classes/HtmlUtil.html":{},"classes/RowGroupView.html":{}}}],["htmlelement;as",{"_index":2249,"title":{},"body":{"index.html":{}}}],["htmlutil",{"_index":340,"title":{"classes/HtmlUtil.html":{}},"body":{"classes/CellHoverPopupListener.html":{},"classes/ClickCellEditListener.html":{},"classes/ClickRowSelectListener.html":{},"classes/ClickViewListener.html":{},"classes/ColumnDndListener.html":{},"classes/GroupKeyListener.html":{},"classes/HtmlUtil.html":{},"classes/RangeSelectListener.html":{},"classes/RowDblClickListener.html":{},"coverage.html":{}}}],["htmlutil.getid(event.target",{"_index":1727,"title":{},"body":{"classes/RangeSelectListener.html":{},"classes/RowDblClickListener.html":{}}}],["htmlutil.getidelement(event.target",{"_index":349,"title":{},"body":{"classes/CellHoverPopupListener.html":{},"classes/ClickCellEditListener.html":{},"classes/ClickRowSelectListener.html":{},"classes/ClickViewListener.html":{},"classes/ColumnDndListener.html":{},"classes/GroupKeyListener.html":{}}}],["htmlutil.getlocation(currentel",{"_index":357,"title":{},"body":{"classes/CellHoverPopupListener.html":{}}}],["htmlutil.getlocation(idelement",{"_index":353,"title":{},"body":{"classes/CellHoverPopupListener.html":{},"classes/ClickCellEditListener.html":{},"classes/ClickRowSelectListener.html":{},"classes/ClickViewListener.html":{}}}],["http",{"_index":1937,"title":{},"body":{"changelog.html":{}}}],["huntsman",{"_index":1498,"title":{},"body":{"modules/GridModule.html":{},"index.html":{},"license.html":{}}}],["ic",{"_index":1571,"title":{},"body":{"interfaces/InjectableConstructor.html":{},"classes/InjectableFactory.html":{}}}],["iclass",{"_index":591,"title":{},"body":{"classes/ClickView.html":{}}}],["icon",{"_index":520,"title":{},"body":{"classes/CheckRowSelectView.html":{},"classes/ClickView.html":{},"components/ColumnHeaderComponent.html":{},"classes/RowGroupView.html":{}}}],["iconclass",{"_index":526,"title":{},"body":{"classes/CheckRowSelectView.html":{}}}],["icons",{"_index":692,"title":{},"body":{"components/ColumnHeaderComponent.html":{}}}],["id",{"_index":515,"title":{},"body":{"classes/CheckRowSelectView.html":{},"classes/ClickView.html":{},"injectables/GridGlobalService.html":{},"classes/HtmlUtil.html":{},"classes/Point.html":{},"classes/RowDblClickListener.html":{},"components/SelectFilterRenderer.html":{},"index.html":{}}}],["id.substr(id.lastindexof",{"_index":1810,"title":{},"body":{"classes/RowDblClickListener.html":{}}}],["idelement",{"_index":348,"title":{},"body":{"classes/CellHoverPopupListener.html":{},"classes/ClickCellEditListener.html":{},"classes/ClickRowSelectListener.html":{},"classes/ClickViewListener.html":{},"classes/GroupKeyListener.html":{}}}],["idelement.classlist.contains(\"group",{"_index":1539,"title":{},"body":{"classes/GroupKeyListener.html":{}}}],["idelement.classlist.values",{"_index":1542,"title":{},"body":{"classes/GroupKeyListener.html":{}}}],["idelement.id.indexof(\"cell",{"_index":543,"title":{},"body":{"classes/ClickCellEditListener.html":{}}}],["idelement.id.startswith(\"cell",{"_index":352,"title":{},"body":{"classes/CellHoverPopupListener.html":{}}}],["idelement.id.startswith(\"click",{"_index":599,"title":{},"body":{"classes/ClickViewListener.html":{}}}],["idelement.id.startswith(\"popup",{"_index":350,"title":{},"body":{"classes/CellHoverPopupListener.html":{}}}],["idelement.id.startswith(\"row",{"_index":558,"title":{},"body":{"classes/ClickRowSelectListener.html":{}}}],["identifier",{"_index":1990,"title":{},"body":{"coverage.html":{}}}],["ignore",{"_index":313,"title":{},"body":{"classes/CellEditRenderer.html":{}}}],["implement",{"_index":2182,"title":{},"body":{"index.html":{}}}],["implementation",{"_index":1569,"title":{},"body":{"interfaces/InjectableConstructor.html":{},"classes/InjectableFactory.html":{}}}],["implementing",{"_index":484,"title":{},"body":{"interfaces/CellViewRenderer.html":{},"index.html":{}}}],["implements",{"_index":319,"title":{},"body":{"classes/CellHoverPopupListener.html":{},"classes/CellNumberRangeView.html":{},"classes/CellTextView.html":{},"classes/CheckRowSelectView.html":{},"classes/ClickCellEditListener.html":{},"classes/ClickRowSelectListener.html":{},"classes/ClickView.html":{},"classes/ClickViewListener.html":{},"classes/ColumnDndListener.html":{},"components/ConfigMenuComponent.html":{},"classes/GroupKeyListener.html":{},"pipes/IsFixedPipe.html":{},"pipes/IsGroupPipe.html":{},"pipes/IsRowVisiblePipe.html":{},"pipes/IsVisiblePipe.html":{},"classes/RangeSelectListener.html":{},"classes/RowDblClickListener.html":{},"classes/RowGroupView.html":{},"index.html":{}}}],["implied",{"_index":2321,"title":{},"body":{"license.html":{}}}],["import",{"_index":93,"title":{},"body":{"components/BigTextPopup.html":{},"classes/CellEditRenderer.html":{},"classes/CellHoverPopupListener.html":{},"classes/CellNumberRangeView.html":{},"classes/CellPopupRenderer.html":{},"classes/CellTextView.html":{},"interfaces/CellViewRenderer.html":{},"classes/CheckRowSelectView.html":{},"classes/ClickCellEditListener.html":{},"classes/ClickRowSelectListener.html":{},"classes/ClickView.html":{},"classes/ClickViewListener.html":{},"classes/ColumnDndListener.html":{},"components/ColumnHeaderComponent.html":{},"components/CompareFilterRenderer.html":{},"components/ConfigMenuComponent.html":{},"components/ConfigMultiChoiceComponent.html":{},"classes/DateIso8601Formatter.html":{},"classes/DateMsFormatter.html":{},"classes/EventListener.html":{},"interfaces/EventListenerArg.html":{},"classes/FilterRenderer.html":{},"injectables/GridEventService.html":{},"injectables/GridGlobalService.html":{},"injectables/GridMessageService.html":{},"modules/GridModule.html":{},"classes/GroupKeyListener.html":{},"classes/HtmlUtil.html":{},"interfaces/InjectableConstructor.html":{},"classes/InjectableFactory.html":{},"pipes/IsFixedPipe.html":{},"pipes/IsGroupPipe.html":{},"pipes/IsRowVisiblePipe.html":{},"pipes/IsVisiblePipe.html":{},"classes/NumberFormatter.html":{},"classes/Range.html":{},"classes/RangeSelectListener.html":{},"classes/Row.html":{},"classes/RowDblClickListener.html":{},"classes/RowGroup.html":{},"classes/RowGroupView.html":{},"components/SelectFilterRenderer.html":{},"components/TextFilterRenderer.html":{},"index.html":{}}}],["imports",{"_index":1529,"title":{},"body":{"modules/GridModule.html":{},"index.html":{}}}],["improved",{"_index":1976,"title":{},"body":{"changelog.html":{}}}],["in.onconfigchange",{"_index":2200,"title":{},"body":{"index.html":{}}}],["included",{"_index":2315,"title":{},"body":{"license.html":{}}}],["includes",{"_index":2220,"title":{},"body":{"index.html":{}}}],["including",{"_index":2300,"title":{},"body":{"license.html":{}}}],["incrementcount",{"_index":1818,"title":{},"body":{"classes/RowGroup.html":{}}}],["index",{"_index":42,"title":{"index.html":{}},"body":{"components/BigTextPopup.html":{},"classes/Cell.html":{},"classes/CellEditRenderer.html":{},"classes/CellHoverPopupListener.html":{},"classes/CellNumberRangeView.html":{},"classes/CellPopupRenderer.html":{},"classes/CellTextView.html":{},"interfaces/CellViewRenderer.html":{},"classes/CheckRowSelectView.html":{},"classes/ClickCellEditListener.html":{},"interfaces/ClickListener.html":{},"classes/ClickRowSelectListener.html":{},"classes/ClickView.html":{},"classes/ClickViewListener.html":{},"classes/ColumnDndListener.html":{},"components/ColumnHeaderComponent.html":{},"components/CompareFilterRenderer.html":{},"components/ConfigMenuComponent.html":{},"components/ConfigMultiChoiceComponent.html":{},"classes/DateIso8601Formatter.html":{},"classes/DateMsFormatter.html":{},"interfaces/DblClickListener.html":{},"interfaces/Dictionary.html":{},"classes/EmptyFactory.html":{},"classes/EventListener.html":{},"interfaces/EventListenerArg.html":{},"classes/EventMeta.html":{},"classes/FilterRenderer.html":{},"classes/FormatterParser.html":{},"injectables/GridEventService.html":{},"injectables/GridGlobalService.html":{},"injectables/GridMessageService.html":{},"classes/GroupKeyListener.html":{},"classes/HtmlUtil.html":{},"classes/InjectableFactory.html":{},"interfaces/MouseDownListener.html":{},"interfaces/MouseDragListener.html":{},"interfaces/MouseOutListener.html":{},"interfaces/MouseOverListener.html":{},"interfaces/MouseUpListener.html":{},"classes/NumberFormatter.html":{},"classes/Point.html":{},"classes/Range.html":{},"classes/RangeSelectListener.html":{},"classes/Row.html":{},"classes/RowChange.html":{},"classes/RowDblClickListener.html":{},"classes/RowGroup.html":{},"classes/RowGroupView.html":{},"components/SelectFilterRenderer.html":{},"components/TextFilterRenderer.html":{},"miscellaneous/variables.html":{}}}],["infinite",{"_index":849,"title":{},"body":{"components/CompareFilterRenderer.html":{},"components/SelectFilterRenderer.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/BigTextPopup.html":{},"classes/Cell.html":{},"classes/CellEditRenderer.html":{},"classes/CellHoverPopupListener.html":{},"classes/CellNumberRangeView.html":{},"classes/CellPopupRenderer.html":{},"classes/CellTextView.html":{},"interfaces/CellViewRenderer.html":{},"classes/CheckRowSelectView.html":{},"classes/ClickCellEditListener.html":{},"interfaces/ClickListener.html":{},"classes/ClickRowSelectListener.html":{},"classes/ClickView.html":{},"classes/ClickViewListener.html":{},"classes/ColumnDndListener.html":{},"components/ColumnHeaderComponent.html":{},"components/CompareFilterRenderer.html":{},"components/ConfigMenuComponent.html":{},"components/ConfigMultiChoiceComponent.html":{},"classes/DateIso8601Formatter.html":{},"classes/DateMsFormatter.html":{},"interfaces/DblClickListener.html":{},"interfaces/Dictionary.html":{},"interfaces/EmptyConstructor.html":{},"classes/EmptyFactory.html":{},"classes/EventListener.html":{},"interfaces/EventListenerArg.html":{},"classes/EventMeta.html":{},"classes/FilterRenderer.html":{},"classes/FormatterParser.html":{},"injectables/GridEventService.html":{},"injectables/GridGlobalService.html":{},"injectables/GridMessageService.html":{},"modules/GridModule.html":{},"classes/GroupKeyListener.html":{},"classes/HtmlUtil.html":{},"interfaces/InjectableConstructor.html":{},"classes/InjectableFactory.html":{},"pipes/IsFixedPipe.html":{},"pipes/IsGroupPipe.html":{},"pipes/IsRowVisiblePipe.html":{},"pipes/IsVisiblePipe.html":{},"interfaces/MouseDownListener.html":{},"interfaces/MouseDragListener.html":{},"interfaces/MouseOutListener.html":{},"interfaces/MouseOverListener.html":{},"interfaces/MouseUpListener.html":{},"classes/NumberFormatter.html":{},"classes/Point.html":{},"classes/Range.html":{},"classes/RangeSelectListener.html":{},"classes/Row.html":{},"classes/RowChange.html":{},"classes/RowDblClickListener.html":{},"classes/RowGroup.html":{},"classes/RowGroupView.html":{},"components/SelectFilterRenderer.html":{},"components/TextFilterRenderer.html":{}}}],["info.id",{"_index":2117,"title":{},"body":{"index.html":{}}}],["information",{"_index":423,"title":{},"body":{"classes/CellPopupRenderer.html":{}}}],["inherit",{"_index":701,"title":{},"body":{"components/ColumnHeaderComponent.html":{},"classes/RowGroupView.html":{}}}],["inherited",{"_index":61,"title":{},"body":{"components/BigTextPopup.html":{},"classes/CellHoverPopupListener.html":{},"classes/ClickCellEditListener.html":{},"classes/ClickRowSelectListener.html":{},"classes/ClickViewListener.html":{},"classes/ColumnDndListener.html":{},"components/CompareFilterRenderer.html":{},"classes/DateIso8601Formatter.html":{},"classes/DateMsFormatter.html":{},"classes/GroupKeyListener.html":{},"classes/NumberFormatter.html":{},"classes/RangeSelectListener.html":{},"classes/RowDblClickListener.html":{},"components/SelectFilterRenderer.html":{},"components/TextFilterRenderer.html":{}}}],["init",{"_index":178,"title":{},"body":{"classes/CellEditRenderer.html":{},"components/SelectFilterRenderer.html":{}}}],["initial",{"_index":1985,"title":{},"body":{"changelog.html":{}}}],["inject",{"_index":337,"title":{},"body":{"classes/CellHoverPopupListener.html":{},"classes/ClickCellEditListener.html":{},"classes/ClickRowSelectListener.html":{},"classes/ClickViewListener.html":{},"classes/ColumnDndListener.html":{},"classes/EventListener.html":{},"injectables/GridGlobalService.html":{},"classes/GroupKeyListener.html":{},"classes/RangeSelectListener.html":{},"classes/RowDblClickListener.html":{}}}],["injectable",{"_index":1252,"title":{"injectables/GridEventService.html":{},"injectables/GridGlobalService.html":{},"injectables/GridMessageService.html":{}},"body":{"injectables/GridEventService.html":{},"injectables/GridGlobalService.html":{},"injectables/GridMessageService.html":{},"coverage.html":{}}}],["injectableconstructor",{"_index":1565,"title":{"interfaces/InjectableConstructor.html":{}},"body":{"interfaces/InjectableConstructor.html":{},"classes/InjectableFactory.html":{},"coverage.html":{}}}],["injectablefactory",{"_index":1570,"title":{"classes/InjectableFactory.html":{}},"body":{"interfaces/InjectableConstructor.html":{},"classes/InjectableFactory.html":{},"coverage.html":{}}}],["injectables",{"_index":1253,"title":{},"body":{"injectables/GridEventService.html":{},"injectables/GridGlobalService.html":{},"injectables/GridMessageService.html":{},"overview.html":{}}}],["injector",{"_index":1178,"title":{},"body":{"classes/EventListener.html":{},"interfaces/InjectableConstructor.html":{},"classes/InjectableFactory.html":{}}}],["injector.get(grideventservice",{"_index":1186,"title":{},"body":{"classes/EventListener.html":{}}}],["injector.get(gridservice",{"_index":1185,"title":{},"body":{"classes/EventListener.html":{}}}],["inline",{"_index":408,"title":{},"body":{"classes/CellNumberRangeView.html":{},"components/ConfigMenuComponent.html":{}}}],["input",{"_index":744,"title":{},"body":{"components/ColumnHeaderComponent.html":{},"components/CompareFilterRenderer.html":{},"components/ConfigMenuComponent.html":{},"components/ConfigMultiChoiceComponent.html":{},"classes/FilterRenderer.html":{},"components/SelectFilterRenderer.html":{},"components/TextFilterRenderer.html":{}}}],["input(\"container",{"_index":752,"title":{},"body":{"components/ColumnHeaderComponent.html":{}}}],["input.checkbox",{"_index":985,"title":{},"body":{"components/ConfigMenuComponent.html":{}}}],["input.checkbox.checked",{"_index":986,"title":{},"body":{"components/ConfigMenuComponent.html":{}}}],["inputclick",{"_index":1884,"title":{},"body":{"components/TextFilterRenderer.html":{}}}],["inputclick(event",{"_index":1886,"title":{},"body":{"components/TextFilterRenderer.html":{}}}],["inputs",{"_index":715,"title":{},"body":{"components/ColumnHeaderComponent.html":{},"components/CompareFilterRenderer.html":{},"components/ConfigMenuComponent.html":{},"components/ConfigMultiChoiceComponent.html":{},"classes/FilterRenderer.html":{},"components/SelectFilterRenderer.html":{},"components/TextFilterRenderer.html":{},"index.html":{}}}],["install",{"_index":2271,"title":{},"body":{"index.html":{}}}],["instance",{"_index":336,"title":{},"body":{"classes/CellHoverPopupListener.html":{},"classes/ClickCellEditListener.html":{},"classes/ClickRowSelectListener.html":{},"classes/ClickViewListener.html":{},"classes/ColumnDndListener.html":{},"classes/EventListener.html":{},"classes/GroupKeyListener.html":{},"classes/RangeSelectListener.html":{},"classes/RowDblClickListener.html":{},"index.html":{}}}],["instantiated",{"_index":485,"title":{},"body":{"interfaces/CellViewRenderer.html":{}}}],["instantiation",{"_index":1166,"title":{},"body":{"classes/EmptyFactory.html":{},"interfaces/InjectableConstructor.html":{},"classes/InjectableFactory.html":{}}}],["instead",{"_index":2084,"title":{},"body":{"index.html":{}}}],["institute",{"_index":1500,"title":{},"body":{"modules/GridModule.html":{},"license.html":{}}}],["institute's",{"_index":2052,"title":{},"body":{"index.html":{}}}],["interface",{"_index":476,"title":{"interfaces/CellViewRenderer.html":{},"interfaces/ClickListener.html":{},"interfaces/DblClickListener.html":{},"interfaces/Dictionary.html":{},"interfaces/EmptyConstructor.html":{},"interfaces/EventListenerArg.html":{},"interfaces/InjectableConstructor.html":{},"interfaces/MouseDownListener.html":{},"interfaces/MouseDragListener.html":{},"interfaces/MouseOutListener.html":{},"interfaces/MouseOverListener.html":{},"interfaces/MouseUpListener.html":{}},"body":{"interfaces/CellViewRenderer.html":{},"interfaces/ClickListener.html":{},"interfaces/DblClickListener.html":{},"interfaces/Dictionary.html":{},"interfaces/EmptyConstructor.html":{},"classes/EmptyFactory.html":{},"interfaces/EventListenerArg.html":{},"interfaces/InjectableConstructor.html":{},"classes/InjectableFactory.html":{},"interfaces/MouseDownListener.html":{},"interfaces/MouseDragListener.html":{},"interfaces/MouseOutListener.html":{},"interfaces/MouseOverListener.html":{},"interfaces/MouseUpListener.html":{},"coverage.html":{},"index.html":{}}}],["interfaces",{"_index":477,"title":{},"body":{"interfaces/CellViewRenderer.html":{},"interfaces/ClickListener.html":{},"interfaces/DblClickListener.html":{},"interfaces/Dictionary.html":{},"interfaces/EmptyConstructor.html":{},"interfaces/EventListenerArg.html":{},"interfaces/InjectableConstructor.html":{},"interfaces/MouseDownListener.html":{},"interfaces/MouseDragListener.html":{},"interfaces/MouseOutListener.html":{},"interfaces/MouseOverListener.html":{},"interfaces/MouseUpListener.html":{},"overview.html":{}}}],["intro",{"_index":2056,"title":{},"body":{"index.html":{}}}],["invalid",{"_index":1138,"title":{},"body":{"classes/DateIso8601Formatter.html":{},"classes/DateMsFormatter.html":{},"changelog.html":{}}}],["isdevmode",{"_index":256,"title":{},"body":{"classes/CellEditRenderer.html":{},"classes/CellHoverPopupListener.html":{},"classes/ClickCellEditListener.html":{},"classes/ClickRowSelectListener.html":{},"classes/ClickViewListener.html":{},"classes/ColumnDndListener.html":{},"components/ConfigMenuComponent.html":{},"components/ConfigMultiChoiceComponent.html":{},"classes/EventListener.html":{},"injectables/GridEventService.html":{},"injectables/GridGlobalService.html":{},"classes/GroupKeyListener.html":{},"classes/RangeSelectListener.html":{},"classes/RowDblClickListener.html":{}}}],["isdirty",{"_index":1744,"title":{},"body":{"classes/Row.html":{}}}],["isfixed",{"_index":1581,"title":{},"body":{"pipes/IsFixedPipe.html":{}}}],["isfixedpipe",{"_index":1480,"title":{"pipes/IsFixedPipe.html":{}},"body":{"modules/GridModule.html":{},"pipes/IsFixedPipe.html":{},"coverage.html":{},"overview.html":{}}}],["isgroup",{"_index":1592,"title":{},"body":{"pipes/IsGroupPipe.html":{}}}],["isgrouppipe",{"_index":1481,"title":{"pipes/IsGroupPipe.html":{}},"body":{"modules/GridModule.html":{},"pipes/IsGroupPipe.html":{},"coverage.html":{},"overview.html":{}}}],["islasteventarrow",{"_index":1282,"title":{},"body":{"injectables/GridEventService.html":{}}}],["islasteventclick",{"_index":1283,"title":{},"body":{"injectables/GridEventService.html":{}}}],["islasteventtab",{"_index":1284,"title":{},"body":{"injectables/GridEventService.html":{}}}],["isnan(date",{"_index":1151,"title":{},"body":{"classes/DateMsFormatter.html":{}}}],["isnegative",{"_index":1625,"title":{},"body":{"classes/Point.html":{}}}],["isnegative(allownegativei",{"_index":1645,"title":{},"body":{"classes/Point.html":{}}}],["isnew",{"_index":1626,"title":{},"body":{"classes/Point.html":{}}}],["isnotnegative",{"_index":1627,"title":{},"body":{"classes/Point.html":{}}}],["isnull",{"_index":1200,"title":{},"body":{"classes/EventMeta.html":{}}}],["iso",{"_index":1113,"title":{},"body":{"classes/DateIso8601Formatter.html":{}}}],["iso8601.formatter.ts",{"_index":1109,"title":{},"body":{"classes/DateIso8601Formatter.html":{},"coverage.html":{}}}],["iso8601.formatter.ts:10",{"_index":1123,"title":{},"body":{"classes/DateIso8601Formatter.html":{}}}],["iso8601.formatter.ts:12",{"_index":1129,"title":{},"body":{"classes/DateIso8601Formatter.html":{}}}],["iso8601.formatter.ts:20",{"_index":1126,"title":{},"body":{"classes/DateIso8601Formatter.html":{}}}],["iso8601.formatter.ts:34",{"_index":1128,"title":{},"body":{"classes/DateIso8601Formatter.html":{}}}],["isright",{"_index":618,"title":{},"body":{"classes/ColumnDndListener.html":{}}}],["isrowvisible",{"_index":1597,"title":{},"body":{"pipes/IsRowVisiblePipe.html":{}}}],["isrowvisiblepipe",{"_index":1482,"title":{"pipes/IsRowVisiblePipe.html":{}},"body":{"modules/GridModule.html":{},"pipes/IsRowVisiblePipe.html":{},"coverage.html":{},"overview.html":{}}}],["isvisible",{"_index":1600,"title":{},"body":{"pipes/IsVisiblePipe.html":{}}}],["isvisiblepipe",{"_index":1483,"title":{"pipes/IsVisiblePipe.html":{}},"body":{"modules/GridModule.html":{},"pipes/IsVisiblePipe.html":{},"coverage.html":{},"overview.html":{}}}],["items",{"_index":832,"title":{},"body":{"components/CompareFilterRenderer.html":{},"components/ConfigMenuComponent.html":{},"classes/RowGroupView.html":{},"components/SelectFilterRenderer.html":{}}}],["iterating",{"_index":1307,"title":{},"body":{"injectables/GridEventService.html":{}}}],["itself",{"_index":1421,"title":{},"body":{"injectables/GridGlobalService.html":{}}}],["j",{"_index":49,"title":{},"body":{"components/BigTextPopup.html":{},"classes/CellEditRenderer.html":{},"classes/CellNumberRangeView.html":{},"classes/CellPopupRenderer.html":{},"classes/CellTextView.html":{},"interfaces/CellViewRenderer.html":{},"classes/CheckRowSelectView.html":{},"classes/ClickView.html":{},"injectables/GridEventService.html":{},"classes/Point.html":{},"classes/RowGroupView.html":{},"index.html":{}}}],["json",{"_index":487,"title":{},"body":{"interfaces/CellViewRenderer.html":{},"index.html":{}}}],["json.stringify(globalconfig",{"_index":1429,"title":{},"body":{"injectables/GridGlobalService.html":{}}}],["k",{"_index":580,"title":{},"body":{"classes/ClickView.html":{}}}],["k.length",{"_index":584,"title":{},"body":{"classes/ClickView.html":{}}}],["k.trim",{"_index":586,"title":{},"body":{"classes/ClickView.html":{}}}],["keep",{"_index":1306,"title":{},"body":{"injectables/GridEventService.html":{}}}],["key",{"_index":145,"title":{},"body":{"classes/Cell.html":{},"classes/ClickViewListener.html":{},"components/ConfigMenuComponent.html":{},"injectables/GridEventService.html":{},"injectables/GridGlobalService.html":{},"classes/GroupKeyListener.html":{},"classes/Row.html":{},"index.html":{}}}],["key.listener.ts",{"_index":1534,"title":{},"body":{"classes/GroupKeyListener.html":{},"coverage.html":{}}}],["key.listener.ts:11",{"_index":1536,"title":{},"body":{"classes/GroupKeyListener.html":{}}}],["key.listener.ts:35",{"_index":1537,"title":{},"body":{"classes/GroupKeyListener.html":{}}}],["key.listener.ts:9",{"_index":1535,"title":{},"body":{"classes/GroupKeyListener.html":{}}}],["key1",{"_index":2212,"title":{},"body":{"index.html":{}}}],["key2",{"_index":2213,"title":{},"body":{"index.html":{}}}],["keyboardevent",{"_index":1075,"title":{},"body":{"components/ConfigMultiChoiceComponent.html":{}}}],["keycode",{"_index":1311,"title":{},"body":{"injectables/GridEventService.html":{}}}],["keyevent",{"_index":175,"title":{},"body":{"classes/CellEditRenderer.html":{}}}],["keyframes",{"_index":850,"title":{},"body":{"components/CompareFilterRenderer.html":{},"components/SelectFilterRenderer.html":{}}}],["keywords",{"_index":1965,"title":{},"body":{"changelog.html":{}}}],["kind",{"_index":2319,"title":{},"body":{"license.html":{}}}],["l",{"_index":835,"title":{},"body":{"components/CompareFilterRenderer.html":{},"components/SelectFilterRenderer.html":{}}}],["label",{"_index":981,"title":{},"body":{"components/ConfigMenuComponent.html":{},"components/SelectFilterRenderer.html":{}}}],["labs",{"_index":2251,"title":{},"body":{"index.html":{}}}],["last",{"_index":2091,"title":{},"body":{"index.html":{}}}],["lastdx",{"_index":1263,"title":{},"body":{"injectables/GridEventService.html":{}}}],["lastdy",{"_index":1264,"title":{},"body":{"injectables/GridEventService.html":{}}}],["lastevent",{"_index":1265,"title":{},"body":{"injectables/GridEventService.html":{}}}],["lasteventid",{"_index":619,"title":{},"body":{"classes/ColumnDndListener.html":{},"classes/RangeSelectListener.html":{}}}],["le",{"_index":905,"title":{},"body":{"components/CompareFilterRenderer.html":{}}}],["left",{"_index":276,"title":{},"body":{"classes/CellEditRenderer.html":{},"classes/CellPopupRenderer.html":{},"classes/CellTextView.html":{},"classes/CheckRowSelectView.html":{},"classes/ClickView.html":{},"classes/ColumnDndListener.html":{},"components/ColumnHeaderComponent.html":{},"components/CompareFilterRenderer.html":{},"components/ConfigMenuComponent.html":{},"injectables/GridEventService.html":{},"classes/RowGroupView.html":{},"components/SelectFilterRenderer.html":{},"changelog.html":{},"index.html":{}}}],["legend",{"_index":100,"title":{},"body":{"components/BigTextPopup.html":{},"components/ColumnHeaderComponent.html":{},"components/CompareFilterRenderer.html":{},"components/ConfigMenuComponent.html":{},"components/ConfigMultiChoiceComponent.html":{},"modules/GridModule.html":{},"components/SelectFilterRenderer.html":{},"components/TextFilterRenderer.html":{},"overview.html":{}}}],["length",{"_index":776,"title":{},"body":{"components/ColumnHeaderComponent.html":{},"classes/Row.html":{}}}],["less",{"_index":906,"title":{},"body":{"components/CompareFilterRenderer.html":{}}}],["lessthan",{"_index":1628,"title":{},"body":{"classes/Point.html":{}}}],["lessthan(other",{"_index":1650,"title":{},"body":{"classes/Point.html":{}}}],["lessthanorequal",{"_index":1629,"title":{},"body":{"classes/Point.html":{}}}],["lessthanorequal(other",{"_index":1652,"title":{},"body":{"classes/Point.html":{}}}],["level",{"_index":1846,"title":{},"body":{"classes/RowGroupView.html":{}}}],["lg",{"_index":523,"title":{},"body":{"classes/CheckRowSelectView.html":{},"classes/ClickView.html":{}}}],["liability",{"_index":2332,"title":{},"body":{"license.html":{}}}],["liable",{"_index":2329,"title":{},"body":{"license.html":{}}}],["library",{"_index":2053,"title":{},"body":{"index.html":{}}}],["license",{"_index":1968,"title":{"license.html":{}},"body":{"changelog.html":{}}}],["lightblue",{"_index":972,"title":{},"body":{"components/ConfigMenuComponent.html":{},"components/ConfigMultiChoiceComponent.html":{}}}],["limit",{"_index":2152,"title":{},"body":{"index.html":{}}}],["limitation",{"_index":2301,"title":{},"body":{"license.html":{}}}],["limited",{"_index":2246,"title":{},"body":{"index.html":{},"license.html":{}}}],["linear",{"_index":848,"title":{},"body":{"components/CompareFilterRenderer.html":{},"components/SelectFilterRenderer.html":{}}}],["linked",{"_index":2121,"title":{},"body":{"index.html":{}}}],["list",{"_index":1586,"title":{},"body":{"pipes/IsFixedPipe.html":{},"pipes/IsGroupPipe.html":{},"pipes/IsRowVisiblePipe.html":{},"pipes/IsVisiblePipe.html":{},"components/SelectFilterRenderer.html":{},"index.html":{}}}],["list.filter((o",{"_index":1589,"title":{},"body":{"pipes/IsFixedPipe.html":{},"pipes/IsGroupPipe.html":{},"pipes/IsRowVisiblePipe.html":{},"pipes/IsVisiblePipe.html":{}}}],["listed",{"_index":2103,"title":{},"body":{"index.html":{}}}],["listen",{"_index":2208,"title":{},"body":{"index.html":{}}}],["listened",{"_index":1971,"title":{},"body":{"changelog.html":{}}}],["listener",{"_index":339,"title":{},"body":{"classes/CellHoverPopupListener.html":{},"classes/ClickCellEditListener.html":{},"classes/ClickRowSelectListener.html":{},"classes/ClickViewListener.html":{},"classes/ColumnDndListener.html":{},"interfaces/EventListenerArg.html":{},"classes/GroupKeyListener.html":{},"classes/RangeSelectListener.html":{},"classes/RowDblClickListener.html":{},"coverage.html":{},"index.html":{}}}],["listener.ts",{"_index":1172,"title":{},"body":{"classes/EventListener.html":{},"coverage.html":{}}}],["listener.ts:12",{"_index":1182,"title":{},"body":{"classes/EventListener.html":{}}}],["listener.ts:13",{"_index":1180,"title":{},"body":{"classes/EventListener.html":{}}}],["listener.ts:14",{"_index":1181,"title":{},"body":{"classes/EventListener.html":{}}}],["listener.ts:15",{"_index":1179,"title":{},"body":{"classes/EventListener.html":{}}}],["listener.ts:26",{"_index":1183,"title":{},"body":{"classes/EventListener.html":{}}}],["listener.ts:41",{"_index":1184,"title":{},"body":{"classes/EventListener.html":{}}}],["listeners",{"_index":1955,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["listening",{"_index":1173,"title":{},"body":{"classes/EventListener.html":{}}}],["listens",{"_index":1716,"title":{},"body":{"classes/RangeSelectListener.html":{}}}],["literal",{"_index":1823,"title":{},"body":{"classes/RowGroup.html":{}}}],["loaded",{"_index":2160,"title":{},"body":{"index.html":{}}}],["loading",{"_index":1960,"title":{},"body":{"changelog.html":{}}}],["location",{"_index":74,"title":{},"body":{"components/BigTextPopup.html":{},"classes/CellHoverPopupListener.html":{},"classes/CellPopupRenderer.html":{},"classes/ClickCellEditListener.html":{},"classes/ClickRowSelectListener.html":{},"classes/ClickViewListener.html":{},"injectables/GridEventService.html":{},"index.html":{}}}],["location.i",{"_index":444,"title":{},"body":{"classes/CellPopupRenderer.html":{}}}],["location.isnegative",{"_index":1368,"title":{},"body":{"injectables/GridEventService.html":{}}}],["location.j",{"_index":445,"title":{},"body":{"classes/CellPopupRenderer.html":{},"classes/ClickRowSelectListener.html":{}}}],["location.tostring",{"_index":1361,"title":{},"body":{"injectables/GridEventService.html":{}}}],["log",{"_index":1906,"title":{},"body":{"changelog.html":{}}}],["lot",{"_index":430,"title":{},"body":{"classes/CellPopupRenderer.html":{}}}],["low",{"_index":369,"title":{},"body":{"classes/CellNumberRangeView.html":{},"index.html":{}}}],["lowcolor",{"_index":370,"title":{},"body":{"classes/CellNumberRangeView.html":{}}}],["lowvalue",{"_index":855,"title":{},"body":{"components/CompareFilterRenderer.html":{}}}],["lt",{"_index":908,"title":{},"body":{"components/CompareFilterRenderer.html":{}}}],["maincontent",{"_index":793,"title":{},"body":{"components/ColumnHeaderComponent.html":{}}}],["make",{"_index":494,"title":{},"body":{"interfaces/CellViewRenderer.html":{}}}],["making",{"_index":2274,"title":{},"body":{"index.html":{}}}],["male",{"_index":2264,"title":{},"body":{"index.html":{}}}],["management",{"_index":143,"title":{},"body":{"classes/Cell.html":{}}}],["manually",{"_index":333,"title":{},"body":{"classes/CellHoverPopupListener.html":{},"classes/ClickCellEditListener.html":{},"classes/ClickRowSelectListener.html":{},"classes/ClickViewListener.html":{},"classes/ColumnDndListener.html":{},"classes/EventListener.html":{},"classes/GroupKeyListener.html":{},"classes/RangeSelectListener.html":{},"classes/RowDblClickListener.html":{}}}],["many",{"_index":2101,"title":{},"body":{"index.html":{}}}],["map",{"_index":771,"title":{},"body":{"components/ColumnHeaderComponent.html":{},"classes/FilterRenderer.html":{},"injectables/GridGlobalService.html":{}}}],["margin",{"_index":275,"title":{},"body":{"classes/CellEditRenderer.html":{},"classes/CellTextView.html":{},"classes/CheckRowSelectView.html":{},"classes/ClickView.html":{},"components/ColumnHeaderComponent.html":{},"components/CompareFilterRenderer.html":{},"components/ConfigMenuComponent.html":{},"components/ConfigMultiChoiceComponent.html":{},"classes/RowGroupView.html":{},"components/SelectFilterRenderer.html":{}}}],["matching",{"_index":133,"title":{},"body":{"components/BigTextPopup.html":{},"classes/Cell.html":{},"classes/CellEditRenderer.html":{},"classes/CellHoverPopupListener.html":{},"classes/CellNumberRangeView.html":{},"classes/CellPopupRenderer.html":{},"classes/CellTextView.html":{},"interfaces/CellViewRenderer.html":{},"classes/CheckRowSelectView.html":{},"classes/ClickCellEditListener.html":{},"interfaces/ClickListener.html":{},"classes/ClickRowSelectListener.html":{},"classes/ClickView.html":{},"classes/ClickViewListener.html":{},"classes/ColumnDndListener.html":{},"components/ColumnHeaderComponent.html":{},"components/CompareFilterRenderer.html":{},"components/ConfigMenuComponent.html":{},"components/ConfigMultiChoiceComponent.html":{},"classes/DateIso8601Formatter.html":{},"classes/DateMsFormatter.html":{},"interfaces/DblClickListener.html":{},"interfaces/Dictionary.html":{},"interfaces/EmptyConstructor.html":{},"classes/EmptyFactory.html":{},"classes/EventListener.html":{},"interfaces/EventListenerArg.html":{},"classes/EventMeta.html":{},"classes/FilterRenderer.html":{},"classes/FormatterParser.html":{},"injectables/GridEventService.html":{},"injectables/GridGlobalService.html":{},"injectables/GridMessageService.html":{},"modules/GridModule.html":{},"classes/GroupKeyListener.html":{},"classes/HtmlUtil.html":{},"interfaces/InjectableConstructor.html":{},"classes/InjectableFactory.html":{},"pipes/IsFixedPipe.html":{},"pipes/IsGroupPipe.html":{},"pipes/IsRowVisiblePipe.html":{},"pipes/IsVisiblePipe.html":{},"interfaces/MouseDownListener.html":{},"interfaces/MouseDragListener.html":{},"interfaces/MouseOutListener.html":{},"interfaces/MouseOverListener.html":{},"interfaces/MouseUpListener.html":{},"classes/NumberFormatter.html":{},"classes/Point.html":{},"classes/Range.html":{},"classes/RangeSelectListener.html":{},"classes/Row.html":{},"classes/RowChange.html":{},"classes/RowDblClickListener.html":{},"classes/RowGroup.html":{},"classes/RowGroupView.html":{},"components/SelectFilterRenderer.html":{},"components/TextFilterRenderer.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["math.floor(this.headertext.offsetwidth",{"_index":798,"title":{},"body":{"components/ColumnHeaderComponent.html":{}}}],["math.floor(this.hiddenheadertext.offsetwidth",{"_index":799,"title":{},"body":{"components/ColumnHeaderComponent.html":{}}}],["matmenumodule",{"_index":1511,"title":{},"body":{"modules/GridModule.html":{}}}],["max",{"_index":967,"title":{},"body":{"components/ConfigMenuComponent.html":{},"classes/Range.html":{},"components/SelectFilterRenderer.html":{}}}],["max(max",{"_index":1712,"title":{},"body":{"classes/Range.html":{}}}],["max.j",{"_index":1703,"title":{},"body":{"classes/Range.html":{}}}],["memory",{"_index":1176,"title":{},"body":{"classes/EventListener.html":{}}}],["menu",{"_index":963,"title":{},"body":{"components/ConfigMenuComponent.html":{}}}],["menu'},{'name",{"_index":118,"title":{},"body":{"components/BigTextPopup.html":{},"components/ColumnHeaderComponent.html":{},"components/CompareFilterRenderer.html":{},"components/ConfigMenuComponent.html":{},"components/ConfigMultiChoiceComponent.html":{},"components/SelectFilterRenderer.html":{},"components/TextFilterRenderer.html":{}}}],["menu.component",{"_index":1527,"title":{},"body":{"modules/GridModule.html":{}}}],["menu.component.ts",{"_index":958,"title":{},"body":{"components/ConfigMenuComponent.html":{},"coverage.html":{}}}],["menu.component.ts:215",{"_index":1010,"title":{},"body":{"components/ConfigMenuComponent.html":{}}}],["menu.component.ts:217",{"_index":1035,"title":{},"body":{"components/ConfigMenuComponent.html":{}}}],["menu.component.ts:219",{"_index":1031,"title":{},"body":{"components/ConfigMenuComponent.html":{}}}],["menu.component.ts:220",{"_index":1034,"title":{},"body":{"components/ConfigMenuComponent.html":{}}}],["menu.component.ts:222",{"_index":1033,"title":{},"body":{"components/ConfigMenuComponent.html":{}}}],["menu.component.ts:224",{"_index":1009,"title":{},"body":{"components/ConfigMenuComponent.html":{}}}],["menu.component.ts:228",{"_index":1016,"title":{},"body":{"components/ConfigMenuComponent.html":{}}}],["menu.component.ts:236",{"_index":1015,"title":{},"body":{"components/ConfigMenuComponent.html":{}}}],["menu.component.ts:242",{"_index":1013,"title":{},"body":{"components/ConfigMenuComponent.html":{}}}],["menu.component.ts:251",{"_index":1020,"title":{},"body":{"components/ConfigMenuComponent.html":{}}}],["menu.component.ts:256",{"_index":1029,"title":{},"body":{"components/ConfigMenuComponent.html":{}}}],["menu.component.ts:260",{"_index":1025,"title":{},"body":{"components/ConfigMenuComponent.html":{}}}],["menu.component.ts:272",{"_index":1023,"title":{},"body":{"components/ConfigMenuComponent.html":{}}}],["menu.component.ts:283",{"_index":1018,"title":{},"body":{"components/ConfigMenuComponent.html":{}}}],["menu.component.ts:288",{"_index":1027,"title":{},"body":{"components/ConfigMenuComponent.html":{}}}],["menu.component.ts:299",{"_index":1021,"title":{},"body":{"components/ConfigMenuComponent.html":{}}}],["merchantability",{"_index":2323,"title":{},"body":{"license.html":{}}}],["merge",{"_index":2303,"title":{},"body":{"license.html":{}}}],["message",{"_index":1456,"title":{},"body":{"injectables/GridMessageService.html":{},"index.html":{}}}],["message.service.ts",{"_index":1448,"title":{},"body":{"injectables/GridMessageService.html":{},"coverage.html":{}}}],["message.service.ts:10",{"_index":1459,"title":{},"body":{"injectables/GridMessageService.html":{}}}],["message.service.ts:12",{"_index":1455,"title":{},"body":{"injectables/GridMessageService.html":{}}}],["message.service.ts:16",{"_index":1458,"title":{},"body":{"injectables/GridMessageService.html":{}}}],["message.service.ts:20",{"_index":1465,"title":{},"body":{"injectables/GridMessageService.html":{}}}],["message.service.ts:8",{"_index":1460,"title":{},"body":{"injectables/GridMessageService.html":{}}}],["message.service.ts:9",{"_index":1463,"title":{},"body":{"injectables/GridMessageService.html":{}}}],["messageobservable",{"_index":1453,"title":{},"body":{"injectables/GridMessageService.html":{}}}],["meta",{"_index":1350,"title":{},"body":{"injectables/GridEventService.html":{}}}],["meta.ts",{"_index":1196,"title":{},"body":{"classes/EventMeta.html":{},"coverage.html":{}}}],["meta.ts:13",{"_index":1209,"title":{},"body":{"classes/EventMeta.html":{}}}],["meta.ts:17",{"_index":1210,"title":{},"body":{"classes/EventMeta.html":{}}}],["meta.ts:21",{"_index":1212,"title":{},"body":{"classes/EventMeta.html":{}}}],["meta.ts:25",{"_index":1214,"title":{},"body":{"classes/EventMeta.html":{}}}],["meta.ts:29",{"_index":1216,"title":{},"body":{"classes/EventMeta.html":{}}}],["meta.ts:3",{"_index":1207,"title":{},"body":{"classes/EventMeta.html":{}}}],["meta.ts:33",{"_index":1218,"title":{},"body":{"classes/EventMeta.html":{}}}],["meta.ts:37",{"_index":1220,"title":{},"body":{"classes/EventMeta.html":{}}}],["meta.ts:4",{"_index":1208,"title":{},"body":{"classes/EventMeta.html":{}}}],["meta.ts:41",{"_index":1222,"title":{},"body":{"classes/EventMeta.html":{}}}],["meta.ts:5",{"_index":1206,"title":{},"body":{"classes/EventMeta.html":{}}}],["metadata",{"_index":13,"title":{},"body":{"components/BigTextPopup.html":{},"classes/Cell.html":{},"components/ColumnHeaderComponent.html":{},"components/CompareFilterRenderer.html":{},"components/ConfigMenuComponent.html":{},"components/ConfigMultiChoiceComponent.html":{},"pipes/IsFixedPipe.html":{},"pipes/IsGroupPipe.html":{},"pipes/IsRowVisiblePipe.html":{},"pipes/IsVisiblePipe.html":{},"components/SelectFilterRenderer.html":{},"components/TextFilterRenderer.html":{}}}],["methods",{"_index":51,"title":{},"body":{"components/BigTextPopup.html":{},"classes/CellEditRenderer.html":{},"classes/CellHoverPopupListener.html":{},"classes/CellNumberRangeView.html":{},"classes/CellPopupRenderer.html":{},"classes/CellTextView.html":{},"interfaces/CellViewRenderer.html":{},"classes/CheckRowSelectView.html":{},"classes/ClickCellEditListener.html":{},"interfaces/ClickListener.html":{},"classes/ClickRowSelectListener.html":{},"classes/ClickView.html":{},"classes/ClickViewListener.html":{},"classes/ColumnDndListener.html":{},"components/ColumnHeaderComponent.html":{},"components/CompareFilterRenderer.html":{},"components/ConfigMenuComponent.html":{},"components/ConfigMultiChoiceComponent.html":{},"classes/DateIso8601Formatter.html":{},"classes/DateMsFormatter.html":{},"interfaces/DblClickListener.html":{},"classes/EmptyFactory.html":{},"classes/EventListener.html":{},"classes/EventMeta.html":{},"classes/FilterRenderer.html":{},"classes/FormatterParser.html":{},"injectables/GridEventService.html":{},"injectables/GridGlobalService.html":{},"injectables/GridMessageService.html":{},"modules/GridModule.html":{},"classes/GroupKeyListener.html":{},"classes/HtmlUtil.html":{},"classes/InjectableFactory.html":{},"pipes/IsFixedPipe.html":{},"pipes/IsGroupPipe.html":{},"pipes/IsRowVisiblePipe.html":{},"pipes/IsVisiblePipe.html":{},"interfaces/MouseDownListener.html":{},"interfaces/MouseDragListener.html":{},"interfaces/MouseOutListener.html":{},"interfaces/MouseOverListener.html":{},"interfaces/MouseUpListener.html":{},"classes/NumberFormatter.html":{},"classes/Point.html":{},"classes/Range.html":{},"classes/RangeSelectListener.html":{},"classes/Row.html":{},"classes/RowDblClickListener.html":{},"classes/RowGroup.html":{},"classes/RowGroupView.html":{},"components/SelectFilterRenderer.html":{},"components/TextFilterRenderer.html":{},"index.html":{}}}],["mimic",{"_index":2284,"title":{},"body":{"index.html":{}}}],["mimics",{"_index":2282,"title":{},"body":{"index.html":{}}}],["min",{"_index":965,"title":{},"body":{"components/ConfigMenuComponent.html":{},"classes/Range.html":{}}}],["min(min",{"_index":1711,"title":{},"body":{"classes/Range.html":{}}}],["mind",{"_index":427,"title":{},"body":{"classes/CellPopupRenderer.html":{}}}],["miscellaneous",{"_index":2346,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["mm",{"_index":1117,"title":{},"body":{"classes/DateIso8601Formatter.html":{}}}],["mm/dd/yyyy",{"_index":1122,"title":{},"body":{"classes/DateIso8601Formatter.html":{},"classes/DateMsFormatter.html":{},"index.html":{}}}],["mocked",{"_index":2106,"title":{},"body":{"index.html":{}}}],["mode",{"_index":2168,"title":{},"body":{"index.html":{}}}],["model",{"_index":230,"title":{},"body":{"classes/CellEditRenderer.html":{},"components/ConfigMultiChoiceComponent.html":{}}}],["model/dictionary.interface",{"_index":1038,"title":{},"body":{"components/ConfigMenuComponent.html":{},"injectables/GridGlobalService.html":{}}}],["modelchange",{"_index":1065,"title":{},"body":{"components/ConfigMultiChoiceComponent.html":{}}}],["modification",{"_index":1247,"title":{},"body":{"classes/FormatterParser.html":{},"classes/NumberFormatter.html":{}}}],["modify",{"_index":2125,"title":{},"body":{"index.html":{},"license.html":{}}}],["module",{"_index":1469,"title":{"modules/GridModule.html":{}},"body":{"modules/GridModule.html":{},"index.html":{},"overview.html":{}}}],["modules",{"_index":1471,"title":{"modules.html":{}},"body":{"modules/GridModule.html":{},"modules.html":{}}}],["modulewithproviders",{"_index":1491,"title":{},"body":{"modules/GridModule.html":{}}}],["moment",{"_index":1133,"title":{},"body":{"classes/DateIso8601Formatter.html":{},"classes/DateMsFormatter.html":{},"dependencies.html":{}}}],["moment(value",{"_index":1141,"title":{},"body":{"classes/DateIso8601Formatter.html":{},"classes/DateMsFormatter.html":{}}}],["moment(value).format(this.format",{"_index":1137,"title":{},"body":{"classes/DateIso8601Formatter.html":{},"classes/DateMsFormatter.html":{}}}],["more",{"_index":1946,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["mouse",{"_index":343,"title":{},"body":{"classes/CellHoverPopupListener.html":{},"classes/ColumnDndListener.html":{},"classes/RangeSelectListener.html":{}}}],["mousedown",{"_index":621,"title":{},"body":{"classes/ColumnDndListener.html":{},"interfaces/MouseDownListener.html":{},"classes/RangeSelectListener.html":{}}}],["mousedown(event",{"_index":631,"title":{},"body":{"classes/ColumnDndListener.html":{},"interfaces/MouseDownListener.html":{},"classes/RangeSelectListener.html":{}}}],["mousedownlistener",{"_index":612,"title":{"interfaces/MouseDownListener.html":{}},"body":{"classes/ColumnDndListener.html":{},"interfaces/MouseDownListener.html":{},"classes/RangeSelectListener.html":{},"coverage.html":{}}}],["mousedrag",{"_index":622,"title":{},"body":{"classes/ColumnDndListener.html":{},"interfaces/MouseDragListener.html":{},"classes/RangeSelectListener.html":{}}}],["mousedrag(event",{"_index":633,"title":{},"body":{"classes/ColumnDndListener.html":{},"interfaces/MouseDragListener.html":{},"classes/RangeSelectListener.html":{}}}],["mousedraglistener",{"_index":613,"title":{"interfaces/MouseDragListener.html":{}},"body":{"classes/ColumnDndListener.html":{},"interfaces/MouseDragListener.html":{},"classes/RangeSelectListener.html":{},"coverage.html":{}}}],["mouseevent",{"_index":217,"title":{},"body":{"classes/CellEditRenderer.html":{},"classes/CellHoverPopupListener.html":{},"classes/ClickCellEditListener.html":{},"interfaces/ClickListener.html":{},"classes/ClickRowSelectListener.html":{},"classes/ClickViewListener.html":{},"classes/ColumnDndListener.html":{},"components/ColumnHeaderComponent.html":{},"components/CompareFilterRenderer.html":{},"interfaces/DblClickListener.html":{},"classes/FilterRenderer.html":{},"classes/GroupKeyListener.html":{},"interfaces/MouseDownListener.html":{},"interfaces/MouseDragListener.html":{},"interfaces/MouseOutListener.html":{},"interfaces/MouseOverListener.html":{},"interfaces/MouseUpListener.html":{},"classes/RangeSelectListener.html":{},"classes/RowDblClickListener.html":{},"components/SelectFilterRenderer.html":{},"components/TextFilterRenderer.html":{}}}],["mouseout",{"_index":623,"title":{},"body":{"classes/ColumnDndListener.html":{},"interfaces/MouseOutListener.html":{}}}],["mouseout(event",{"_index":635,"title":{},"body":{"classes/ColumnDndListener.html":{},"interfaces/MouseOutListener.html":{}}}],["mouseoutlistener",{"_index":615,"title":{"interfaces/MouseOutListener.html":{}},"body":{"classes/ColumnDndListener.html":{},"interfaces/MouseOutListener.html":{},"coverage.html":{}}}],["mouseover",{"_index":322,"title":{},"body":{"classes/CellHoverPopupListener.html":{},"interfaces/MouseOverListener.html":{}}}],["mouseover(event",{"_index":328,"title":{},"body":{"classes/CellHoverPopupListener.html":{},"interfaces/MouseOverListener.html":{}}}],["mouseoverlistener",{"_index":320,"title":{"interfaces/MouseOverListener.html":{}},"body":{"classes/CellHoverPopupListener.html":{},"interfaces/MouseOverListener.html":{},"coverage.html":{}}}],["mouseup",{"_index":624,"title":{},"body":{"classes/ColumnDndListener.html":{},"interfaces/MouseUpListener.html":{},"classes/RangeSelectListener.html":{}}}],["mouseup(event",{"_index":637,"title":{},"body":{"classes/ColumnDndListener.html":{},"interfaces/MouseUpListener.html":{},"classes/RangeSelectListener.html":{}}}],["mouseuplistener",{"_index":614,"title":{"interfaces/MouseUpListener.html":{}},"body":{"classes/ColumnDndListener.html":{},"interfaces/MouseUpListener.html":{},"classes/RangeSelectListener.html":{},"coverage.html":{}}}],["move",{"_index":1303,"title":{},"body":{"injectables/GridEventService.html":{}}}],["moved",{"_index":2072,"title":{},"body":{"index.html":{}}}],["mr",{"_index":1843,"title":{},"body":{"classes/RowGroupView.html":{}}}],["ms",{"_index":1927,"title":{},"body":{"changelog.html":{}}}],["ms.formatter.ts",{"_index":1145,"title":{},"body":{"classes/DateMsFormatter.html":{},"coverage.html":{}}}],["ms.formatter.ts:17",{"_index":1147,"title":{},"body":{"classes/DateMsFormatter.html":{}}}],["ms.formatter.ts:31",{"_index":1148,"title":{},"body":{"classes/DateMsFormatter.html":{}}}],["ms.formatter.ts:7",{"_index":1146,"title":{},"body":{"classes/DateMsFormatter.html":{}}}],["ms.formatter.ts:9",{"_index":1149,"title":{},"body":{"classes/DateMsFormatter.html":{}}}],["multi",{"_index":120,"title":{},"body":{"components/BigTextPopup.html":{},"components/ColumnHeaderComponent.html":{},"components/CompareFilterRenderer.html":{},"components/ConfigMenuComponent.html":{},"components/ConfigMultiChoiceComponent.html":{},"modules/GridModule.html":{},"components/SelectFilterRenderer.html":{},"components/TextFilterRenderer.html":{},"coverage.html":{}}}],["multiple",{"_index":2218,"title":{},"body":{"index.html":{}}}],["multiselect",{"_index":551,"title":{},"body":{"classes/ClickRowSelectListener.html":{},"classes/GroupKeyListener.html":{}}}],["n",{"_index":661,"title":{},"body":{"classes/ColumnDndListener.html":{},"changelog.html":{}}}],["n/a",{"_index":1046,"title":{},"body":{"components/ConfigMenuComponent.html":{},"components/ConfigMultiChoiceComponent.html":{}}}],["name",{"_index":64,"title":{},"body":{"components/BigTextPopup.html":{},"classes/Cell.html":{},"classes/CellEditRenderer.html":{},"classes/CellHoverPopupListener.html":{},"classes/CellNumberRangeView.html":{},"classes/CellPopupRenderer.html":{},"classes/CellTextView.html":{},"interfaces/CellViewRenderer.html":{},"classes/CheckRowSelectView.html":{},"classes/ClickCellEditListener.html":{},"interfaces/ClickListener.html":{},"classes/ClickRowSelectListener.html":{},"classes/ClickView.html":{},"classes/ClickViewListener.html":{},"classes/ColumnDndListener.html":{},"components/ColumnHeaderComponent.html":{},"components/CompareFilterRenderer.html":{},"components/ConfigMenuComponent.html":{},"components/ConfigMultiChoiceComponent.html":{},"classes/DateIso8601Formatter.html":{},"classes/DateMsFormatter.html":{},"interfaces/DblClickListener.html":{},"classes/EmptyFactory.html":{},"classes/EventListener.html":{},"classes/EventMeta.html":{},"classes/FilterRenderer.html":{},"classes/FormatterParser.html":{},"injectables/GridEventService.html":{},"injectables/GridGlobalService.html":{},"injectables/GridMessageService.html":{},"modules/GridModule.html":{},"classes/GroupKeyListener.html":{},"classes/HtmlUtil.html":{},"classes/InjectableFactory.html":{},"pipes/IsFixedPipe.html":{},"pipes/IsGroupPipe.html":{},"pipes/IsRowVisiblePipe.html":{},"pipes/IsVisiblePipe.html":{},"interfaces/MouseDownListener.html":{},"interfaces/MouseDragListener.html":{},"interfaces/MouseOutListener.html":{},"interfaces/MouseOverListener.html":{},"interfaces/MouseUpListener.html":{},"classes/NumberFormatter.html":{},"classes/Point.html":{},"classes/Range.html":{},"classes/RangeSelectListener.html":{},"classes/Row.html":{},"classes/RowChange.html":{},"classes/RowDblClickListener.html":{},"classes/RowGroup.html":{},"classes/RowGroupView.html":{},"components/SelectFilterRenderer.html":{},"components/TextFilterRenderer.html":{},"index.html":{}}}],["name.3.1.3",{"_index":1926,"title":{},"body":{"changelog.html":{}}}],["names",{"_index":2120,"title":{},"body":{"index.html":{}}}],["navigate",{"_index":2157,"title":{},"body":{"index.html":{}}}],["ncolumns",{"_index":1266,"title":{},"body":{"injectables/GridEventService.html":{}}}],["ndata",{"_index":2228,"title":{},"body":{"index.html":{}}}],["nearly",{"_index":2058,"title":{},"body":{"index.html":{}}}],["needed",{"_index":141,"title":{},"body":{"classes/Cell.html":{}}}],["negates",{"_index":1871,"title":{},"body":{"components/SelectFilterRenderer.html":{}}}],["new",{"_index":194,"title":{},"body":{"classes/CellEditRenderer.html":{},"classes/CellHoverPopupListener.html":{},"classes/ClickCellEditListener.html":{},"classes/ClickRowSelectListener.html":{},"classes/ClickViewListener.html":{},"classes/ColumnDndListener.html":{},"components/CompareFilterRenderer.html":{},"components/ConfigMultiChoiceComponent.html":{},"classes/DateIso8601Formatter.html":{},"classes/DateMsFormatter.html":{},"interfaces/EmptyConstructor.html":{},"classes/EmptyFactory.html":{},"classes/EventListener.html":{},"classes/FilterRenderer.html":{},"injectables/GridEventService.html":{},"injectables/GridGlobalService.html":{},"injectables/GridMessageService.html":{},"classes/GroupKeyListener.html":{},"interfaces/InjectableConstructor.html":{},"classes/InjectableFactory.html":{},"classes/Point.html":{},"classes/Range.html":{},"classes/RangeSelectListener.html":{},"classes/RowDblClickListener.html":{},"classes/RowGroup.html":{},"components/TextFilterRenderer.html":{},"changelog.html":{},"coverage.html":{},"index.html":{}}}],["new(injector",{"_index":1573,"title":{},"body":{"interfaces/InjectableConstructor.html":{},"classes/InjectableFactory.html":{}}}],["newrow",{"_index":1267,"title":{},"body":{"injectables/GridEventService.html":{},"index.html":{}}}],["newrownum",{"_index":1798,"title":{},"body":{"classes/RowChange.html":{}}}],["newrowpostcall",{"_index":2190,"title":{},"body":{"index.html":{}}}],["newrowpostcall().newrowpostcallerror",{"_index":2187,"title":{},"body":{"index.html":{}}}],["newrowpostcall().newrowpostcallfinally",{"_index":2188,"title":{},"body":{"index.html":{}}}],["newvalue",{"_index":289,"title":{},"body":{"classes/CellEditRenderer.html":{},"components/ConfigMultiChoiceComponent.html":{},"index.html":{}}}],["next",{"_index":1304,"title":{},"body":{"injectables/GridEventService.html":{},"index.html":{}}}],["ng",{"_index":749,"title":{},"body":{"components/ColumnHeaderComponent.html":{},"components/CompareFilterRenderer.html":{},"classes/FilterRenderer.html":{},"injectables/GridGlobalService.html":{},"classes/RowGroup.html":{},"components/SelectFilterRenderer.html":{},"components/TextFilterRenderer.html":{},"changelog.html":{},"dependencies.html":{},"index.html":{}}}],["ngafterviewinit",{"_index":710,"title":{},"body":{"components/ColumnHeaderComponent.html":{},"components/CompareFilterRenderer.html":{},"classes/FilterRenderer.html":{},"components/SelectFilterRenderer.html":{},"components/TextFilterRenderer.html":{}}}],["ngmodule",{"_index":1506,"title":{},"body":{"modules/GridModule.html":{}}}],["ngondestroy",{"_index":1003,"title":{},"body":{"components/ConfigMenuComponent.html":{}}}],["ngoninit",{"_index":711,"title":{},"body":{"components/ColumnHeaderComponent.html":{},"components/CompareFilterRenderer.html":{},"components/ConfigMenuComponent.html":{},"components/ConfigMultiChoiceComponent.html":{},"classes/FilterRenderer.html":{},"components/SelectFilterRenderer.html":{},"components/TextFilterRenderer.html":{},"index.html":{}}}],["nlabs",{"_index":2250,"title":{},"body":{"index.html":{}}}],["no_event",{"_index":2032,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["none",{"_index":698,"title":{},"body":{"components/ColumnHeaderComponent.html":{}}}],["noninfringement",{"_index":2326,"title":{},"body":{"license.html":{}}}],["normal",{"_index":31,"title":{},"body":{"components/BigTextPopup.html":{}}}],["note",{"_index":2100,"title":{},"body":{"index.html":{}}}],["notice",{"_index":2313,"title":{},"body":{"license.html":{}}}],["notify",{"_index":232,"title":{},"body":{"classes/CellEditRenderer.html":{}}}],["nowrap",{"_index":976,"title":{},"body":{"components/ConfigMenuComponent.html":{}}}],["npm",{"_index":2270,"title":{},"body":{"index.html":{}}}],["npmignore.2.0.1",{"_index":1966,"title":{},"body":{"changelog.html":{}}}],["npmpack",{"_index":2082,"title":{},"body":{"index.html":{}}}],["npmpublish",{"_index":2083,"title":{},"body":{"index.html":{}}}],["null",{"_index":351,"title":{},"body":{"classes/CellHoverPopupListener.html":{},"classes/CellNumberRangeView.html":{},"classes/ClickCellEditListener.html":{},"classes/ClickRowSelectListener.html":{},"classes/ClickViewListener.html":{},"classes/GroupKeyListener.html":{},"classes/HtmlUtil.html":{},"classes/Point.html":{}}}],["number",{"_index":88,"title":{},"body":{"components/BigTextPopup.html":{},"classes/Cell.html":{},"classes/CellEditRenderer.html":{},"classes/CellNumberRangeView.html":{},"classes/CellPopupRenderer.html":{},"classes/CellTextView.html":{},"interfaces/CellViewRenderer.html":{},"classes/CheckRowSelectView.html":{},"classes/ClickView.html":{},"components/ColumnHeaderComponent.html":{},"components/CompareFilterRenderer.html":{},"components/ConfigMenuComponent.html":{},"components/ConfigMultiChoiceComponent.html":{},"classes/DateMsFormatter.html":{},"classes/FilterRenderer.html":{},"injectables/GridEventService.html":{},"injectables/GridGlobalService.html":{},"injectables/GridMessageService.html":{},"classes/Point.html":{},"classes/Row.html":{},"classes/RowChange.html":{},"classes/RowGroup.html":{},"classes/RowGroupView.html":{},"components/SelectFilterRenderer.html":{},"components/TextFilterRenderer.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["numberformatter",{"_index":1612,"title":{"classes/NumberFormatter.html":{}},"body":{"classes/NumberFormatter.html":{},"coverage.html":{}}}],["numbers",{"_index":824,"title":{},"body":{"components/CompareFilterRenderer.html":{},"components/SelectFilterRenderer.html":{}}}],["numerous",{"_index":1983,"title":{},"body":{"changelog.html":{}}}],["o",{"_index":151,"title":{},"body":{"classes/Cell.html":{},"classes/CellEditRenderer.html":{},"components/CompareFilterRenderer.html":{},"components/ConfigMultiChoiceComponent.html":{}}}],["o.display",{"_index":852,"title":{},"body":{"components/CompareFilterRenderer.html":{}}}],["o.isfixed",{"_index":1590,"title":{},"body":{"pipes/IsFixedPipe.html":{}}}],["o.isgroup",{"_index":1594,"title":{},"body":{"pipes/IsGroupPipe.html":{}}}],["o.isutility",{"_index":1595,"title":{},"body":{"pipes/IsGroupPipe.html":{}}}],["o.visible",{"_index":1599,"title":{},"body":{"pipes/IsRowVisiblePipe.html":{},"pipes/IsVisiblePipe.html":{}}}],["object",{"_index":149,"title":{},"body":{"classes/Cell.html":{},"classes/CellEditRenderer.html":{},"classes/CellPopupRenderer.html":{},"interfaces/CellViewRenderer.html":{},"classes/Row.html":{},"index.html":{}}}],["object.assign(this",{"_index":157,"title":{},"body":{"classes/Cell.html":{}}}],["objects",{"_index":2113,"title":{},"body":{"index.html":{}}}],["objects.fixedcolumns",{"_index":2134,"title":{},"body":{"index.html":{}}}],["observable",{"_index":1461,"title":{},"body":{"injectables/GridMessageService.html":{},"changelog.html":{},"index.html":{}}}],["observable.of(new",{"_index":2110,"title":{},"body":{"index.html":{}}}],["obtaining",{"_index":2295,"title":{},"body":{"license.html":{}}}],["odd.3.1.4",{"_index":1925,"title":{},"body":{"changelog.html":{}}}],["of(undefined).pipe(delay(0)).subscribe",{"_index":756,"title":{},"body":{"components/ColumnHeaderComponent.html":{}}}],["offers",{"_index":818,"title":{},"body":{"components/CompareFilterRenderer.html":{},"components/SelectFilterRenderer.html":{}}}],["old",{"_index":2196,"title":{},"body":{"index.html":{}}}],["oldrownum",{"_index":1384,"title":{},"body":{"injectables/GridEventService.html":{},"classes/RowChange.html":{}}}],["oldvalue",{"_index":292,"title":{},"body":{"classes/CellEditRenderer.html":{},"index.html":{}}}],["once",{"_index":1175,"title":{},"body":{"classes/EventListener.html":{}}}],["oncellsave",{"_index":2193,"title":{},"body":{"index.html":{}}}],["onclick",{"_index":179,"title":{},"body":{"classes/CellEditRenderer.html":{}}}],["onclick(event",{"_index":216,"title":{},"body":{"classes/CellEditRenderer.html":{}}}],["ondestroy",{"_index":960,"title":{},"body":{"components/ConfigMenuComponent.html":{}}}],["one",{"_index":437,"title":{},"body":{"classes/CellPopupRenderer.html":{},"injectables/GridEventService.html":{},"index.html":{}}}],["oninit",{"_index":959,"title":{},"body":{"components/ConfigMenuComponent.html":{}}}],["onmodelchange",{"_index":180,"title":{},"body":{"classes/CellEditRenderer.html":{}}}],["onmodelchange(value",{"_index":220,"title":{},"body":{"classes/CellEditRenderer.html":{}}}],["onmouseout",{"_index":712,"title":{},"body":{"components/ColumnHeaderComponent.html":{}}}],["onmouseout(event",{"_index":731,"title":{},"body":{"components/ColumnHeaderComponent.html":{}}}],["onmouseover",{"_index":713,"title":{},"body":{"components/ColumnHeaderComponent.html":{}}}],["onmouseover(event",{"_index":733,"title":{},"body":{"components/ColumnHeaderComponent.html":{}}}],["onresize(event",{"_index":286,"title":{},"body":{"classes/CellEditRenderer.html":{}}}],["onrowsave",{"_index":2156,"title":{},"body":{"index.html":{}}}],["opacity",{"_index":844,"title":{},"body":{"components/CompareFilterRenderer.html":{},"components/SelectFilterRenderer.html":{}}}],["operator",{"_index":837,"title":{},"body":{"components/CompareFilterRenderer.html":{}}}],["operatorchange",{"_index":860,"title":{},"body":{"components/CompareFilterRenderer.html":{}}}],["operatorchange(operator",{"_index":879,"title":{},"body":{"components/CompareFilterRenderer.html":{}}}],["option",{"_index":2248,"title":{},"body":{"index.html":{}}}],["optional",{"_index":66,"title":{},"body":{"components/BigTextPopup.html":{},"classes/Cell.html":{},"classes/CellEditRenderer.html":{},"classes/CellHoverPopupListener.html":{},"classes/CellNumberRangeView.html":{},"classes/CellPopupRenderer.html":{},"classes/CellTextView.html":{},"interfaces/CellViewRenderer.html":{},"classes/CheckRowSelectView.html":{},"classes/ClickCellEditListener.html":{},"interfaces/ClickListener.html":{},"classes/ClickRowSelectListener.html":{},"classes/ClickView.html":{},"classes/ClickViewListener.html":{},"classes/ColumnDndListener.html":{},"components/ColumnHeaderComponent.html":{},"components/CompareFilterRenderer.html":{},"components/ConfigMenuComponent.html":{},"components/ConfigMultiChoiceComponent.html":{},"classes/DateIso8601Formatter.html":{},"classes/DateMsFormatter.html":{},"interfaces/DblClickListener.html":{},"classes/EmptyFactory.html":{},"classes/EventListener.html":{},"interfaces/EventListenerArg.html":{},"classes/EventMeta.html":{},"classes/FilterRenderer.html":{},"classes/FormatterParser.html":{},"injectables/GridEventService.html":{},"injectables/GridGlobalService.html":{},"injectables/GridMessageService.html":{},"modules/GridModule.html":{},"classes/GroupKeyListener.html":{},"classes/HtmlUtil.html":{},"classes/InjectableFactory.html":{},"pipes/IsFixedPipe.html":{},"pipes/IsGroupPipe.html":{},"pipes/IsRowVisiblePipe.html":{},"pipes/IsVisiblePipe.html":{},"interfaces/MouseDownListener.html":{},"interfaces/MouseDragListener.html":{},"interfaces/MouseOutListener.html":{},"interfaces/MouseOverListener.html":{},"interfaces/MouseUpListener.html":{},"classes/NumberFormatter.html":{},"classes/Point.html":{},"classes/Range.html":{},"classes/RangeSelectListener.html":{},"classes/Row.html":{},"classes/RowChange.html":{},"classes/RowDblClickListener.html":{},"classes/RowGroup.html":{},"classes/RowGroupView.html":{},"components/SelectFilterRenderer.html":{},"components/TextFilterRenderer.html":{}}}],["options",{"_index":250,"title":{},"body":{"classes/CellEditRenderer.html":{},"components/CompareFilterRenderer.html":{},"index.html":{}}}],["organization.3.1.6",{"_index":1921,"title":{},"body":{"changelog.html":{}}}],["originally",{"_index":2199,"title":{},"body":{"index.html":{}}}],["originalrowdata",{"_index":2198,"title":{},"body":{"index.html":{}}}],["originaltarget",{"_index":620,"title":{},"body":{"classes/ColumnDndListener.html":{}}}],["other.i",{"_index":1673,"title":{},"body":{"classes/Point.html":{}}}],["other.j",{"_index":1674,"title":{},"body":{"classes/Point.html":{}}}],["otherwise",{"_index":2337,"title":{},"body":{"license.html":{}}}],["out",{"_index":843,"title":{},"body":{"components/CompareFilterRenderer.html":{},"modules/GridModule.html":{},"components/SelectFilterRenderer.html":{},"license.html":{},"overview.html":{}}}],["out.interface",{"_index":642,"title":{},"body":{"classes/ColumnDndListener.html":{}}}],["out.interface.ts",{"_index":1606,"title":{},"body":{"interfaces/MouseOutListener.html":{},"coverage.html":{}}}],["out.interface.ts:3",{"_index":1607,"title":{},"body":{"interfaces/MouseOutListener.html":{}}}],["output",{"_index":1085,"title":{},"body":{"components/ConfigMultiChoiceComponent.html":{},"classes/FilterRenderer.html":{}}}],["outputs",{"_index":869,"title":{},"body":{"components/CompareFilterRenderer.html":{},"components/ConfigMultiChoiceComponent.html":{},"classes/FilterRenderer.html":{},"components/SelectFilterRenderer.html":{},"components/TextFilterRenderer.html":{}}}],["outside",{"_index":914,"title":{},"body":{"components/CompareFilterRenderer.html":{}}}],["over",{"_index":79,"title":{},"body":{"components/BigTextPopup.html":{},"classes/CellEditRenderer.html":{},"classes/CellPopupRenderer.html":{}}}],["over.interface",{"_index":344,"title":{},"body":{"classes/CellHoverPopupListener.html":{}}}],["over.interface.ts",{"_index":1608,"title":{},"body":{"interfaces/MouseOverListener.html":{},"coverage.html":{}}}],["over.interface.ts:3",{"_index":1609,"title":{},"body":{"interfaces/MouseOverListener.html":{}}}],["overflow",{"_index":465,"title":{},"body":{"classes/CellTextView.html":{},"components/ColumnHeaderComponent.html":{},"components/ConfigMenuComponent.html":{},"classes/RowGroupView.html":{},"components/SelectFilterRenderer.html":{}}}],["overflows",{"_index":431,"title":{},"body":{"classes/CellPopupRenderer.html":{}}}],["override",{"_index":214,"title":{},"body":{"classes/CellEditRenderer.html":{},"classes/FilterRenderer.html":{}}}],["overview",{"_index":2344,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["pack",{"_index":2086,"title":{},"body":{"index.html":{}}}],["package",{"_index":2049,"title":{"dependencies.html":{}},"body":{}}],["package.json",{"_index":2076,"title":{},"body":{"index.html":{}}}],["packaging",{"_index":2080,"title":{},"body":{"index.html":{}}}],["pad",{"_index":987,"title":{},"body":{"components/ConfigMenuComponent.html":{}}}],["padding",{"_index":32,"title":{},"body":{"components/BigTextPopup.html":{},"classes/CellTextView.html":{},"components/ColumnHeaderComponent.html":{},"components/CompareFilterRenderer.html":{},"components/ConfigMenuComponent.html":{},"components/ConfigMultiChoiceComponent.html":{},"components/SelectFilterRenderer.html":{}}}],["page",{"_index":993,"title":{},"body":{"components/ConfigMenuComponent.html":{},"index.html":{}}}],["paging",{"_index":1816,"title":{},"body":{"classes/RowGroup.html":{},"index.html":{}}}],["panel",{"_index":969,"title":{},"body":{"components/ConfigMenuComponent.html":{}}}],["param",{"_index":287,"title":{},"body":{"classes/CellEditRenderer.html":{},"interfaces/CellViewRenderer.html":{},"components/CompareFilterRenderer.html":{},"classes/EventListener.html":{},"injectables/GridEventService.html":{},"injectables/GridGlobalService.html":{},"components/SelectFilterRenderer.html":{}}}],["parameters",{"_index":63,"title":{},"body":{"components/BigTextPopup.html":{},"classes/Cell.html":{},"classes/CellEditRenderer.html":{},"classes/CellHoverPopupListener.html":{},"classes/CellNumberRangeView.html":{},"classes/CellPopupRenderer.html":{},"classes/CellTextView.html":{},"interfaces/CellViewRenderer.html":{},"classes/CheckRowSelectView.html":{},"classes/ClickCellEditListener.html":{},"interfaces/ClickListener.html":{},"classes/ClickRowSelectListener.html":{},"classes/ClickView.html":{},"classes/ClickViewListener.html":{},"classes/ColumnDndListener.html":{},"components/ColumnHeaderComponent.html":{},"components/CompareFilterRenderer.html":{},"components/ConfigMenuComponent.html":{},"components/ConfigMultiChoiceComponent.html":{},"classes/DateIso8601Formatter.html":{},"classes/DateMsFormatter.html":{},"interfaces/DblClickListener.html":{},"classes/EmptyFactory.html":{},"classes/EventListener.html":{},"classes/EventMeta.html":{},"classes/FilterRenderer.html":{},"classes/FormatterParser.html":{},"injectables/GridEventService.html":{},"injectables/GridGlobalService.html":{},"injectables/GridMessageService.html":{},"modules/GridModule.html":{},"classes/GroupKeyListener.html":{},"classes/HtmlUtil.html":{},"classes/InjectableFactory.html":{},"pipes/IsFixedPipe.html":{},"pipes/IsGroupPipe.html":{},"pipes/IsRowVisiblePipe.html":{},"pipes/IsVisiblePipe.html":{},"interfaces/MouseDownListener.html":{},"interfaces/MouseDragListener.html":{},"interfaces/MouseOutListener.html":{},"interfaces/MouseOverListener.html":{},"interfaces/MouseUpListener.html":{},"classes/NumberFormatter.html":{},"classes/Point.html":{},"classes/Range.html":{},"classes/RangeSelectListener.html":{},"classes/Row.html":{},"classes/RowChange.html":{},"classes/RowDblClickListener.html":{},"classes/RowGroup.html":{},"classes/RowGroupView.html":{},"components/SelectFilterRenderer.html":{},"components/TextFilterRenderer.html":{}}}],["parent",{"_index":829,"title":{},"body":{"components/CompareFilterRenderer.html":{},"components/SelectFilterRenderer.html":{}}}],["parse",{"_index":861,"title":{},"body":{"components/CompareFilterRenderer.html":{},"classes/NumberFormatter.html":{}}}],["parse(value",{"_index":881,"title":{},"body":{"components/CompareFilterRenderer.html":{},"classes/NumberFormatter.html":{}}}],["parser",{"_index":1135,"title":{},"body":{"classes/DateIso8601Formatter.html":{},"classes/DateMsFormatter.html":{},"classes/FormatterParser.html":{},"classes/NumberFormatter.html":{}}}],["parser.ts",{"_index":1244,"title":{},"body":{"classes/FormatterParser.html":{},"coverage.html":{}}}],["parser.ts:12",{"_index":1249,"title":{},"body":{"classes/FormatterParser.html":{}}}],["parser.ts:16",{"_index":1250,"title":{},"body":{"classes/FormatterParser.html":{}}}],["parser.ts:6",{"_index":1248,"title":{},"body":{"classes/FormatterParser.html":{}}}],["parser.ts:8",{"_index":1251,"title":{},"body":{"classes/FormatterParser.html":{}}}],["parsevalue",{"_index":1121,"title":{},"body":{"classes/DateIso8601Formatter.html":{},"classes/DateMsFormatter.html":{},"classes/FormatterParser.html":{},"classes/NumberFormatter.html":{}}}],["parsevalue(value",{"_index":1127,"title":{},"body":{"classes/DateIso8601Formatter.html":{},"classes/DateMsFormatter.html":{},"classes/FormatterParser.html":{},"classes/NumberFormatter.html":{}}}],["particular",{"_index":438,"title":{},"body":{"classes/CellPopupRenderer.html":{},"license.html":{}}}],["passed",{"_index":231,"title":{},"body":{"classes/CellEditRenderer.html":{},"interfaces/CellViewRenderer.html":{},"injectables/GridEventService.html":{},"index.html":{}}}],["passing",{"_index":2166,"title":{},"body":{"index.html":{}}}],["pause",{"_index":1956,"title":{},"body":{"changelog.html":{}}}],["per",{"_index":2146,"title":{},"body":{"index.html":{}}}],["perform",{"_index":2163,"title":{},"body":{"index.html":{}}}],["permission",{"_index":2289,"title":{},"body":{"license.html":{}}}],["permit",{"_index":2309,"title":{},"body":{"license.html":{}}}],["persisting",{"_index":2183,"title":{},"body":{"index.html":{}}}],["person",{"_index":2294,"title":{},"body":{"license.html":{}}}],["persons",{"_index":2310,"title":{},"body":{"license.html":{}}}],["pipe",{"_index":1577,"title":{"pipes/IsFixedPipe.html":{},"pipes/IsGroupPipe.html":{},"pipes/IsRowVisiblePipe.html":{},"pipes/IsVisiblePipe.html":{}},"body":{"pipes/IsFixedPipe.html":{},"pipes/IsGroupPipe.html":{},"pipes/IsRowVisiblePipe.html":{},"pipes/IsVisiblePipe.html":{},"coverage.html":{}}}],["pipes",{"_index":1578,"title":{},"body":{"pipes/IsFixedPipe.html":{},"pipes/IsGroupPipe.html":{},"pipes/IsRowVisiblePipe.html":{},"pipes/IsVisiblePipe.html":{},"overview.html":{}}}],["pipetransform",{"_index":1587,"title":{},"body":{"pipes/IsFixedPipe.html":{},"pipes/IsGroupPipe.html":{},"pipes/IsRowVisiblePipe.html":{},"pipes/IsVisiblePipe.html":{}}}],["plus",{"_index":1299,"title":{},"body":{"injectables/GridEventService.html":{}}}],["point",{"_index":72,"title":{"classes/Point.html":{}},"body":{"components/BigTextPopup.html":{},"classes/CellHoverPopupListener.html":{},"classes/CellPopupRenderer.html":{},"classes/ClickCellEditListener.html":{},"classes/ClickRowSelectListener.html":{},"classes/ClickViewListener.html":{},"injectables/GridEventService.html":{},"classes/HtmlUtil.html":{},"classes/Point.html":{},"classes/Range.html":{},"coverage.html":{},"index.html":{}}}],["point(+groups[1",{"_index":1669,"title":{},"body":{"classes/Point.html":{}}}],["point(0",{"_index":1383,"title":{},"body":{"injectables/GridEventService.html":{}}}],["point(i",{"_index":1376,"title":{},"body":{"injectables/GridEventService.html":{}}}],["point(max.i",{"_index":1702,"title":{},"body":{"classes/Range.html":{}}}],["point(point.i",{"_index":1706,"title":{},"body":{"classes/Range.html":{}}}],["point.getpoint(this.getid(e",{"_index":1564,"title":{},"body":{"classes/HtmlUtil.html":{}}}],["point.i",{"_index":1708,"title":{},"body":{"classes/Range.html":{}}}],["point.j",{"_index":1707,"title":{},"body":{"classes/Range.html":{}}}],["popup",{"_index":17,"title":{},"body":{"components/BigTextPopup.html":{},"classes/CellEditRenderer.html":{},"classes/CellHoverPopupListener.html":{},"classes/CellPopupRenderer.html":{},"components/ColumnHeaderComponent.html":{},"changelog.html":{},"coverage.html":{}}}],["popup'},{'name",{"_index":106,"title":{},"body":{"components/BigTextPopup.html":{},"components/ColumnHeaderComponent.html":{},"components/CompareFilterRenderer.html":{},"components/ConfigMenuComponent.html":{},"components/ConfigMultiChoiceComponent.html":{},"components/SelectFilterRenderer.html":{},"components/TextFilterRenderer.html":{}}}],["popup).selectedrows",{"_index":2211,"title":{},"body":{"index.html":{}}}],["popup.component",{"_index":1525,"title":{},"body":{"modules/GridModule.html":{}}}],["popup.component.ts",{"_index":10,"title":{},"body":{"components/BigTextPopup.html":{},"coverage.html":{}}}],["popup.component.ts:28",{"_index":83,"title":{},"body":{"components/BigTextPopup.html":{}}}],["popup.component.ts:30",{"_index":57,"title":{},"body":{"components/BigTextPopup.html":{}}}],["popup.listener.ts",{"_index":317,"title":{},"body":{"classes/CellHoverPopupListener.html":{},"coverage.html":{}}}],["popup.listener.ts:10",{"_index":329,"title":{},"body":{"classes/CellHoverPopupListener.html":{}}}],["portions",{"_index":2317,"title":{},"body":{"license.html":{}}}],["position",{"_index":77,"title":{},"body":{"components/BigTextPopup.html":{},"classes/CellEditRenderer.html":{},"classes/CellPopupRenderer.html":{},"classes/ColumnDndListener.html":{},"components/ColumnHeaderComponent.html":{},"components/ConfigMenuComponent.html":{}}}],["possibility",{"_index":2089,"title":{},"body":{"index.html":{}}}],["possible",{"_index":2149,"title":{},"body":{"index.html":{}}}],["pr",{"_index":978,"title":{},"body":{"components/ConfigMenuComponent.html":{}}}],["pressed",{"_index":1314,"title":{},"body":{"injectables/GridEventService.html":{}}}],["prevent",{"_index":1961,"title":{},"body":{"changelog.html":{}}}],["previous",{"_index":2092,"title":{},"body":{"index.html":{}}}],["private",{"_index":47,"title":{},"body":{"components/BigTextPopup.html":{},"classes/CellEditRenderer.html":{},"classes/CellPopupRenderer.html":{},"components/ColumnHeaderComponent.html":{},"components/ConfigMenuComponent.html":{},"classes/EventMeta.html":{},"injectables/GridEventService.html":{},"injectables/GridGlobalService.html":{},"injectables/GridMessageService.html":{},"interfaces/InjectableConstructor.html":{},"classes/InjectableFactory.html":{},"classes/Point.html":{},"classes/Range.html":{},"classes/Row.html":{}}}],["prod",{"_index":2287,"title":{},"body":{"index.html":{}}}],["production",{"_index":2285,"title":{},"body":{"index.html":{}}}],["project.4.0.0",{"_index":1916,"title":{},"body":{"changelog.html":{}}}],["promise",{"_index":1982,"title":{},"body":{"changelog.html":{}}}],["propagation",{"_index":1931,"title":{},"body":{"changelog.html":{}}}],["properties",{"_index":43,"title":{},"body":{"components/BigTextPopup.html":{},"classes/Cell.html":{},"classes/CellEditRenderer.html":{},"classes/CellHoverPopupListener.html":{},"classes/CellNumberRangeView.html":{},"classes/CellPopupRenderer.html":{},"classes/CellTextView.html":{},"interfaces/CellViewRenderer.html":{},"classes/CheckRowSelectView.html":{},"classes/ClickCellEditListener.html":{},"classes/ClickRowSelectListener.html":{},"classes/ClickView.html":{},"classes/ClickViewListener.html":{},"classes/ColumnDndListener.html":{},"components/ColumnHeaderComponent.html":{},"components/CompareFilterRenderer.html":{},"components/ConfigMenuComponent.html":{},"components/ConfigMultiChoiceComponent.html":{},"classes/DateIso8601Formatter.html":{},"classes/DateMsFormatter.html":{},"interfaces/Dictionary.html":{},"classes/EventListener.html":{},"interfaces/EventListenerArg.html":{},"classes/EventMeta.html":{},"classes/FilterRenderer.html":{},"classes/FormatterParser.html":{},"injectables/GridEventService.html":{},"injectables/GridGlobalService.html":{},"injectables/GridMessageService.html":{},"classes/GroupKeyListener.html":{},"classes/NumberFormatter.html":{},"classes/Point.html":{},"classes/Range.html":{},"classes/RangeSelectListener.html":{},"classes/Row.html":{},"classes/RowChange.html":{},"classes/RowDblClickListener.html":{},"classes/RowGroup.html":{},"classes/RowGroupView.html":{},"components/SelectFilterRenderer.html":{},"components/TextFilterRenderer.html":{}}}],["property",{"_index":483,"title":{},"body":{"interfaces/CellViewRenderer.html":{}}}],["proprietary",{"_index":1504,"title":{},"body":{"modules/GridModule.html":{}}}],["provide",{"_index":1530,"title":{},"body":{"modules/GridModule.html":{},"index.html":{}}}],["provided",{"_index":2104,"title":{},"body":{"index.html":{},"license.html":{}}}],["providers",{"_index":961,"title":{},"body":{"components/ConfigMenuComponent.html":{},"modules/GridModule.html":{},"overview.html":{}}}],["public",{"_index":1630,"title":{},"body":{"classes/Point.html":{},"changelog.html":{}}}],["publish",{"_index":2304,"title":{},"body":{"license.html":{}}}],["publish.basic",{"_index":2087,"title":{},"body":{"index.html":{}}}],["publishing",{"_index":2068,"title":{},"body":{"index.html":{}}}],["pulling",{"_index":1550,"title":{},"body":{"classes/HtmlUtil.html":{},"index.html":{}}}],["pure",{"_index":1588,"title":{},"body":{"pipes/IsFixedPipe.html":{},"index.html":{}}}],["purpose",{"_index":2325,"title":{},"body":{"license.html":{}}}],["pushconfigevent",{"_index":1403,"title":{},"body":{"injectables/GridGlobalService.html":{}}}],["pushconfigevent(group",{"_index":1413,"title":{},"body":{"injectables/GridGlobalService.html":{}}}],["pushglobalconfig",{"_index":1404,"title":{},"body":{"injectables/GridGlobalService.html":{}}}],["pushglobalconfig(key",{"_index":1415,"title":{},"body":{"injectables/GridGlobalService.html":{}}}],["px",{"_index":278,"title":{},"body":{"classes/CellEditRenderer.html":{},"classes/CellPopupRenderer.html":{},"classes/ColumnDndListener.html":{},"components/ColumnHeaderComponent.html":{},"components/ConfigMenuComponent.html":{}}}],["radius",{"_index":28,"title":{},"body":{"components/BigTextPopup.html":{},"components/CompareFilterRenderer.html":{},"components/ConfigMenuComponent.html":{},"components/ConfigMultiChoiceComponent.html":{}}}],["range",{"_index":364,"title":{"classes/Range.html":{}},"body":{"classes/CellNumberRangeView.html":{},"classes/ClickViewListener.html":{},"injectables/GridEventService.html":{},"classes/Range.html":{},"classes/RangeSelectListener.html":{},"coverage.html":{},"index.html":{}}}],["range(location",{"_index":604,"title":{},"body":{"classes/ClickViewListener.html":{},"injectables/GridEventService.html":{}}}],["rangeselectlistener",{"_index":1713,"title":{"classes/RangeSelectListener.html":{}},"body":{"classes/RangeSelectListener.html":{},"coverage.html":{}}}],["re",{"_index":2243,"title":{},"body":{"index.html":{}}}],["readme",{"_index":1967,"title":{},"body":{"changelog.html":{}}}],["readme.2.1.0",{"_index":1949,"title":{},"body":{"changelog.html":{}}}],["readme.md",{"_index":1986,"title":{},"body":{"changelog.html":{}}}],["rearrange",{"_index":1919,"title":{},"body":{"changelog.html":{}}}],["red",{"_index":378,"title":{},"body":{"classes/CellNumberRangeView.html":{},"components/ConfigMenuComponent.html":{}}}],["refactor",{"_index":1911,"title":{},"body":{"changelog.html":{}}}],["reference",{"_index":334,"title":{},"body":{"classes/CellHoverPopupListener.html":{},"classes/ClickCellEditListener.html":{},"classes/ClickRowSelectListener.html":{},"classes/ClickViewListener.html":{},"classes/ColumnDndListener.html":{},"classes/EventListener.html":{},"classes/GroupKeyListener.html":{},"classes/RangeSelectListener.html":{},"classes/RowDblClickListener.html":{}}}],["referencing",{"_index":1398,"title":{},"body":{"injectables/GridGlobalService.html":{},"changelog.html":{}}}],["refresh",{"_index":2241,"title":{},"body":{"index.html":{}}}],["regex",{"_index":1663,"title":{},"body":{"classes/Point.html":{}}}],["regex.exec(id",{"_index":1668,"title":{},"body":{"classes/Point.html":{}}}],["regexp",{"_index":1664,"title":{},"body":{"classes/Point.html":{}}}],["regexp(\"[a",{"_index":1665,"title":{},"body":{"classes/Point.html":{}}}],["register",{"_index":1405,"title":{},"body":{"injectables/GridGlobalService.html":{}}}],["register(gridservice",{"_index":1417,"title":{},"body":{"injectables/GridGlobalService.html":{}}}],["registergroup",{"_index":1406,"title":{},"body":{"injectables/GridGlobalService.html":{}}}],["registergroup(group",{"_index":1419,"title":{},"body":{"injectables/GridGlobalService.html":{}}}],["release",{"_index":611,"title":{},"body":{"classes/ColumnDndListener.html":{},"changelog.html":{}}}],["remove",{"_index":1063,"title":{},"body":{"components/ConfigMultiChoiceComponent.html":{}}}],["remove(event",{"_index":1080,"title":{},"body":{"components/ConfigMultiChoiceComponent.html":{}}}],["removed",{"_index":1950,"title":{},"body":{"changelog.html":{}}}],["removes",{"_index":1874,"title":{},"body":{"components/SelectFilterRenderer.html":{}}}],["render",{"_index":176,"title":{},"body":{"classes/CellEditRenderer.html":{},"index.html":{}}}],["rendered",{"_index":1817,"title":{},"body":{"classes/RowGroup.html":{}}}],["renderer",{"_index":50,"title":{},"body":{"components/BigTextPopup.html":{},"classes/CellEditRenderer.html":{},"classes/CellNumberRangeView.html":{},"classes/CellPopupRenderer.html":{},"classes/CellTextView.html":{},"interfaces/CellViewRenderer.html":{},"classes/CheckRowSelectView.html":{},"classes/ClickView.html":{},"classes/ColumnDndListener.html":{},"components/ColumnHeaderComponent.html":{},"components/CompareFilterRenderer.html":{},"classes/RowGroupView.html":{},"components/SelectFilterRenderer.html":{},"components/TextFilterRenderer.html":{},"index.html":{}}}],["renderer.addclass(eicon",{"_index":592,"title":{},"body":{"classes/ClickView.html":{}}}],["renderer.addclass(icon",{"_index":1842,"title":{},"body":{"classes/RowGroupView.html":{}}}],["renderer.addclass(selectedspan",{"_index":519,"title":{},"body":{"classes/CheckRowSelectView.html":{}}}],["renderer.addclass(selectedsvg",{"_index":522,"title":{},"body":{"classes/CheckRowSelectView.html":{}}}],["renderer.addclass(span",{"_index":517,"title":{},"body":{"classes/CheckRowSelectView.html":{}}}],["renderer.addclass(span2",{"_index":412,"title":{},"body":{"classes/CellNumberRangeView.html":{}}}],["renderer.addclass(unselectedspan",{"_index":528,"title":{},"body":{"classes/CheckRowSelectView.html":{}}}],["renderer.addclass(unselectedsvg",{"_index":531,"title":{},"body":{"classes/CheckRowSelectView.html":{}}}],["renderer.appendchild(div",{"_index":403,"title":{},"body":{"classes/CellNumberRangeView.html":{},"classes/RowGroupView.html":{}}}],["renderer.appendchild(selectedspan",{"_index":524,"title":{},"body":{"classes/CheckRowSelectView.html":{}}}],["renderer.appendchild(span",{"_index":474,"title":{},"body":{"classes/CellTextView.html":{},"classes/CheckRowSelectView.html":{},"classes/ClickView.html":{},"classes/RowGroupView.html":{}}}],["renderer.appendchild(span1",{"_index":404,"title":{},"body":{"classes/CellNumberRangeView.html":{}}}],["renderer.appendchild(spancount",{"_index":1844,"title":{},"body":{"classes/RowGroupView.html":{}}}],["renderer.appendchild(unselectedspan",{"_index":532,"title":{},"body":{"classes/CheckRowSelectView.html":{}}}],["renderer.component",{"_index":1519,"title":{},"body":{"modules/GridModule.html":{}}}],["renderer.component.ts",{"_index":817,"title":{},"body":{"components/CompareFilterRenderer.html":{},"components/SelectFilterRenderer.html":{},"components/TextFilterRenderer.html":{},"coverage.html":{}}}],["renderer.component.ts:100",{"_index":1891,"title":{},"body":{"components/TextFilterRenderer.html":{}}}],["renderer.component.ts:106",{"_index":1877,"title":{},"body":{"components/SelectFilterRenderer.html":{}}}],["renderer.component.ts:107",{"_index":1876,"title":{},"body":{"components/SelectFilterRenderer.html":{}}}],["renderer.component.ts:108",{"_index":1875,"title":{},"body":{"components/SelectFilterRenderer.html":{},"components/TextFilterRenderer.html":{}}}],["renderer.component.ts:110",{"_index":1867,"title":{},"body":{"components/SelectFilterRenderer.html":{}}}],["renderer.component.ts:115",{"_index":1866,"title":{},"body":{"components/SelectFilterRenderer.html":{}}}],["renderer.component.ts:126",{"_index":918,"title":{},"body":{"components/CompareFilterRenderer.html":{}}}],["renderer.component.ts:127",{"_index":901,"title":{},"body":{"components/CompareFilterRenderer.html":{}}}],["renderer.component.ts:128",{"_index":916,"title":{},"body":{"components/CompareFilterRenderer.html":{}}}],["renderer.component.ts:130",{"_index":903,"title":{},"body":{"components/CompareFilterRenderer.html":{}}}],["renderer.component.ts:131",{"_index":902,"title":{},"body":{"components/CompareFilterRenderer.html":{}}}],["renderer.component.ts:133",{"_index":904,"title":{},"body":{"components/CompareFilterRenderer.html":{}}}],["renderer.component.ts:134",{"_index":1865,"title":{},"body":{"components/SelectFilterRenderer.html":{}}}],["renderer.component.ts:135",{"_index":915,"title":{},"body":{"components/CompareFilterRenderer.html":{}}}],["renderer.component.ts:143",{"_index":1868,"title":{},"body":{"components/SelectFilterRenderer.html":{}}}],["renderer.component.ts:145",{"_index":874,"title":{},"body":{"components/CompareFilterRenderer.html":{}}}],["renderer.component.ts:157",{"_index":1870,"title":{},"body":{"components/SelectFilterRenderer.html":{}}}],["renderer.component.ts:158",{"_index":886,"title":{},"body":{"components/CompareFilterRenderer.html":{}}}],["renderer.component.ts:163",{"_index":880,"title":{},"body":{"components/CompareFilterRenderer.html":{}}}],["renderer.component.ts:169",{"_index":885,"title":{},"body":{"components/CompareFilterRenderer.html":{}}}],["renderer.component.ts:173",{"_index":1873,"title":{},"body":{"components/SelectFilterRenderer.html":{}}}],["renderer.component.ts:186",{"_index":876,"title":{},"body":{"components/CompareFilterRenderer.html":{}}}],["renderer.component.ts:196",{"_index":882,"title":{},"body":{"components/CompareFilterRenderer.html":{}}}],["renderer.component.ts:200",{"_index":888,"title":{},"body":{"components/CompareFilterRenderer.html":{}}}],["renderer.component.ts:221",{"_index":878,"title":{},"body":{"components/CompareFilterRenderer.html":{}}}],["renderer.component.ts:235",{"_index":889,"title":{},"body":{"components/CompareFilterRenderer.html":{}}}],["renderer.component.ts:41",{"_index":1894,"title":{},"body":{"components/TextFilterRenderer.html":{}}}],["renderer.component.ts:43",{"_index":1895,"title":{},"body":{"components/TextFilterRenderer.html":{}}}],["renderer.component.ts:44",{"_index":1897,"title":{},"body":{"components/TextFilterRenderer.html":{}}}],["renderer.component.ts:46",{"_index":1887,"title":{},"body":{"components/TextFilterRenderer.html":{}}}],["renderer.component.ts:52",{"_index":1889,"title":{},"body":{"components/TextFilterRenderer.html":{}}}],["renderer.component.ts:57",{"_index":1888,"title":{},"body":{"components/TextFilterRenderer.html":{}}}],["renderer.component.ts:73",{"_index":1890,"title":{},"body":{"components/TextFilterRenderer.html":{}}}],["renderer.component.ts:82",{"_index":1885,"title":{},"body":{"components/TextFilterRenderer.html":{}}}],["renderer.createelement(\"div",{"_index":398,"title":{},"body":{"classes/CellNumberRangeView.html":{},"classes/RowGroupView.html":{}}}],["renderer.createelement(\"i",{"_index":589,"title":{},"body":{"classes/ClickView.html":{},"classes/RowGroupView.html":{}}}],["renderer.createelement(\"span",{"_index":400,"title":{},"body":{"classes/CellNumberRangeView.html":{},"classes/CellTextView.html":{},"classes/CheckRowSelectView.html":{},"classes/ClickView.html":{},"classes/RowGroupView.html":{}}}],["renderer.createtext",{"_index":1849,"title":{},"body":{"classes/RowGroupView.html":{}}}],["renderer.createtext((formatted",{"_index":473,"title":{},"body":{"classes/CellTextView.html":{}}}],["renderer.createtext(column.formatvalue(value",{"_index":402,"title":{},"body":{"classes/CellNumberRangeView.html":{}}}],["renderer.createtext(this.getchoice(value",{"_index":470,"title":{},"body":{"classes/CellTextView.html":{}}}],["renderer.createtext(value",{"_index":1853,"title":{},"body":{"classes/RowGroupView.html":{}}}],["renderer.interface",{"_index":386,"title":{},"body":{"classes/CellNumberRangeView.html":{},"classes/CellTextView.html":{},"classes/CheckRowSelectView.html":{},"classes/ClickView.html":{},"classes/RowGroupView.html":{}}}],["renderer.interface.ts",{"_index":478,"title":{},"body":{"interfaces/CellViewRenderer.html":{},"coverage.html":{}}}],["renderer.interface.ts:14",{"_index":488,"title":{},"body":{"interfaces/CellViewRenderer.html":{}}}],["renderer.interface.ts:22",{"_index":481,"title":{},"body":{"interfaces/CellViewRenderer.html":{}}}],["renderer.interface.ts:24",{"_index":480,"title":{},"body":{"interfaces/CellViewRenderer.html":{}}}],["renderer.setattribute(span",{"_index":514,"title":{},"body":{"classes/CheckRowSelectView.html":{},"classes/ClickView.html":{}}}],["renderer.setstyle(div",{"_index":411,"title":{},"body":{"classes/CellNumberRangeView.html":{},"classes/RowGroupView.html":{}}}],["renderer.setstyle(span",{"_index":462,"title":{},"body":{"classes/CellTextView.html":{},"classes/CheckRowSelectView.html":{},"classes/ClickView.html":{},"classes/RowGroupView.html":{}}}],["renderer.setstyle(span1",{"_index":405,"title":{},"body":{"classes/CellNumberRangeView.html":{}}}],["renderer.setstyle(spancount",{"_index":1841,"title":{},"body":{"classes/RowGroupView.html":{}}}],["renderer.ts",{"_index":161,"title":{},"body":{"classes/CellEditRenderer.html":{},"classes/CellPopupRenderer.html":{},"classes/FilterRenderer.html":{},"coverage.html":{}}}],["renderer.ts:10",{"_index":1237,"title":{},"body":{"classes/FilterRenderer.html":{}}}],["renderer.ts:11",{"_index":1238,"title":{},"body":{"classes/FilterRenderer.html":{}}}],["renderer.ts:110",{"_index":240,"title":{},"body":{"classes/CellEditRenderer.html":{}}}],["renderer.ts:115",{"_index":245,"title":{},"body":{"classes/CellEditRenderer.html":{}}}],["renderer.ts:126",{"_index":221,"title":{},"body":{"classes/CellEditRenderer.html":{}}}],["renderer.ts:13",{"_index":1230,"title":{},"body":{"classes/FilterRenderer.html":{}}}],["renderer.ts:130",{"_index":218,"title":{},"body":{"classes/CellEditRenderer.html":{}}}],["renderer.ts:135",{"_index":242,"title":{},"body":{"classes/CellEditRenderer.html":{}}}],["renderer.ts:14",{"_index":440,"title":{},"body":{"classes/CellPopupRenderer.html":{},"classes/FilterRenderer.html":{}}}],["renderer.ts:15",{"_index":441,"title":{},"body":{"classes/CellPopupRenderer.html":{},"classes/FilterRenderer.html":{}}}],["renderer.ts:16",{"_index":193,"title":{},"body":{"classes/CellEditRenderer.html":{},"classes/FilterRenderer.html":{}}}],["renderer.ts:161",{"_index":247,"title":{},"body":{"classes/CellEditRenderer.html":{}}}],["renderer.ts:17",{"_index":192,"title":{},"body":{"classes/CellEditRenderer.html":{},"classes/CellPopupRenderer.html":{},"classes/FilterRenderer.html":{}}}],["renderer.ts:18",{"_index":211,"title":{},"body":{"classes/CellEditRenderer.html":{},"classes/CellPopupRenderer.html":{},"classes/FilterRenderer.html":{}}}],["renderer.ts:19",{"_index":197,"title":{},"body":{"classes/CellEditRenderer.html":{},"classes/CellPopupRenderer.html":{},"classes/FilterRenderer.html":{}}}],["renderer.ts:20",{"_index":212,"title":{},"body":{"classes/CellEditRenderer.html":{},"classes/CellPopupRenderer.html":{}}}],["renderer.ts:21",{"_index":209,"title":{},"body":{"classes/CellEditRenderer.html":{}}}],["renderer.ts:22",{"_index":199,"title":{},"body":{"classes/CellEditRenderer.html":{},"classes/CellPopupRenderer.html":{}}}],["renderer.ts:23",{"_index":200,"title":{},"body":{"classes/CellEditRenderer.html":{}}}],["renderer.ts:24",{"_index":190,"title":{},"body":{"classes/CellEditRenderer.html":{}}}],["renderer.ts:26",{"_index":204,"title":{},"body":{"classes/CellEditRenderer.html":{}}}],["renderer.ts:27",{"_index":205,"title":{},"body":{"classes/CellEditRenderer.html":{},"classes/FilterRenderer.html":{}}}],["renderer.ts:29",{"_index":203,"title":{},"body":{"classes/CellEditRenderer.html":{}}}],["renderer.ts:31",{"_index":207,"title":{},"body":{"classes/CellEditRenderer.html":{},"classes/CellPopupRenderer.html":{},"classes/FilterRenderer.html":{}}}],["renderer.ts:33",{"_index":202,"title":{},"body":{"classes/CellEditRenderer.html":{},"classes/CellPopupRenderer.html":{}}}],["renderer.ts:34",{"_index":201,"title":{},"body":{"classes/CellEditRenderer.html":{}}}],["renderer.ts:35",{"_index":198,"title":{},"body":{"classes/CellEditRenderer.html":{},"classes/FilterRenderer.html":{}}}],["renderer.ts:36",{"_index":210,"title":{},"body":{"classes/CellEditRenderer.html":{}}}],["renderer.ts:37",{"_index":191,"title":{},"body":{"classes/CellEditRenderer.html":{}}}],["renderer.ts:38",{"_index":442,"title":{},"body":{"classes/CellPopupRenderer.html":{}}}],["renderer.ts:39",{"_index":189,"title":{},"body":{"classes/CellEditRenderer.html":{}}}],["renderer.ts:46",{"_index":443,"title":{},"body":{"classes/CellPopupRenderer.html":{}}}],["renderer.ts:48",{"_index":1231,"title":{},"body":{"classes/FilterRenderer.html":{}}}],["renderer.ts:52",{"_index":1232,"title":{},"body":{"classes/FilterRenderer.html":{}}}],["renderer.ts:53",{"_index":213,"title":{},"body":{"classes/CellEditRenderer.html":{}}}],["renderer.ts:55",{"_index":238,"title":{},"body":{"classes/CellEditRenderer.html":{}}}],["renderer.ts:56",{"_index":1234,"title":{},"body":{"classes/FilterRenderer.html":{}}}],["renderer.ts:59",{"_index":237,"title":{},"body":{"classes/CellEditRenderer.html":{}}}],["renderer.ts:62",{"_index":1233,"title":{},"body":{"classes/FilterRenderer.html":{}}}],["renderer.ts:64",{"_index":243,"title":{},"body":{"classes/CellEditRenderer.html":{}}}],["renderer.ts:68",{"_index":1235,"title":{},"body":{"classes/FilterRenderer.html":{}}}],["renderer.ts:72",{"_index":251,"title":{},"body":{"classes/CellEditRenderer.html":{},"classes/FilterRenderer.html":{}}}],["renderer.ts:77",{"_index":1236,"title":{},"body":{"classes/FilterRenderer.html":{}}}],["renderer.ts:82",{"_index":254,"title":{},"body":{"classes/CellEditRenderer.html":{}}}],["renderer.ts:92",{"_index":228,"title":{},"body":{"classes/CellEditRenderer.html":{}}}],["renderer2",{"_index":91,"title":{},"body":{"components/BigTextPopup.html":{},"classes/CellEditRenderer.html":{},"classes/CellNumberRangeView.html":{},"classes/CellPopupRenderer.html":{},"classes/CellTextView.html":{},"interfaces/CellViewRenderer.html":{},"classes/CheckRowSelectView.html":{},"classes/ClickView.html":{},"classes/ColumnDndListener.html":{},"components/ColumnHeaderComponent.html":{},"classes/RowGroupView.html":{},"index.html":{}}}],["renderers",{"_index":165,"title":{},"body":{"classes/CellEditRenderer.html":{},"changelog.html":{}}}],["rendering",{"_index":142,"title":{},"body":{"classes/Cell.html":{},"injectables/GridEventService.html":{},"changelog.html":{},"index.html":{}}}],["renders",{"_index":689,"title":{},"body":{"components/ColumnHeaderComponent.html":{}}}],["repeatlastevent",{"_index":1285,"title":{},"body":{"injectables/GridEventService.html":{}}}],["report",{"_index":1424,"title":{},"body":{"injectables/GridGlobalService.html":{},"index.html":{}}}],["represent",{"_index":435,"title":{},"body":{"classes/CellPopupRenderer.html":{}}}],["requested",{"_index":2266,"title":{},"body":{"index.html":{}}}],["requests",{"_index":1958,"title":{},"body":{"changelog.html":{}}}],["required",{"_index":2079,"title":{},"body":{"index.html":{}}}],["reset",{"_index":862,"title":{},"body":{"components/CompareFilterRenderer.html":{},"classes/FilterRenderer.html":{},"modules/GridModule.html":{},"components/SelectFilterRenderer.html":{},"components/TextFilterRenderer.html":{},"overview.html":{}}}],["resize",{"_index":2034,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["resolver",{"_index":718,"title":{},"body":{"components/ColumnHeaderComponent.html":{}}}],["restriction",{"_index":2299,"title":{},"body":{"license.html":{}}}],["result",{"_index":132,"title":{},"body":{"components/BigTextPopup.html":{},"classes/Cell.html":{},"classes/CellEditRenderer.html":{},"classes/CellHoverPopupListener.html":{},"classes/CellNumberRangeView.html":{},"classes/CellPopupRenderer.html":{},"classes/CellTextView.html":{},"interfaces/CellViewRenderer.html":{},"classes/CheckRowSelectView.html":{},"classes/ClickCellEditListener.html":{},"interfaces/ClickListener.html":{},"classes/ClickRowSelectListener.html":{},"classes/ClickView.html":{},"classes/ClickViewListener.html":{},"classes/ColumnDndListener.html":{},"components/ColumnHeaderComponent.html":{},"components/CompareFilterRenderer.html":{},"components/ConfigMenuComponent.html":{},"components/ConfigMultiChoiceComponent.html":{},"classes/DateIso8601Formatter.html":{},"classes/DateMsFormatter.html":{},"interfaces/DblClickListener.html":{},"interfaces/Dictionary.html":{},"interfaces/EmptyConstructor.html":{},"classes/EmptyFactory.html":{},"classes/EventListener.html":{},"interfaces/EventListenerArg.html":{},"classes/EventMeta.html":{},"classes/FilterRenderer.html":{},"classes/FormatterParser.html":{},"injectables/GridEventService.html":{},"injectables/GridGlobalService.html":{},"injectables/GridMessageService.html":{},"modules/GridModule.html":{},"classes/GroupKeyListener.html":{},"classes/HtmlUtil.html":{},"interfaces/InjectableConstructor.html":{},"classes/InjectableFactory.html":{},"pipes/IsFixedPipe.html":{},"pipes/IsGroupPipe.html":{},"pipes/IsRowVisiblePipe.html":{},"pipes/IsVisiblePipe.html":{},"interfaces/MouseDownListener.html":{},"interfaces/MouseDragListener.html":{},"interfaces/MouseOutListener.html":{},"interfaces/MouseOverListener.html":{},"interfaces/MouseUpListener.html":{},"classes/NumberFormatter.html":{},"classes/Point.html":{},"classes/Range.html":{},"classes/RangeSelectListener.html":{},"classes/Row.html":{},"classes/RowChange.html":{},"classes/RowDblClickListener.html":{},"classes/RowGroup.html":{},"classes/RowGroupView.html":{},"components/SelectFilterRenderer.html":{},"components/TextFilterRenderer.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":134,"title":{},"body":{"components/BigTextPopup.html":{},"classes/Cell.html":{},"classes/CellEditRenderer.html":{},"classes/CellHoverPopupListener.html":{},"classes/CellNumberRangeView.html":{},"classes/CellPopupRenderer.html":{},"classes/CellTextView.html":{},"interfaces/CellViewRenderer.html":{},"classes/CheckRowSelectView.html":{},"classes/ClickCellEditListener.html":{},"interfaces/ClickListener.html":{},"classes/ClickRowSelectListener.html":{},"classes/ClickView.html":{},"classes/ClickViewListener.html":{},"classes/ColumnDndListener.html":{},"components/ColumnHeaderComponent.html":{},"components/CompareFilterRenderer.html":{},"components/ConfigMenuComponent.html":{},"components/ConfigMultiChoiceComponent.html":{},"classes/DateIso8601Formatter.html":{},"classes/DateMsFormatter.html":{},"interfaces/DblClickListener.html":{},"interfaces/Dictionary.html":{},"interfaces/EmptyConstructor.html":{},"classes/EmptyFactory.html":{},"classes/EventListener.html":{},"interfaces/EventListenerArg.html":{},"classes/EventMeta.html":{},"classes/FilterRenderer.html":{},"classes/FormatterParser.html":{},"injectables/GridEventService.html":{},"injectables/GridGlobalService.html":{},"injectables/GridMessageService.html":{},"modules/GridModule.html":{},"classes/GroupKeyListener.html":{},"classes/HtmlUtil.html":{},"interfaces/InjectableConstructor.html":{},"classes/InjectableFactory.html":{},"pipes/IsFixedPipe.html":{},"pipes/IsGroupPipe.html":{},"pipes/IsRowVisiblePipe.html":{},"pipes/IsVisiblePipe.html":{},"interfaces/MouseDownListener.html":{},"interfaces/MouseDragListener.html":{},"interfaces/MouseOutListener.html":{},"interfaces/MouseOverListener.html":{},"interfaces/MouseUpListener.html":{},"classes/NumberFormatter.html":{},"classes/Point.html":{},"classes/Range.html":{},"classes/RangeSelectListener.html":{},"classes/Row.html":{},"classes/RowChange.html":{},"classes/RowDblClickListener.html":{},"classes/RowGroup.html":{},"classes/RowGroupView.html":{},"components/SelectFilterRenderer.html":{},"components/TextFilterRenderer.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["retrieve",{"_index":2096,"title":{},"body":{"index.html":{}}}],["return",{"_index":296,"title":{},"body":{"classes/CellEditRenderer.html":{},"classes/CellHoverPopupListener.html":{},"classes/CellNumberRangeView.html":{},"classes/CellTextView.html":{},"classes/CheckRowSelectView.html":{},"classes/ClickCellEditListener.html":{},"classes/ClickRowSelectListener.html":{},"classes/ClickView.html":{},"classes/ClickViewListener.html":{},"classes/ColumnDndListener.html":{},"components/ColumnHeaderComponent.html":{},"components/CompareFilterRenderer.html":{},"components/ConfigMenuComponent.html":{},"components/ConfigMultiChoiceComponent.html":{},"classes/DateIso8601Formatter.html":{},"classes/DateMsFormatter.html":{},"interfaces/EmptyConstructor.html":{},"classes/EmptyFactory.html":{},"classes/EventListener.html":{},"classes/EventMeta.html":{},"classes/FilterRenderer.html":{},"classes/FormatterParser.html":{},"injectables/GridEventService.html":{},"injectables/GridGlobalService.html":{},"injectables/GridMessageService.html":{},"modules/GridModule.html":{},"classes/GroupKeyListener.html":{},"classes/HtmlUtil.html":{},"interfaces/InjectableConstructor.html":{},"classes/InjectableFactory.html":{},"pipes/IsFixedPipe.html":{},"pipes/IsGroupPipe.html":{},"pipes/IsRowVisiblePipe.html":{},"pipes/IsVisiblePipe.html":{},"classes/NumberFormatter.html":{},"classes/Point.html":{},"classes/Range.html":{},"classes/RangeSelectListener.html":{},"classes/Row.html":{},"classes/RowDblClickListener.html":{},"classes/RowGroupView.html":{},"index.html":{}}}],["returning",{"_index":545,"title":{},"body":{"classes/ClickCellEditListener.html":{}}}],["returning.sortevent",{"_index":2230,"title":{},"body":{"index.html":{}}}],["returns",{"_index":58,"title":{},"body":{"components/BigTextPopup.html":{},"classes/CellEditRenderer.html":{},"classes/CellHoverPopupListener.html":{},"classes/CellNumberRangeView.html":{},"classes/CellPopupRenderer.html":{},"classes/CellTextView.html":{},"interfaces/CellViewRenderer.html":{},"classes/CheckRowSelectView.html":{},"classes/ClickCellEditListener.html":{},"interfaces/ClickListener.html":{},"classes/ClickRowSelectListener.html":{},"classes/ClickView.html":{},"classes/ClickViewListener.html":{},"classes/ColumnDndListener.html":{},"components/ColumnHeaderComponent.html":{},"components/CompareFilterRenderer.html":{},"components/ConfigMenuComponent.html":{},"components/ConfigMultiChoiceComponent.html":{},"classes/DateIso8601Formatter.html":{},"classes/DateMsFormatter.html":{},"interfaces/DblClickListener.html":{},"classes/EmptyFactory.html":{},"classes/EventListener.html":{},"classes/EventMeta.html":{},"classes/FilterRenderer.html":{},"classes/FormatterParser.html":{},"injectables/GridEventService.html":{},"injectables/GridGlobalService.html":{},"injectables/GridMessageService.html":{},"modules/GridModule.html":{},"classes/GroupKeyListener.html":{},"classes/HtmlUtil.html":{},"classes/InjectableFactory.html":{},"pipes/IsFixedPipe.html":{},"pipes/IsGroupPipe.html":{},"pipes/IsRowVisiblePipe.html":{},"pipes/IsVisiblePipe.html":{},"interfaces/MouseDownListener.html":{},"interfaces/MouseDragListener.html":{},"interfaces/MouseOutListener.html":{},"interfaces/MouseOverListener.html":{},"interfaces/MouseUpListener.html":{},"classes/NumberFormatter.html":{},"classes/Point.html":{},"classes/Range.html":{},"classes/RangeSelectListener.html":{},"classes/Row.html":{},"classes/RowDblClickListener.html":{},"classes/RowGroup.html":{},"classes/RowGroupView.html":{},"components/SelectFilterRenderer.html":{},"components/TextFilterRenderer.html":{},"index.html":{}}}],["reverse",{"_index":1923,"title":{},"body":{"changelog.html":{}}}],["rgba(0",{"_index":37,"title":{},"body":{"components/BigTextPopup.html":{}}}],["right",{"_index":516,"title":{},"body":{"classes/CheckRowSelectView.html":{},"classes/ClickView.html":{},"components/ColumnHeaderComponent.html":{},"components/ConfigMenuComponent.html":{},"components/ConfigMultiChoiceComponent.html":{},"classes/RowGroupView.html":{},"components/SelectFilterRenderer.html":{},"changelog.html":{},"index.html":{}}}],["rights",{"_index":2302,"title":{},"body":{"license.html":{}}}],["root",{"_index":2174,"title":{},"body":{"index.html":{}}}],["row",{"_index":500,"title":{"classes/Row.html":{}},"body":{"classes/CheckRowSelectView.html":{},"classes/ClickRowSelectListener.html":{},"components/ConfigMenuComponent.html":{},"injectables/GridEventService.html":{},"modules/GridModule.html":{},"pipes/IsRowVisiblePipe.html":{},"classes/Row.html":{},"classes/RowDblClickListener.html":{},"changelog.html":{},"coverage.html":{},"index.html":{}}}],["row.get(compareindexes[i]).value",{"_index":1792,"title":{},"body":{"classes/Row.html":{}}}],["row.length",{"_index":1791,"title":{},"body":{"classes/Row.html":{}}}],["row/row",{"_index":497,"title":{},"body":{"interfaces/CellViewRenderer.html":{},"injectables/GridEventService.html":{},"pipes/IsRowVisiblePipe.html":{},"classes/RowGroupView.html":{}}}],["row:nth",{"_index":982,"title":{},"body":{"components/ConfigMenuComponent.html":{}}}],["rowchange",{"_index":1351,"title":{"classes/RowChange.html":{}},"body":{"injectables/GridEventService.html":{},"classes/RowChange.html":{},"coverage.html":{}}}],["rowdblclicklistener",{"_index":1804,"title":{"classes/RowDblClickListener.html":{}},"body":{"classes/RowDblClickListener.html":{},"coverage.html":{}}}],["rowgroup",{"_index":479,"title":{"classes/RowGroup.html":{}},"body":{"interfaces/CellViewRenderer.html":{},"classes/RowGroup.html":{},"classes/RowGroupView.html":{},"coverage.html":{}}}],["rowgroup.count",{"_index":1850,"title":{},"body":{"classes/RowGroupView.html":{}}}],["rowgroup.expanded",{"_index":1845,"title":{},"body":{"classes/RowGroupView.html":{}}}],["rowgroupview",{"_index":1835,"title":{"classes/RowGroupView.html":{}},"body":{"classes/RowGroupView.html":{},"coverage.html":{}}}],["rownum",{"_index":1745,"title":{},"body":{"classes/Row.html":{},"index.html":{}}}],["rows",{"_index":997,"title":{},"body":{"components/ConfigMenuComponent.html":{},"changelog.html":{},"index.html":{}}}],["rows[i].key",{"_index":2194,"title":{},"body":{"index.html":{}}}],["run",{"_index":2268,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":258,"title":{},"body":{"classes/CellEditRenderer.html":{},"components/ColumnHeaderComponent.html":{},"components/ConfigMenuComponent.html":{},"injectables/GridEventService.html":{},"injectables/GridMessageService.html":{},"changelog.html":{}}}],["rxjs/operators",{"_index":746,"title":{},"body":{"components/ColumnHeaderComponent.html":{}}}],["same",{"_index":2154,"title":{},"body":{"index.html":{}}}],["savedata",{"_index":181,"title":{},"body":{"classes/CellEditRenderer.html":{}}}],["savedata(value",{"_index":227,"title":{},"body":{"classes/CellEditRenderer.html":{}}}],["saving",{"_index":1972,"title":{},"body":{"changelog.html":{}}}],["scroll",{"_index":2035,"title":{},"body":{"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["scrollbar",{"_index":1963,"title":{},"body":{"changelog.html":{}}}],["scrolling",{"_index":2153,"title":{},"body":{"index.html":{}}}],["secondly",{"_index":434,"title":{},"body":{"classes/CellPopupRenderer.html":{}}}],["see",{"_index":164,"title":{},"body":{"classes/CellEditRenderer.html":{},"interfaces/InjectableConstructor.html":{},"classes/InjectableFactory.html":{},"changelog.html":{},"index.html":{}}}],["select",{"_index":125,"title":{},"body":{"components/BigTextPopup.html":{},"classes/CellEditRenderer.html":{},"classes/CheckRowSelectView.html":{},"classes/ClickRowSelectListener.html":{},"classes/ColumnDndListener.html":{},"components/ColumnHeaderComponent.html":{},"components/CompareFilterRenderer.html":{},"components/ConfigMenuComponent.html":{},"components/ConfigMultiChoiceComponent.html":{},"classes/RangeSelectListener.html":{},"components/SelectFilterRenderer.html":{},"components/TextFilterRenderer.html":{},"coverage.html":{},"index.html":{}}}],["select.listener.ts",{"_index":550,"title":{},"body":{"classes/ClickRowSelectListener.html":{},"classes/RangeSelectListener.html":{},"coverage.html":{}}}],["select.listener.ts:10",{"_index":552,"title":{},"body":{"classes/ClickRowSelectListener.html":{}}}],["select.listener.ts:12",{"_index":553,"title":{},"body":{"classes/ClickRowSelectListener.html":{}}}],["select.listener.ts:15",{"_index":1721,"title":{},"body":{"classes/RangeSelectListener.html":{}}}],["select.listener.ts:16",{"_index":1722,"title":{},"body":{"classes/RangeSelectListener.html":{}}}],["select.listener.ts:18",{"_index":1723,"title":{},"body":{"classes/RangeSelectListener.html":{}}}],["select.listener.ts:31",{"_index":554,"title":{},"body":{"classes/ClickRowSelectListener.html":{}}}],["select.listener.ts:36",{"_index":1725,"title":{},"body":{"classes/RangeSelectListener.html":{}}}],["select.listener.ts:51",{"_index":1724,"title":{},"body":{"classes/RangeSelectListener.html":{}}}],["selectall",{"_index":1864,"title":{},"body":{"components/SelectFilterRenderer.html":{}}}],["selected",{"_index":80,"title":{},"body":{"components/BigTextPopup.html":{},"classes/CellEditRenderer.html":{},"classes/CellPopupRenderer.html":{},"classes/CheckRowSelectView.html":{},"injectables/GridEventService.html":{},"classes/RangeSelectListener.html":{},"classes/Row.html":{}}}],["selectedcolumn",{"_index":999,"title":{},"body":{"components/ConfigMenuComponent.html":{}}}],["selectedlocation",{"_index":1268,"title":{},"body":{"injectables/GridEventService.html":{}}}],["selectedlocationsubject",{"_index":1269,"title":{},"body":{"injectables/GridEventService.html":{}}}],["selectedrange",{"_index":1270,"title":{},"body":{"injectables/GridEventService.html":{}}}],["selectedspan",{"_index":518,"title":{},"body":{"classes/CheckRowSelectView.html":{}}}],["selectedsvg",{"_index":521,"title":{},"body":{"classes/CheckRowSelectView.html":{}}}],["selectfilterrenderer",{"_index":124,"title":{"components/SelectFilterRenderer.html":{}},"body":{"components/BigTextPopup.html":{},"components/ColumnHeaderComponent.html":{},"components/CompareFilterRenderer.html":{},"components/ConfigMenuComponent.html":{},"components/ConfigMultiChoiceComponent.html":{},"modules/GridModule.html":{},"components/SelectFilterRenderer.html":{},"components/TextFilterRenderer.html":{},"coverage.html":{},"index.html":{},"overview.html":{}}}],["selection",{"_index":1872,"title":{},"body":{"components/SelectFilterRenderer.html":{},"changelog.html":{}}}],["selector",{"_index":14,"title":{},"body":{"components/BigTextPopup.html":{},"components/ColumnHeaderComponent.html":{},"components/CompareFilterRenderer.html":{},"components/ConfigMenuComponent.html":{},"components/ConfigMultiChoiceComponent.html":{},"components/SelectFilterRenderer.html":{},"components/TextFilterRenderer.html":{}}}],["sell",{"_index":2308,"title":{},"body":{"license.html":{}}}],["separate",{"_index":1915,"title":{},"body":{"changelog.html":{}}}],["service",{"_index":233,"title":{},"body":{"classes/CellEditRenderer.html":{},"injectables/GridEventService.html":{},"injectables/GridGlobalService.html":{},"changelog.html":{}}}],["service.config",{"_index":2118,"title":{},"body":{"index.html":{}}}],["services",{"_index":338,"title":{},"body":{"classes/CellHoverPopupListener.html":{},"classes/ClickCellEditListener.html":{},"classes/ClickRowSelectListener.html":{},"classes/ClickViewListener.html":{},"classes/ColumnDndListener.html":{},"classes/EventListener.html":{},"classes/GroupKeyListener.html":{},"classes/RangeSelectListener.html":{},"classes/RowDblClickListener.html":{}}}],["services/grid",{"_index":260,"title":{},"body":{"classes/CellEditRenderer.html":{},"components/ConfigMenuComponent.html":{},"classes/EventListener.html":{},"modules/GridModule.html":{}}}],["services/grid.service",{"_index":259,"title":{},"body":{"classes/CellEditRenderer.html":{},"classes/CellPopupRenderer.html":{},"components/ColumnHeaderComponent.html":{},"classes/EventListener.html":{},"classes/FilterRenderer.html":{}}}],["set",{"_index":215,"title":{},"body":{"classes/CellEditRenderer.html":{},"classes/CellHoverPopupListener.html":{},"interfaces/CellViewRenderer.html":{},"classes/ClickCellEditListener.html":{},"classes/ClickRowSelectListener.html":{},"classes/ClickViewListener.html":{},"classes/ColumnDndListener.html":{},"classes/EventListener.html":{},"classes/EventMeta.html":{},"classes/GroupKeyListener.html":{},"classes/Range.html":{},"classes/RangeSelectListener.html":{},"classes/RowDblClickListener.html":{},"index.html":{}}}],["setalt(alt",{"_index":1213,"title":{},"body":{"classes/EventMeta.html":{}}}],["setcolumn",{"_index":182,"title":{},"body":{"classes/CellEditRenderer.html":{}}}],["setcolumn(column",{"_index":236,"title":{},"body":{"classes/CellEditRenderer.html":{}}}],["setconfig",{"_index":53,"title":{},"body":{"components/BigTextPopup.html":{},"classes/CellEditRenderer.html":{},"classes/CellHoverPopupListener.html":{},"classes/CellNumberRangeView.html":{},"classes/CellPopupRenderer.html":{},"classes/CellTextView.html":{},"interfaces/CellViewRenderer.html":{},"classes/CheckRowSelectView.html":{},"classes/ClickCellEditListener.html":{},"classes/ClickRowSelectListener.html":{},"classes/ClickView.html":{},"classes/ClickViewListener.html":{},"classes/ColumnDndListener.html":{},"components/CompareFilterRenderer.html":{},"classes/DateIso8601Formatter.html":{},"classes/DateMsFormatter.html":{},"classes/EventListener.html":{},"classes/FilterRenderer.html":{},"classes/FormatterParser.html":{},"classes/GroupKeyListener.html":{},"classes/NumberFormatter.html":{},"classes/RangeSelectListener.html":{},"classes/RowDblClickListener.html":{},"classes/RowGroupView.html":{},"components/SelectFilterRenderer.html":{},"components/TextFilterRenderer.html":{}}}],["setconfig(config",{"_index":60,"title":{},"body":{"components/BigTextPopup.html":{},"classes/CellEditRenderer.html":{},"classes/CellHoverPopupListener.html":{},"classes/CellNumberRangeView.html":{},"classes/CellPopupRenderer.html":{},"classes/CellTextView.html":{},"interfaces/CellViewRenderer.html":{},"classes/CheckRowSelectView.html":{},"classes/ClickCellEditListener.html":{},"classes/ClickRowSelectListener.html":{},"classes/ClickView.html":{},"classes/ClickViewListener.html":{},"classes/ColumnDndListener.html":{},"components/CompareFilterRenderer.html":{},"classes/DateIso8601Formatter.html":{},"classes/DateMsFormatter.html":{},"classes/EventListener.html":{},"classes/FilterRenderer.html":{},"classes/FormatterParser.html":{},"classes/GroupKeyListener.html":{},"classes/NumberFormatter.html":{},"classes/RangeSelectListener.html":{},"classes/RowDblClickListener.html":{},"classes/RowGroupView.html":{},"components/SelectFilterRenderer.html":{},"components/TextFilterRenderer.html":{},"index.html":{}}}],["setctrl(ctrl",{"_index":1217,"title":{},"body":{"classes/EventMeta.html":{}}}],["setcurrentlocation",{"_index":1286,"title":{},"body":{"injectables/GridEventService.html":{}}}],["setcurrentlocation(location",{"_index":1327,"title":{},"body":{"injectables/GridEventService.html":{}}}],["setdata",{"_index":183,"title":{},"body":{"classes/CellEditRenderer.html":{}}}],["setdata(data",{"_index":239,"title":{},"body":{"classes/CellEditRenderer.html":{}}}],["setformat",{"_index":184,"title":{},"body":{"classes/CellEditRenderer.html":{}}}],["setformat(format",{"_index":241,"title":{},"body":{"classes/CellEditRenderer.html":{}}}],["setgrid",{"_index":323,"title":{},"body":{"classes/CellHoverPopupListener.html":{},"classes/ClickCellEditListener.html":{},"classes/ClickRowSelectListener.html":{},"classes/ClickViewListener.html":{},"classes/ColumnDndListener.html":{},"classes/EventListener.html":{},"classes/GroupKeyListener.html":{},"classes/RangeSelectListener.html":{},"classes/RowDblClickListener.html":{}}}],["setgrid(grid",{"_index":331,"title":{},"body":{"classes/CellHoverPopupListener.html":{},"classes/ClickCellEditListener.html":{},"classes/ClickRowSelectListener.html":{},"classes/ClickViewListener.html":{},"classes/ColumnDndListener.html":{},"classes/EventListener.html":{},"classes/GroupKeyListener.html":{},"classes/RangeSelectListener.html":{},"classes/RowDblClickListener.html":{}}}],["setgroupkey(groupkey",{"_index":1771,"title":{},"body":{"classes/Row.html":{}}}],["seti(i",{"_index":1657,"title":{},"body":{"classes/Point.html":{}}}],["setinitial",{"_index":1681,"title":{},"body":{"classes/Range.html":{}}}],["setinitial(point",{"_index":1687,"title":{},"body":{"classes/Range.html":{}}}],["setj(j",{"_index":1661,"title":{},"body":{"classes/Point.html":{}}}],["setkey(key",{"_index":1779,"title":{},"body":{"classes/Row.html":{}}}],["setlocation",{"_index":54,"title":{},"body":{"components/BigTextPopup.html":{},"classes/CellEditRenderer.html":{},"classes/CellPopupRenderer.html":{}}}],["setlocation(hostelement",{"_index":68,"title":{},"body":{"components/BigTextPopup.html":{},"classes/CellEditRenderer.html":{},"classes/CellPopupRenderer.html":{}}}],["setmax(max",{"_index":1698,"title":{},"body":{"classes/Range.html":{}}}],["setmin(min",{"_index":1694,"title":{},"body":{"classes/Range.html":{}}}],["setmousedragselected",{"_index":1287,"title":{},"body":{"injectables/GridEventService.html":{}}}],["setmousedragselected(location",{"_index":1329,"title":{},"body":{"injectables/GridEventService.html":{}}}],["setmouseondownselected",{"_index":1365,"title":{},"body":{"injectables/GridEventService.html":{}}}],["setncolumns",{"_index":1288,"title":{},"body":{"injectables/GridEventService.html":{}}}],["setncolumns(ncolumns",{"_index":1331,"title":{},"body":{"injectables/GridEventService.html":{}}}],["setpaging",{"_index":1819,"title":{},"body":{"classes/RowGroup.html":{}}}],["setpaging(paging",{"_index":1830,"title":{},"body":{"classes/RowGroup.html":{}}}],["setposition",{"_index":55,"title":{},"body":{"components/BigTextPopup.html":{},"classes/CellEditRenderer.html":{},"classes/CellPopupRenderer.html":{}}}],["setposition(i",{"_index":244,"title":{},"body":{"classes/CellEditRenderer.html":{}}}],["setposition(location",{"_index":71,"title":{},"body":{"components/BigTextPopup.html":{},"classes/CellPopupRenderer.html":{}}}],["setrownum(rownum",{"_index":1783,"title":{},"body":{"classes/Row.html":{}}}],["sets",{"_index":2175,"title":{},"body":{"index.html":{}}}],["setselected(selected",{"_index":1787,"title":{},"body":{"classes/Row.html":{}}}],["setselectedcolumn",{"_index":1004,"title":{},"body":{"components/ConfigMenuComponent.html":{}}}],["setselectedcolumn(column",{"_index":1017,"title":{},"body":{"components/ConfigMenuComponent.html":{}}}],["setselectedlocation",{"_index":1289,"title":{},"body":{"injectables/GridEventService.html":{}}}],["setselectedlocation(location",{"_index":1333,"title":{},"body":{"injectables/GridEventService.html":{}}}],["setselectedrange",{"_index":1290,"title":{},"body":{"injectables/GridEventService.html":{}}}],["setselectedrange(location",{"_index":1335,"title":{},"body":{"injectables/GridEventService.html":{}}}],["setshift(shift",{"_index":1221,"title":{},"body":{"classes/EventMeta.html":{}}}],["setstate",{"_index":1005,"title":{},"body":{"components/ConfigMenuComponent.html":{}}}],["setstate(state",{"_index":1019,"title":{},"body":{"components/ConfigMenuComponent.html":{}}}],["setvalues",{"_index":185,"title":{},"body":{"classes/CellEditRenderer.html":{}}}],["setvalues(o",{"_index":246,"title":{},"body":{"classes/CellEditRenderer.html":{}}}],["setvisible(visible",{"_index":1775,"title":{},"body":{"classes/Row.html":{}}}],["several",{"_index":2247,"title":{},"body":{"index.html":{}}}],["shadow",{"_index":35,"title":{},"body":{"components/BigTextPopup.html":{}}}],["shall",{"_index":2314,"title":{},"body":{"license.html":{}}}],["shared",{"_index":858,"title":{},"body":{"components/CompareFilterRenderer.html":{},"classes/FilterRenderer.html":{},"components/SelectFilterRenderer.html":{},"components/TextFilterRenderer.html":{}}}],["shift",{"_index":1204,"title":{},"body":{"classes/EventMeta.html":{}}}],["shift(shift",{"_index":1228,"title":{},"body":{"classes/EventMeta.html":{}}}],["shortcut",{"_index":2165,"title":{},"body":{"index.html":{}}}],["show",{"_index":421,"title":{},"body":{"classes/CellPopupRenderer.html":{},"index.html":{}}}],["showfilter",{"_index":714,"title":{},"body":{"components/ColumnHeaderComponent.html":{}}}],["showicon",{"_index":371,"title":{},"body":{"classes/CellNumberRangeView.html":{},"index.html":{}}}],["shown",{"_index":439,"title":{},"body":{"classes/CellPopupRenderer.html":{},"index.html":{}}}],["showpopup",{"_index":708,"title":{},"body":{"components/ColumnHeaderComponent.html":{}}}],["shows",{"_index":2130,"title":{},"body":{"index.html":{}}}],["side",{"_index":2135,"title":{},"body":{"index.html":{}}}],["simple",{"_index":1245,"title":{},"body":{"classes/FormatterParser.html":{},"classes/NumberFormatter.html":{},"index.html":{}}}],["singleton",{"_index":1394,"title":{},"body":{"injectables/GridGlobalService.html":{}}}],["size",{"_index":994,"title":{},"body":{"components/ConfigMenuComponent.html":{},"classes/Row.html":{},"index.html":{}}}],["size.saveondirtyrowchange",{"_index":2155,"title":{},"body":{"index.html":{}}}],["sizes",{"_index":995,"title":{},"body":{"components/ConfigMenuComponent.html":{},"index.html":{}}}],["software",{"_index":2296,"title":{},"body":{"license.html":{}}}],["solid",{"_index":27,"title":{},"body":{"components/BigTextPopup.html":{},"components/ConfigMenuComponent.html":{},"components/SelectFilterRenderer.html":{}}}],["sort",{"_index":695,"title":{},"body":{"components/ColumnHeaderComponent.html":{},"components/ConfigMultiChoiceComponent.html":{},"changelog.html":{},"index.html":{}}}],["sorted.global",{"_index":2236,"title":{},"body":{"index.html":{}}}],["sortevent",{"_index":2233,"title":{},"body":{"index.html":{}}}],["sortinfo",{"_index":2231,"title":{},"body":{"index.html":{}}}],["sorting",{"_index":694,"title":{},"body":{"components/ColumnHeaderComponent.html":{},"index.html":{}}}],["sorting.3.1.1",{"_index":1930,"title":{},"body":{"changelog.html":{}}}],["sortmodel",{"_index":1064,"title":{},"body":{"components/ConfigMultiChoiceComponent.html":{}}}],["sorts.length",{"_index":782,"title":{},"body":{"components/ColumnHeaderComponent.html":{}}}],["sorts[0].asc",{"_index":783,"title":{},"body":{"components/ColumnHeaderComponent.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/BigTextPopup.html":{},"classes/Cell.html":{},"classes/CellEditRenderer.html":{},"classes/CellHoverPopupListener.html":{},"classes/CellNumberRangeView.html":{},"classes/CellPopupRenderer.html":{},"classes/CellTextView.html":{},"interfaces/CellViewRenderer.html":{},"classes/CheckRowSelectView.html":{},"classes/ClickCellEditListener.html":{},"interfaces/ClickListener.html":{},"classes/ClickRowSelectListener.html":{},"classes/ClickView.html":{},"classes/ClickViewListener.html":{},"classes/ColumnDndListener.html":{},"components/ColumnHeaderComponent.html":{},"components/CompareFilterRenderer.html":{},"components/ConfigMenuComponent.html":{},"components/ConfigMultiChoiceComponent.html":{},"classes/DateIso8601Formatter.html":{},"classes/DateMsFormatter.html":{},"interfaces/DblClickListener.html":{},"interfaces/Dictionary.html":{},"interfaces/EmptyConstructor.html":{},"classes/EmptyFactory.html":{},"classes/EventListener.html":{},"interfaces/EventListenerArg.html":{},"classes/EventMeta.html":{},"classes/FilterRenderer.html":{},"classes/FormatterParser.html":{},"injectables/GridEventService.html":{},"injectables/GridGlobalService.html":{},"injectables/GridMessageService.html":{},"modules/GridModule.html":{},"classes/GroupKeyListener.html":{},"classes/HtmlUtil.html":{},"interfaces/InjectableConstructor.html":{},"classes/InjectableFactory.html":{},"pipes/IsFixedPipe.html":{},"pipes/IsGroupPipe.html":{},"pipes/IsRowVisiblePipe.html":{},"pipes/IsVisiblePipe.html":{},"interfaces/MouseDownListener.html":{},"interfaces/MouseDragListener.html":{},"interfaces/MouseOutListener.html":{},"interfaces/MouseOverListener.html":{},"interfaces/MouseUpListener.html":{},"classes/NumberFormatter.html":{},"classes/Point.html":{},"classes/Range.html":{},"classes/RangeSelectListener.html":{},"classes/Row.html":{},"classes/RowChange.html":{},"classes/RowDblClickListener.html":{},"classes/RowGroup.html":{},"classes/RowGroupView.html":{},"components/SelectFilterRenderer.html":{},"components/TextFilterRenderer.html":{},"index.html":{}}}],["space",{"_index":30,"title":{},"body":{"components/BigTextPopup.html":{},"components/ConfigMenuComponent.html":{}}}],["span",{"_index":461,"title":{},"body":{"classes/CellTextView.html":{},"classes/CheckRowSelectView.html":{},"classes/ClickView.html":{},"classes/RowGroupView.html":{}}}],["span1",{"_index":399,"title":{},"body":{"classes/CellNumberRangeView.html":{}}}],["span2",{"_index":401,"title":{},"body":{"classes/CellNumberRangeView.html":{}}}],["spancount",{"_index":1840,"title":{},"body":{"classes/RowGroupView.html":{}}}],["specific",{"_index":2097,"title":{},"body":{"index.html":{}}}],["specifically",{"_index":1256,"title":{},"body":{"injectables/GridEventService.html":{}}}],["specified",{"_index":2147,"title":{},"body":{"index.html":{}}}],["specify",{"_index":2167,"title":{},"body":{"index.html":{}}}],["speed",{"_index":2244,"title":{},"body":{"index.html":{}}}],["spinner",{"_index":1959,"title":{},"body":{"changelog.html":{}}}],["spinner.eventlisteners",{"_index":2162,"title":{},"body":{"index.html":{}}}],["spreadsheet",{"_index":1425,"title":{},"body":{"injectables/GridGlobalService.html":{},"index.html":{}}}],["square",{"_index":504,"title":{},"body":{"classes/CheckRowSelectView.html":{}}}],["src/.../grid",{"_index":2348,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../grid.component.ts",{"_index":2349,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/grid/cell/cell.ts",{"_index":136,"title":{},"body":{"classes/Cell.html":{},"coverage.html":{}}}],["src/grid/cell/cell.ts:5",{"_index":156,"title":{},"body":{"classes/Cell.html":{}}}],["src/grid/cell/cell.ts:6",{"_index":155,"title":{},"body":{"classes/Cell.html":{}}}],["src/grid/cell/cell.ts:7",{"_index":150,"title":{},"body":{"classes/Cell.html":{}}}],["src/grid/cell/editrenderers/cell",{"_index":159,"title":{},"body":{"classes/CellEditRenderer.html":{},"coverage.html":{}}}],["src/grid/cell/editrenderers/choice",{"_index":1996,"title":{},"body":{"coverage.html":{}}}],["src/grid/cell/editrenderers/text",{"_index":1998,"title":{},"body":{"coverage.html":{}}}],["src/grid/cell/viewpopuprenderer/bigtext",{"_index":9,"title":{},"body":{"components/BigTextPopup.html":{},"coverage.html":{}}}],["src/grid/cell/viewpopuprenderer/cell",{"_index":419,"title":{},"body":{"classes/CellPopupRenderer.html":{},"coverage.html":{}}}],["src/grid/cell/viewrenderers/cell",{"_index":363,"title":{},"body":{"classes/CellNumberRangeView.html":{},"classes/CellTextView.html":{},"interfaces/CellViewRenderer.html":{},"coverage.html":{}}}],["src/grid/cell/viewrenderers/check",{"_index":499,"title":{},"body":{"classes/CheckRowSelectView.html":{},"coverage.html":{}}}],["src/grid/cell/viewrenderers/click",{"_index":564,"title":{},"body":{"classes/ClickView.html":{},"coverage.html":{}}}],["src/grid/cell/viewrenderers/row",{"_index":1836,"title":{},"body":{"classes/RowGroupView.html":{},"coverage.html":{}}}],["src/grid/column/column",{"_index":687,"title":{},"body":{"components/ColumnHeaderComponent.html":{},"coverage.html":{}}}],["src/grid/column/column.ts",{"_index":2009,"title":{},"body":{"coverage.html":{}}}],["src/grid/column/filterrenderers/compare",{"_index":816,"title":{},"body":{"components/CompareFilterRenderer.html":{},"coverage.html":{}}}],["src/grid/column/filterrenderers/filter",{"_index":1229,"title":{},"body":{"classes/FilterRenderer.html":{},"coverage.html":{}}}],["src/grid/column/filterrenderers/select",{"_index":1854,"title":{},"body":{"components/SelectFilterRenderer.html":{},"coverage.html":{}}}],["src/grid/column/filterrenderers/text",{"_index":1883,"title":{},"body":{"components/TextFilterRenderer.html":{},"coverage.html":{}}}],["src/grid/column/formatters/date",{"_index":1108,"title":{},"body":{"classes/DateIso8601Formatter.html":{},"classes/DateMsFormatter.html":{},"coverage.html":{}}}],["src/grid/column/formatters/formatter",{"_index":1243,"title":{},"body":{"classes/FormatterParser.html":{},"coverage.html":{}}}],["src/grid/column/formatters/number.formatter.ts",{"_index":1613,"title":{},"body":{"classes/NumberFormatter.html":{},"coverage.html":{}}}],["src/grid/column/formatters/number.formatter.ts:10",{"_index":1614,"title":{},"body":{"classes/NumberFormatter.html":{}}}],["src/grid/column/formatters/number.formatter.ts:18",{"_index":1615,"title":{},"body":{"classes/NumberFormatter.html":{}}}],["src/grid/column/formatters/number.formatter.ts:8",{"_index":1616,"title":{},"body":{"classes/NumberFormatter.html":{}}}],["src/grid/config/config",{"_index":957,"title":{},"body":{"components/ConfigMenuComponent.html":{},"components/ConfigMultiChoiceComponent.html":{},"coverage.html":{}}}],["src/grid/event/click",{"_index":594,"title":{},"body":{"classes/ClickViewListener.html":{},"coverage.html":{}}}],["src/grid/event/click.interface.ts",{"_index":547,"title":{},"body":{"interfaces/ClickListener.html":{},"coverage.html":{}}}],["src/grid/event/click.interface.ts:3",{"_index":548,"title":{},"body":{"interfaces/ClickListener.html":{}}}],["src/grid/event/dbl",{"_index":1153,"title":{},"body":{"interfaces/DblClickListener.html":{},"coverage.html":{}}}],["src/grid/event/event",{"_index":1171,"title":{},"body":{"classes/EventListener.html":{},"interfaces/EventListenerArg.html":{},"coverage.html":{}}}],["src/grid/event/listeners/cell",{"_index":315,"title":{},"body":{"classes/CellHoverPopupListener.html":{},"coverage.html":{}}}],["src/grid/event/listeners/click",{"_index":535,"title":{},"body":{"classes/ClickCellEditListener.html":{},"classes/ClickRowSelectListener.html":{},"coverage.html":{}}}],["src/grid/event/listeners/column",{"_index":607,"title":{},"body":{"classes/ColumnDndListener.html":{},"coverage.html":{}}}],["src/grid/event/listeners/group",{"_index":1533,"title":{},"body":{"classes/GroupKeyListener.html":{},"coverage.html":{}}}],["src/grid/event/listeners/range",{"_index":1714,"title":{},"body":{"classes/RangeSelectListener.html":{},"coverage.html":{}}}],["src/grid/event/listeners/row",{"_index":1805,"title":{},"body":{"classes/RowDblClickListener.html":{},"coverage.html":{}}}],["src/grid/event/mouse",{"_index":1601,"title":{},"body":{"interfaces/MouseDownListener.html":{},"interfaces/MouseDragListener.html":{},"interfaces/MouseOutListener.html":{},"interfaces/MouseOverListener.html":{},"interfaces/MouseUpListener.html":{},"coverage.html":{}}}],["src/grid/grid.component.ts",{"_index":2029,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/grid/grid.module.ts",{"_index":1485,"title":{},"body":{"modules/GridModule.html":{}}}],["src/grid/grid.module.ts:61",{"_index":1490,"title":{},"body":{"modules/GridModule.html":{}}}],["src/grid/grid.module.ts:76",{"_index":1494,"title":{},"body":{"modules/GridModule.html":{}}}],["src/grid/model/dictionary.interface.ts",{"_index":1158,"title":{},"body":{"interfaces/Dictionary.html":{},"coverage.html":{}}}],["src/grid/row/row",{"_index":1812,"title":{},"body":{"classes/RowGroup.html":{},"coverage.html":{}}}],["src/grid/row/row.ts",{"_index":1734,"title":{},"body":{"classes/Row.html":{},"coverage.html":{}}}],["src/grid/row/row.ts:103",{"_index":1778,"title":{},"body":{"classes/Row.html":{}}}],["src/grid/row/row.ts:107",{"_index":1780,"title":{},"body":{"classes/Row.html":{}}}],["src/grid/row/row.ts:111",{"_index":1782,"title":{},"body":{"classes/Row.html":{}}}],["src/grid/row/row.ts:115",{"_index":1784,"title":{},"body":{"classes/Row.html":{}}}],["src/grid/row/row.ts:119",{"_index":1786,"title":{},"body":{"classes/Row.html":{}}}],["src/grid/row/row.ts:12",{"_index":1753,"title":{},"body":{"classes/Row.html":{}}}],["src/grid/row/row.ts:123",{"_index":1788,"title":{},"body":{"classes/Row.html":{}}}],["src/grid/row/row.ts:13",{"_index":1747,"title":{},"body":{"classes/Row.html":{}}}],["src/grid/row/row.ts:14",{"_index":1748,"title":{},"body":{"classes/Row.html":{}}}],["src/grid/row/row.ts:15",{"_index":1746,"title":{},"body":{"classes/Row.html":{}}}],["src/grid/row/row.ts:16",{"_index":1749,"title":{},"body":{"classes/Row.html":{}}}],["src/grid/row/row.ts:17",{"_index":1750,"title":{},"body":{"classes/Row.html":{}}}],["src/grid/row/row.ts:19",{"_index":1761,"title":{},"body":{"classes/Row.html":{}}}],["src/grid/row/row.ts:41",{"_index":1767,"title":{},"body":{"classes/Row.html":{}}}],["src/grid/row/row.ts:51",{"_index":1757,"title":{},"body":{"classes/Row.html":{}}}],["src/grid/row/row.ts:59",{"_index":1766,"title":{},"body":{"classes/Row.html":{}}}],["src/grid/row/row.ts:67",{"_index":1764,"title":{},"body":{"classes/Row.html":{}}}],["src/grid/row/row.ts:75",{"_index":1755,"title":{},"body":{"classes/Row.html":{}}}],["src/grid/row/row.ts:79",{"_index":1763,"title":{},"body":{"classes/Row.html":{}}}],["src/grid/row/row.ts:8",{"_index":1751,"title":{},"body":{"classes/Row.html":{}}}],["src/grid/row/row.ts:83",{"_index":1768,"title":{},"body":{"classes/Row.html":{}}}],["src/grid/row/row.ts:87",{"_index":1770,"title":{},"body":{"classes/Row.html":{}}}],["src/grid/row/row.ts:9",{"_index":1752,"title":{},"body":{"classes/Row.html":{}}}],["src/grid/row/row.ts:91",{"_index":1772,"title":{},"body":{"classes/Row.html":{}}}],["src/grid/row/row.ts:95",{"_index":1774,"title":{},"body":{"classes/Row.html":{}}}],["src/grid/row/row.ts:99",{"_index":1776,"title":{},"body":{"classes/Row.html":{}}}],["src/grid/services/grid",{"_index":1254,"title":{},"body":{"injectables/GridEventService.html":{},"injectables/GridGlobalService.html":{},"injectables/GridMessageService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/grid/services/grid.service.ts",{"_index":2040,"title":{},"body":{"coverage.html":{}}}],["src/grid/utils/empty.factory.ts",{"_index":1160,"title":{},"body":{"interfaces/EmptyConstructor.html":{},"classes/EmptyFactory.html":{},"coverage.html":{}}}],["src/grid/utils/empty.factory.ts:4",{"_index":1169,"title":{},"body":{"classes/EmptyFactory.html":{}}}],["src/grid/utils/empty.factory.ts:7",{"_index":1170,"title":{},"body":{"classes/EmptyFactory.html":{}}}],["src/grid/utils/event",{"_index":1195,"title":{},"body":{"classes/EventMeta.html":{},"coverage.html":{}}}],["src/grid/utils/html",{"_index":1547,"title":{},"body":{"classes/HtmlUtil.html":{},"coverage.html":{}}}],["src/grid/utils/injectable.factory.ts",{"_index":1566,"title":{},"body":{"interfaces/InjectableConstructor.html":{},"classes/InjectableFactory.html":{},"coverage.html":{}}}],["src/grid/utils/injectable.factory.ts:10",{"_index":1576,"title":{},"body":{"classes/InjectableFactory.html":{}}}],["src/grid/utils/injectable.factory.ts:7",{"_index":1575,"title":{},"body":{"classes/InjectableFactory.html":{}}}],["src/grid/utils/is",{"_index":1579,"title":{},"body":{"pipes/IsFixedPipe.html":{},"pipes/IsGroupPipe.html":{},"pipes/IsRowVisiblePipe.html":{},"pipes/IsVisiblePipe.html":{},"coverage.html":{}}}],["src/grid/utils/point.ts",{"_index":1617,"title":{},"body":{"classes/Point.html":{},"coverage.html":{}}}],["src/grid/utils/point.ts:14",{"_index":1632,"title":{},"body":{"classes/Point.html":{}}}],["src/grid/utils/point.ts:2",{"_index":1633,"title":{},"body":{"classes/Point.html":{}}}],["src/grid/utils/point.ts:21",{"_index":1646,"title":{},"body":{"classes/Point.html":{}}}],["src/grid/utils/point.ts:29",{"_index":1648,"title":{},"body":{"classes/Point.html":{}}}],["src/grid/utils/point.ts:3",{"_index":1634,"title":{},"body":{"classes/Point.html":{}}}],["src/grid/utils/point.ts:33",{"_index":1649,"title":{},"body":{"classes/Point.html":{}}}],["src/grid/utils/point.ts:37",{"_index":1636,"title":{},"body":{"classes/Point.html":{}}}],["src/grid/utils/point.ts:45",{"_index":1638,"title":{},"body":{"classes/Point.html":{}}}],["src/grid/utils/point.ts:49",{"_index":1642,"title":{},"body":{"classes/Point.html":{}}}],["src/grid/utils/point.ts:5",{"_index":1640,"title":{},"body":{"classes/Point.html":{}}}],["src/grid/utils/point.ts:59",{"_index":1644,"title":{},"body":{"classes/Point.html":{}}}],["src/grid/utils/point.ts:63",{"_index":1651,"title":{},"body":{"classes/Point.html":{}}}],["src/grid/utils/point.ts:73",{"_index":1653,"title":{},"body":{"classes/Point.html":{}}}],["src/grid/utils/point.ts:77",{"_index":1656,"title":{},"body":{"classes/Point.html":{}}}],["src/grid/utils/point.ts:81",{"_index":1658,"title":{},"body":{"classes/Point.html":{}}}],["src/grid/utils/point.ts:85",{"_index":1660,"title":{},"body":{"classes/Point.html":{}}}],["src/grid/utils/point.ts:89",{"_index":1662,"title":{},"body":{"classes/Point.html":{}}}],["src/grid/utils/point.ts:93",{"_index":1654,"title":{},"body":{"classes/Point.html":{}}}],["src/grid/utils/range.ts",{"_index":1677,"title":{},"body":{"classes/Range.html":{},"coverage.html":{}}}],["src/grid/utils/range.ts:12",{"_index":1686,"title":{},"body":{"classes/Range.html":{}}}],["src/grid/utils/range.ts:16",{"_index":1688,"title":{},"body":{"classes/Range.html":{}}}],["src/grid/utils/range.ts:21",{"_index":1689,"title":{},"body":{"classes/Range.html":{}}}],["src/grid/utils/range.ts:25",{"_index":1691,"title":{},"body":{"classes/Range.html":{}}}],["src/grid/utils/range.ts:38",{"_index":1693,"title":{},"body":{"classes/Range.html":{}}}],["src/grid/utils/range.ts:4",{"_index":1684,"title":{},"body":{"classes/Range.html":{}}}],["src/grid/utils/range.ts:42",{"_index":1695,"title":{},"body":{"classes/Range.html":{}}}],["src/grid/utils/range.ts:46",{"_index":1697,"title":{},"body":{"classes/Range.html":{}}}],["src/grid/utils/range.ts:5",{"_index":1683,"title":{},"body":{"classes/Range.html":{}}}],["src/grid/utils/range.ts:50",{"_index":1699,"title":{},"body":{"classes/Range.html":{}}}],["src/grid/utils/row",{"_index":1796,"title":{},"body":{"classes/RowChange.html":{},"coverage.html":{}}}],["started",{"_index":1904,"title":{"changelog.html":{},"index.html":{},"license.html":{}},"body":{}}],["state",{"_index":1000,"title":{},"body":{"components/ConfigMenuComponent.html":{},"index.html":{}}}],["statements",{"_index":1991,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":1487,"title":{},"body":{"modules/GridModule.html":{},"classes/HtmlUtil.html":{},"classes/Point.html":{},"components/TextFilterRenderer.html":{}}}],["status",{"_index":2227,"title":{},"body":{"index.html":{}}}],["stop",{"_index":867,"title":{},"body":{"components/CompareFilterRenderer.html":{},"components/ConfigMenuComponent.html":{},"classes/FilterRenderer.html":{},"components/SelectFilterRenderer.html":{},"components/TextFilterRenderer.html":{},"changelog.html":{}}}],["stop(event",{"_index":897,"title":{},"body":{"components/CompareFilterRenderer.html":{},"components/ConfigMenuComponent.html":{},"classes/FilterRenderer.html":{},"components/SelectFilterRenderer.html":{},"components/TextFilterRenderer.html":{}}}],["stopevent",{"_index":321,"title":{},"body":{"classes/CellHoverPopupListener.html":{},"classes/ClickCellEditListener.html":{},"classes/ClickRowSelectListener.html":{},"classes/ClickViewListener.html":{},"classes/ColumnDndListener.html":{},"classes/EventListener.html":{},"classes/GroupKeyListener.html":{},"classes/RangeSelectListener.html":{},"classes/RowDblClickListener.html":{}}}],["storage",{"_index":1944,"title":{},"body":{"changelog.html":{}}}],["string",{"_index":82,"title":{},"body":{"components/BigTextPopup.html":{},"classes/CellEditRenderer.html":{},"classes/CellNumberRangeView.html":{},"classes/CheckRowSelectView.html":{},"classes/ClickView.html":{},"classes/ColumnDndListener.html":{},"components/ColumnHeaderComponent.html":{},"components/CompareFilterRenderer.html":{},"components/ConfigMenuComponent.html":{},"components/ConfigMultiChoiceComponent.html":{},"classes/DateIso8601Formatter.html":{},"classes/DateMsFormatter.html":{},"interfaces/Dictionary.html":{},"classes/EventMeta.html":{},"injectables/GridGlobalService.html":{},"injectables/GridMessageService.html":{},"classes/GroupKeyListener.html":{},"classes/HtmlUtil.html":{},"classes/Point.html":{},"classes/Range.html":{},"classes/RangeSelectListener.html":{},"classes/Row.html":{},"classes/RowDblClickListener.html":{},"classes/RowGroup.html":{},"components/TextFilterRenderer.html":{},"index.html":{}}}],["strokes",{"_index":1258,"title":{},"body":{"injectables/GridEventService.html":{}}}],["style",{"_index":566,"title":{},"body":{"classes/ClickView.html":{},"index.html":{}}}],["style.indexof",{"_index":579,"title":{},"body":{"classes/ClickView.html":{}}}],["style.substr(0",{"_index":581,"title":{},"body":{"classes/ClickView.html":{}}}],["style.substr(x",{"_index":582,"title":{},"body":{"classes/ClickView.html":{}}}],["styles",{"_index":5,"title":{},"body":{"components/BigTextPopup.html":{},"classes/ClickView.html":{},"components/ColumnHeaderComponent.html":{},"components/CompareFilterRenderer.html":{},"components/ConfigMenuComponent.html":{},"components/ConfigMultiChoiceComponent.html":{},"components/SelectFilterRenderer.html":{}}}],["sub",{"_index":970,"title":{},"body":{"components/ConfigMenuComponent.html":{}}}],["subject",{"_index":206,"title":{},"body":{"classes/CellEditRenderer.html":{},"injectables/GridEventService.html":{},"injectables/GridMessageService.html":{},"license.html":{}}}],["sublicense",{"_index":2306,"title":{},"body":{"license.html":{}}}],["subscription",{"_index":1032,"title":{},"body":{"components/ConfigMenuComponent.html":{}}}],["substantial",{"_index":2316,"title":{},"body":{"license.html":{}}}],["success",{"_index":2191,"title":{},"body":{"index.html":{}}}],["successful",{"_index":2186,"title":{},"body":{"index.html":{}}}],["such",{"_index":823,"title":{},"body":{"components/CompareFilterRenderer.html":{},"classes/EventListener.html":{},"injectables/GridEventService.html":{},"classes/HtmlUtil.html":{},"components/SelectFilterRenderer.html":{}}}],["super.ngafterviewinit",{"_index":1901,"title":{},"body":{"components/TextFilterRenderer.html":{}}}],["super.reset",{"_index":939,"title":{},"body":{"components/CompareFilterRenderer.html":{},"components/SelectFilterRenderer.html":{},"components/TextFilterRenderer.html":{}}}],["super.setconfig(config",{"_index":561,"title":{},"body":{"classes/ClickRowSelectListener.html":{},"components/CompareFilterRenderer.html":{},"classes/DateIso8601Formatter.html":{},"classes/DateMsFormatter.html":{},"classes/GroupKeyListener.html":{},"components/TextFilterRenderer.html":{}}}],["super.updatelocation",{"_index":99,"title":{},"body":{"components/BigTextPopup.html":{}}}],["super.valueclear",{"_index":956,"title":{},"body":{"components/CompareFilterRenderer.html":{},"components/SelectFilterRenderer.html":{},"components/TextFilterRenderer.html":{}}}],["support",{"_index":1975,"title":{},"body":{"changelog.html":{},"index.html":{},"modules.html":{}}}],["sure",{"_index":495,"title":{},"body":{"interfaces/CellViewRenderer.html":{}}}],["svg",{"_index":2342,"title":{},"body":{"modules.html":{}}}],["syntax",{"_index":1948,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["t",{"_index":1163,"title":{},"body":{"interfaces/EmptyConstructor.html":{},"classes/EmptyFactory.html":{},"interfaces/InjectableConstructor.html":{},"classes/InjectableFactory.html":{}}}],["tab",{"_index":1354,"title":{},"body":{"injectables/GridEventService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["tabfrom",{"_index":1291,"title":{},"body":{"injectables/GridEventService.html":{}}}],["tabfrom(location",{"_index":1337,"title":{},"body":{"injectables/GridEventService.html":{}}}],["table",{"_index":2048,"title":{},"body":{"coverage.html":{}}}],["tables",{"_index":2060,"title":{},"body":{"index.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":2047,"title":{},"body":{"coverage.html":{}}}],["take",{"_index":2222,"title":{},"body":{"index.html":{}}}],["taken",{"_index":2099,"title":{},"body":{"index.html":{}}}],["target",{"_index":683,"title":{},"body":{"classes/ColumnDndListener.html":{}}}],["target.id",{"_index":686,"title":{},"body":{"classes/ColumnDndListener.html":{}}}],["targetheader",{"_index":670,"title":{},"body":{"classes/ColumnDndListener.html":{}}}],["targetheader.closest(\".header",{"_index":672,"title":{},"body":{"classes/ColumnDndListener.html":{}}}],["targetheader.id.substring(+targetheader.id.lastindexof",{"_index":674,"title":{},"body":{"classes/ColumnDndListener.html":{}}}],["tempid",{"_index":1400,"title":{},"body":{"injectables/GridGlobalService.html":{}}}],["template",{"_index":40,"title":{},"body":{"components/BigTextPopup.html":{},"components/ColumnHeaderComponent.html":{},"components/CompareFilterRenderer.html":{},"components/ConfigMenuComponent.html":{},"components/ConfigMultiChoiceComponent.html":{},"components/SelectFilterRenderer.html":{},"components/TextFilterRenderer.html":{},"index.html":{}}}],["templateref",{"_index":2159,"title":{},"body":{"index.html":{}}}],["text",{"_index":127,"title":{},"body":{"components/BigTextPopup.html":{},"classes/CellNumberRangeView.html":{},"classes/CellPopupRenderer.html":{},"classes/CellTextView.html":{},"components/ColumnHeaderComponent.html":{},"components/CompareFilterRenderer.html":{},"components/ConfigMenuComponent.html":{},"components/ConfigMultiChoiceComponent.html":{},"classes/RowGroupView.html":{},"components/SelectFilterRenderer.html":{},"components/TextFilterRenderer.html":{},"coverage.html":{}}}],["texteditrenderer",{"_index":126,"title":{},"body":{"components/BigTextPopup.html":{},"components/ColumnHeaderComponent.html":{},"components/CompareFilterRenderer.html":{},"components/ConfigMenuComponent.html":{},"components/ConfigMultiChoiceComponent.html":{},"modules/GridModule.html":{},"components/SelectFilterRenderer.html":{},"components/TextFilterRenderer.html":{},"coverage.html":{},"overview.html":{}}}],["textfilterrenderer",{"_index":128,"title":{"components/TextFilterRenderer.html":{}},"body":{"components/BigTextPopup.html":{},"components/ColumnHeaderComponent.html":{},"components/CompareFilterRenderer.html":{},"components/ConfigMenuComponent.html":{},"components/ConfigMultiChoiceComponent.html":{},"modules/GridModule.html":{},"components/SelectFilterRenderer.html":{},"components/TextFilterRenderer.html":{},"coverage.html":{},"index.html":{},"overview.html":{}}}],["them.pagesizes",{"_index":2148,"title":{},"body":{"index.html":{}}}],["theme",{"_index":663,"title":{},"body":{"classes/ColumnDndListener.html":{},"components/ColumnHeaderComponent.html":{},"components/ConfigMenuComponent.html":{},"index.html":{}}}],["theme.display",{"_index":991,"title":{},"body":{"components/ConfigMenuComponent.html":{}}}],["themechoices",{"_index":1001,"title":{},"body":{"components/ConfigMenuComponent.html":{},"injectables/GridGlobalService.html":{}}}],["themes",{"_index":804,"title":{},"body":{"components/ColumnHeaderComponent.html":{}}}],["therefore",{"_index":1715,"title":{},"body":{"classes/RangeSelectListener.html":{}}}],["things",{"_index":1551,"title":{},"body":{"classes/HtmlUtil.html":{},"index.html":{}}}],["this._alt",{"_index":1223,"title":{},"body":{"classes/EventMeta.html":{}}}],["this._ctrl",{"_index":1224,"title":{},"body":{"classes/EventMeta.html":{}}}],["this._groupkey",{"_index":1795,"title":{},"body":{"classes/Row.html":{}}}],["this._i",{"_index":1671,"title":{},"body":{"classes/Point.html":{}}}],["this._j",{"_index":1672,"title":{},"body":{"classes/Point.html":{}}}],["this._max",{"_index":1701,"title":{},"body":{"classes/Range.html":{}}}],["this._max.greaterthanorequal(point",{"_index":1705,"title":{},"body":{"classes/Range.html":{}}}],["this._max.i",{"_index":1709,"title":{},"body":{"classes/Range.html":{}}}],["this._max.j",{"_index":1710,"title":{},"body":{"classes/Range.html":{}}}],["this._message.asobservable",{"_index":1462,"title":{},"body":{"injectables/GridMessageService.html":{}}}],["this._message.next(\"error",{"_index":1466,"title":{},"body":{"injectables/GridMessageService.html":{}}}],["this._message.next(\"warn",{"_index":1467,"title":{},"body":{"injectables/GridMessageService.html":{}}}],["this._messageobservable",{"_index":1468,"title":{},"body":{"injectables/GridMessageService.html":{}}}],["this._min",{"_index":1700,"title":{},"body":{"classes/Range.html":{}}}],["this._min.lessthanorequal(point",{"_index":1704,"title":{},"body":{"classes/Range.html":{}}}],["this._shift",{"_index":1225,"title":{},"body":{"classes/EventMeta.html":{}}}],["this.adding",{"_index":1100,"title":{},"body":{"components/ConfigMultiChoiceComponent.html":{}}}],["this.appendlocation",{"_index":572,"title":{},"body":{"classes/ClickView.html":{}}}],["this.arrowfrom(new",{"_index":1375,"title":{},"body":{"injectables/GridEventService.html":{}}}],["this.asc",{"_index":781,"title":{},"body":{"components/ColumnHeaderComponent.html":{}}}],["this.cells",{"_index":1793,"title":{},"body":{"classes/Row.html":{}}}],["this.changed",{"_index":932,"title":{},"body":{"components/CompareFilterRenderer.html":{},"components/SelectFilterRenderer.html":{}}}],["this.changedetectorref",{"_index":267,"title":{},"body":{"classes/CellEditRenderer.html":{},"classes/CellPopupRenderer.html":{},"classes/FilterRenderer.html":{}}}],["this.changedetectorref.detectchanges",{"_index":935,"title":{},"body":{"components/CompareFilterRenderer.html":{},"components/ConfigMenuComponent.html":{},"classes/FilterRenderer.html":{},"components/SelectFilterRenderer.html":{},"components/TextFilterRenderer.html":{}}}],["this.checkedicon",{"_index":511,"title":{},"body":{"classes/CheckRowSelectView.html":{}}}],["this.checkedicon.split",{"_index":525,"title":{},"body":{"classes/CheckRowSelectView.html":{}}}],["this.choices",{"_index":1088,"title":{},"body":{"components/ConfigMultiChoiceComponent.html":{}}}],["this.clone",{"_index":657,"title":{},"body":{"classes/ColumnDndListener.html":{}}}],["this.clone.id",{"_index":659,"title":{},"body":{"classes/ColumnDndListener.html":{}}}],["this.close.emit(true",{"_index":1242,"title":{},"body":{"classes/FilterRenderer.html":{}}}],["this.column",{"_index":269,"title":{},"body":{"classes/CellEditRenderer.html":{},"classes/CellTextView.html":{},"components/ColumnHeaderComponent.html":{},"classes/FilterRenderer.html":{},"classes/RowGroupView.html":{}}}],["this.column.choicemap.get(value",{"_index":475,"title":{},"body":{"classes/CellTextView.html":{},"classes/RowGroupView.html":{}}}],["this.column.choices",{"_index":1878,"title":{},"body":{"components/SelectFilterRenderer.html":{}}}],["this.column.datatype",{"_index":469,"title":{},"body":{"classes/CellTextView.html":{},"components/CompareFilterRenderer.html":{},"components/SelectFilterRenderer.html":{},"components/TextFilterRenderer.html":{}}}],["this.column.datatype.indexof(\"date",{"_index":942,"title":{},"body":{"components/CompareFilterRenderer.html":{}}}],["this.column.field",{"_index":778,"title":{},"body":{"components/ColumnHeaderComponent.html":{}}}],["this.column.filterrenderer",{"_index":755,"title":{},"body":{"components/ColumnHeaderComponent.html":{}}}],["this.column.format",{"_index":950,"title":{},"body":{"components/CompareFilterRenderer.html":{}}}],["this.column.format.length",{"_index":951,"title":{},"body":{"components/CompareFilterRenderer.html":{}}}],["this.column.formatvalue(this.data.value",{"_index":298,"title":{},"body":{"classes/CellEditRenderer.html":{}}}],["this.column.formatvalue(value",{"_index":947,"title":{},"body":{"components/CompareFilterRenderer.html":{}}}],["this.column.parsevalue(value",{"_index":290,"title":{},"body":{"classes/CellEditRenderer.html":{},"components/CompareFilterRenderer.html":{}}}],["this.column.sort",{"_index":795,"title":{},"body":{"components/ColumnHeaderComponent.html":{}}}],["this.config",{"_index":268,"title":{},"body":{"classes/CellEditRenderer.html":{},"components/ConfigMenuComponent.html":{},"classes/FilterRenderer.html":{},"classes/FormatterParser.html":{}}}],["this.config.columns[0",{"_index":1049,"title":{},"body":{"components/ConfigMenuComponent.html":{}}}],["this.configsubscription",{"_index":1042,"title":{},"body":{"components/ConfigMenuComponent.html":{}}}],["this.configsubscription.unsubscribe",{"_index":1043,"title":{},"body":{"components/ConfigMenuComponent.html":{}}}],["this.count",{"_index":1833,"title":{},"body":{"classes/RowGroup.html":{}}}],["this.currentrange",{"_index":1357,"title":{},"body":{"injectables/GridEventService.html":{}}}],["this.currentrange.setinitial(location",{"_index":1372,"title":{},"body":{"injectables/GridEventService.html":{}}}],["this.currentrange.update(location",{"_index":1366,"title":{},"body":{"injectables/GridEventService.html":{}}}],["this.data",{"_index":297,"title":{},"body":{"classes/CellEditRenderer.html":{}}}],["this.data.key",{"_index":295,"title":{},"body":{"classes/CellEditRenderer.html":{}}}],["this.data.value",{"_index":291,"title":{},"body":{"classes/CellEditRenderer.html":{}}}],["this.datarequest",{"_index":2109,"title":{},"body":{"index.html":{}}}],["this.deselectall",{"_index":1882,"title":{},"body":{"components/SelectFilterRenderer.html":{}}}],["this.display",{"_index":1086,"title":{},"body":{"components/ConfigMultiChoiceComponent.html":{}}}],["this.dragging",{"_index":653,"title":{},"body":{"classes/ColumnDndListener.html":{},"classes/RangeSelectListener.html":{}}}],["this.el.nativeelement.closest(\"#main",{"_index":784,"title":{},"body":{"components/ColumnHeaderComponent.html":{}}}],["this.el.nativeelement.closest(\".header",{"_index":787,"title":{},"body":{"components/ColumnHeaderComponent.html":{}}}],["this.el.nativeelement.contains(event.target",{"_index":815,"title":{},"body":{"components/ColumnHeaderComponent.html":{}}}],["this.el.nativeelement.offsetheight",{"_index":808,"title":{},"body":{"components/ColumnHeaderComponent.html":{}}}],["this.el.nativeelement.offsetleft",{"_index":789,"title":{},"body":{"components/ColumnHeaderComponent.html":{}}}],["this.el.nativeelement.offsetwidth",{"_index":790,"title":{},"body":{"components/ColumnHeaderComponent.html":{}}}],["this.el.nativeelement.queryselector(\"#header",{"_index":767,"title":{},"body":{"components/ColumnHeaderComponent.html":{}}}],["this.el.nativeelement.queryselector(\"#hidden",{"_index":769,"title":{},"body":{"components/ColumnHeaderComponent.html":{}}}],["this.elementref",{"_index":265,"title":{},"body":{"classes/CellEditRenderer.html":{},"classes/CellPopupRenderer.html":{},"classes/FilterRenderer.html":{}}}],["this.emptyconstructor",{"_index":1164,"title":{},"body":{"interfaces/EmptyConstructor.html":{},"classes/EmptyFactory.html":{}}}],["this.equals(other",{"_index":1676,"title":{},"body":{"classes/Point.html":{}}}],["this.filter",{"_index":1241,"title":{},"body":{"classes/FilterRenderer.html":{},"components/TextFilterRenderer.html":{}}}],["this.filtercomponent",{"_index":759,"title":{},"body":{"components/ColumnHeaderComponent.html":{}}}],["this.filtercomponent.close.subscribe((closed",{"_index":765,"title":{},"body":{"components/ColumnHeaderComponent.html":{}}}],["this.filtercomponent.column",{"_index":761,"title":{},"body":{"components/ColumnHeaderComponent.html":{}}}],["this.filtercomponent.setconfig(this.column.filterconfig",{"_index":762,"title":{},"body":{"components/ColumnHeaderComponent.html":{}}}],["this.filters",{"_index":930,"title":{},"body":{"components/CompareFilterRenderer.html":{},"classes/FilterRenderer.html":{},"components/SelectFilterRenderer.html":{},"components/TextFilterRenderer.html":{}}}],["this.filters.length",{"_index":1902,"title":{},"body":{"components/TextFilterRenderer.html":{}}}],["this.filters.push(new",{"_index":1880,"title":{},"body":{"components/SelectFilterRenderer.html":{},"components/TextFilterRenderer.html":{}}}],["this.filters[0",{"_index":940,"title":{},"body":{"components/CompareFilterRenderer.html":{},"components/TextFilterRenderer.html":{}}}],["this.filters[0].highvalue",{"_index":955,"title":{},"body":{"components/CompareFilterRenderer.html":{}}}],["this.filters[0].operator",{"_index":938,"title":{},"body":{"components/CompareFilterRenderer.html":{}}}],["this.filters[0].valid",{"_index":928,"title":{},"body":{"components/CompareFilterRenderer.html":{},"components/TextFilterRenderer.html":{}}}],["this.filters[0].value",{"_index":952,"title":{},"body":{"components/CompareFilterRenderer.html":{},"components/TextFilterRenderer.html":{}}}],["this.filterssubscribe",{"_index":1239,"title":{},"body":{"classes/FilterRenderer.html":{}}}],["this.firstsort",{"_index":780,"title":{},"body":{"components/ColumnHeaderComponent.html":{}}}],["this.format",{"_index":309,"title":{},"body":{"classes/CellEditRenderer.html":{},"classes/DateIso8601Formatter.html":{},"classes/DateMsFormatter.html":{}}}],["this.format(this.filters[0].highvalue",{"_index":946,"title":{},"body":{"components/CompareFilterRenderer.html":{}}}],["this.format(this.filters[0].value",{"_index":944,"title":{},"body":{"components/CompareFilterRenderer.html":{}}}],["this.format).todate().gettime",{"_index":1150,"title":{},"body":{"classes/DateMsFormatter.html":{}}}],["this.format).toisostring().substring(0",{"_index":1142,"title":{},"body":{"classes/DateIso8601Formatter.html":{}}}],["this.formattedvalue",{"_index":97,"title":{},"body":{"components/BigTextPopup.html":{}}}],["this.formattype",{"_index":307,"title":{},"body":{"classes/CellEditRenderer.html":{}}}],["this.globalconfig",{"_index":1431,"title":{},"body":{"injectables/GridGlobalService.html":{}}}],["this.globalconfig[key",{"_index":1432,"title":{},"body":{"injectables/GridGlobalService.html":{}}}],["this.greaterthan(other",{"_index":1675,"title":{},"body":{"classes/Point.html":{}}}],["this.grid",{"_index":1191,"title":{},"body":{"classes/EventListener.html":{}}}],["this.grid.clearpopup",{"_index":359,"title":{},"body":{"classes/CellHoverPopupListener.html":{}}}],["this.grid.createpopup(location",{"_index":361,"title":{},"body":{"classes/CellHoverPopupListener.html":{}}}],["this.grid.dorender",{"_index":1055,"title":{},"body":{"components/ConfigMenuComponent.html":{}}}],["this.grid.focuser1.nativeelement.focus",{"_index":1731,"title":{},"body":{"classes/RangeSelectListener.html":{}}}],["this.grid.getgridservice().getconfigsubject().subscribe((config",{"_index":1041,"title":{},"body":{"components/ConfigMenuComponent.html":{}}}],["this.grid.getgridservice().updateconfig(config",{"_index":1054,"title":{},"body":{"components/ConfigMenuComponent.html":{}}}],["this.grid.getgridservice().updatesortorder(field",{"_index":1050,"title":{},"body":{"components/ConfigMenuComponent.html":{}}}],["this.grid.getrenderer",{"_index":643,"title":{},"body":{"classes/ColumnDndListener.html":{}}}],["this.grid.getrenderer().appendchild(document.body",{"_index":667,"title":{},"body":{"classes/ColumnDndListener.html":{}}}],["this.grid.gridcontainer.nativeelement.queryselector(\".cell",{"_index":355,"title":{},"body":{"classes/CellHoverPopupListener.html":{}}}],["this.grid.id",{"_index":556,"title":{},"body":{"classes/ClickRowSelectListener.html":{},"classes/GroupKeyListener.html":{}}}],["this.grid.outputlistenerevent.emit",{"_index":675,"title":{},"body":{"classes/ColumnDndListener.html":{}}}],["this.grid.outputrowclick.emit(key",{"_index":605,"title":{},"body":{"classes/ClickViewListener.html":{}}}],["this.grid.outputrowdblclick.emit(this.gridservice.getrow(+id).key",{"_index":1811,"title":{},"body":{"classes/RowDblClickListener.html":{}}}],["this.grid.updateselectedrows(new",{"_index":603,"title":{},"body":{"classes/ClickViewListener.html":{}}}],["this.grideventservice",{"_index":264,"title":{},"body":{"classes/CellEditRenderer.html":{},"classes/EventListener.html":{}}}],["this.grideventservice.clearselectedlocation",{"_index":1729,"title":{},"body":{"classes/RangeSelectListener.html":{}}}],["this.grideventservice.setmousedragselected(htmlutil.getlocation(event.target",{"_index":1733,"title":{},"body":{"classes/RangeSelectListener.html":{}}}],["this.grideventservice.setselectedlocation(location",{"_index":546,"title":{},"body":{"classes/ClickCellEditListener.html":{}}}],["this.gridglobalservice.themechoices",{"_index":1040,"title":{},"body":{"components/ConfigMenuComponent.html":{}}}],["this.gridservice",{"_index":263,"title":{},"body":{"classes/CellEditRenderer.html":{},"classes/CellPopupRenderer.html":{},"classes/EventListener.html":{},"classes/FilterRenderer.html":{}}}],["this.gridservice.addfilters(this.column.field",{"_index":929,"title":{},"body":{"components/CompareFilterRenderer.html":{},"classes/FilterRenderer.html":{},"components/SelectFilterRenderer.html":{},"components/TextFilterRenderer.html":{}}}],["this.gridservice.addsort(this.column.field",{"_index":797,"title":{},"body":{"components/ColumnHeaderComponent.html":{}}}],["this.gridservice.expandcollapserowgroup(groupkey",{"_index":1546,"title":{},"body":{"classes/GroupKeyListener.html":{}}}],["this.gridservice.filter",{"_index":931,"title":{},"body":{"components/CompareFilterRenderer.html":{},"components/SelectFilterRenderer.html":{},"components/TextFilterRenderer.html":{}}}],["this.gridservice.getcolumn(location.j).editable",{"_index":544,"title":{},"body":{"classes/ClickCellEditListener.html":{}}}],["this.gridservice.getcolumn(location.j).popuprenderer",{"_index":360,"title":{},"body":{"classes/CellHoverPopupListener.html":{}}}],["this.gridservice.getcolumn(this.j).formatvalue(this.gridservice.getrow(this.i).get(this.j).value",{"_index":98,"title":{},"body":{"components/BigTextPopup.html":{}}}],["this.gridservice.getcolumnmapsubject().getvalue().get(\"visible",{"_index":678,"title":{},"body":{"classes/ColumnDndListener.html":{}}}],["this.gridservice.getconfigsubject().getvalue().theme.split",{"_index":805,"title":{},"body":{"components/ColumnHeaderComponent.html":{}}}],["this.gridservice.getfiltermapsubject().subscribe((filtermap",{"_index":770,"title":{},"body":{"components/ColumnHeaderComponent.html":{},"classes/FilterRenderer.html":{}}}],["this.gridservice.getnewrowsubject().subscribe((newrow",{"_index":1355,"title":{},"body":{"injectables/GridEventService.html":{}}}],["this.gridservice.getnvisiblecolumns",{"_index":1389,"title":{},"body":{"injectables/GridEventService.html":{}}}],["this.gridservice.getrow(location.i).key",{"_index":600,"title":{},"body":{"classes/ClickViewListener.html":{}}}],["this.gridservice.getthemes",{"_index":664,"title":{},"body":{"classes/ColumnDndListener.html":{}}}],["this.gridservice.globalclearpushfilter(this.column.field",{"_index":934,"title":{},"body":{"components/CompareFilterRenderer.html":{},"components/SelectFilterRenderer.html":{},"components/TextFilterRenderer.html":{}}}],["this.gridservice.handlevaluechange(this.i",{"_index":293,"title":{},"body":{"classes/CellEditRenderer.html":{}}}],["this.gridservice.id",{"_index":1188,"title":{},"body":{"classes/EventListener.html":{},"injectables/GridEventService.html":{}}}],["this.gridservice.iscolumnselectable(location.j",{"_index":1370,"title":{},"body":{"injectables/GridEventService.html":{}}}],["this.gridservice.negateselectedrow(location.i",{"_index":559,"title":{},"body":{"classes/ClickRowSelectListener.html":{}}}],["this.gridservice.reordercolumn(+this.originaltarget.id.substring(+this.originaltarget.id.lastindexof",{"_index":673,"title":{},"body":{"classes/ColumnDndListener.html":{}}}],["this.gridservice.sortssubject.subscribe((sorts",{"_index":777,"title":{},"body":{"components/ColumnHeaderComponent.html":{}}}],["this.groupkey",{"_index":1832,"title":{},"body":{"classes/RowGroup.html":{}}}],["this.groupservicemap.get(group",{"_index":1442,"title":{},"body":{"injectables/GridGlobalService.html":{}}}],["this.groupservicemap.get(group).push(gridservice",{"_index":1438,"title":{},"body":{"injectables/GridGlobalService.html":{}}}],["this.groupservicemap.has(group",{"_index":1437,"title":{},"body":{"injectables/GridGlobalService.html":{}}}],["this.groupservicemap.set(group",{"_index":1441,"title":{},"body":{"injectables/GridGlobalService.html":{}}}],["this.hasfilters",{"_index":773,"title":{},"body":{"components/ColumnHeaderComponent.html":{}}}],["this.headercontainer.createcomponent(factory).instance",{"_index":760,"title":{},"body":{"components/ColumnHeaderComponent.html":{}}}],["this.headertext",{"_index":766,"title":{},"body":{"components/ColumnHeaderComponent.html":{}}}],["this.hiddenheadertext",{"_index":768,"title":{},"body":{"components/ColumnHeaderComponent.html":{}}}],["this.high",{"_index":393,"title":{},"body":{"classes/CellNumberRangeView.html":{}}}],["this.highcolor",{"_index":388,"title":{},"body":{"classes/CellNumberRangeView.html":{}}}],["this.highvalue",{"_index":945,"title":{},"body":{"components/CompareFilterRenderer.html":{}}}],["this.hostelement",{"_index":271,"title":{},"body":{"classes/CellEditRenderer.html":{},"classes/CellPopupRenderer.html":{}}}],["this.hostelement.getboundingclientrect",{"_index":450,"title":{},"body":{"classes/CellPopupRenderer.html":{}}}],["this.hostelement.offsetheight",{"_index":282,"title":{},"body":{"classes/CellEditRenderer.html":{},"classes/CellPopupRenderer.html":{}}}],["this.hostelement.offsetleft",{"_index":277,"title":{},"body":{"classes/CellEditRenderer.html":{}}}],["this.hostelement.offsetwidth",{"_index":280,"title":{},"body":{"classes/CellEditRenderer.html":{},"classes/CellPopupRenderer.html":{}}}],["this.hostelement.parentelement.offsettop",{"_index":279,"title":{},"body":{"classes/CellEditRenderer.html":{}}}],["this.i",{"_index":299,"title":{},"body":{"classes/CellEditRenderer.html":{},"classes/CellPopupRenderer.html":{}}}],["this.ic(this.injector",{"_index":1572,"title":{},"body":{"interfaces/InjectableConstructor.html":{},"classes/InjectableFactory.html":{}}}],["this.icon",{"_index":574,"title":{},"body":{"classes/ClickView.html":{}}}],["this.icon.split",{"_index":590,"title":{},"body":{"classes/ClickView.html":{}}}],["this.id",{"_index":570,"title":{},"body":{"classes/ClickView.html":{}}}],["this.input.nativeelement.focus",{"_index":1900,"title":{},"body":{"components/TextFilterRenderer.html":{}}}],["this.isright",{"_index":655,"title":{},"body":{"classes/ColumnDndListener.html":{}}}],["this.j",{"_index":294,"title":{},"body":{"classes/CellEditRenderer.html":{},"classes/CellPopupRenderer.html":{}}}],["this.lastdx",{"_index":1386,"title":{},"body":{"injectables/GridEventService.html":{}}}],["this.lastdy",{"_index":1387,"title":{},"body":{"injectables/GridEventService.html":{}}}],["this.lastevent",{"_index":1380,"title":{},"body":{"injectables/GridEventService.html":{}}}],["this.lasteventid",{"_index":649,"title":{},"body":{"classes/ColumnDndListener.html":{},"classes/RangeSelectListener.html":{}}}],["this.lasteventid.startswith(\"cell",{"_index":1728,"title":{},"body":{"classes/RangeSelectListener.html":{}}}],["this.lasteventid.startswith(\"header",{"_index":652,"title":{},"body":{"classes/ColumnDndListener.html":{}}}],["this.length",{"_index":1790,"title":{},"body":{"classes/Row.html":{}}}],["this.low",{"_index":391,"title":{},"body":{"classes/CellNumberRangeView.html":{}}}],["this.lowcolor",{"_index":387,"title":{},"body":{"classes/CellNumberRangeView.html":{}}}],["this.lowvalue",{"_index":943,"title":{},"body":{"components/CompareFilterRenderer.html":{}}}],["this.model",{"_index":1092,"title":{},"body":{"components/ConfigMultiChoiceComponent.html":{}}}],["this.model.push(o[this.value",{"_index":1102,"title":{},"body":{"components/ConfigMultiChoiceComponent.html":{}}}],["this.model.push(this.newvalue",{"_index":1097,"title":{},"body":{"components/ConfigMultiChoiceComponent.html":{}}}],["this.model.sort((a",{"_index":1104,"title":{},"body":{"components/ConfigMultiChoiceComponent.html":{}}}],["this.modelchange.emit(this.model",{"_index":1099,"title":{},"body":{"components/ConfigMultiChoiceComponent.html":{}}}],["this.multiselect",{"_index":560,"title":{},"body":{"classes/ClickRowSelectListener.html":{},"classes/GroupKeyListener.html":{}}}],["this.ncolumns",{"_index":1359,"title":{},"body":{"injectables/GridEventService.html":{}}}],["this.newrow",{"_index":1356,"title":{},"body":{"injectables/GridEventService.html":{}}}],["this.newrownum",{"_index":1803,"title":{},"body":{"classes/RowChange.html":{}}}],["this.newvalue",{"_index":1093,"title":{},"body":{"components/ConfigMultiChoiceComponent.html":{}}}],["this.oldrownum",{"_index":1802,"title":{},"body":{"classes/RowChange.html":{}}}],["this.operator",{"_index":937,"title":{},"body":{"components/CompareFilterRenderer.html":{}}}],["this.originaltarget",{"_index":644,"title":{},"body":{"classes/ColumnDndListener.html":{}}}],["this.originaltarget.classlist.contains(\"hci",{"_index":646,"title":{},"body":{"classes/ColumnDndListener.html":{}}}],["this.originaltarget.clonenode(true",{"_index":658,"title":{},"body":{"classes/ColumnDndListener.html":{}}}],["this.originaltarget.closest(\".hci",{"_index":648,"title":{},"body":{"classes/ColumnDndListener.html":{}}}],["this.originaltarget.closest(\".header",{"_index":654,"title":{},"body":{"classes/ColumnDndListener.html":{}}}],["this.originaltarget.id",{"_index":650,"title":{},"body":{"classes/ColumnDndListener.html":{}}}],["this.originaltarget.id.startswith(\"header",{"_index":645,"title":{},"body":{"classes/ColumnDndListener.html":{}}}],["this.paging",{"_index":1834,"title":{},"body":{"classes/RowGroup.html":{}}}],["this.parse(value",{"_index":953,"title":{},"body":{"components/CompareFilterRenderer.html":{}}}],["this.popup",{"_index":801,"title":{},"body":{"components/ColumnHeaderComponent.html":{}}}],["this.renderer",{"_index":266,"title":{},"body":{"classes/CellEditRenderer.html":{},"classes/CellPopupRenderer.html":{},"classes/ColumnDndListener.html":{}}}],["this.renderer.addclass(this.clone",{"_index":660,"title":{},"body":{"classes/ColumnDndListener.html":{}}}],["this.renderer.addclass(this.elementref.nativeelement",{"_index":446,"title":{},"body":{"classes/CellPopupRenderer.html":{}}}],["this.renderer.addclass(this.popup",{"_index":803,"title":{},"body":{"components/ColumnHeaderComponent.html":{}}}],["this.renderer.appendchild(document.body",{"_index":812,"title":{},"body":{"components/ColumnHeaderComponent.html":{}}}],["this.renderer.appendchild(this.popup",{"_index":810,"title":{},"body":{"components/ColumnHeaderComponent.html":{}}}],["this.renderer.createelement(\"div",{"_index":802,"title":{},"body":{"components/ColumnHeaderComponent.html":{}}}],["this.renderer.createtext(this.column.name",{"_index":811,"title":{},"body":{"components/ColumnHeaderComponent.html":{}}}],["this.renderer.removechild(document.body",{"_index":669,"title":{},"body":{"classes/ColumnDndListener.html":{},"components/ColumnHeaderComponent.html":{}}}],["this.renderer.setstyle(this.clone",{"_index":665,"title":{},"body":{"classes/ColumnDndListener.html":{}}}],["this.renderer.setstyle(this.elementref.nativeelement",{"_index":273,"title":{},"body":{"classes/CellEditRenderer.html":{},"classes/CellPopupRenderer.html":{}}}],["this.renderer.setstyle(this.filtercomponent.elementref.nativeelement",{"_index":763,"title":{},"body":{"components/ColumnHeaderComponent.html":{}}}],["this.renderer.setstyle(this.popup",{"_index":807,"title":{},"body":{"components/ColumnHeaderComponent.html":{}}}],["this.reset",{"_index":936,"title":{},"body":{"components/CompareFilterRenderer.html":{},"classes/FilterRenderer.html":{},"components/TextFilterRenderer.html":{}}}],["this.resolver.resolvecomponentfactory(this.column.filterrenderer",{"_index":758,"title":{},"body":{"components/ColumnHeaderComponent.html":{}}}],["this.selectedcolumn",{"_index":1048,"title":{},"body":{"components/ConfigMenuComponent.html":{}}}],["this.selectedlocation",{"_index":1358,"title":{},"body":{"injectables/GridEventService.html":{}}}],["this.selectedlocation.i",{"_index":1385,"title":{},"body":{"injectables/GridEventService.html":{}}}],["this.selectedlocation.isnegative",{"_index":1381,"title":{},"body":{"injectables/GridEventService.html":{}}}],["this.selectedlocation.isnegative(true",{"_index":1382,"title":{},"body":{"injectables/GridEventService.html":{}}}],["this.selectedlocation.j",{"_index":1388,"title":{},"body":{"injectables/GridEventService.html":{}}}],["this.selectedlocationsubject",{"_index":1391,"title":{},"body":{"injectables/GridEventService.html":{}}}],["this.selectedlocationsubject.next(this.selectedlocation",{"_index":1362,"title":{},"body":{"injectables/GridEventService.html":{}}}],["this.selectedrange",{"_index":1392,"title":{},"body":{"injectables/GridEventService.html":{}}}],["this.selectedrange.next(this.currentrange",{"_index":1364,"title":{},"body":{"injectables/GridEventService.html":{}}}],["this.setconfig",{"_index":948,"title":{},"body":{"components/CompareFilterRenderer.html":{},"components/TextFilterRenderer.html":{}}}],["this.setconfig(column.editconfig",{"_index":270,"title":{},"body":{"classes/CellEditRenderer.html":{}}}],["this.setcurrentlocation(location",{"_index":1369,"title":{},"body":{"injectables/GridEventService.html":{}}}],["this.setselectedlocation(new",{"_index":1363,"title":{},"body":{"injectables/GridEventService.html":{}}}],["this.shared",{"_index":933,"title":{},"body":{"components/CompareFilterRenderer.html":{},"classes/FilterRenderer.html":{},"components/SelectFilterRenderer.html":{},"components/TextFilterRenderer.html":{}}}],["this.showicon",{"_index":389,"title":{},"body":{"classes/CellNumberRangeView.html":{}}}],["this.showpopup",{"_index":800,"title":{},"body":{"components/ColumnHeaderComponent.html":{}}}],["this.sort",{"_index":1103,"title":{},"body":{"components/ConfigMultiChoiceComponent.html":{}}}],["this.sortmodel",{"_index":1098,"title":{},"body":{"components/ConfigMultiChoiceComponent.html":{}}}],["this.state",{"_index":1047,"title":{},"body":{"components/ConfigMenuComponent.html":{}}}],["this.stopevent",{"_index":1190,"title":{},"body":{"classes/EventListener.html":{}}}],["this.style",{"_index":577,"title":{},"body":{"classes/ClickView.html":{}}}],["this.style.split",{"_index":578,"title":{},"body":{"classes/ClickView.html":{}}}],["this.tempid",{"_index":1434,"title":{},"body":{"injectables/GridGlobalService.html":{}}}],["this.themechoices",{"_index":1039,"title":{},"body":{"components/ConfigMenuComponent.html":{},"injectables/GridGlobalService.html":{}}}],["this.uncheckedicon",{"_index":513,"title":{},"body":{"classes/CheckRowSelectView.html":{}}}],["this.uncheckedicon.split",{"_index":533,"title":{},"body":{"classes/CheckRowSelectView.html":{}}}],["this.unselectsubject",{"_index":1390,"title":{},"body":{"injectables/GridEventService.html":{}}}],["this.updatelocation",{"_index":272,"title":{},"body":{"classes/CellEditRenderer.html":{},"classes/CellPopupRenderer.html":{}}}],["this.value",{"_index":288,"title":{},"body":{"classes/CellEditRenderer.html":{},"components/ConfigMultiChoiceComponent.html":{},"components/TextFilterRenderer.html":{}}}],["those",{"_index":1720,"title":{},"body":{"classes/RangeSelectListener.html":{},"index.html":{}}}],["through",{"_index":2063,"title":{},"body":{"index.html":{}}}],["throw",{"_index":1139,"title":{},"body":{"classes/DateIso8601Formatter.html":{},"classes/DateMsFormatter.html":{}}}],["time",{"_index":2269,"title":{},"body":{"index.html":{}}}],["times",{"_index":506,"title":{},"body":{"classes/CheckRowSelectView.html":{}}}],["timezone",{"_index":884,"title":{},"body":{"components/CompareFilterRenderer.html":{}}}],["title",{"_index":690,"title":{},"body":{"components/ColumnHeaderComponent.html":{},"components/ConfigMenuComponent.html":{},"index.html":{}}}],["to.configurable",{"_index":2122,"title":{},"body":{"index.html":{}}}],["toast",{"_index":2210,"title":{},"body":{"index.html":{}}}],["todo",{"_index":224,"title":{},"body":{"classes/CellEditRenderer.html":{},"components/CompareFilterRenderer.html":{}}}],["todos",{"_index":2265,"title":{},"body":{"index.html":{}}}],["together",{"_index":1397,"title":{},"body":{"injectables/GridGlobalService.html":{},"index.html":{}}}],["toggle::after",{"_index":697,"title":{},"body":{"components/ColumnHeaderComponent.html":{}}}],["toggleshared",{"_index":868,"title":{},"body":{"components/CompareFilterRenderer.html":{},"classes/FilterRenderer.html":{},"components/SelectFilterRenderer.html":{},"components/TextFilterRenderer.html":{}}}],["tooltip",{"_index":806,"title":{},"body":{"components/ColumnHeaderComponent.html":{}}}],["top",{"_index":169,"title":{},"body":{"classes/CellEditRenderer.html":{},"classes/CellPopupRenderer.html":{},"classes/CellTextView.html":{},"classes/CheckRowSelectView.html":{},"classes/ClickView.html":{},"classes/ColumnDndListener.html":{},"components/ColumnHeaderComponent.html":{},"components/ConfigMenuComponent.html":{},"components/SelectFilterRenderer.html":{}}}],["tort",{"_index":2336,"title":{},"body":{"license.html":{}}}],["tostring",{"_index":1201,"title":{},"body":{"classes/EventMeta.html":{},"classes/Point.html":{},"classes/Range.html":{}}}],["transform",{"_index":1582,"title":{},"body":{"pipes/IsFixedPipe.html":{},"pipes/IsGroupPipe.html":{},"pipes/IsRowVisiblePipe.html":{},"pipes/IsVisiblePipe.html":{}}}],["transform(list",{"_index":1583,"title":{},"body":{"pipes/IsFixedPipe.html":{},"pipes/IsGroupPipe.html":{},"pipes/IsRowVisiblePipe.html":{},"pipes/IsVisiblePipe.html":{}}}],["transpiled",{"_index":2279,"title":{},"body":{"index.html":{}}}],["tree",{"_index":7,"title":{},"body":{"components/BigTextPopup.html":{},"components/ColumnHeaderComponent.html":{},"components/CompareFilterRenderer.html":{},"components/ConfigMenuComponent.html":{},"components/ConfigMultiChoiceComponent.html":{},"components/SelectFilterRenderer.html":{},"components/TextFilterRenderer.html":{}}}],["true",{"_index":208,"title":{},"body":{"classes/CellEditRenderer.html":{},"classes/CellHoverPopupListener.html":{},"classes/ClickCellEditListener.html":{},"classes/ClickRowSelectListener.html":{},"classes/ClickView.html":{},"classes/ClickViewListener.html":{},"classes/ColumnDndListener.html":{},"components/ColumnHeaderComponent.html":{},"components/CompareFilterRenderer.html":{},"classes/EventListener.html":{},"modules/GridModule.html":{},"classes/GroupKeyListener.html":{},"classes/RangeSelectListener.html":{},"classes/Row.html":{},"classes/RowDblClickListener.html":{},"components/SelectFilterRenderer.html":{},"components/TextFilterRenderer.html":{},"index.html":{}}}],["try",{"_index":303,"title":{},"body":{"classes/CellEditRenderer.html":{},"classes/CellNumberRangeView.html":{},"components/CompareFilterRenderer.html":{},"classes/Point.html":{}}}],["two",{"_index":424,"title":{},"body":{"classes/CellPopupRenderer.html":{},"index.html":{}}}],["type",{"_index":65,"title":{},"body":{"components/BigTextPopup.html":{},"classes/Cell.html":{},"classes/CellEditRenderer.html":{},"classes/CellHoverPopupListener.html":{},"classes/CellNumberRangeView.html":{},"classes/CellPopupRenderer.html":{},"classes/CellTextView.html":{},"interfaces/CellViewRenderer.html":{},"classes/CheckRowSelectView.html":{},"classes/ClickCellEditListener.html":{},"interfaces/ClickListener.html":{},"classes/ClickRowSelectListener.html":{},"classes/ClickView.html":{},"classes/ClickViewListener.html":{},"classes/ColumnDndListener.html":{},"components/ColumnHeaderComponent.html":{},"components/CompareFilterRenderer.html":{},"components/ConfigMenuComponent.html":{},"components/ConfigMultiChoiceComponent.html":{},"classes/DateIso8601Formatter.html":{},"classes/DateMsFormatter.html":{},"interfaces/DblClickListener.html":{},"interfaces/Dictionary.html":{},"classes/EmptyFactory.html":{},"classes/EventListener.html":{},"interfaces/EventListenerArg.html":{},"classes/EventMeta.html":{},"classes/FilterRenderer.html":{},"classes/FormatterParser.html":{},"injectables/GridEventService.html":{},"injectables/GridGlobalService.html":{},"injectables/GridMessageService.html":{},"modules/GridModule.html":{},"classes/GroupKeyListener.html":{},"classes/HtmlUtil.html":{},"interfaces/InjectableConstructor.html":{},"classes/InjectableFactory.html":{},"pipes/IsFixedPipe.html":{},"interfaces/MouseDownListener.html":{},"interfaces/MouseDragListener.html":{},"interfaces/MouseOutListener.html":{},"interfaces/MouseOverListener.html":{},"interfaces/MouseUpListener.html":{},"classes/NumberFormatter.html":{},"classes/Point.html":{},"classes/Range.html":{},"classes/RangeSelectListener.html":{},"classes/Row.html":{},"classes/RowChange.html":{},"classes/RowDblClickListener.html":{},"classes/RowGroup.html":{},"classes/RowGroupView.html":{},"components/SelectFilterRenderer.html":{},"components/TextFilterRenderer.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["types",{"_index":822,"title":{},"body":{"components/CompareFilterRenderer.html":{},"components/SelectFilterRenderer.html":{}}}],["uncheckedicon",{"_index":502,"title":{},"body":{"classes/CheckRowSelectView.html":{}}}],["undefined",{"_index":196,"title":{},"body":{"classes/CellEditRenderer.html":{},"classes/CellNumberRangeView.html":{},"classes/CellTextView.html":{},"classes/ClickRowSelectListener.html":{},"classes/ClickView.html":{},"components/CompareFilterRenderer.html":{},"classes/DateIso8601Formatter.html":{},"classes/DateMsFormatter.html":{},"classes/EventListener.html":{},"injectables/GridEventService.html":{},"classes/GroupKeyListener.html":{},"pipes/IsFixedPipe.html":{},"pipes/IsGroupPipe.html":{},"pipes/IsRowVisiblePipe.html":{},"pipes/IsVisiblePipe.html":{},"classes/NumberFormatter.html":{},"classes/Point.html":{},"classes/Row.html":{},"components/SelectFilterRenderer.html":{},"components/TextFilterRenderer.html":{},"changelog.html":{},"index.html":{}}}],["university",{"_index":1501,"title":{},"body":{"modules/GridModule.html":{},"license.html":{}}}],["unselected",{"_index":529,"title":{},"body":{"classes/CheckRowSelectView.html":{}}}],["unselectedspan",{"_index":527,"title":{},"body":{"classes/CheckRowSelectView.html":{}}}],["unselectedsvg",{"_index":530,"title":{},"body":{"classes/CheckRowSelectView.html":{}}}],["unselectsubject",{"_index":1271,"title":{},"body":{"injectables/GridEventService.html":{}}}],["until",{"_index":1309,"title":{},"body":{"injectables/GridEventService.html":{}}}],["up",{"_index":418,"title":{},"body":{"classes/CellNumberRangeView.html":{},"classes/RangeSelectListener.html":{},"classes/RowGroupView.html":{},"index.html":{}}}],["up.interface",{"_index":641,"title":{},"body":{"classes/ColumnDndListener.html":{},"classes/RangeSelectListener.html":{}}}],["up.interface.ts",{"_index":1610,"title":{},"body":{"interfaces/MouseUpListener.html":{},"coverage.html":{}}}],["up.interface.ts:3",{"_index":1611,"title":{},"body":{"interfaces/MouseUpListener.html":{}}}],["update",{"_index":222,"title":{},"body":{"classes/CellEditRenderer.html":{},"interfaces/CellViewRenderer.html":{},"components/ConfigMenuComponent.html":{},"injectables/GridEventService.html":{},"classes/Range.html":{}}}],["update(key",{"_index":1022,"title":{},"body":{"components/ConfigMenuComponent.html":{}}}],["update(point",{"_index":1690,"title":{},"body":{"classes/Range.html":{}}}],["updatearray",{"_index":1006,"title":{},"body":{"components/ConfigMenuComponent.html":{}}}],["updatearray(key",{"_index":1024,"title":{},"body":{"components/ConfigMenuComponent.html":{}}}],["updatecolumn",{"_index":373,"title":{},"body":{"classes/CellNumberRangeView.html":{},"classes/CellTextView.html":{},"interfaces/CellViewRenderer.html":{},"classes/CheckRowSelectView.html":{},"classes/ClickView.html":{},"components/ConfigMenuComponent.html":{},"classes/RowGroupView.html":{}}}],["updatecolumn(column",{"_index":384,"title":{},"body":{"classes/CellNumberRangeView.html":{},"classes/CellTextView.html":{},"interfaces/CellViewRenderer.html":{},"classes/CheckRowSelectView.html":{},"classes/ClickView.html":{},"classes/RowGroupView.html":{}}}],["updatecolumn(key",{"_index":1026,"title":{},"body":{"components/ConfigMenuComponent.html":{}}}],["updatelocation",{"_index":52,"title":{},"body":{"components/BigTextPopup.html":{},"classes/CellEditRenderer.html":{},"classes/CellPopupRenderer.html":{}}}],["updates",{"_index":1719,"title":{},"body":{"classes/RangeSelectListener.html":{}}}],["updatesortorder",{"_index":1007,"title":{},"body":{"components/ConfigMenuComponent.html":{}}}],["updatesortorder(field",{"_index":1028,"title":{},"body":{"components/ConfigMenuComponent.html":{}}}],["upon",{"_index":1717,"title":{},"body":{"classes/RangeSelectListener.html":{},"index.html":{}}}],["usage",{"_index":1912,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["use",{"_index":2081,"title":{},"body":{"index.html":{},"license.html":{}}}],["used",{"_index":489,"title":{},"body":{"interfaces/CellViewRenderer.html":{},"index.html":{}}}],["user",{"_index":1979,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["usevalue",{"_index":1531,"title":{},"body":{"modules/GridModule.html":{}}}],["using",{"_index":2105,"title":{},"body":{"index.html":{}}}],["usual",{"_index":2085,"title":{},"body":{"index.html":{}}}],["utah",{"_index":1502,"title":{},"body":{"modules/GridModule.html":{},"license.html":{}}}],["util",{"_index":342,"title":{},"body":{"classes/CellHoverPopupListener.html":{},"classes/ClickCellEditListener.html":{},"classes/ClickRowSelectListener.html":{},"classes/ClickViewListener.html":{},"classes/ColumnDndListener.html":{},"classes/GroupKeyListener.html":{},"classes/RangeSelectListener.html":{},"classes/RowDblClickListener.html":{}}}],["util.ts",{"_index":1548,"title":{},"body":{"classes/HtmlUtil.html":{},"coverage.html":{}}}],["util.ts:23",{"_index":1558,"title":{},"body":{"classes/HtmlUtil.html":{}}}],["util.ts:38",{"_index":1560,"title":{},"body":{"classes/HtmlUtil.html":{}}}],["util.ts:8",{"_index":1556,"title":{},"body":{"classes/HtmlUtil.html":{}}}],["utils/event",{"_index":1349,"title":{},"body":{"injectables/GridEventService.html":{}}}],["utils/html",{"_index":341,"title":{},"body":{"classes/CellHoverPopupListener.html":{},"classes/ClickCellEditListener.html":{},"classes/ClickRowSelectListener.html":{},"classes/ClickViewListener.html":{},"classes/ColumnDndListener.html":{},"classes/GroupKeyListener.html":{},"classes/RangeSelectListener.html":{},"classes/RowDblClickListener.html":{}}}],["utils/is",{"_index":1514,"title":{},"body":{"modules/GridModule.html":{}}}],["utils/point",{"_index":345,"title":{},"body":{"classes/CellHoverPopupListener.html":{},"classes/CellPopupRenderer.html":{},"classes/ClickCellEditListener.html":{},"classes/ClickRowSelectListener.html":{},"classes/ClickViewListener.html":{},"injectables/GridEventService.html":{}}}],["utils/range",{"_index":597,"title":{},"body":{"classes/ClickViewListener.html":{},"injectables/GridEventService.html":{}}}],["utils/row",{"_index":1352,"title":{},"body":{"injectables/GridEventService.html":{}}}],["v",{"_index":410,"title":{},"body":{"classes/CellNumberRangeView.html":{},"classes/ClickView.html":{},"classes/Row.html":{}}}],["v.length",{"_index":585,"title":{},"body":{"classes/ClickView.html":{}}}],["v.trim",{"_index":587,"title":{},"body":{"classes/ClickView.html":{}}}],["valid",{"_index":856,"title":{},"body":{"components/CompareFilterRenderer.html":{}}}],["validation",{"_index":226,"title":{},"body":{"classes/CellEditRenderer.html":{},"changelog.html":{}}}],["value",{"_index":146,"title":{},"body":{"classes/Cell.html":{},"classes/CellEditRenderer.html":{},"classes/CellHoverPopupListener.html":{},"classes/CellNumberRangeView.html":{},"classes/CellPopupRenderer.html":{},"classes/CellTextView.html":{},"interfaces/CellViewRenderer.html":{},"classes/CheckRowSelectView.html":{},"classes/ClickCellEditListener.html":{},"classes/ClickRowSelectListener.html":{},"classes/ClickView.html":{},"classes/ClickViewListener.html":{},"classes/ColumnDndListener.html":{},"components/ColumnHeaderComponent.html":{},"components/CompareFilterRenderer.html":{},"components/ConfigMenuComponent.html":{},"components/ConfigMultiChoiceComponent.html":{},"classes/DateIso8601Formatter.html":{},"classes/DateMsFormatter.html":{},"interfaces/Dictionary.html":{},"classes/EventListener.html":{},"classes/EventMeta.html":{},"classes/FilterRenderer.html":{},"classes/FormatterParser.html":{},"injectables/GridEventService.html":{},"injectables/GridGlobalService.html":{},"injectables/GridMessageService.html":{},"classes/GroupKeyListener.html":{},"classes/NumberFormatter.html":{},"classes/RangeSelectListener.html":{},"classes/Row.html":{},"classes/RowDblClickListener.html":{},"classes/RowGroup.html":{},"classes/RowGroupView.html":{},"components/SelectFilterRenderer.html":{},"components/TextFilterRenderer.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["value.length",{"_index":949,"title":{},"body":{"components/CompareFilterRenderer.html":{}}}],["valuechange",{"_index":863,"title":{},"body":{"components/CompareFilterRenderer.html":{},"components/SelectFilterRenderer.html":{},"components/TextFilterRenderer.html":{}}}],["valuechange(id",{"_index":1869,"title":{},"body":{"components/SelectFilterRenderer.html":{}}}],["valuechange(value",{"_index":887,"title":{},"body":{"components/CompareFilterRenderer.html":{},"components/TextFilterRenderer.html":{}}}],["valueclear",{"_index":864,"title":{},"body":{"components/CompareFilterRenderer.html":{},"classes/FilterRenderer.html":{},"components/SelectFilterRenderer.html":{},"components/TextFilterRenderer.html":{}}}],["values.busytemplate",{"_index":2158,"title":{},"body":{"index.html":{}}}],["valuevalid",{"_index":177,"title":{},"body":{"classes/CellEditRenderer.html":{}}}],["var",{"_index":104,"title":{},"body":{"components/BigTextPopup.html":{},"components/ColumnHeaderComponent.html":{},"components/CompareFilterRenderer.html":{},"components/ConfigMenuComponent.html":{},"components/ConfigMultiChoiceComponent.html":{},"classes/Row.html":{},"components/SelectFilterRenderer.html":{},"components/TextFilterRenderer.html":{}}}],["variable",{"_index":2031,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":2347,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["various",{"_index":2090,"title":{},"body":{"index.html":{}}}],["vertical",{"_index":2242,"title":{},"body":{"index.html":{}}}],["view",{"_index":163,"title":{},"body":{"classes/CellEditRenderer.html":{},"classes/CellNumberRangeView.html":{},"classes/CellTextView.html":{},"interfaces/CellViewRenderer.html":{},"classes/CheckRowSelectView.html":{},"classes/ClickView.html":{},"classes/ColumnDndListener.html":{},"classes/RowGroupView.html":{},"changelog.html":{},"coverage.html":{},"index.html":{}}}],["view\")).offsetleft",{"_index":788,"title":{},"body":{"components/ColumnHeaderComponent.html":{}}}],["view.id.startswith(\"right",{"_index":656,"title":{},"body":{"classes/ColumnDndListener.html":{}}}],["view.listener.ts",{"_index":595,"title":{},"body":{"classes/ClickViewListener.html":{},"coverage.html":{}}}],["view.listener.ts:11",{"_index":596,"title":{},"body":{"classes/ClickViewListener.html":{}}}],["view.ts",{"_index":365,"title":{},"body":{"classes/CellNumberRangeView.html":{},"classes/CellTextView.html":{},"classes/CheckRowSelectView.html":{},"classes/ClickView.html":{},"classes/RowGroupView.html":{},"coverage.html":{}}}],["view.ts:10",{"_index":460,"title":{},"body":{"classes/CellTextView.html":{},"classes/ClickView.html":{}}}],["view.ts:11",{"_index":379,"title":{},"body":{"classes/CellNumberRangeView.html":{},"classes/CheckRowSelectView.html":{},"classes/ClickView.html":{},"classes/RowGroupView.html":{}}}],["view.ts:12",{"_index":376,"title":{},"body":{"classes/CellNumberRangeView.html":{}}}],["view.ts:13",{"_index":568,"title":{},"body":{"classes/ClickView.html":{}}}],["view.ts:14",{"_index":380,"title":{},"body":{"classes/CellNumberRangeView.html":{},"classes/CellTextView.html":{}}}],["view.ts:15",{"_index":508,"title":{},"body":{"classes/CheckRowSelectView.html":{},"classes/ClickView.html":{},"classes/RowGroupView.html":{}}}],["view.ts:16",{"_index":385,"title":{},"body":{"classes/CellNumberRangeView.html":{},"classes/CellTextView.html":{}}}],["view.ts:17",{"_index":1837,"title":{},"body":{"classes/RowGroupView.html":{}}}],["view.ts:18",{"_index":383,"title":{},"body":{"classes/CellNumberRangeView.html":{}}}],["view.ts:24",{"_index":507,"title":{},"body":{"classes/CheckRowSelectView.html":{}}}],["view.ts:36",{"_index":459,"title":{},"body":{"classes/CellTextView.html":{}}}],["view.ts:40",{"_index":382,"title":{},"body":{"classes/CellNumberRangeView.html":{}}}],["view.ts:45",{"_index":567,"title":{},"body":{"classes/ClickView.html":{}}}],["view.ts:59",{"_index":1838,"title":{},"body":{"classes/RowGroupView.html":{}}}],["view.ts:8",{"_index":377,"title":{},"body":{"classes/CellNumberRangeView.html":{},"classes/CellTextView.html":{},"classes/CheckRowSelectView.html":{},"classes/ClickView.html":{}}}],["view.ts:9",{"_index":374,"title":{},"body":{"classes/CellNumberRangeView.html":{},"classes/CheckRowSelectView.html":{},"classes/ClickView.html":{},"classes/RowGroupView.html":{}}}],["viewchild",{"_index":1898,"title":{},"body":{"components/TextFilterRenderer.html":{}}}],["viewchild(\"input",{"_index":1899,"title":{},"body":{"components/TextFilterRenderer.html":{}}}],["viewchild('input",{"_index":1893,"title":{},"body":{"components/TextFilterRenderer.html":{}}}],["viewconfig",{"_index":482,"title":{},"body":{"interfaces/CellViewRenderer.html":{},"index.html":{}}}],["viewcontainerref",{"_index":723,"title":{},"body":{"components/ColumnHeaderComponent.html":{}}}],["viewrenderer",{"_index":2252,"title":{},"body":{"index.html":{}}}],["visible",{"_index":996,"title":{},"body":{"components/ConfigMenuComponent.html":{},"injectables/GridEventService.html":{},"classes/Row.html":{},"index.html":{}}}],["visible.pipe",{"_index":1515,"title":{},"body":{"modules/GridModule.html":{}}}],["visible.pipe.ts",{"_index":1596,"title":{},"body":{"pipes/IsRowVisiblePipe.html":{},"pipes/IsVisiblePipe.html":{},"coverage.html":{}}}],["visible.pipe.ts:9",{"_index":1598,"title":{},"body":{"pipes/IsRowVisiblePipe.html":{},"pipes/IsVisiblePipe.html":{}}}],["visualize",{"_index":1917,"title":{},"body":{"changelog.html":{}}}],["void",{"_index":59,"title":{},"body":{"components/BigTextPopup.html":{},"classes/CellEditRenderer.html":{},"classes/CellHoverPopupListener.html":{},"classes/CellNumberRangeView.html":{},"classes/CellPopupRenderer.html":{},"classes/CellTextView.html":{},"classes/CheckRowSelectView.html":{},"classes/ClickCellEditListener.html":{},"classes/ClickRowSelectListener.html":{},"classes/ClickView.html":{},"classes/ClickViewListener.html":{},"classes/ColumnDndListener.html":{},"components/ColumnHeaderComponent.html":{},"components/CompareFilterRenderer.html":{},"components/ConfigMenuComponent.html":{},"components/ConfigMultiChoiceComponent.html":{},"classes/DateIso8601Formatter.html":{},"classes/DateMsFormatter.html":{},"classes/EventListener.html":{},"classes/EventMeta.html":{},"classes/FilterRenderer.html":{},"classes/FormatterParser.html":{},"injectables/GridEventService.html":{},"injectables/GridGlobalService.html":{},"injectables/GridMessageService.html":{},"classes/GroupKeyListener.html":{},"classes/NumberFormatter.html":{},"classes/Point.html":{},"classes/Range.html":{},"classes/RangeSelectListener.html":{},"classes/Row.html":{},"classes/RowDblClickListener.html":{},"classes/RowGroup.html":{},"classes/RowGroupView.html":{},"components/SelectFilterRenderer.html":{},"components/TextFilterRenderer.html":{},"index.html":{}}}],["wait",{"_index":1940,"title":{},"body":{"changelog.html":{}}}],["waiting",{"_index":1957,"title":{},"body":{"changelog.html":{}}}],["want",{"_index":2170,"title":{},"body":{"index.html":{}}}],["warn",{"_index":1452,"title":{},"body":{"injectables/GridMessageService.html":{}}}],["warn(message",{"_index":1457,"title":{},"body":{"injectables/GridMessageService.html":{}}}],["warning",{"_index":2207,"title":{},"body":{"index.html":{}}}],["warnings",{"_index":2171,"title":{},"body":{"index.html":{}}}],["warranties",{"_index":2322,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":2318,"title":{},"body":{"license.html":{}}}],["way",{"_index":2114,"title":{},"body":{"index.html":{}}}],["weight",{"_index":840,"title":{},"body":{"components/CompareFilterRenderer.html":{}}}],["whether",{"_index":2333,"title":{},"body":{"license.html":{}}}],["white",{"_index":21,"title":{},"body":{"components/BigTextPopup.html":{},"components/CompareFilterRenderer.html":{},"components/ConfigMenuComponent.html":{}}}],["whost",{"_index":792,"title":{},"body":{"components/ColumnHeaderComponent.html":{}}}],["width",{"_index":22,"title":{},"body":{"components/BigTextPopup.html":{},"classes/CellEditRenderer.html":{},"classes/CellNumberRangeView.html":{},"components/CompareFilterRenderer.html":{},"components/ConfigMenuComponent.html":{},"classes/FilterRenderer.html":{},"classes/RowGroupView.html":{},"components/SelectFilterRenderer.html":{},"components/TextFilterRenderer.html":{},"changelog.html":{}}}],["window",{"_index":964,"title":{},"body":{"components/ConfigMenuComponent.html":{}}}],["window:resize",{"_index":187,"title":{},"body":{"classes/CellEditRenderer.html":{}}}],["window:resize(event",{"_index":253,"title":{},"body":{"classes/CellEditRenderer.html":{}}}],["wish",{"_index":2209,"title":{},"body":{"index.html":{}}}],["withcomponents",{"_index":1492,"title":{},"body":{"modules/GridModule.html":{}}}],["withcomponents(components",{"_index":1493,"title":{},"body":{"modules/GridModule.html":{}}}],["without",{"_index":1246,"title":{},"body":{"classes/FormatterParser.html":{},"classes/NumberFormatter.html":{},"license.html":{}}}],["work",{"_index":1110,"title":{},"body":{"classes/DateIso8601Formatter.html":{},"index.html":{}}}],["wrap",{"_index":834,"title":{},"body":{"components/CompareFilterRenderer.html":{},"components/SelectFilterRenderer.html":{}}}],["x",{"_index":466,"title":{},"body":{"classes/CellTextView.html":{},"classes/ClickView.html":{},"components/ColumnHeaderComponent.html":{},"components/ConfigMenuComponent.html":{},"classes/RowGroupView.html":{}}}],["xview",{"_index":786,"title":{},"body":{"components/ColumnHeaderComponent.html":{}}}],["y",{"_index":1856,"title":{},"body":{"components/SelectFilterRenderer.html":{}}}],["yes",{"_index":235,"title":{},"body":{"classes/CellEditRenderer.html":{},"interfaces/CellViewRenderer.html":{},"modules/GridModule.html":{},"classes/HtmlUtil.html":{},"classes/Point.html":{},"classes/RowGroupView.html":{}}}],["you.logwarnings",{"_index":2169,"title":{},"body":{"index.html":{}}}],["yyyy",{"_index":1116,"title":{},"body":{"classes/DateIso8601Formatter.html":{}}}],["z",{"_index":283,"title":{},"body":{"classes/CellEditRenderer.html":{},"classes/CellPopupRenderer.html":{},"classes/ColumnDndListener.html":{},"components/ColumnHeaderComponent.html":{},"classes/Point.html":{}}}],["zoom",{"_index":1484,"title":{},"body":{"modules/GridModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/BigTextPopup.html":{"url":"components/BigTextPopup.html","title":"component - BigTextPopup","body":"\n                   \n\n\n\n\n\n  Components\n  BigTextPopup\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/grid/cell/viewPopupRenderer/bigtext-popup.component.ts\n\n\n\n    \n        Extends\n    \n    \n                CellPopupRenderer\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                hci-bigtext-popup\n            \n\n\n            \n                styles\n                \n  \n    .hci-bigtext-popup {\n      background-color: white;\n      width: 250px;\n      border: black 1px solid;\n      border-radius: 8px;\n      white-space: normal;\n      padding: 5px;\n      box-shadow: 2px 2px rgba(0, 0, 0, 0.25);\n    }\n    \n  \n            \n\n            \n                template\n                \n  {{formattedValue}}\n\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                formattedValue\n                            \n                            \n                                changeDetectorRef\n                            \n                            \n                                elementRef\n                            \n                            \n                                gridService\n                            \n                            \n                                    Private\n                                hostElement\n                            \n                            \n                                i\n                            \n                            \n                                j\n                            \n                            \n                                renderer\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                updateLocation\n                            \n                            \n                                setConfig\n                            \n                            \n                                setLocation\n                            \n                            \n                                setPosition\n                            \n                            \n                                updateLocation\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateLocation\n                        \n                        \n                    \n                \n            \n            \n                \nupdateLocation()\n                \n            \n\n\n            \n                \n                    Defined in src/grid/cell/viewPopupRenderer/bigtext-popup.component.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setConfig\n                        \n                        \n                    \n                \n            \n            \n                \nsetConfig(config: any)\n                \n            \n\n\n            \n                \n                    Inherited from         CellPopupRenderer\n\n                \n            \n            \n                \n                        Defined in         CellPopupRenderer:31\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setLocation\n                        \n                        \n                    \n                \n            \n            \n                \nsetLocation(hostElement: HTMLElement)\n                \n            \n\n\n            \n                \n                    Inherited from         CellPopupRenderer\n\n                \n            \n            \n                \n                        Defined in         CellPopupRenderer:38\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    hostElement\n                                    \n                                            HTMLElement\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setPosition\n                        \n                        \n                    \n                \n            \n            \n                \nsetPosition(location: Point)\n                \n            \n\n\n            \n                \n                    Inherited from         CellPopupRenderer\n\n                \n            \n            \n                \n                        Defined in         CellPopupRenderer:33\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    location\n                                    \n                                                Point\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateLocation\n                        \n                        \n                    \n                \n            \n            \n                \nupdateLocation()\n                \n            \n\n\n            \n                \n                    Inherited from         CellPopupRenderer\n\n                \n            \n            \n                \n                        Defined in         CellPopupRenderer:46\n\n                \n            \n\n\n            \n                \n                    Correctly position the editor popup over the selected cell.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            formattedValue\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/grid/cell/viewPopupRenderer/bigtext-popup.component.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            changeDetectorRef\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ChangeDetectorRef\n\n                        \n                    \n                            \n                                \n                                    Inherited from         CellPopupRenderer\n\n                                \n                            \n                        \n                            \n                                    Defined in         CellPopupRenderer:20\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            elementRef\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ElementRef\n\n                        \n                    \n                            \n                                \n                                    Inherited from         CellPopupRenderer\n\n                                \n                            \n                        \n                            \n                                    Defined in         CellPopupRenderer:18\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            gridService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         GridService\n\n                        \n                    \n                            \n                                \n                                    Inherited from         CellPopupRenderer\n\n                                \n                            \n                        \n                            \n                                    Defined in         CellPopupRenderer:17\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            hostElement\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     HTMLElement\n\n                        \n                    \n                            \n                                \n                                    Inherited from         CellPopupRenderer\n\n                                \n                            \n                        \n                            \n                                    Defined in         CellPopupRenderer:22\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            i\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                            \n                                \n                                    Inherited from         CellPopupRenderer\n\n                                \n                            \n                        \n                            \n                                    Defined in         CellPopupRenderer:14\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            j\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                            \n                                \n                                    Inherited from         CellPopupRenderer\n\n                                \n                            \n                        \n                            \n                                    Defined in         CellPopupRenderer:15\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            renderer\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Renderer2\n\n                        \n                    \n                            \n                                \n                                    Inherited from         CellPopupRenderer\n\n                                \n                            \n                        \n                            \n                                    Defined in         CellPopupRenderer:19\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {Component} from \"@angular/core\";\n\nimport {CellPopupRenderer} from \"./cell-popup-renderer\";\n\n@Component({\n  selector: \"hci-bigtext-popup\",\n  template: `\n    \n      {{formattedValue}}\n    \n  `,\n  styles: [ `\n  \n    .hci-bigtext-popup {\n      background-color: white;\n      width: 250px;\n      border: black 1px solid;\n      border-radius: 8px;\n      white-space: normal;\n      padding: 5px;\n      box-shadow: 2px 2px rgba(0, 0, 0, 0.25);\n    }\n    \n  `]\n})\nexport class BigTextPopup extends CellPopupRenderer {\n\n  formattedValue: string;\n\n  updateLocation() {\n    this.formattedValue = this.gridService.getColumn(this.j).formatValue(this.gridService.getRow(this.i).get(this.j).value);\n\n    super.updateLocation();\n  }\n}\n\n    \n\n\n    \n            \n  \n    .hci-bigtext-popup {\n      background-color: white;\n      width: 250px;\n      border: black 1px solid;\n      border-radius: 8px;\n      white-space: normal;\n      padding: 5px;\n      box-shadow: 2px 2px rgba(0, 0, 0, 0.25);\n    }\n    \n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{formattedValue}}'\n    var COMPONENTS = [{'name': 'BigTextPopup', 'selector': 'hci-bigtext-popup'},{'name': 'ChoiceEditRenderer', 'selector': 'hci-grid-choice-edit'},{'name': 'ColumnHeaderComponent', 'selector': 'hci-column-header'},{'name': 'CompareFilterRenderer', 'selector': 'hci-grid-compare-filter'},{'name': 'ConfigMenuComponent', 'selector': 'hci-grid-config-menu'},{'name': 'ConfigMultiChoiceComponent', 'selector': 'hci-grid-multi-choice'},{'name': 'GridComponent', 'selector': 'hci-grid'},{'name': 'SelectFilterRenderer', 'selector': 'hci-grid-select-filter'},{'name': 'TextEditRenderer', 'selector': 'hci-grid-text-edit'},{'name': 'TextFilterRenderer', 'selector': 'hci-grid-text-filter'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'BigTextPopup'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Cell.html":{"url":"classes/Cell.html","title":"class - Cell","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Cell\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/grid/cell/cell.ts\n        \n\n            \n                Description\n            \n            \n                A holder for the cell's data and other metadata needed for rendering or data management.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                dirty\n                            \n                            \n                                key\n                            \n                            \n                                value\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(o: Object)\n                    \n                \n                        \n                            \n                                Defined in src/grid/cell/cell.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        o\n                                                  \n                                                        \n                                                                        Object\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dirty\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/grid/cell/cell.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            key\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/grid/cell/cell.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            value\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/grid/cell/cell.ts:5\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Cell {\n  value: any;\n  key: number;\n  dirty: boolean = false;\n\n  constructor(o: Object) {\n    Object.assign(this, o);\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CellEditRenderer.html":{"url":"classes/CellEditRenderer.html","title":"class - CellEditRenderer","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CellEditRenderer\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/grid/cell/editRenderers/cell-edit-renderer.ts\n        \n\n            \n                Description\n            \n            \n                The base class for cell edit components.  When you view the grid, you see view renderers.  When you select a\ncell to edit, an extension of this class is dynamically created on top of the cell view.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                activeOnRowHeader\n                            \n                            \n                                changeDetectorRef\n                            \n                            \n                                column\n                            \n                            \n                                config\n                            \n                            \n                                data\n                            \n                            \n                                elementRef\n                            \n                            \n                                format\n                            \n                            \n                                formatType\n                            \n                            \n                                gridEventService\n                            \n                            \n                                gridService\n                            \n                            \n                                handleClick\n                            \n                            \n                                    Private\n                                hostElement\n                            \n                            \n                                i\n                            \n                            \n                                j\n                            \n                            \n                                keyEvent\n                            \n                            \n                                render\n                            \n                            \n                                renderer\n                            \n                            \n                                value\n                            \n                            \n                                valueValid\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                init\n                            \n                            \n                                onClick\n                            \n                            \n                                onModelChange\n                            \n                            \n                                saveData\n                            \n                            \n                                setColumn\n                            \n                            \n                                setConfig\n                            \n                            \n                                setData\n                            \n                            \n                                setFormat\n                            \n                            \n                                setLocation\n                            \n                            \n                                setPosition\n                            \n                            \n                                setValues\n                            \n                            \n                                updateLocation\n                            \n                        \n                    \n                \n\n\n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                window:resize\n                            \n                        \n                    \n                \n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(gridService: GridService, gridEventService: GridEventService, elementRef: ElementRef, renderer: Renderer2, changeDetectorRef: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Defined in src/grid/cell/editRenderers/cell-edit-renderer.ts:39\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        gridService\n                                                  \n                                                        \n                                                                        GridService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        gridEventService\n                                                  \n                                                        \n                                                                        GridEventService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        elementRef\n                                                  \n                                                        \n                                                                        ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        renderer\n                                                  \n                                                        \n                                                                        Renderer2\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        changeDetectorRef\n                                                  \n                                                        \n                                                                        ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            activeOnRowHeader\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/grid/cell/editRenderers/cell-edit-renderer.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            changeDetectorRef\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ChangeDetectorRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/grid/cell/editRenderers/cell-edit-renderer.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            column\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Column\n\n                        \n                    \n                        \n                            \n                                    Defined in src/grid/cell/editRenderers/cell-edit-renderer.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            config\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/grid/cell/editRenderers/cell-edit-renderer.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            data\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Cell\n\n                        \n                    \n                    \n                        \n                            Default value : new Cell({key: undefined, value: undefined})\n                        \n                    \n                        \n                            \n                                    Defined in src/grid/cell/editRenderers/cell-edit-renderer.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            elementRef\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ElementRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/grid/cell/editRenderers/cell-edit-renderer.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            format\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/grid/cell/editRenderers/cell-edit-renderer.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            formatType\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/grid/cell/editRenderers/cell-edit-renderer.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            gridEventService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         GridEventService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/grid/cell/editRenderers/cell-edit-renderer.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            gridService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         GridService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/grid/cell/editRenderers/cell-edit-renderer.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            handleClick\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/grid/cell/editRenderers/cell-edit-renderer.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            hostElement\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     HTMLElement\n\n                        \n                    \n                        \n                            \n                                    Defined in src/grid/cell/editRenderers/cell-edit-renderer.ts:39\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            i\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/grid/cell/editRenderers/cell-edit-renderer.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            j\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/grid/cell/editRenderers/cell-edit-renderer.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            keyEvent\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subject\n\n                        \n                    \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in src/grid/cell/editRenderers/cell-edit-renderer.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            render\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/grid/cell/editRenderers/cell-edit-renderer.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            renderer\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Renderer2\n\n                        \n                    \n                        \n                            \n                                    Defined in src/grid/cell/editRenderers/cell-edit-renderer.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            value\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/grid/cell/editRenderers/cell-edit-renderer.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            valueValid\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/grid/cell/editRenderers/cell-edit-renderer.ts:20\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            init\n                        \n                        \n                    \n                \n            \n            \n                \ninit()\n                \n            \n\n\n            \n                \n                    Defined in src/grid/cell/editRenderers/cell-edit-renderer.ts:53\n                \n            \n\n\n            \n                \n                    To override.  After all data has been set.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onClick\n                        \n                        \n                    \n                \n            \n            \n                \nonClick(event: MouseEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/grid/cell/editRenderers/cell-edit-renderer.ts:130\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                            MouseEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onModelChange\n                        \n                        \n                    \n                \n            \n            \n                \nonModelChange(value: any)\n                \n            \n\n\n            \n                \n                    Defined in src/grid/cell/editRenderers/cell-edit-renderer.ts:126\n                \n            \n\n\n            \n                \n                    Update the bound value.\nTODO: Handle validation;\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            saveData\n                        \n                        \n                    \n                \n            \n            \n                \nsaveData(value?: any)\n                \n            \n\n\n            \n                \n                    Defined in src/grid/cell/editRenderers/cell-edit-renderer.ts:92\n                \n            \n\n\n            \n                \n                    Update the bound data based on the model value or passed in value.  Then notify the service of the value change.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setColumn\n                        \n                        \n                    \n                \n            \n            \n                \nsetColumn(column: Column)\n                \n            \n\n\n            \n                \n                    Defined in src/grid/cell/editRenderers/cell-edit-renderer.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    column\n                                    \n                                                Column\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setConfig\n                        \n                        \n                    \n                \n            \n            \n                \nsetConfig(config: any)\n                \n            \n\n\n            \n                \n                    Defined in src/grid/cell/editRenderers/cell-edit-renderer.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setData\n                        \n                        \n                    \n                \n            \n            \n                \nsetData(data: Cell)\n                \n            \n\n\n            \n                \n                    Defined in src/grid/cell/editRenderers/cell-edit-renderer.ts:110\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                Cell\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setFormat\n                        \n                        \n                    \n                \n            \n            \n                \nsetFormat(format: string)\n                \n            \n\n\n            \n                \n                    Defined in src/grid/cell/editRenderers/cell-edit-renderer.ts:135\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    format\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setLocation\n                        \n                        \n                    \n                \n            \n            \n                \nsetLocation(hostElement: HTMLElement)\n                \n            \n\n\n            \n                \n                    Defined in src/grid/cell/editRenderers/cell-edit-renderer.ts:64\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    hostElement\n                                    \n                                            HTMLElement\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setPosition\n                        \n                        \n                    \n                \n            \n            \n                \nsetPosition(i: number, j: number)\n                \n            \n\n\n            \n                \n                    Defined in src/grid/cell/editRenderers/cell-edit-renderer.ts:115\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    i\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    j\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setValues\n                        \n                        \n                    \n                \n            \n            \n                \nsetValues(o: Object)\n                \n            \n\n\n            \n                \n                    Defined in src/grid/cell/editRenderers/cell-edit-renderer.ts:161\n                \n            \n\n\n            \n                \n                    Allow configuration options to be set.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    o\n                                    \n                                                Object\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateLocation\n                        \n                        \n                    \n                \n            \n            \n                \nupdateLocation()\n                \n            \n\n\n            \n                \n                    Defined in src/grid/cell/editRenderers/cell-edit-renderer.ts:72\n                \n            \n\n\n            \n                \n                    Correctly position the editor popup over the selected cell.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n            \n    HostListeners    \n        \n            \n                \n                    \n                    \n                        \n                            window:resize\n                        \n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event' \n                \n            \n            \n                \nwindow:resize(event: Event)\n                \n            \n\n\n            \n                \n                    Defined in src/grid/cell/editRenderers/cell-edit-renderer.ts:82\n                \n            \n\n\n        \n    \n\n    \n\n\n    \n        import {ChangeDetectorRef, ElementRef, HostListener, isDevMode, Renderer2} from \"@angular/core\";\n\nimport {BehaviorSubject, Subject} from \"rxjs\";\n\nimport {Cell} from \"../cell\";\nimport {GridService} from \"../../services/grid.service\";\nimport {GridEventService} from \"../../services/grid-event.service\";\nimport {Column} from \"../../column/column\";\n\n/**\n * The base class for cell edit components.  When you view the grid, you see view renderers.  When you select a\n * cell to edit, an extension of this class is dynamically created on top of the cell view.\n */\nexport class CellEditRenderer {\n\n  config: any;\n  column: Column;\n  value: any;\n  data: Cell = new Cell({key: undefined, value: undefined});\n  valueValid: boolean = true;\n  render: boolean = true;\n  format: string;\n  formatType: string;\n  activeOnRowHeader: boolean = false;\n\n  i: number;\n  j: number;\n\n  handleClick: boolean = false;\n\n  keyEvent: Subject = new Subject();\n\n  gridService: GridService;\n  gridEventService: GridEventService;\n  elementRef: ElementRef;\n  renderer: Renderer2;\n  changeDetectorRef: ChangeDetectorRef;\n\n  private hostElement: HTMLElement;\n\n  constructor(gridService: GridService, gridEventService: GridEventService, elementRef: ElementRef,\n              renderer: Renderer2, changeDetectorRef: ChangeDetectorRef) {\n    this.gridService = gridService;\n    this.gridEventService = gridEventService;\n    this.elementRef = elementRef;\n    this.renderer = renderer;\n    this.changeDetectorRef = changeDetectorRef;\n  }\n\n  /**\n   * To override.  After all data has been set.\n   */\n  init() {}\n\n  setConfig(config: any) {\n    this.config = config;\n  }\n\n  setColumn(column: Column) {\n    this.column = column;\n    this.setConfig(column.editConfig);\n  }\n\n  setLocation(hostElement: HTMLElement) {\n    this.hostElement = hostElement;\n    this.updateLocation();\n  }\n\n  /**\n   * Correctly position the editor popup over the selected cell.\n   */\n  updateLocation() {\n    this.renderer.setStyle(this.elementRef.nativeElement, \"position\", \"absolute\");\n    this.renderer.setStyle(this.elementRef.nativeElement, \"margin-left\", this.hostElement.offsetLeft + \"px\");\n    this.renderer.setStyle(this.elementRef.nativeElement, \"margin-top\", this.hostElement.parentElement.offsetTop + \"px\");\n    this.renderer.setStyle(this.elementRef.nativeElement, \"width\", this.hostElement.offsetWidth + \"px\");\n    this.renderer.setStyle(this.elementRef.nativeElement, \"height\", this.hostElement.offsetHeight + \"px\");\n    this.renderer.setStyle(this.elementRef.nativeElement, \"z-index\", \"100\");\n  }\n\n  @HostListener(\"window:resize\", [\"$event\"])\n  onResize(event: Event) {\n    this.updateLocation();\n  }\n\n  /**\n   * Update the bound data based on the model value or passed in value.  Then notify the service of the value change.\n   *\n   * @param value\n   * @returns {boolean}\n   */\n  saveData(value?: any): boolean {\n    if (!value) {\n      value = this.value;\n    }\n\n    let newValue: any = this.column.parseValue(value);\n\n    if (this.data.value !== newValue) {\n      let oldValue: any = this.data.value;\n      this.data.value = newValue;\n      this.gridService.handleValueChange(this.i, this.j, this.data.key, newValue, oldValue);\n\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  setData(data: Cell) {\n    this.data = data;\n    this.value = this.column.formatValue(this.data.value);\n  }\n\n  setPosition(i: number, j: number) {\n    this.i = i;\n    this.j = j;\n  }\n\n  /**\n   * Update the bound value.\n   * TODO: Handle validation;\n   *\n   * @param {any} value\n   */\n  onModelChange(value: any) {\n    this.value = value;\n  }\n\n  onClick(event: MouseEvent) {\n    event.stopPropagation();\n    event.preventDefault();\n  }\n\n  setFormat(format: string) {\n    if (isDevMode()) {\n      console.debug(\"CellEditRenderer.setFormat: \" + format);\n    }\n\n    if (!format) {\n      return;\n    }\n\n    try {\n      let a: string[] = format.split(\":\");\n      if (a.length !== 2) {\n        return;\n      }\n      this.formatType = a[0];\n      this.format = a[1];\n    } catch (e) {\n      // Ignore\n    }\n  }\n\n  /**\n   * Allow configuration options to be set.\n   *\n   * @param {Object} o\n   */\n  setValues(o: Object) {}\n\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CellHoverPopupListener.html":{"url":"classes/CellHoverPopupListener.html","title":"class - CellHoverPopupListener","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CellHoverPopupListener\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/grid/event/listeners/cell-hover-popup.listener.ts\n        \n\n\n            \n                Extends\n            \n            \n                        EventListener\n            \n\n            \n                Implements\n            \n            \n                            MouseOverListener\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                grid\n                            \n                            \n                                gridEventService\n                            \n                            \n                                gridService\n                            \n                            \n                                stopEvent\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                mouseOver\n                            \n                            \n                                setConfig\n                            \n                            \n                                setGrid\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            grid\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         GridComponent\n\n                        \n                    \n                            \n                                \n                                    Inherited from         EventListener\n\n                                \n                            \n                        \n                            \n                                    Defined in         EventListener:13\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            gridEventService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         GridEventService\n\n                        \n                    \n                            \n                                \n                                    Inherited from         EventListener\n\n                                \n                            \n                        \n                            \n                                    Defined in         EventListener:15\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            gridService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         GridService\n\n                        \n                    \n                            \n                                \n                                    Inherited from         EventListener\n\n                                \n                            \n                        \n                            \n                                    Defined in         EventListener:14\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            stopEvent\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : true\n                        \n                    \n                            \n                                \n                                    Inherited from         EventListener\n\n                                \n                            \n                        \n                            \n                                    Defined in         EventListener:12\n\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            mouseOver\n                        \n                        \n                    \n                \n            \n            \n                \nmouseOver(event: MouseEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/grid/event/listeners/cell-hover-popup.listener.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                            MouseEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setConfig\n                        \n                        \n                    \n                \n            \n            \n                \nsetConfig(config: any)\n                \n            \n\n\n            \n                \n                    Inherited from         EventListener\n\n                \n            \n            \n                \n                        Defined in         EventListener:26\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setGrid\n                        \n                        \n                    \n                \n            \n            \n                \nsetGrid(grid: GridComponent)\n                \n            \n\n\n            \n                \n                    Inherited from         EventListener\n\n                \n            \n            \n                \n                        Defined in         EventListener:41\n\n                \n            \n\n\n            \n                \n                    Manually set the grid reference.  With creating new instance dynamically, was not able to inject services.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    grid\n                                    \n                                                GridComponent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {isDevMode} from \"@angular/core\";\n\nimport {EventListener} from \"../event-listener\";\nimport {HtmlUtil} from \"../../utils/html-util\";\nimport {MouseOverListener} from \"../mouse-over.interface\";\nimport {Point} from \"../../utils/point\";\n\nexport class CellHoverPopupListener extends EventListener implements MouseOverListener {\n\n  mouseOver(event: MouseEvent): boolean {\n    if (isDevMode()) {\n      console.debug(\"CellHoverPopupListener.mouseOver \" + (event.target).id);\n    }\n\n    let idElement: HTMLElement = HtmlUtil.getIdElement(event.target);\n    if (idElement.id.startsWith(\"popup-\")) {\n      return false;\n    }\n    if (idElement !== null && idElement.id.startsWith(\"cell-\")) {\n      let location: Point = HtmlUtil.getLocation(idElement);\n\n      let currentEl: HTMLElement = this.grid.gridContainer.nativeElement.querySelector(\".cell-popup\");\n      if (currentEl) {\n        let currentLocation: Point = HtmlUtil.getLocation(currentEl);\n        if (currentLocation && currentLocation.equals(location)) {\n          return false;\n        }\n      }\n\n      this.grid.clearPopup();\n      if (location && this.gridService.getColumn(location.j).popupRenderer) {\n        this.grid.createPopup(location);\n        return true;\n      }\n      return false;\n    } else {\n      this.grid.clearPopup();\n      return false;\n    }\n  }\n\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CellNumberRangeView.html":{"url":"classes/CellNumberRangeView.html","title":"class - CellNumberRangeView","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CellNumberRangeView\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/grid/cell/viewRenderers/cell-number-range-view.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            CellViewRenderer\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                high\n                            \n                            \n                                highColor\n                            \n                            \n                                low\n                            \n                            \n                                lowColor\n                            \n                            \n                                showIcon\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createElement\n                            \n                            \n                                setConfig\n                            \n                            \n                                updateColumn\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            high\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/grid/cell/viewRenderers/cell-number-range-view.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            highColor\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"green\"\n                        \n                    \n                        \n                            \n                                    Defined in src/grid/cell/viewRenderers/cell-number-range-view.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            low\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/grid/cell/viewRenderers/cell-number-range-view.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            lowColor\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"red\"\n                        \n                    \n                        \n                            \n                                    Defined in src/grid/cell/viewRenderers/cell-number-range-view.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            showIcon\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/grid/cell/viewRenderers/cell-number-range-view.ts:14\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createElement\n                        \n                        \n                    \n                \n            \n            \n                \ncreateElement(renderer: Renderer2, column: Column, value: any, i: number, j: number)\n                \n            \n\n\n            \n                \n                    Defined in src/grid/cell/viewRenderers/cell-number-range-view.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    renderer\n                                    \n                                                Renderer2\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    column\n                                    \n                                                Column\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    i\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    j\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     HTMLElement\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setConfig\n                        \n                        \n                    \n                \n            \n            \n                \nsetConfig(config: any)\n                \n            \n\n\n            \n                \n                    Defined in src/grid/cell/viewRenderers/cell-number-range-view.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateColumn\n                        \n                        \n                    \n                \n            \n            \n                \nupdateColumn(column: Column)\n                \n            \n\n\n            \n                \n                    Defined in src/grid/cell/viewRenderers/cell-number-range-view.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    column\n                                    \n                                                Column\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {Renderer2} from \"@angular/core\";\n\nimport {CellViewRenderer} from \"./cell-view-renderer.interface\";\nimport {Column} from \"../../column/column\";\n\nexport class CellNumberRangeView implements CellViewRenderer {\n\n  low: number;\n  high: number;\n\n  lowColor: string = \"red\";\n  highColor: string = \"green\";\n\n  showIcon: boolean = false;\n\n  updateColumn(column: Column) {}\n\n  setConfig(config: any) {\n    this.lowColor = \"red\";\n    this.highColor = \"green\";\n    this.showIcon = false;\n\n    if (config.low) {\n      this.low = config.low;\n    }\n    if (config.high) {\n      this.high = config.high;\n    }\n    if (config.lowColor) {\n      this.lowColor = config.lowColor;\n    }\n    if (config.highColor) {\n      this.highColor = config.highColor;\n    }\n    if (config.showIcon !== undefined) {\n      this.showIcon = config.showIcon;\n    }\n  }\n\n  createElement(renderer: Renderer2, column: Column, value: any, i: number, j: number): HTMLElement {\n    let div = renderer.createElement(\"div\");\n    let span1 = renderer.createElement(\"span\");\n    let span2 = renderer.createElement(\"span\");\n    let text = renderer.createText(column.formatValue(value));\n    renderer.appendChild(div, span1);\n    renderer.appendChild(div, span2);\n    renderer.appendChild(span1, text);\n\n    renderer.setStyle(span1, \"width\", \"25px\");\n    renderer.setStyle(span1, \"display\", \"inline-flex\");\n\n    let v: number = null;\n    try {\n      v = +value;\n\n      if (this.low && this.high) {\n        if (v = this.high) {\n          renderer.setStyle(div, \"color\", this.highColor);\n          renderer.addClass(span2, \"fas\");\n          renderer.addClass(span2, \"fa-arrow-alt-circle-up\");\n        }\n      }\n    } catch (e) {\n      //\n    }\n\n    return div;\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CellPopupRenderer.html":{"url":"classes/CellPopupRenderer.html","title":"class - CellPopupRenderer","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CellPopupRenderer\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/grid/cell/viewPopupRenderer/cell-popup-renderer.ts\n        \n\n            \n                Description\n            \n            \n                This base component is designed to show additional information of a cell.  There are two basic examples in mind.\nFirst, a cell could contain a lot of text that overflows the cell.  On hover, this popup can show the full\ncontent.  Secondly, a cell could represent a complex object with only one particular value shown in the cell.\nThis popup could show additional data.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                changeDetectorRef\n                            \n                            \n                                elementRef\n                            \n                            \n                                gridService\n                            \n                            \n                                    Private\n                                hostElement\n                            \n                            \n                                i\n                            \n                            \n                                j\n                            \n                            \n                                renderer\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                setConfig\n                            \n                            \n                                setLocation\n                            \n                            \n                                setPosition\n                            \n                            \n                                updateLocation\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(gridService: GridService, elementRef: ElementRef, renderer: Renderer2, changeDetectorRef: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Defined in src/grid/cell/viewPopupRenderer/cell-popup-renderer.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        gridService\n                                                  \n                                                        \n                                                                        GridService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        elementRef\n                                                  \n                                                        \n                                                                        ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        renderer\n                                                  \n                                                        \n                                                                        Renderer2\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        changeDetectorRef\n                                                  \n                                                        \n                                                                        ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            changeDetectorRef\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ChangeDetectorRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/grid/cell/viewPopupRenderer/cell-popup-renderer.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            elementRef\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ElementRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/grid/cell/viewPopupRenderer/cell-popup-renderer.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            gridService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         GridService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/grid/cell/viewPopupRenderer/cell-popup-renderer.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            hostElement\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     HTMLElement\n\n                        \n                    \n                        \n                            \n                                    Defined in src/grid/cell/viewPopupRenderer/cell-popup-renderer.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            i\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/grid/cell/viewPopupRenderer/cell-popup-renderer.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            j\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/grid/cell/viewPopupRenderer/cell-popup-renderer.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            renderer\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Renderer2\n\n                        \n                    \n                        \n                            \n                                    Defined in src/grid/cell/viewPopupRenderer/cell-popup-renderer.ts:19\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setConfig\n                        \n                        \n                    \n                \n            \n            \n                \nsetConfig(config: any)\n                \n            \n\n\n            \n                \n                    Defined in src/grid/cell/viewPopupRenderer/cell-popup-renderer.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setLocation\n                        \n                        \n                    \n                \n            \n            \n                \nsetLocation(hostElement: HTMLElement)\n                \n            \n\n\n            \n                \n                    Defined in src/grid/cell/viewPopupRenderer/cell-popup-renderer.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    hostElement\n                                    \n                                            HTMLElement\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setPosition\n                        \n                        \n                    \n                \n            \n            \n                \nsetPosition(location: Point)\n                \n            \n\n\n            \n                \n                    Defined in src/grid/cell/viewPopupRenderer/cell-popup-renderer.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    location\n                                    \n                                                Point\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateLocation\n                        \n                        \n                    \n                \n            \n            \n                \nupdateLocation()\n                \n            \n\n\n            \n                \n                    Defined in src/grid/cell/viewPopupRenderer/cell-popup-renderer.ts:46\n                \n            \n\n\n            \n                \n                    Correctly position the editor popup over the selected cell.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {ChangeDetectorRef, ElementRef, Renderer2} from \"@angular/core\";\n\nimport {GridService} from \"../../services/grid.service\";\nimport {Point} from \"../../utils/point\";\n\n/**\n * This base component is designed to show additional information of a cell.  There are two basic examples in mind.\n * First, a cell could contain a lot of text that overflows the cell.  On hover, this popup can show the full\n * content.  Secondly, a cell could represent a complex object with only one particular value shown in the cell.\n * This popup could show additional data.\n */\nexport class CellPopupRenderer {\n\n  i: number;\n  j: number;\n\n  gridService: GridService;\n  elementRef: ElementRef;\n  renderer: Renderer2;\n  changeDetectorRef: ChangeDetectorRef;\n\n  private hostElement: HTMLElement;\n\n  constructor(gridService: GridService, elementRef: ElementRef, renderer: Renderer2, changeDetectorRef: ChangeDetectorRef) {\n    this.gridService = gridService;\n    this.elementRef = elementRef;\n    this.renderer = renderer;\n    this.changeDetectorRef = changeDetectorRef;\n  }\n\n  setConfig(config: any) {}\n\n  setPosition(location: Point) {\n    this.i = location.i;\n    this.j = location.j;\n  }\n\n  setLocation(hostElement: HTMLElement) {\n    this.hostElement = hostElement;\n    this.updateLocation();\n  }\n\n  /**\n   * Correctly position the editor popup over the selected cell.\n   */\n  updateLocation() {\n    this.renderer.addClass(this.elementRef.nativeElement, \"cell-popup\");\n    this.renderer.setStyle(this.elementRef.nativeElement, \"position\", \"fixed\");\n    this.renderer.setStyle(this.elementRef.nativeElement, \"z-index\", \"2000\");\n\n    let hostRect = this.hostElement.getBoundingClientRect();\n    let left: number = (hostRect.left + 15);\n    let top: number = (hostRect.top + 15);\n\n    if (left + this.hostElement.offsetWidth > document.body.offsetWidth) {\n      left = document.body.offsetWidth - this.hostElement.offsetWidth;\n    }\n    if (top + this.hostElement.offsetHeight > document.body.offsetHeight) {\n      top = document.body.offsetHeight - this.hostElement.offsetHeight;\n    }\n\n    this.renderer.setStyle(this.elementRef.nativeElement, \"left\", left + \"px\");\n    this.renderer.setStyle(this.elementRef.nativeElement, \"top\", top + \"px\");\n  }\n\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CellTextView.html":{"url":"classes/CellTextView.html","title":"class - CellTextView","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CellTextView\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/grid/cell/viewRenderers/cell-text-view.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            CellViewRenderer\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                column\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createElement\n                            \n                            \n                                getChoice\n                            \n                            \n                                setConfig\n                            \n                            \n                                updateColumn\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            column\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Column\n\n                        \n                    \n                        \n                            \n                                    Defined in src/grid/cell/viewRenderers/cell-text-view.ts:8\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createElement\n                        \n                        \n                    \n                \n            \n            \n                \ncreateElement(renderer: Renderer2, column: Column, value: any, i: number, j: number)\n                \n            \n\n\n            \n                \n                    Defined in src/grid/cell/viewRenderers/cell-text-view.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    renderer\n                                    \n                                                Renderer2\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    column\n                                    \n                                                Column\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    i\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    j\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     HTMLElement\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getChoice\n                        \n                        \n                    \n                \n            \n            \n                \ngetChoice(value: any)\n                \n            \n\n\n            \n                \n                    Defined in src/grid/cell/viewRenderers/cell-text-view.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setConfig\n                        \n                        \n                    \n                \n            \n            \n                \nsetConfig(config: any)\n                \n            \n\n\n            \n                \n                    Defined in src/grid/cell/viewRenderers/cell-text-view.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateColumn\n                        \n                        \n                    \n                \n            \n            \n                \nupdateColumn(column: Column)\n                \n            \n\n\n            \n                \n                    Defined in src/grid/cell/viewRenderers/cell-text-view.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    column\n                                    \n                                                Column\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {Renderer2} from \"@angular/core\";\n\nimport {CellViewRenderer} from \"./cell-view-renderer.interface\";\nimport {Column} from \"../../column/column\";\n\nexport class CellTextView implements CellViewRenderer {\n\n  column: Column;\n\n  updateColumn(column: Column) {\n    this.column = column;\n  }\n\n  setConfig(config: any) {}\n\n  createElement(renderer: Renderer2, column: Column, value: any, i: number, j: number): HTMLElement {\n    let span = renderer.createElement(\"span\");\n    renderer.setStyle(span, \"padding-left\", \"8px\");\n    renderer.setStyle(span, \"margin-top\", \"auto\");\n    renderer.setStyle(span, \"margin-bottom\", \"auto\");\n    renderer.setStyle(span, \"overflow-x\", \"hidden\");\n    renderer.setStyle(span, \"text-overflow\", \"ellipsis\");\n\n    let text = undefined;\n    if (this.column.dataType === \"choice\") {\n      text = renderer.createText(this.getChoice(value));\n    } else {\n      let formatted: any = column.formatValue(value);\n      text = renderer.createText((formatted) ? formatted : \"\");\n    }\n\n    renderer.appendChild(span, text);\n    return span;\n  }\n\n  getChoice(value: any): any {\n    let display: any = this.column.choiceMap.get(value);\n\n    return (display) ? display : \"\";\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CellViewRenderer.html":{"url":"interfaces/CellViewRenderer.html","title":"interface - CellViewRenderer","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  CellViewRenderer\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/grid/cell/viewRenderers/cell-view-renderer.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    createElement\n                                \n                                \n                                    setConfig\n                                \n                                \n                                    updateColumn\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createElement\n                        \n                        \n                    \n                \n            \n            \n                \ncreateElement(renderer: Renderer2, column: Column, value: any, i: number, j: number, rowGroup?: RowGroup)\n                \n            \n\n\n            \n                \n                    Defined in src/grid/cell/viewRenderers/cell-view-renderer.interface.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    renderer\n                                    \n                                                Renderer2\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    column\n                                    \n                                                Column\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    i\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    j\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    rowGroup\n                                    \n                                                RowGroup\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     HTMLElement\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setConfig\n                        \n                        \n                    \n                \n            \n            \n                \nsetConfig(config: any)\n                \n            \n\n\n            \n                \n                    Defined in src/grid/cell/viewRenderers/cell-view-renderer.interface.ts:22\n                \n            \n\n\n            \n                \n                    In a column, a viewConfig property can be set.  When implementing classes are instantiated, that config is passed\nhere.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        JSON config object.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateColumn\n                        \n                        \n                    \n                \n            \n            \n                \nupdateColumn(column: Column)\n                \n            \n\n\n            \n                \n                    Defined in src/grid/cell/viewRenderers/cell-view-renderer.interface.ts:14\n                \n            \n\n\n            \n                \n                    Used if the addition of a renderer should change the default behavior of a column.  For example, a\nCheckRowSelectView should make sure the column is not editable.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    column\n                                    \n                                                Column\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The column to update properties on.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {Renderer2} from \"@angular/core\";\n\nimport {Column} from \"../../column/column\";\nimport {RowGroup} from \"../../row/row-group\";\n\nexport interface CellViewRenderer {\n\n  /**\n   * Used if the addition of a renderer should change the default behavior of a column.  For example, a\n   * CheckRowSelectView should make sure the column is not editable.\n   *\n   * @param {Column} column The column to update properties on.\n   */\n  updateColumn(column: Column);\n\n  /**\n   * In a column, a viewConfig property can be set.  When implementing classes are instantiated, that config is passed\n   * here.\n   *\n   * @param config JSON config object.\n   */\n  setConfig(config: any);\n\n  createElement(renderer: Renderer2, column: Column, value: any, i: number, j: number, rowGroup?: RowGroup): HTMLElement;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CheckRowSelectView.html":{"url":"classes/CheckRowSelectView.html","title":"class - CheckRowSelectView","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CheckRowSelectView\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/grid/cell/viewRenderers/check-row-select-view.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            CellViewRenderer\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                checkedIcon\n                            \n                            \n                                uncheckedIcon\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createElement\n                            \n                            \n                                setConfig\n                            \n                            \n                                updateColumn\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            checkedIcon\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"fas fa-check-square\"\n                        \n                    \n                        \n                            \n                                    Defined in src/grid/cell/viewRenderers/check-row-select-view.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            uncheckedIcon\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"far fa-times-circle\"\n                        \n                    \n                        \n                            \n                                    Defined in src/grid/cell/viewRenderers/check-row-select-view.ts:9\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createElement\n                        \n                        \n                    \n                \n            \n            \n                \ncreateElement(renderer: Renderer2, column: Column, value: any, i: number, j: number)\n                \n            \n\n\n            \n                \n                    Defined in src/grid/cell/viewRenderers/check-row-select-view.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    renderer\n                                    \n                                                Renderer2\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    column\n                                    \n                                                Column\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    i\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    j\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     HTMLElement\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setConfig\n                        \n                        \n                    \n                \n            \n            \n                \nsetConfig(config: any)\n                \n            \n\n\n            \n                \n                    Defined in src/grid/cell/viewRenderers/check-row-select-view.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateColumn\n                        \n                        \n                    \n                \n            \n            \n                \nupdateColumn(column: Column)\n                \n            \n\n\n            \n                \n                    Defined in src/grid/cell/viewRenderers/check-row-select-view.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    column\n                                    \n                                                Column\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {Renderer2} from \"@angular/core\";\n\nimport {Column} from \"../../column/column\";\nimport {CellViewRenderer} from \"./cell-view-renderer.interface\";\n\nexport class CheckRowSelectView implements CellViewRenderer {\n\n  checkedIcon: string = \"fas fa-check-square\";\n  uncheckedIcon: string = \"far fa-times-circle\";\n\n  updateColumn(column: Column) {\n    column.editable = false;\n  }\n\n  setConfig(config: any) {\n    if (config.checkedIcon) {\n      this.checkedIcon = config.checkedIcon;\n    }\n    if (config.uncheckedIcon) {\n      this.uncheckedIcon = config.uncheckedIcon;\n    }\n  }\n\n  createElement(renderer: Renderer2, column: Column, value: any, i: number, j: number): HTMLElement {\n    let classes: string[] = [];\n\n    let span = renderer.createElement(\"span\");\n    renderer.setAttribute(span, \"id\", \"row-select-\" + i + \"-\" + j);\n    renderer.setStyle(span, \"margin-top\", \"auto\");\n    renderer.setStyle(span, \"margin-bottom\", \"auto\");\n    renderer.setStyle(span, \"margin-left\", \"auto\");\n    renderer.setStyle(span, \"margin-right\", \"auto\");\n    renderer.addClass(span, \"row-select\");\n    if (value) {\n      renderer.addClass(span, \"selected\");\n    }\n\n    let selectedSpan = renderer.createElement(\"span\");\n    renderer.addClass(selectedSpan, \"row-selected-icon\");\n    renderer.appendChild(span, selectedSpan);\n\n    let selectedSvg = renderer.createElement(\"span\");\n    renderer.addClass(selectedSvg, \"fa-lg\");\n    renderer.appendChild(selectedSpan, selectedSvg);\n    classes = this.checkedIcon.split(\" \");\n    for (let iconClass of classes) {\n      renderer.addClass(selectedSvg, iconClass);\n    }\n\n    let unselectedSpan = renderer.createElement(\"span\");\n    renderer.addClass(unselectedSpan, \"row-unselected-icon\");\n    renderer.appendChild(span, unselectedSpan);\n\n    let unselectedSvg = renderer.createElement(\"span\");\n    renderer.addClass(unselectedSvg, \"fa-lg\");\n    renderer.appendChild(unselectedSpan, unselectedSvg);\n    classes = this.uncheckedIcon.split(\" \");\n    for (let iconClass of classes) {\n      renderer.addClass(unselectedSvg, iconClass);\n    }\n\n\n    renderer.appendChild(span, unselectedSpan);\n    return span;\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ClickCellEditListener.html":{"url":"classes/ClickCellEditListener.html","title":"class - ClickCellEditListener","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ClickCellEditListener\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/grid/event/listeners/click-cell-edit.listener.ts\n        \n\n\n            \n                Extends\n            \n            \n                        EventListener\n            \n\n            \n                Implements\n            \n            \n                            ClickListener\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                grid\n                            \n                            \n                                gridEventService\n                            \n                            \n                                gridService\n                            \n                            \n                                stopEvent\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                click\n                            \n                            \n                                setConfig\n                            \n                            \n                                setGrid\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            grid\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         GridComponent\n\n                        \n                    \n                            \n                                \n                                    Inherited from         EventListener\n\n                                \n                            \n                        \n                            \n                                    Defined in         EventListener:13\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            gridEventService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         GridEventService\n\n                        \n                    \n                            \n                                \n                                    Inherited from         EventListener\n\n                                \n                            \n                        \n                            \n                                    Defined in         EventListener:15\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            gridService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         GridService\n\n                        \n                    \n                            \n                                \n                                    Inherited from         EventListener\n\n                                \n                            \n                        \n                            \n                                    Defined in         EventListener:14\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            stopEvent\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : true\n                        \n                    \n                            \n                                \n                                    Inherited from         EventListener\n\n                                \n                            \n                        \n                            \n                                    Defined in         EventListener:12\n\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            click\n                        \n                        \n                    \n                \n            \n            \n                \nclick(event: MouseEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/grid/event/listeners/click-cell-edit.listener.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                            MouseEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setConfig\n                        \n                        \n                    \n                \n            \n            \n                \nsetConfig(config: any)\n                \n            \n\n\n            \n                \n                    Inherited from         EventListener\n\n                \n            \n            \n                \n                        Defined in         EventListener:26\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setGrid\n                        \n                        \n                    \n                \n            \n            \n                \nsetGrid(grid: GridComponent)\n                \n            \n\n\n            \n                \n                    Inherited from         EventListener\n\n                \n            \n            \n                \n                        Defined in         EventListener:41\n\n                \n            \n\n\n            \n                \n                    Manually set the grid reference.  With creating new instance dynamically, was not able to inject services.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    grid\n                                    \n                                                GridComponent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {isDevMode} from \"@angular/core\";\n\nimport {ClickListener} from \"../click.interface\";\nimport {EventListener} from \"../event-listener\";\nimport {HtmlUtil} from \"../../utils/html-util\";\nimport {Point} from \"../../utils/point\";\n\nexport class ClickCellEditListener extends EventListener implements ClickListener {\n\n  click(event: MouseEvent): boolean {\n    if (isDevMode()) {\n      console.debug(\"ClickCellEditListener.click\");\n    }\n\n    let idElement: HTMLElement = HtmlUtil.getIdElement(event.target);\n    if (idElement !== null && idElement.id.indexOf(\"cell-\") >= 0) {\n      let location: Point = HtmlUtil.getLocation(idElement);\n      if (!location) {\n        return false;\n      } else if (!this.gridService.getColumn(location.j).editable) {\n        if (isDevMode()) {\n          console.debug(\"ClickCellEditListener.click: Column not editable, returning false.\");\n        }\n        return false;\n      }\n      this.gridEventService.setSelectedLocation(location, null);\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ClickListener.html":{"url":"interfaces/ClickListener.html","title":"interface - ClickListener","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ClickListener\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/grid/event/click.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    click\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            click\n                        \n                        \n                    \n                \n            \n            \n                \nclick(event: MouseEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/grid/event/click.interface.ts:3\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                            MouseEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        export interface ClickListener {\n\n  click(event: MouseEvent): boolean;\n\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ClickRowSelectListener.html":{"url":"classes/ClickRowSelectListener.html","title":"class - ClickRowSelectListener","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ClickRowSelectListener\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/grid/event/listeners/click-row-select.listener.ts\n        \n\n\n            \n                Extends\n            \n            \n                        EventListener\n            \n\n            \n                Implements\n            \n            \n                            ClickListener\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                multiSelect\n                            \n                            \n                                grid\n                            \n                            \n                                gridEventService\n                            \n                            \n                                gridService\n                            \n                            \n                                stopEvent\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                click\n                            \n                            \n                                setConfig\n                            \n                            \n                                setConfig\n                            \n                            \n                                setGrid\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            multiSelect\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/grid/event/listeners/click-row-select.listener.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            grid\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         GridComponent\n\n                        \n                    \n                            \n                                \n                                    Inherited from         EventListener\n\n                                \n                            \n                        \n                            \n                                    Defined in         EventListener:13\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            gridEventService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         GridEventService\n\n                        \n                    \n                            \n                                \n                                    Inherited from         EventListener\n\n                                \n                            \n                        \n                            \n                                    Defined in         EventListener:15\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            gridService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         GridService\n\n                        \n                    \n                            \n                                \n                                    Inherited from         EventListener\n\n                                \n                            \n                        \n                            \n                                    Defined in         EventListener:14\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            stopEvent\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : true\n                        \n                    \n                            \n                                \n                                    Inherited from         EventListener\n\n                                \n                            \n                        \n                            \n                                    Defined in         EventListener:12\n\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            click\n                        \n                        \n                    \n                \n            \n            \n                \nclick(event: MouseEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/grid/event/listeners/click-row-select.listener.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                            MouseEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setConfig\n                        \n                        \n                    \n                \n            \n            \n                \nsetConfig(config: any)\n                \n            \n\n\n            \n                \n                    Defined in src/grid/event/listeners/click-row-select.listener.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setConfig\n                        \n                        \n                    \n                \n            \n            \n                \nsetConfig(config: any)\n                \n            \n\n\n            \n                \n                    Inherited from         EventListener\n\n                \n            \n            \n                \n                        Defined in         EventListener:26\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setGrid\n                        \n                        \n                    \n                \n            \n            \n                \nsetGrid(grid: GridComponent)\n                \n            \n\n\n            \n                \n                    Inherited from         EventListener\n\n                \n            \n            \n                \n                        Defined in         EventListener:41\n\n                \n            \n\n\n            \n                \n                    Manually set the grid reference.  With creating new instance dynamically, was not able to inject services.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    grid\n                                    \n                                                GridComponent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {isDevMode} from \"@angular/core\";\n\nimport {ClickListener} from \"../click.interface\";\nimport {EventListener} from \"../event-listener\";\nimport {HtmlUtil} from \"../../utils/html-util\";\nimport {Point} from \"../../utils/point\";\n\nexport class ClickRowSelectListener extends EventListener implements ClickListener {\n\n  multiSelect: boolean = false;\n\n  click(event: MouseEvent): boolean {\n    if (isDevMode()) {\n      console.debug(\"hci-grid: \" + this.grid.id + \": ClickRowSelectListener.click\");\n    }\n\n    let idElement: HTMLElement = HtmlUtil.getIdElement(event.target);\n    if (idElement !== null && idElement.id.startsWith(\"row-select-\")) {\n      event.stopPropagation();\n\n      let location: Point = HtmlUtil.getLocation(idElement);\n\n      let value: boolean = this.gridService.negateSelectedRow(location.i, location.j, this.multiSelect);\n\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  setConfig(config: any) {\n    super.setConfig(config);\n\n    if (config.multiSelect !== undefined && config.multiSelect) {\n      this.multiSelect = config.multiSelect;\n    }\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ClickView.html":{"url":"classes/ClickView.html","title":"class - ClickView","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ClickView\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/grid/cell/viewRenderers/click-view.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            CellViewRenderer\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                appendLocation\n                            \n                            \n                                icon\n                            \n                            \n                                id\n                            \n                            \n                                style\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createElement\n                            \n                            \n                                setConfig\n                            \n                            \n                                updateColumn\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            appendLocation\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/grid/cell/viewRenderers/click-view.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            icon\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/grid/cell/viewRenderers/click-view.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/grid/cell/viewRenderers/click-view.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            style\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/grid/cell/viewRenderers/click-view.ts:11\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createElement\n                        \n                        \n                    \n                \n            \n            \n                \ncreateElement(renderer: Renderer2, column: Column, value: any, i: number, j: number)\n                \n            \n\n\n            \n                \n                    Defined in src/grid/cell/viewRenderers/click-view.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    renderer\n                                    \n                                                Renderer2\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    column\n                                    \n                                                Column\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    i\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    j\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     HTMLElement\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setConfig\n                        \n                        \n                    \n                \n            \n            \n                \nsetConfig(config: any)\n                \n            \n\n\n            \n                \n                    Defined in src/grid/cell/viewRenderers/click-view.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateColumn\n                        \n                        \n                    \n                \n            \n            \n                \nupdateColumn(column: Column)\n                \n            \n\n\n            \n                \n                    Defined in src/grid/cell/viewRenderers/click-view.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    column\n                                    \n                                                Column\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {Renderer2} from \"@angular/core\";\n\nimport {Column} from \"../../column/column\";\nimport {CellViewRenderer} from \"./cell-view-renderer.interface\";\n\nexport class ClickView implements CellViewRenderer {\n\n  id: string;\n  appendLocation: boolean;\n  icon: string;\n  style: string;\n\n  updateColumn(column: Column) {}\n\n  setConfig(config: any) {\n    if (!config) {\n      return;\n    }\n\n    if (config.id) {\n      this.id = config.id;\n    } else {\n      this.id = \"click\";\n    }\n\n    if (config.appendLocation !== undefined) {\n      this.appendLocation = config.appendLocation;\n    } else {\n      this.appendLocation = true;\n    }\n\n    if (config.icon) {\n      this.icon = config.icon;\n    } else {\n      this.icon = \"fas fa-chevron-circle-right fa-lg\";\n    }\n\n    if (config.style) {\n      this.style = config.style;\n    } else {\n      this.style = \"color: green;\";\n    }\n  }\n\n  createElement(renderer: Renderer2, column: Column, value: any, i: number, j: number): HTMLElement {\n    let span = renderer.createElement(\"span\");\n    if (this.appendLocation) {\n      renderer.setAttribute(span, \"id\", this.id + \"-\" + i + \"-\" + j);\n    } else {\n      renderer.setAttribute(span, \"id\", this.id);\n    }\n    renderer.setStyle(span, \"margin-top\", \"auto\");\n    renderer.setStyle(span, \"margin-bottom\", \"auto\");\n    renderer.setStyle(span, \"margin-left\", \"auto\");\n    renderer.setStyle(span, \"margin-right\", \"auto\");\n\n    if (this.style) {\n      let styles: string[] = this.style.split(\";\");\n      for (let style of styles) {\n        if (style.indexOf(\":\") > 0) {\n          let x: number = style.indexOf(\":\");\n          let k: string = style.substr(0, x);\n          let v: string = style.substr(x + 1);\n          if (k && v && k.length > 0 && v.length > 0) {\n            renderer.setStyle(span, k.trim(), v.trim());\n          }\n        }\n      }\n    }\n\n    let eIcon = renderer.createElement(\"i\");\n    let classes: string[] = this.icon.split(\" \");\n    for (let iClass of classes) {\n      renderer.addClass(eIcon, iClass);\n    }\n    renderer.appendChild(span, eIcon);\n\n    return span;\n  }\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ClickViewListener.html":{"url":"classes/ClickViewListener.html","title":"class - ClickViewListener","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ClickViewListener\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/grid/event/click-view.listener.ts\n        \n\n\n            \n                Extends\n            \n            \n                        EventListener\n            \n\n            \n                Implements\n            \n            \n                            ClickListener\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                grid\n                            \n                            \n                                gridEventService\n                            \n                            \n                                gridService\n                            \n                            \n                                stopEvent\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                click\n                            \n                            \n                                setConfig\n                            \n                            \n                                setGrid\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            grid\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         GridComponent\n\n                        \n                    \n                            \n                                \n                                    Inherited from         EventListener\n\n                                \n                            \n                        \n                            \n                                    Defined in         EventListener:13\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            gridEventService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         GridEventService\n\n                        \n                    \n                            \n                                \n                                    Inherited from         EventListener\n\n                                \n                            \n                        \n                            \n                                    Defined in         EventListener:15\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            gridService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         GridService\n\n                        \n                    \n                            \n                                \n                                    Inherited from         EventListener\n\n                                \n                            \n                        \n                            \n                                    Defined in         EventListener:14\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            stopEvent\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : true\n                        \n                    \n                            \n                                \n                                    Inherited from         EventListener\n\n                                \n                            \n                        \n                            \n                                    Defined in         EventListener:12\n\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            click\n                        \n                        \n                    \n                \n            \n            \n                \nclick(event: MouseEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/grid/event/click-view.listener.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                            MouseEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setConfig\n                        \n                        \n                    \n                \n            \n            \n                \nsetConfig(config: any)\n                \n            \n\n\n            \n                \n                    Inherited from         EventListener\n\n                \n            \n            \n                \n                        Defined in         EventListener:26\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setGrid\n                        \n                        \n                    \n                \n            \n            \n                \nsetGrid(grid: GridComponent)\n                \n            \n\n\n            \n                \n                    Inherited from         EventListener\n\n                \n            \n            \n                \n                        Defined in         EventListener:41\n\n                \n            \n\n\n            \n                \n                    Manually set the grid reference.  With creating new instance dynamically, was not able to inject services.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    grid\n                                    \n                                                GridComponent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {isDevMode} from \"@angular/core\";\n\nimport {ClickListener} from \"./click.interface\";\nimport {EventListener} from \"./event-listener\";\nimport {HtmlUtil} from \"../utils/html-util\";\nimport {Point} from \"../utils/point\";\nimport {Range} from \"../utils/range\";\n\nexport class ClickViewListener extends EventListener implements ClickListener {\n\n  click(event: MouseEvent): boolean {\n    if (isDevMode()) {\n      console.debug(\"ClickViewListener.click\");\n    }\n\n    let idElement: HTMLElement = HtmlUtil.getIdElement(event.target);\n    if (idElement !== null && idElement.id.startsWith(\"click-\")) {\n      event.stopPropagation();\n\n      let location: Point = HtmlUtil.getLocation(idElement);\n      let key: any = this.gridService.getRow(location.i).key;\n      if (isDevMode()) {\n        console.debug(\"outputRowClick Emit: \" + key);\n      }\n      //this.grid.updateSelectedRows(new Range(location, location), true);\n      this.grid.outputRowClick.emit(key);\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ColumnDndListener.html":{"url":"classes/ColumnDndListener.html","title":"class - ColumnDndListener","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ColumnDndListener\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/grid/event/listeners/column-dnd.listener.ts\n        \n\n            \n                Description\n            \n            \n                Listener to select a column, drag it to another column and release.\n\n            \n\n            \n                Extends\n            \n            \n                        EventListener\n            \n\n            \n                Implements\n            \n            \n                            MouseDownListener\n                            MouseDragListener\n                            MouseUpListener\n                            MouseOutListener\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                clone\n                            \n                            \n                                dragging\n                            \n                            \n                                isRight\n                            \n                            \n                                lastEventId\n                            \n                            \n                                originalTarget\n                            \n                            \n                                renderer\n                            \n                            \n                                grid\n                            \n                            \n                                gridEventService\n                            \n                            \n                                gridService\n                            \n                            \n                                stopEvent\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                mouseDown\n                            \n                            \n                                mouseDrag\n                            \n                            \n                                mouseOut\n                            \n                            \n                                mouseUp\n                            \n                            \n                                setConfig\n                            \n                            \n                                setGrid\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            clone\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     HTMLElement\n\n                        \n                    \n                        \n                            \n                                    Defined in src/grid/event/listeners/column-dnd.listener.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dragging\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/grid/event/listeners/column-dnd.listener.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isRight\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/grid/event/listeners/column-dnd.listener.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            lastEventId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"\"\n                        \n                    \n                        \n                            \n                                    Defined in src/grid/event/listeners/column-dnd.listener.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            originalTarget\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     HTMLElement\n\n                        \n                    \n                        \n                            \n                                    Defined in src/grid/event/listeners/column-dnd.listener.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            renderer\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Renderer2\n\n                        \n                    \n                        \n                            \n                                    Defined in src/grid/event/listeners/column-dnd.listener.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            grid\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         GridComponent\n\n                        \n                    \n                            \n                                \n                                    Inherited from         EventListener\n\n                                \n                            \n                        \n                            \n                                    Defined in         EventListener:13\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            gridEventService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         GridEventService\n\n                        \n                    \n                            \n                                \n                                    Inherited from         EventListener\n\n                                \n                            \n                        \n                            \n                                    Defined in         EventListener:15\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            gridService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         GridService\n\n                        \n                    \n                            \n                                \n                                    Inherited from         EventListener\n\n                                \n                            \n                        \n                            \n                                    Defined in         EventListener:14\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            stopEvent\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : true\n                        \n                    \n                            \n                                \n                                    Inherited from         EventListener\n\n                                \n                            \n                        \n                            \n                                    Defined in         EventListener:12\n\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            mouseDown\n                        \n                        \n                    \n                \n            \n            \n                \nmouseDown(event: MouseEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/grid/event/listeners/column-dnd.listener.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                            MouseEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            mouseDrag\n                        \n                        \n                    \n                \n            \n            \n                \nmouseDrag(event: MouseEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/grid/event/listeners/column-dnd.listener.ts:94\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                            MouseEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            mouseOut\n                        \n                        \n                    \n                \n            \n            \n                \nmouseOut(event: MouseEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/grid/event/listeners/column-dnd.listener.ts:111\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                            MouseEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            mouseUp\n                        \n                        \n                    \n                \n            \n            \n                \nmouseUp(event: MouseEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/grid/event/listeners/column-dnd.listener.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                            MouseEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setConfig\n                        \n                        \n                    \n                \n            \n            \n                \nsetConfig(config: any)\n                \n            \n\n\n            \n                \n                    Inherited from         EventListener\n\n                \n            \n            \n                \n                        Defined in         EventListener:26\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setGrid\n                        \n                        \n                    \n                \n            \n            \n                \nsetGrid(grid: GridComponent)\n                \n            \n\n\n            \n                \n                    Inherited from         EventListener\n\n                \n            \n            \n                \n                        Defined in         EventListener:41\n\n                \n            \n\n\n            \n                \n                    Manually set the grid reference.  With creating new instance dynamically, was not able to inject services.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    grid\n                                    \n                                                GridComponent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {isDevMode, Renderer2} from \"@angular/core\";\n\nimport {EventListener} from \"../event-listener\";\nimport {HtmlUtil} from \"../../utils/html-util\";\nimport {MouseDownListener} from \"../mouse-down.interface\";\nimport {MouseDragListener} from \"../mouse-drag.interface\";\nimport {MouseUpListener} from \"../mouse-up.interface\";\nimport {MouseOutListener} from \"../mouse-out.interface\";\n\n/**\n * Listener to select a column, drag it to another column and release.\n */\nexport class ColumnDndListener extends EventListener implements MouseDownListener, MouseDragListener, MouseUpListener, MouseOutListener {\n\n  originalTarget: HTMLElement;\n  isRight: boolean;\n  renderer: Renderer2;\n  clone: HTMLElement;\n  dragging: boolean = false;\n  lastEventId: string = \"\";\n\n  mouseDown(event: MouseEvent): boolean {\n    this.renderer = this.grid.getRenderer();\n\n    this.originalTarget = HtmlUtil.getIdElement(event.target);\n\n    if (this.originalTarget.id.startsWith(\"header-\") && !this.originalTarget.classList.contains(\"hci-grid-header\")) {\n      this.originalTarget = this.originalTarget.closest(\".hci-grid-header\");\n    }\n\n    this.lastEventId = this.originalTarget.id;\n\n    if (isDevMode()) {\n      console.debug(\"ColumnDndListener.mouseDown: \" + this.lastEventId);\n    }\n\n    if (this.lastEventId.startsWith(\"header-\")) {\n      this.dragging = true;\n      event.stopPropagation();\n      event.preventDefault();\n\n      let view: HTMLElement = this.originalTarget.closest(\".header-view\");\n      this.isRight = view.id.startsWith(\"right-\");\n\n      this.clone = this.originalTarget.cloneNode(true);\n      this.clone.id = \"clone-\" + this.lastEventId;\n      this.renderer.addClass(this.clone, \"drag-n-drop\");\n      for (let theme of this.gridService.getThemes()) {\n        this.renderer.addClass(this.clone, theme);\n      }\n      this.renderer.setStyle(this.clone, \"z-index\", 9500);\n      this.renderer.setStyle(this.clone, \"position\", \"fixed\");\n      this.grid.getRenderer().appendChild(document.body, this.clone);\n\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  mouseUp(event: MouseEvent): boolean {\n    if (isDevMode()) {\n      console.debug(\"ColumnDndListener.mouseUp: \" + (event.target).id);\n    }\n\n    if (this.dragging) {\n      event.stopPropagation();\n      event.preventDefault();\n\n      this.dragging = false;\n      this.lastEventId = (event.target).id;\n      this.renderer.removeChild(document.body, this.clone);\n\n      let targetHeader: HTMLElement = (event.target).closest(\".hci-grid-header\");\n\n      let view: HTMLElement = targetHeader.closest(\".header-view\");\n      if ((this.isRight && view.id.startsWith(\"right-\") || !this.isRight && !view.id.startsWith(\"right-\"))) {\n        this.gridService.reorderColumn(+this.originalTarget.id.substring(+this.originalTarget.id.lastIndexOf(\"-\") + 1),\n            +targetHeader.id.substring(+targetHeader.id.lastIndexOf(\"-\") + 1));\n\n        this.grid.outputListenerEvent.emit({\n          type: \"ColumnDndListener\",\n          event: \"columnsResorted\",\n          columns: this.gridService.getColumnMapSubject().getValue().get(\"VISIBLE\")\n        });\n      }\n\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  mouseDrag(event: MouseEvent): boolean {\n    if (this.dragging) {\n      if (isDevMode()) {\n        console.debug(\"ColumnDndListener.mouseDrag: \" + (event.target).id);\n      }\n      event.stopPropagation();\n      event.preventDefault();\n\n      this.renderer.setStyle(this.clone, \"left\", (event.clientX + 5) + \"px\");\n      this.renderer.setStyle(this.clone, \"top\", (event.clientY + 5) + \"px\");\n\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  mouseOut(event: MouseEvent): boolean {\n    if (this.dragging) {\n      let target: HTMLElement = (event.target).closest(\"hci-column-header\");\n\n      if (isDevMode()) {\n        console.debug(\"ColumnDndListener.mouseOut: \" + ((target) ? target.id : \"Not a header\"));\n      }\n\n      if (target) {\n        return false;\n      }\n\n      event.stopPropagation();\n      event.preventDefault();\n\n      this.dragging = false;\n      this.renderer.removeChild(document.body, this.clone);\n\n      return true;\n    } else {\n      return false;\n    }\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ColumnHeaderComponent.html":{"url":"components/ColumnHeaderComponent.html","title":"component - ColumnHeaderComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ColumnHeaderComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/grid/column/column-header.component.ts\n\n\n    \n        Description\n    \n    \n        Renders the column title and controls icons for filtering and sorting.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                hci-column-header\n            \n\n\n            \n                styles\n                \n\n    .sort-icon {\n      margin-left: auto;\n      padding-right: 5px;\n    }\n\n    .dropdown-toggle::after {\n      display: none;\n    }\n    \n    .hci-grid-header-text {\n      text-overflow: ellipsis;\n      overflow-x: hidden;\n    }\n  \n            \n\n            \n                template\n                \n  \n    {{ column.name }}\n  \n  \n    {{ column.name }}\n  \n  \n    \n       0 ? '#00aa00' : 'inherit'\">\n        \n      \n    \n    \n      \n      \n    \n  \n\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                asc\n                            \n                            \n                                    Private\n                                filterComponent\n                            \n                            \n                                firstSort\n                            \n                            \n                                hasFilters\n                            \n                            \n                                    Private\n                                headerText\n                            \n                            \n                                    Private\n                                hiddenHeaderText\n                            \n                            \n                                    Private\n                                popup\n                            \n                            \n                                    Private\n                                showPopup\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                doSort\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onMouseOut\n                            \n                            \n                                onMouseOver\n                            \n                            \n                                showFilter\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                column\n                            \n                            \n                                container\n                            \n                        \n                    \n                \n\n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                document:click\n                            \n                        \n                    \n                \n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(gridService: GridService, resolver: ComponentFactoryResolver, changeDetectorRef: ChangeDetectorRef, el: ElementRef, renderer: Renderer2)\n                    \n                \n                        \n                            \n                                Defined in src/grid/column/column-header.component.ts:79\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        gridService\n                                                  \n                                                        \n                                                                        GridService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        resolver\n                                                  \n                                                        \n                                                                        ComponentFactoryResolver\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        changeDetectorRef\n                                                  \n                                                        \n                                                                        ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        el\n                                                  \n                                                        \n                                                                        ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        renderer\n                                                  \n                                                        \n                                                                        Renderer2\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        column\n                    \n                \n                \n                    \n                        Type :         Column\n\n                    \n                \n                        \n                            \n                                    Defined in src/grid/column/column-header.component.ts:68\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        container\n                    \n                \n                \n                    \n                        Type :         ViewContainerRef\n\n                    \n                \n                        \n                            \n                                    Defined in src/grid/column/column-header.component.ts:69\n                            \n                        \n            \n        \n\n\n\n    \n    HostListeners    \n        \n            \n                \n                    \n                    \n                        \n                            document:click\n                        \n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event' \n                \n            \n            \n                \ndocument:click(event)\n                \n            \n\n\n            \n                \n                    Defined in src/grid/column/column-header.component.ts:203\n                \n            \n\n\n        \n    \n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            doSort\n                        \n                        \n                    \n                \n            \n            \n                \ndoSort(event: MouseEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/grid/column/column-header.component.ts:164\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                            MouseEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngAfterViewInit\n                        \n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in src/grid/column/column-header.component.ts:147\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/grid/column/column-header.component.ts:87\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onMouseOut\n                        \n                        \n                    \n                \n            \n            \n                \nonMouseOut(event: MouseEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/grid/column/column-header.component.ts:196\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                            MouseEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onMouseOver\n                        \n                        \n                    \n                \n            \n            \n                \nonMouseOver(event: MouseEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/grid/column/column-header.component.ts:172\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                            MouseEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            showFilter\n                        \n                        \n                    \n                \n            \n            \n                \nshowFilter()\n                \n            \n\n\n            \n                \n                    Defined in src/grid/column/column-header.component.ts:151\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            asc\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/grid/column/column-header.component.ts:71\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            filterComponent\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FilterRenderer\n\n                        \n                    \n                        \n                            \n                                    Defined in src/grid/column/column-header.component.ts:79\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            firstSort\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/grid/column/column-header.component.ts:72\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            hasFilters\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/grid/column/column-header.component.ts:73\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            headerText\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     HTMLElement\n\n                        \n                    \n                        \n                            \n                                    Defined in src/grid/column/column-header.component.ts:77\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            hiddenHeaderText\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     HTMLElement\n\n                        \n                    \n                        \n                            \n                                    Defined in src/grid/column/column-header.component.ts:78\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            popup\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     HTMLElement\n\n                        \n                    \n                        \n                            \n                                    Defined in src/grid/column/column-header.component.ts:76\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            showPopup\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/grid/column/column-header.component.ts:75\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {\n  ChangeDetectorRef, Component, ComponentFactoryResolver, ElementRef, HostListener, Input, Renderer2,\n  ViewContainerRef\n} from \"@angular/core\";\n\nimport {of} from \"Rxjs\";\nimport {delay} from \"Rxjs/operators\";\n\nimport {HciFilterDto, HciSortDto} from \"hci-ng-grid-dto\";\n\nimport {Column} from \"./column\";\nimport {GridService} from \"../services/grid.service\";\nimport {FilterRenderer} from \"./filterRenderers/filter-renderer\";\n\n/**\n * Renders the column title and controls icons for filtering and sorting.\n */\n@Component({\n  selector: \"hci-column-header\",\n  template: `\n    \n      \n        {{ column.name }}\n      \n      \n        {{ column.name }}\n      \n      \n        \n           0 ? '#00aa00' : 'inherit'\">\n            \n          \n        \n        \n          \n          \n        \n      \n    \n  `,\n  styles: [`\n\n    .sort-icon {\n      margin-left: auto;\n      padding-right: 5px;\n    }\n\n    .dropdown-toggle::after {\n      display: none;\n    }\n    \n    .hci-grid-header-text {\n      text-overflow: ellipsis;\n      overflow-x: hidden;\n    }\n  `],\n})\nexport class ColumnHeaderComponent {\n\n  @Input() column: Column;\n  @Input(\"container\") headerContainer: ViewContainerRef;\n\n  asc: number = 0;\n  firstSort: boolean = false;\n  hasFilters: boolean = false;\n\n  private showPopup: boolean = false;\n  private popup: HTMLElement;\n  private headerText: HTMLElement;\n  private hiddenHeaderText: HTMLElement;\n  private filterComponent: FilterRenderer;\n\n  constructor(private gridService: GridService,\n              private resolver: ComponentFactoryResolver,\n              private changeDetectorRef: ChangeDetectorRef,\n              private el: ElementRef,\n              private renderer: Renderer2) {}\n\n  ngOnInit() {\n    if (this.column.filterRenderer) {\n      of(undefined).pipe(delay(0)).subscribe(() => {\n        let factory = this.resolver.resolveComponentFactory(this.column.filterRenderer);\n        this.filterComponent = this.headerContainer.createComponent(factory).instance;\n        this.filterComponent.column = this.column;\n        this.filterComponent.setConfig(this.column.filterConfig);\n        this.renderer.setStyle(this.filterComponent.elementRef.nativeElement, \"display\", \"none\");\n        this.renderer.setStyle(this.filterComponent.elementRef.nativeElement, \"position\", \"absolute\");\n        this.renderer.setStyle(this.filterComponent.elementRef.nativeElement, \"z-index\", \"50\");\n        this.filterComponent.close.subscribe((closed: boolean) => {\n          this.renderer.setStyle(this.filterComponent.elementRef.nativeElement, \"display\", \"none\");\n        });\n      });\n    }\n\n    this.headerText = this.el.nativeElement.querySelector(\"#header-text\");\n    this.hiddenHeaderText = this.el.nativeElement.querySelector(\"#hidden-header-text\");\n\n    this.gridService.getFilterMapSubject().subscribe((filterMap: Map) => {\n      if (this.column) {\n        if (filterMap.has(this.column.field)) {\n          this.hasFilters = filterMap.get(this.column.field).filter((filterInfo: HciFilterDto) => {\n            return filterInfo.valid;\n          }).length === 0 ? false : true;\n        }\n      }\n    });\n\n    this.gridService.sortsSubject.subscribe((sorts: HciSortDto[]) => {\n      if (this.column.field === \"GROUP_BY\") {\n        this.firstSort = true;\n        this.asc = 0;\n\n        if (sorts.length > 0) {\n          this.asc = (sorts[0].asc) ? 1 : -1;\n        }\n      } else {\n        this.firstSort = false;\n        this.asc = 0;\n\n        for (let i = 0; i this.el.nativeElement.closest(\"#main-content\")).offsetWidth;\n    let xView: number = (this.el.nativeElement.closest(\".header-view\")).offsetLeft;\n    let x: number = xView + this.el.nativeElement.offsetLeft + this.el.nativeElement.offsetWidth - 30;\n    if (x + wHost > mainContent) {\n      x = mainContent - wHost;\n    }\n    this.renderer.setStyle(this.filterComponent.elementRef.nativeElement, \"margin-top\", \"30px\");\n    this.renderer.setStyle(this.filterComponent.elementRef.nativeElement, \"margin-left\", x + \"px\");\n  }\n\n  doSort(event: MouseEvent) {\n    if (this.column.sort && event.ctrlKey) {\n      this.gridService.addSort(this.column.field, true);\n    } else if (this.column.sort) {\n      this.gridService.addSort(this.column.field);\n    }\n  }\n\n  onMouseOver(event: MouseEvent): void {\n    if (Math.floor(this.headerText.offsetWidth) !== Math.floor(this.hiddenHeaderText.offsetWidth)) {\n      this.showPopup = true;\n    }\n\n    if (this.showPopup) {\n      this.popup = this.renderer.createElement(\"div\");\n      this.renderer.addClass(this.popup, \"hci-grid\");\n      let themes: string[] = this.gridService.getConfigSubject().getValue().theme.split(\" \");\n      for (let theme of themes) {\n        this.renderer.addClass(this.popup, theme);\n      }\n      this.renderer.addClass(this.popup, \"column-header-tooltip\");\n      this.renderer.setStyle(this.popup, \"height\", this.el.nativeElement.offsetHeight);\n      this.renderer.setStyle(this.popup, \"position\", \"absolute\");\n      this.renderer.setStyle(this.popup, \"z-index\", \"9000\");\n      this.renderer.setStyle(this.popup, \"left\", (event.clientX + 5) + \"px\");\n      this.renderer.setStyle(this.popup, \"top\", (event.clientY + 5) + \"px\");\n      this.renderer.appendChild(this.popup, this.renderer.createText(this.column.name));\n\n      this.renderer.appendChild(document.body, this.popup);\n    }\n  }\n\n  onMouseOut(event: MouseEvent): void {\n    if (this.showPopup) {\n      this.renderer.removeChild(document.body, this.popup);\n    }\n  }\n\n  @HostListener(\"document:click\", [\"$event\"])\n  private clickout(event) {\n    if (!this.el.nativeElement.contains(event.target) && this.filterComponent) {\n      this.renderer.setStyle(this.filterComponent.elementRef.nativeElement, \"display\", \"none\");\n    }\n  }\n}\n\n    \n\n\n    \n            \n\n    .sort-icon {\n      margin-left: auto;\n      padding-right: 5px;\n    }\n\n    .dropdown-toggle::after {\n      display: none;\n    }\n    \n    .hci-grid-header-text {\n      text-overflow: ellipsis;\n      overflow-x: hidden;\n    }\n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{ column.name }}        {{ column.name }}               0 ? \\'#00aa00\\' : \\'inherit\\'\">                                        '\n    var COMPONENTS = [{'name': 'BigTextPopup', 'selector': 'hci-bigtext-popup'},{'name': 'ChoiceEditRenderer', 'selector': 'hci-grid-choice-edit'},{'name': 'ColumnHeaderComponent', 'selector': 'hci-column-header'},{'name': 'CompareFilterRenderer', 'selector': 'hci-grid-compare-filter'},{'name': 'ConfigMenuComponent', 'selector': 'hci-grid-config-menu'},{'name': 'ConfigMultiChoiceComponent', 'selector': 'hci-grid-multi-choice'},{'name': 'GridComponent', 'selector': 'hci-grid'},{'name': 'SelectFilterRenderer', 'selector': 'hci-grid-select-filter'},{'name': 'TextEditRenderer', 'selector': 'hci-grid-text-edit'},{'name': 'TextFilterRenderer', 'selector': 'hci-grid-text-filter'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ColumnHeaderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CompareFilterRenderer.html":{"url":"components/CompareFilterRenderer.html","title":"component - CompareFilterRenderer","body":"\n                   \n\n\n\n\n\n  Components\n  CompareFilterRenderer\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/grid/column/filterRenderers/compare-filter-renderer.component.ts\n\n\n    \n        Description\n    \n    \n        Offers comparison with a few different data types such as numbers and dates.\n\n    \n\n    \n        Extends\n    \n    \n                FilterRenderer\n    \n\n\n    \n        Example\n    \n    \n    \n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                hci-grid-compare-filter\n            \n\n\n            \n                styles\n                \n  \n    .input-group-append {\n      height: 38px;\n    }\n      \n    .inputs {\n      margin-bottom: 10px;\n    }\n      \n    .parent {\n      flex: 1 1 80%;\n      align-items: center;\n      padding-left: 5px;\n      flex-wrap: wrap;\n      display: flex;\n    }\n\n    .l-gap {\n      margin-left: 5px;\n    }\n\n    .operator {\n      background-color: #007bff;\n      color: white;\n      border-radius: 5px;\n      font-weight: 500;\n    }\n      \n    .value {\n      border-radius: 5px;\n      width: 100%;\n      font-weight: 500;\n    }\n    \n    .fade-in-out {\n      opacity: 1.0;\n      animation: fade 2.0s linear infinite;\n    }\n\n    @keyframes fade {\n      0%, 100% { opacity: 1.0 }\n      50% { opacity: 0.0 }\n    }\n  \n            \n\n            \n                template\n                \n  \n    \n      \n        \n          {{ o.display }}\n        \n      \n      \n        \n          \n        \n        \n          \n        \n        \n          \n        \n      \n    \n\n    \n      \n        \n          \n        \n        \n          \n        \n      \n    \n    \n      \n      \n    \n  \n\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                changed\n                            \n                            \n                                highValue\n                            \n                            \n                                lowValue\n                            \n                            \n                                operator\n                            \n                            \n                                options\n                            \n                            \n                                valid\n                            \n                            \n                                width\n                            \n                            \n                                changeDetectorRef\n                            \n                            \n                                config\n                            \n                            \n                                elementRef\n                            \n                            \n                                filters\n                            \n                            \n                                gridService\n                            \n                            \n                                shared\n                            \n                            \n                                width\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                filter\n                            \n                            \n                                format\n                            \n                            \n                                highValueChange\n                            \n                            \n                                operatorChange\n                            \n                            \n                                parse\n                            \n                            \n                                reset\n                            \n                            \n                                setConfig\n                            \n                            \n                                valueChange\n                            \n                            \n                                valueClear\n                            \n                            \n                                filter\n                            \n                            \n                                filtersSubscribe\n                            \n                            \n                                getConfig\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                reset\n                            \n                            \n                                setConfig\n                            \n                            \n                                stop\n                            \n                            \n                                toggleShared\n                            \n                            \n                                valueClear\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                column\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                close\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        column\n                    \n                \n                \n                    \n                        Type :         Column\n\n                    \n                \n                            \n                                \n                                    Inherited from         FilterRenderer\n\n                                \n                            \n                        \n                            \n                                    Defined in         FilterRenderer:10\n\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        close\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                            \n                                \n                                    Inherited from         FilterRenderer\n\n                                \n                            \n                        \n                            \n                                    Defined in         FilterRenderer:11\n\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            filter\n                        \n                        \n                    \n                \n            \n            \n                \nfilter()\n                \n            \n\n\n            \n                \n                    Defined in src/grid/column/filterRenderers/compare-filter-renderer.component.ts:145\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            format\n                        \n                        \n                    \n                \n            \n            \n                \nformat(value: any)\n                \n            \n\n\n            \n                \n                    Defined in src/grid/column/filterRenderers/compare-filter-renderer.component.ts:186\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            highValueChange\n                        \n                        \n                    \n                \n            \n            \n                \nhighValueChange(value: any)\n                \n            \n\n\n            \n                \n                    Defined in src/grid/column/filterRenderers/compare-filter-renderer.component.ts:221\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            operatorChange\n                        \n                        \n                    \n                \n            \n            \n                \noperatorChange(operator: string)\n                \n            \n\n\n            \n                \n                    Defined in src/grid/column/filterRenderers/compare-filter-renderer.component.ts:163\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    operator\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            parse\n                        \n                        \n                    \n                \n            \n            \n                \nparse(value: any)\n                \n            \n\n\n            \n                \n                    Defined in src/grid/column/filterRenderers/compare-filter-renderer.component.ts:196\n                \n            \n\n\n            \n                \n                    TODO: Fix timezone.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            reset\n                        \n                        \n                    \n                \n            \n            \n                \nreset()\n                \n            \n\n\n            \n                \n                    Defined in src/grid/column/filterRenderers/compare-filter-renderer.component.ts:169\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setConfig\n                        \n                        \n                    \n                \n            \n            \n                \nsetConfig(config: any)\n                \n            \n\n\n            \n                \n                    Defined in src/grid/column/filterRenderers/compare-filter-renderer.component.ts:158\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            valueChange\n                        \n                        \n                    \n                \n            \n            \n                \nvalueChange(value: any)\n                \n            \n\n\n            \n                \n                    Defined in src/grid/column/filterRenderers/compare-filter-renderer.component.ts:200\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            valueClear\n                        \n                        \n                    \n                \n            \n            \n                \nvalueClear()\n                \n            \n\n\n            \n                \n                    Defined in src/grid/column/filterRenderers/compare-filter-renderer.component.ts:235\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            filter\n                        \n                        \n                    \n                \n            \n            \n                \nfilter()\n                \n            \n\n\n            \n                \n                    Inherited from         FilterRenderer\n\n                \n            \n            \n                \n                        Defined in         FilterRenderer:48\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            filtersSubscribe\n                        \n                        \n                    \n                \n            \n            \n                \nfiltersSubscribe()\n                \n            \n\n\n            \n                \n                    Inherited from         FilterRenderer\n\n                \n            \n            \n                \n                        Defined in         FilterRenderer:35\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getConfig\n                        \n                        \n                    \n                \n            \n            \n                \ngetConfig()\n                \n            \n\n\n            \n                \n                    Inherited from         FilterRenderer\n\n                \n            \n            \n                \n                        Defined in         FilterRenderer:52\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngAfterViewInit\n                        \n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Inherited from         FilterRenderer\n\n                \n            \n            \n                \n                        Defined in         FilterRenderer:31\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Inherited from         FilterRenderer\n\n                \n            \n            \n                \n                        Defined in         FilterRenderer:27\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            reset\n                        \n                        \n                    \n                \n            \n            \n                \nreset()\n                \n            \n\n\n            \n                \n                    Inherited from         FilterRenderer\n\n                \n            \n            \n                \n                        Defined in         FilterRenderer:62\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setConfig\n                        \n                        \n                    \n                \n            \n            \n                \nsetConfig(config: any)\n                \n            \n\n\n            \n                \n                    Inherited from         FilterRenderer\n\n                \n            \n            \n                \n                        Defined in         FilterRenderer:56\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            stop\n                        \n                        \n                    \n                \n            \n            \n                \nstop(event: MouseEvent)\n                \n            \n\n\n            \n                \n                    Inherited from         FilterRenderer\n\n                \n            \n            \n                \n                        Defined in         FilterRenderer:68\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                            MouseEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            toggleShared\n                        \n                        \n                    \n                \n            \n            \n                \ntoggleShared()\n                \n            \n\n\n            \n                \n                    Inherited from         FilterRenderer\n\n                \n            \n            \n                \n                        Defined in         FilterRenderer:72\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            valueClear\n                        \n                        \n                    \n                \n            \n            \n                \nvalueClear()\n                \n            \n\n\n            \n                \n                    Inherited from         FilterRenderer\n\n                \n            \n            \n                \n                        Defined in         FilterRenderer:77\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            changed\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/grid/column/filterRenderers/compare-filter-renderer.component.ts:127\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            highValue\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/grid/column/filterRenderers/compare-filter-renderer.component.ts:131\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            lowValue\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/grid/column/filterRenderers/compare-filter-renderer.component.ts:130\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            operator\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"E\"\n                        \n                    \n                        \n                            \n                                    Defined in src/grid/column/filterRenderers/compare-filter-renderer.component.ts:133\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            options\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n    { value: \"LE\", display: \"Less Than or Equal\" },\n    { value: \"LT\", display: \"Less Than\" },\n    { value: \"E\", display: \"Equal\" },\n    { value: \"GE\", display: \"Greater Than or Equal\" },\n    { value: \"GT\", display: \"Greater Than\" },\n    { value: \"B\", display: \"Between\" },\n    { value: \"O\", display: \"Outside\" }\n  ]\n                        \n                    \n                        \n                            \n                                    Defined in src/grid/column/filterRenderers/compare-filter-renderer.component.ts:135\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            valid\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/grid/column/filterRenderers/compare-filter-renderer.component.ts:128\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            width\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 300\n                        \n                    \n                        \n                            \n                                    Defined in src/grid/column/filterRenderers/compare-filter-renderer.component.ts:126\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            changeDetectorRef\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ChangeDetectorRef\n\n                        \n                    \n                            \n                                \n                                    Inherited from         FilterRenderer\n\n                                \n                            \n                        \n                            \n                                    Defined in         FilterRenderer:19\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            config\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                            \n                                \n                                    Inherited from         FilterRenderer\n\n                                \n                            \n                        \n                            \n                                    Defined in         FilterRenderer:14\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            elementRef\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ElementRef\n\n                        \n                    \n                            \n                                \n                                    Inherited from         FilterRenderer\n\n                                \n                            \n                        \n                            \n                                    Defined in         FilterRenderer:18\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            filters\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     HciFilterDto[]\n\n                        \n                    \n                            \n                                \n                                    Inherited from         FilterRenderer\n\n                                \n                            \n                        \n                            \n                                    Defined in         FilterRenderer:13\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            gridService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         GridService\n\n                        \n                    \n                            \n                                \n                                    Inherited from         FilterRenderer\n\n                                \n                            \n                        \n                            \n                                    Defined in         FilterRenderer:17\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            shared\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                            \n                                \n                                    Inherited from         FilterRenderer\n\n                                \n                            \n                        \n                            \n                                    Defined in         FilterRenderer:15\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            width\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 250\n                        \n                    \n                            \n                                \n                                    Inherited from         FilterRenderer\n\n                                \n                            \n                        \n                            \n                                    Defined in         FilterRenderer:16\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {Component} from \"@angular/core\";\n\nimport {HciFilterDto} from \"hci-ng-grid-dto\";\n\nimport {FilterRenderer} from \"./filter-renderer\";\n\n/**\n * Offers comparison with a few different data types such as numbers and dates.\n *\n * @since 1.0.0\n */\n@Component({\n  selector: \"hci-grid-compare-filter\",\n  template: `\n    \n      \n        \n          \n            \n              {{ o.display }}\n            \n          \n          \n            \n              \n            \n            \n              \n            \n            \n              \n            \n          \n        \n        \n        \n          \n            \n              \n            \n            \n              \n            \n          \n        \n        \n          \n          \n        \n      \n    \n  `,\n  styles: [`\n  \n    .input-group-append {\n      height: 38px;\n    }\n      \n    .inputs {\n      margin-bottom: 10px;\n    }\n      \n    .parent {\n      flex: 1 1 80%;\n      align-items: center;\n      padding-left: 5px;\n      flex-wrap: wrap;\n      display: flex;\n    }\n\n    .l-gap {\n      margin-left: 5px;\n    }\n\n    .operator {\n      background-color: #007bff;\n      color: white;\n      border-radius: 5px;\n      font-weight: 500;\n    }\n      \n    .value {\n      border-radius: 5px;\n      width: 100%;\n      font-weight: 500;\n    }\n    \n    .fade-in-out {\n      opacity: 1.0;\n      animation: fade 2.0s linear infinite;\n    }\n\n    @keyframes fade {\n      0%, 100% { opacity: 1.0 }\n      50% { opacity: 0.0 }\n    }\n  `]\n})\nexport class CompareFilterRenderer extends FilterRenderer {\n\n  width: number = 300;\n  changed: boolean = false;\n  valid: boolean = false;\n\n  lowValue: any;\n  highValue: any;\n\n  operator: string = \"E\";\n\n  options = [\n    { value: \"LE\", display: \"Less Than or Equal\" },\n    { value: \"LT\", display: \"Less Than\" },\n    { value: \"E\", display: \"Equal\" },\n    { value: \"GE\", display: \"Greater Than or Equal\" },\n    { value: \"GT\", display: \"Greater Than\" },\n    { value: \"B\", display: \"Between\" },\n    { value: \"O\", display: \"Outside\" }\n  ];\n\n  filter() {\n    this.filters[0].valid = true;\n    this.gridService.addFilters(this.column.field, this.filters);\n    this.gridService.filter();\n    this.changed = false;\n\n    if (this.shared) {\n      this.gridService.globalClearPushFilter(this.column.field, this.filters);\n    }\n\n    this.changeDetectorRef.detectChanges();\n  }\n\n  setConfig(config: any) {\n    super.setConfig(config);\n    this.reset();\n  }\n\n  operatorChange(operator: string) {\n    this.operator = operator;\n    this.filters[0].operator = operator;\n    this.changed = true;\n  }\n\n  reset() {\n    super.reset();\n\n    if (this.column.dataType === \"number\") {\n      this.filters[0] = new HciFilterDto(this.column.field, this.column.dataType, undefined, undefined, \"E\", false);\n    } else if (this.column.dataType.indexOf(\"date\") === 0) {\n      this.filters[0] = new HciFilterDto(this.column.field, this.column.dataType, undefined, undefined, \"E\", false);\n    } else {\n      this.filters[0] = new HciFilterDto(this.column.field, this.column.dataType, undefined, undefined, \"E\", false);\n    }\n\n    this.lowValue = this.format(this.filters[0].value);\n    this.highValue = this.format(this.filters[0].highValue);\n\n    this.changeDetectorRef.detectChanges();\n  }\n\n  format(value: any): any {\n    return this.column.formatValue(value);\n  }\n\n  /**\n   * TODO: Fix timezone.\n   *\n   * @param value\n   * @returns {any}\n   */\n  parse(value: any): any {\n    return this.column.parseValue(value);\n  }\n\n  valueChange(value: any) {\n    if (!this.filters) {\n      this.setConfig({});\n    }\n\n    this.filters[0].valid = true;\n\n    try {\n      if (!value || value.length === 0) {\n        this.filters[0].valid = false;\n      } else if (this.column.format && value.length !== this.column.format.length) {\n        this.filters[0].valid = false;\n      }\n\n      this.filters[0].value = this.parse(value);\n      this.changed = true;\n    } catch (error) {\n      this.filters[0].valid = false;\n    }\n  }\n\n  highValueChange(value: any) {\n    if (!this.filters) {\n      this.setConfig({});\n    }\n\n    try {\n      this.filters[0].valid = (!value || value === \"\") ? false : true;\n      this.filters[0].highValue = this.parse(value);\n      this.changed = true;\n    } catch (error) {\n      this.filters[0].valid = false;\n    }\n  }\n\n  valueClear() {\n    super.valueClear();\n\n    this.reset();\n    this.gridService.addFilters(this.column.field, this.filters);\n    this.gridService.filter();\n\n    if (this.shared) {\n      this.gridService.globalClearPushFilter(this.column.field, this.filters);\n    }\n  }\n\n}\n\n    \n\n\n    \n            \n  \n    .input-group-append {\n      height: 38px;\n    }\n      \n    .inputs {\n      margin-bottom: 10px;\n    }\n      \n    .parent {\n      flex: 1 1 80%;\n      align-items: center;\n      padding-left: 5px;\n      flex-wrap: wrap;\n      display: flex;\n    }\n\n    .l-gap {\n      margin-left: 5px;\n    }\n\n    .operator {\n      background-color: #007bff;\n      color: white;\n      border-radius: 5px;\n      font-weight: 500;\n    }\n      \n    .value {\n      border-radius: 5px;\n      width: 100%;\n      font-weight: 500;\n    }\n    \n    .fade-in-out {\n      opacity: 1.0;\n      animation: fade 2.0s linear infinite;\n    }\n\n    @keyframes fade {\n      0%, 100% { opacity: 1.0 }\n      50% { opacity: 0.0 }\n    }\n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                              {{ o.display }}                                                                                                                                                                                                          '\n    var COMPONENTS = [{'name': 'BigTextPopup', 'selector': 'hci-bigtext-popup'},{'name': 'ChoiceEditRenderer', 'selector': 'hci-grid-choice-edit'},{'name': 'ColumnHeaderComponent', 'selector': 'hci-column-header'},{'name': 'CompareFilterRenderer', 'selector': 'hci-grid-compare-filter'},{'name': 'ConfigMenuComponent', 'selector': 'hci-grid-config-menu'},{'name': 'ConfigMultiChoiceComponent', 'selector': 'hci-grid-multi-choice'},{'name': 'GridComponent', 'selector': 'hci-grid'},{'name': 'SelectFilterRenderer', 'selector': 'hci-grid-select-filter'},{'name': 'TextEditRenderer', 'selector': 'hci-grid-text-edit'},{'name': 'TextFilterRenderer', 'selector': 'hci-grid-text-filter'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CompareFilterRenderer'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ConfigMenuComponent.html":{"url":"components/ConfigMenuComponent.html","title":"component - ConfigMenuComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ConfigMenuComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/grid/config/config-menu.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                GridGlobalService\n                \n            \n\n\n            \n                selector\n                hci-grid-config-menu\n            \n\n\n            \n                styles\n                \n    \n      .window {\n        min-width: 40vw;\n        max-width: 40vw;\n        background-color: white;\n        border: black 1px solid;\n        border-bottom-left-radius: 15px;\n        border-bottom-right-radius: 15px;\n      }\n      \n      .panel {\n        margin-top: 5px;\n        margin-bottom: 15px;\n      }\n      \n      .header {\n        border-bottom: black 1px solid;\n        display: inline-flex;\n        width: 100%;\n        padding: 5px;\n      }\n\n      .sub-header {\n        border-bottom: black 1px solid;\n        display: flex;\n        padding: 5px;\n        overflow-x: auto;\n      }\n\n      .header .bubble, .sub-header .bubble {\n        margin-right: 10px;\n        background-color: lightblue;\n        border: gray 1px solid;\n        padding: 3px 6px;\n        border-radius: 10px;\n        white-space: nowrap;\n      }\n\n      .header .bubble.selected, .sub-header .bubble.selected {\n        border: red 2px solid;\n      }\n\n      .pr-2 {\n        padding-right: 0.5rem;\n      }\n      \n      .cfg-row {\n        display: flex;\n        padding: 5px;\n        align-items: center;\n      }\n\n      .cfg-row .label {\n        flex: 1 1 50%;\n      }\n\n      .cfg-row .input {\n        flex: 1 1 50%;\n      }\n\n      .cfg-row:nth-child(even) {\n        background: #f0f0f0;\n      }\n      \n      .input.checkbox {\n        color: red;\n      }\n      \n      .input.checkbox.checked {\n        color: green;\n      }\n      \n      .pad {\n        padding: 0.5rem 0.5rem;\n      }\n  \n            \n\n            \n                template\n                \n  \n    General\n    Columns\n  \n  \n    \n      \n        Title\n        \n          \n        \n      \n      \n        Theme\n        \n          \n            {{getDisplay(themeChoices, config.theme)}}\n          \n          \n            \n              \n                {{theme.display}}\n              \n            \n          \n        \n      \n      \n        Column Headers\n        \n          \n          \n        \n      \n      \n        Fixed Columns\n        \n          \n        \n      \n      \n        Page Size\n        \n          \n        \n      \n      \n        Page Sizes\n        \n          \n        \n      \n      \n        Visible Rows\n        \n          \n        \n      \n    \n  \n  \n    \n      \n        {{column.name}}\n      \n    \n    \n      \n        Position\n        \n          \n          \n          \n          \n        \n      \n      \n        Visible\n        \n          \n          \n        \n      \n      \n        Width (px)\n        \n          \n        \n      \n      \n        Width (%)\n        \n          \n        \n      \n      \n        Min Width (px)\n        \n          \n        \n      \n      \n        Max Width (px)\n        \n          \n        \n      \n    \n  \n\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                config\n                            \n                            \n                                configSubscription\n                            \n                            \n                                selectedColumn\n                            \n                            \n                                state\n                            \n                            \n                                themeChoices\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getDisplay\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                setSelectedColumn\n                            \n                            \n                                setState\n                            \n                            \n                                stop\n                            \n                            \n                                update\n                            \n                            \n                                updateArray\n                            \n                            \n                                updateColumn\n                            \n                            \n                                updateSortOrder\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                grid\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(gridGlobalService: GridGlobalService, changeDetectorRef: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Defined in src/grid/config/config-menu.component.ts:224\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        gridGlobalService\n                                                  \n                                                        \n                                                                        GridGlobalService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        changeDetectorRef\n                                                  \n                                                        \n                                                                        ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        grid\n                    \n                \n                \n                    \n                        Type :         GridComponent\n\n                    \n                \n                        \n                            \n                                    Defined in src/grid/config/config-menu.component.ts:215\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getDisplay\n                        \n                        \n                    \n                \n            \n            \n                \ngetDisplay(choices: Dictionary[], value: string)\n                \n            \n\n\n            \n                \n                    Defined in src/grid/config/config-menu.component.ts:242\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    choices\n                                    \n                                                Dictionary[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/grid/config/config-menu.component.ts:236\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/grid/config/config-menu.component.ts:228\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setSelectedColumn\n                        \n                        \n                    \n                \n            \n            \n                \nsetSelectedColumn(column: any)\n                \n            \n\n\n            \n                \n                    Defined in src/grid/config/config-menu.component.ts:283\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    column\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setState\n                        \n                        \n                    \n                \n            \n            \n                \nsetState(state: number)\n                \n            \n\n\n            \n                \n                    Defined in src/grid/config/config-menu.component.ts:251\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    state\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            stop\n                        \n                        \n                    \n                \n            \n            \n                \nstop(event: Event)\n                \n            \n\n\n            \n                \n                    Defined in src/grid/config/config-menu.component.ts:299\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                Event\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            update\n                        \n                        \n                    \n                \n            \n            \n                \nupdate(key: string, value: any)\n                \n            \n\n\n            \n                \n                    Defined in src/grid/config/config-menu.component.ts:272\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateArray\n                        \n                        \n                    \n                \n            \n            \n                \nupdateArray(key: string, value: any[])\n                \n            \n\n\n            \n                \n                    Defined in src/grid/config/config-menu.component.ts:260\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    value\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateColumn\n                        \n                        \n                    \n                \n            \n            \n                \nupdateColumn(key: string, value: any)\n                \n            \n\n\n            \n                \n                    Defined in src/grid/config/config-menu.component.ts:288\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateSortOrder\n                        \n                        \n                    \n                \n            \n            \n                \nupdateSortOrder(field: string, position: number)\n                \n            \n\n\n            \n                \n                    Defined in src/grid/config/config-menu.component.ts:256\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    field\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    position\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            config\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/grid/config/config-menu.component.ts:219\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            configSubscription\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/grid/config/config-menu.component.ts:222\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectedColumn\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/grid/config/config-menu.component.ts:220\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            state\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 1\n                        \n                    \n                        \n                            \n                                    Defined in src/grid/config/config-menu.component.ts:217\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            themeChoices\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Dictionary[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/grid/config/config-menu.component.ts:224\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {ChangeDetectorRef, Component, Input, isDevMode, OnDestroy, OnInit} from \"@angular/core\";\n\nimport {Subscription} from \"rxjs\";\n\nimport {GridComponent} from \"../grid.component\";\nimport {GridGlobalService} from \"../services/grid-global.service\";\nimport {Dictionary} from \"../model/dictionary.interface\";\n\n@Component({\n  selector: \"hci-grid-config-menu\",\n  providers: [\n    GridGlobalService\n  ],\n  template: `\n    \n      \n        General\n        Columns\n      \n      \n        \n          \n            Title\n            \n              \n            \n          \n          \n            Theme\n            \n              \n                {{getDisplay(themeChoices, config.theme)}}\n              \n              \n                \n                  \n                    {{theme.display}}\n                  \n                \n              \n            \n          \n          \n            Column Headers\n            \n              \n              \n            \n          \n          \n            Fixed Columns\n            \n              \n            \n          \n          \n            Page Size\n            \n              \n            \n          \n          \n            Page Sizes\n            \n              \n            \n          \n          \n            Visible Rows\n            \n              \n            \n          \n        \n      \n      \n        \n          \n            {{column.name}}\n          \n        \n        \n          \n            Position\n            \n              \n              \n              \n              \n            \n          \n          \n            Visible\n            \n              \n              \n            \n          \n          \n            Width (px)\n            \n              \n            \n          \n          \n            Width (%)\n            \n              \n            \n          \n          \n            Min Width (px)\n            \n              \n            \n          \n          \n            Max Width (px)\n            \n              \n            \n          \n        \n      \n    \n  `,\n  styles: [`\n    \n      .window {\n        min-width: 40vw;\n        max-width: 40vw;\n        background-color: white;\n        border: black 1px solid;\n        border-bottom-left-radius: 15px;\n        border-bottom-right-radius: 15px;\n      }\n      \n      .panel {\n        margin-top: 5px;\n        margin-bottom: 15px;\n      }\n      \n      .header {\n        border-bottom: black 1px solid;\n        display: inline-flex;\n        width: 100%;\n        padding: 5px;\n      }\n\n      .sub-header {\n        border-bottom: black 1px solid;\n        display: flex;\n        padding: 5px;\n        overflow-x: auto;\n      }\n\n      .header .bubble, .sub-header .bubble {\n        margin-right: 10px;\n        background-color: lightblue;\n        border: gray 1px solid;\n        padding: 3px 6px;\n        border-radius: 10px;\n        white-space: nowrap;\n      }\n\n      .header .bubble.selected, .sub-header .bubble.selected {\n        border: red 2px solid;\n      }\n\n      .pr-2 {\n        padding-right: 0.5rem;\n      }\n      \n      .cfg-row {\n        display: flex;\n        padding: 5px;\n        align-items: center;\n      }\n\n      .cfg-row .label {\n        flex: 1 1 50%;\n      }\n\n      .cfg-row .input {\n        flex: 1 1 50%;\n      }\n\n      .cfg-row:nth-child(even) {\n        background: #f0f0f0;\n      }\n      \n      .input.checkbox {\n        color: red;\n      }\n      \n      .input.checkbox.checked {\n        color: green;\n      }\n      \n      .pad {\n        padding: 0.5rem 0.5rem;\n      }\n  `]\n})\nexport class ConfigMenuComponent implements OnInit, OnDestroy {\n\n  @Input() grid: GridComponent;\n\n  state: number = 1;\n\n  config: any;\n  selectedColumn: any;\n\n  configSubscription: Subscription;\n\n  themeChoices: Dictionary[];\n\n  constructor(private gridGlobalService: GridGlobalService, private changeDetectorRef: ChangeDetectorRef) {}\n\n  ngOnInit() {\n    this.themeChoices = this.gridGlobalService.themeChoices;\n\n    this.grid.getGridService().getConfigSubject().subscribe((config: any) => {\n      this.config = config;\n    });\n  }\n\n  ngOnDestroy() {\n    if (this.configSubscription) {\n      this.configSubscription.unsubscribe();\n    }\n  }\n\n  getDisplay(choices: Dictionary[], value: string) {\n    for (let choice of choices) {\n      if (choice.value === value) {\n        return choice.display;\n      }\n    }\n    return \"N/A\";\n  }\n\n  setState(state: number) {\n    this.state = state;\n    this.selectedColumn = this.config.columns[0];\n  }\n\n  updateSortOrder(field: string, position: number) {\n    this.grid.getGridService().updateSortOrder(field, position);\n  }\n\n  updateArray(key: string, value: any[]) {\n    if (isDevMode()) {\n      console.debug(\"ConfigMenuComponent.updateArray: \" + key);\n      console.debug(value);\n    }\n\n    let config = {};\n    config[key] = value;\n    this.grid.getGridService().updateConfig(config);\n    this.grid.doRender();\n  }\n\n  update(key: string, value: any) {\n    if (isDevMode()) {\n      console.debug(\"ConfigMenuComponent.update: \" + key);\n      console.debug(value);\n    }\n\n    let config = {};\n    config[key] = value;\n    this.grid.getGridService().updateConfig(config);\n  }\n\n  setSelectedColumn(column: any) {\n    this.selectedColumn = column;\n    this.changeDetectorRef.detectChanges();\n  }\n\n  updateColumn(key: string, value: any) {\n    let i: number = 0;\n    for (i = 0; i \n    \n\n\n    \n            \n    \n      .window {\n        min-width: 40vw;\n        max-width: 40vw;\n        background-color: white;\n        border: black 1px solid;\n        border-bottom-left-radius: 15px;\n        border-bottom-right-radius: 15px;\n      }\n      \n      .panel {\n        margin-top: 5px;\n        margin-bottom: 15px;\n      }\n      \n      .header {\n        border-bottom: black 1px solid;\n        display: inline-flex;\n        width: 100%;\n        padding: 5px;\n      }\n\n      .sub-header {\n        border-bottom: black 1px solid;\n        display: flex;\n        padding: 5px;\n        overflow-x: auto;\n      }\n\n      .header .bubble, .sub-header .bubble {\n        margin-right: 10px;\n        background-color: lightblue;\n        border: gray 1px solid;\n        padding: 3px 6px;\n        border-radius: 10px;\n        white-space: nowrap;\n      }\n\n      .header .bubble.selected, .sub-header .bubble.selected {\n        border: red 2px solid;\n      }\n\n      .pr-2 {\n        padding-right: 0.5rem;\n      }\n      \n      .cfg-row {\n        display: flex;\n        padding: 5px;\n        align-items: center;\n      }\n\n      .cfg-row .label {\n        flex: 1 1 50%;\n      }\n\n      .cfg-row .input {\n        flex: 1 1 50%;\n      }\n\n      .cfg-row:nth-child(even) {\n        background: #f0f0f0;\n      }\n      \n      .input.checkbox {\n        color: red;\n      }\n      \n      .input.checkbox.checked {\n        color: green;\n      }\n      \n      .pad {\n        padding: 0.5rem 0.5rem;\n      }\n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      General    Columns                      Title                                              Theme                              {{getDisplay(themeChoices, config.theme)}}                                                              {{theme.display}}                                                                Column Headers                                                        Fixed Columns                                              Page Size                                              Page Sizes                                              Visible Rows                                                          {{column.name}}                            Position                                                                            Visible                                                        Width (px)                                              Width (%)                                              Min Width (px)                                              Max Width (px)                                      '\n    var COMPONENTS = [{'name': 'BigTextPopup', 'selector': 'hci-bigtext-popup'},{'name': 'ChoiceEditRenderer', 'selector': 'hci-grid-choice-edit'},{'name': 'ColumnHeaderComponent', 'selector': 'hci-column-header'},{'name': 'CompareFilterRenderer', 'selector': 'hci-grid-compare-filter'},{'name': 'ConfigMenuComponent', 'selector': 'hci-grid-config-menu'},{'name': 'ConfigMultiChoiceComponent', 'selector': 'hci-grid-multi-choice'},{'name': 'GridComponent', 'selector': 'hci-grid'},{'name': 'SelectFilterRenderer', 'selector': 'hci-grid-select-filter'},{'name': 'TextEditRenderer', 'selector': 'hci-grid-text-edit'},{'name': 'TextFilterRenderer', 'selector': 'hci-grid-text-filter'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ConfigMenuComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ConfigMultiChoiceComponent.html":{"url":"components/ConfigMultiChoiceComponent.html","title":"component - ConfigMultiChoiceComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ConfigMultiChoiceComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/grid/config/config-multi-choice.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                hci-grid-multi-choice\n            \n\n\n            \n                styles\n                \n      .bubble {\n        display: flex;\n        padding: 5px 10px;\n        background-color: lightblue;\n        border-radius: 15px;\n        margin-right: 10px;\n        margin-bottom: 2px;\n      }\n    \n            \n\n            \n                template\n                \n  \n    {{o}}\n    {{getDisplay(o)}}\n    \n      \n    \n  \n  \n    \n      \n        \n      \n    \n    \n      \n    \n  \n  \n    \n      \n        \n          \n        \n      \n      \n        \n          \n            {{choice[display]}}\n          \n        \n      \n    \n  \n\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                adding\n                            \n                            \n                                newValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addChoice\n                            \n                            \n                                addInput\n                            \n                            \n                                getDisplay\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                remove\n                            \n                            \n                                sortModel\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                choices\n                            \n                            \n                                display\n                            \n                            \n                                model\n                            \n                            \n                                sort\n                            \n                            \n                                value\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                modelChange\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        choices\n                    \n                \n                \n                    \n                        Type :     any[]\n\n                    \n                \n                        \n                            \n                                    Defined in src/grid/config/config-multi-choice.component.ts:69\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        display\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/grid/config/config-multi-choice.component.ts:66\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        model\n                    \n                \n                \n                    \n                        Type :     any[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                    Defined in src/grid/config/config-multi-choice.component.ts:64\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        sort\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/grid/config/config-multi-choice.component.ts:67\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/grid/config/config-multi-choice.component.ts:65\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        modelChange\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/grid/config/config-multi-choice.component.ts:71\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            addChoice\n                        \n                        \n                    \n                \n            \n            \n                \naddChoice(o: any)\n                \n            \n\n\n            \n                \n                    Defined in src/grid/config/config-multi-choice.component.ts:115\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    o\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            addInput\n                        \n                        \n                    \n                \n            \n            \n                \naddInput(event: KeyboardEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/grid/config/config-multi-choice.component.ts:95\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                            KeyboardEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getDisplay\n                        \n                        \n                    \n                \n            \n            \n                \ngetDisplay(value: any)\n                \n            \n\n\n            \n                \n                    Defined in src/grid/config/config-multi-choice.component.ts:86\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/grid/config/config-multi-choice.component.ts:76\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            remove\n                        \n                        \n                    \n                \n            \n            \n                \nremove(event: Event, o: any)\n                \n            \n\n\n            \n                \n                    Defined in src/grid/config/config-multi-choice.component.ts:175\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                Event\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    o\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            sortModel\n                        \n                        \n                    \n                \n            \n            \n                \nsortModel()\n                \n            \n\n\n            \n                \n                    Defined in src/grid/config/config-multi-choice.component.ts:125\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            adding\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/grid/config/config-multi-choice.component.ts:74\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            newValue\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/grid/config/config-multi-choice.component.ts:73\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {Component, EventEmitter, Input, isDevMode, Output} from \"@angular/core\";\n\n@Component({\n  selector: \"hci-grid-multi-choice\",\n  template: `\n    \n      \n        {{o}}\n        {{getDisplay(o)}}\n        \n          \n        \n      \n      \n        \n          \n            \n          \n        \n        \n          \n        \n      \n      \n        \n          \n            \n              \n            \n          \n          \n            \n              \n                {{choice[display]}}\n              \n            \n          \n        \n      \n    \n  `,\n  styles: [\n    `\n      .bubble {\n        display: flex;\n        padding: 5px 10px;\n        background-color: lightblue;\n        border-radius: 15px;\n        margin-right: 10px;\n        margin-bottom: 2px;\n      }\n    `\n  ]\n})\nexport class ConfigMultiChoiceComponent {\n\n  @Input() model: any[] = [];\n  @Input() value: string;\n  @Input() display: string;\n  @Input() sort: string;\n\n  @Input() choices: any[];\n\n  @Output() modelChange: EventEmitter = new EventEmitter();\n\n  newValue: any;\n  adding: boolean = false;\n\n  ngOnInit() {\n    if (this.value && !this.display) {\n      this.display = this.value;\n    }\n\n    if (isDevMode()) {\n      console.debug(\"ConfigMultiChoiceComponent.ngOnInit: value: \" + this.value + \", display: \" + this.display);\n    }\n  }\n\n  getDisplay(value: any) {\n    for (let choice of this.choices) {\n      if (value === choice[this.value]) {\n        return choice[this.display];\n      }\n    }\n    return \"N/A\";\n  }\n\n  addInput(event: KeyboardEvent) {\n    if (isDevMode()) {\n      console.debug(\"addInput\");\n    }\n    if (!this.model) {\n      this.model = [];\n    }\n    this.newValue = (event.target).value;\n\n    if (event.keyCode === 13) {\n      this.model.push(this.newValue);\n      this.sortModel();\n      this.modelChange.emit(this.model);\n      this.adding = false;\n    } else if (event.keyCode === 27) {\n      this.newValue = \"\";\n      this.adding = false;\n    }\n  }\n\n  addChoice(o: any) {\n    if (!this.model) {\n      this.model = [];\n    }\n    this.model.push(o[this.value]);\n    this.sortModel();\n    this.modelChange.emit(this.model);\n    this.adding = false;\n  }\n\n  sortModel() {\n    if (!this.sort) {\n      return;\n    } else if (this.sort === \"string\") {\n      if (this.value) {\n        this.model.sort((a: any, b: any) => {\n          if (a[this.value]  b[this.value]) {\n            return 1;\n          } else {\n            return 0;\n          }\n        });\n      } else {\n        this.model.sort((a: any, b: any) => {\n          if (a  b) {\n            return 1;\n          } else {\n            return 0;\n          }\n        });\n      }\n    } else if (this.sort === \"number\") {\n      if (this.value) {\n        this.model.sort((a: any, b: any) => {\n          if (+a[this.value]  +b[this.value]) {\n            return 1;\n          } else {\n            return 0;\n          }\n        });\n      } else {\n        this.model.sort((a: any, b: any) => {\n          if (+a  +b) {\n            return 1;\n          } else {\n            return 0;\n          }\n        });\n      }\n    }\n  }\n\n  remove(event: Event, o: any) {\n    event.stopPropagation();\n\n    let i: number = 0;\n    for (i = 0; i \n    \n\n\n    \n            \n      .bubble {\n        display: flex;\n        padding: 5px 10px;\n        background-color: lightblue;\n        border-radius: 15px;\n        margin-right: 10px;\n        margin-bottom: 2px;\n      }\n    \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{o}}    {{getDisplay(o)}}                                                                                                                                              {{choice[display]}}                              '\n    var COMPONENTS = [{'name': 'BigTextPopup', 'selector': 'hci-bigtext-popup'},{'name': 'ChoiceEditRenderer', 'selector': 'hci-grid-choice-edit'},{'name': 'ColumnHeaderComponent', 'selector': 'hci-column-header'},{'name': 'CompareFilterRenderer', 'selector': 'hci-grid-compare-filter'},{'name': 'ConfigMenuComponent', 'selector': 'hci-grid-config-menu'},{'name': 'ConfigMultiChoiceComponent', 'selector': 'hci-grid-multi-choice'},{'name': 'GridComponent', 'selector': 'hci-grid'},{'name': 'SelectFilterRenderer', 'selector': 'hci-grid-select-filter'},{'name': 'TextEditRenderer', 'selector': 'hci-grid-text-edit'},{'name': 'TextFilterRenderer', 'selector': 'hci-grid-text-filter'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ConfigMultiChoiceComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DateIso8601Formatter.html":{"url":"classes/DateIso8601Formatter.html","title":"class - DateIso8601Formatter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DateIso8601Formatter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/grid/column/formatters/date-iso8601.formatter.ts\n        \n\n            \n                Description\n            \n            \n                Designed to work with dates coming from the backend in the ISO 8601 date format of YYYY-MM-DD.\n\n            \n\n            \n                Extends\n            \n            \n                        FormatterParser\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                format\n                            \n                            \n                                config\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                formatValue\n                            \n                            \n                                parseValue\n                            \n                            \n                                setConfig\n                            \n                            \n                                formatValue\n                            \n                            \n                                parseValue\n                            \n                            \n                                setConfig\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            format\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"MM/DD/YYYY\"\n                        \n                    \n                        \n                            \n                                    Defined in src/grid/column/formatters/date-iso8601.formatter.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            config\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                            \n                                \n                                    Inherited from         FormatterParser\n\n                                \n                            \n                        \n                            \n                                    Defined in         FormatterParser:6\n\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            formatValue\n                        \n                        \n                    \n                \n            \n            \n                \nformatValue(value: any)\n                \n            \n\n\n            \n                \n                    Defined in src/grid/column/formatters/date-iso8601.formatter.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            parseValue\n                        \n                        \n                    \n                \n            \n            \n                \nparseValue(value: any)\n                \n            \n\n\n            \n                \n                    Defined in src/grid/column/formatters/date-iso8601.formatter.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setConfig\n                        \n                        \n                    \n                \n            \n            \n                \nsetConfig(config: any)\n                \n            \n\n\n            \n                \n                    Defined in src/grid/column/formatters/date-iso8601.formatter.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            formatValue\n                        \n                        \n                    \n                \n            \n            \n                \nformatValue(value: any)\n                \n            \n\n\n            \n                \n                    Inherited from         FormatterParser\n\n                \n            \n            \n                \n                        Defined in         FormatterParser:12\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            parseValue\n                        \n                        \n                    \n                \n            \n            \n                \nparseValue(value: any)\n                \n            \n\n\n            \n                \n                    Inherited from         FormatterParser\n\n                \n            \n            \n                \n                        Defined in         FormatterParser:16\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setConfig\n                        \n                        \n                    \n                \n            \n            \n                \nsetConfig(config: any)\n                \n            \n\n\n            \n                \n                    Inherited from         FormatterParser\n\n                \n            \n            \n                \n                        Defined in         FormatterParser:8\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import * as moment from \"moment\";\n\nimport {FormatterParser} from \"./formatter-parser\";\n\n/**\n * Designed to work with dates coming from the backend in the ISO 8601 date format of YYYY-MM-DD.\n */\nexport class DateIso8601Formatter extends FormatterParser {\n\n  format: string = \"MM/DD/YYYY\";\n\n  setConfig(config: any) {\n    super.setConfig(config);\n\n    if (config.format) {\n      this.format = config.format;\n    }\n  }\n\n  formatValue(value: any): any {\n    if (value !== undefined) {\n      let date: string = moment(value).format(this.format);\n\n      if (date === \"Invalid date\") {\n        throw new Error(\"Could not format date.\");\n      } else {\n        return date;\n      }\n    } else {\n      return undefined;\n    }\n  }\n\n  parseValue(value: any): any {\n    if (value !== undefined) {\n      let date: string = moment(value, this.format).toISOString().substring(0, 10);\n\n      if (date === \"Invalid Date\") {\n        throw new Error(\"Could not format date.\");\n      } else {\n        return date;\n      }\n    } else {\n      return undefined;\n    }\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DateMsFormatter.html":{"url":"classes/DateMsFormatter.html","title":"class - DateMsFormatter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DateMsFormatter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/grid/column/formatters/date-ms.formatter.ts\n        \n\n\n            \n                Extends\n            \n            \n                        FormatterParser\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                format\n                            \n                            \n                                config\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                formatValue\n                            \n                            \n                                parseValue\n                            \n                            \n                                setConfig\n                            \n                            \n                                formatValue\n                            \n                            \n                                parseValue\n                            \n                            \n                                setConfig\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            format\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"MM/DD/YYYY\"\n                        \n                    \n                        \n                            \n                                    Defined in src/grid/column/formatters/date-ms.formatter.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            config\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                            \n                                \n                                    Inherited from         FormatterParser\n\n                                \n                            \n                        \n                            \n                                    Defined in         FormatterParser:6\n\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            formatValue\n                        \n                        \n                    \n                \n            \n            \n                \nformatValue(value: any)\n                \n            \n\n\n            \n                \n                    Defined in src/grid/column/formatters/date-ms.formatter.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            parseValue\n                        \n                        \n                    \n                \n            \n            \n                \nparseValue(value: any)\n                \n            \n\n\n            \n                \n                    Defined in src/grid/column/formatters/date-ms.formatter.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setConfig\n                        \n                        \n                    \n                \n            \n            \n                \nsetConfig(config: any)\n                \n            \n\n\n            \n                \n                    Defined in src/grid/column/formatters/date-ms.formatter.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            formatValue\n                        \n                        \n                    \n                \n            \n            \n                \nformatValue(value: any)\n                \n            \n\n\n            \n                \n                    Inherited from         FormatterParser\n\n                \n            \n            \n                \n                        Defined in         FormatterParser:12\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            parseValue\n                        \n                        \n                    \n                \n            \n            \n                \nparseValue(value: any)\n                \n            \n\n\n            \n                \n                    Inherited from         FormatterParser\n\n                \n            \n            \n                \n                        Defined in         FormatterParser:16\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setConfig\n                        \n                        \n                    \n                \n            \n            \n                \nsetConfig(config: any)\n                \n            \n\n\n            \n                \n                    Inherited from         FormatterParser\n\n                \n            \n            \n                \n                        Defined in         FormatterParser:8\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import * as moment from \"moment\";\n\nimport {FormatterParser} from \"./formatter-parser\";\n\nexport class DateMsFormatter extends FormatterParser {\n\n  format: string = \"MM/DD/YYYY\";\n\n  setConfig(config: any) {\n    super.setConfig(config);\n\n    if (config.format) {\n      this.format = config.format;\n    }\n  }\n\n  formatValue(value: any): any {\n    if (value !== undefined) {\n      let date: string = moment(value).format(this.format);\n\n      if (date === \"Invalid date\") {\n        throw new Error(\"Could not format date.\");\n      } else {\n        return date;\n      }\n    } else {\n      return undefined;\n    }\n  }\n\n  parseValue(value: any): any {\n    if (value !== undefined) {\n      let date: number = moment(value, this.format).toDate().getTime();\n\n      if (isNaN(date)) {\n        throw new Error(\"Could not format date.\");\n      } else {\n        return date;\n      }\n    } else {\n      return undefined;\n    }\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DblClickListener.html":{"url":"interfaces/DblClickListener.html","title":"interface - DblClickListener","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  DblClickListener\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/grid/event/dbl-click.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    dblclick\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            dblclick\n                        \n                        \n                    \n                \n            \n            \n                \ndblclick(event: MouseEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/grid/event/dbl-click.interface.ts:3\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                            MouseEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        export interface DblClickListener {\n\n  dblclick(event: MouseEvent): boolean;\n\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Dictionary.html":{"url":"interfaces/Dictionary.html","title":"interface - Dictionary","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Dictionary\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/grid/model/dictionary.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        display\n                                \n                                \n                                        value\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        display\n                                    \n                                \n                                \n                                    \n                                        display:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        value\n                                    \n                                \n                                \n                                    \n                                        value:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Dictionary {\n  value: string;\n  display: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/EmptyConstructor.html":{"url":"interfaces/EmptyConstructor.html","title":"interface - EmptyConstructor","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  EmptyConstructor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/grid/utils/empty.factory.ts\n        \n\n\n\n\n\n\n    \n\n\n    \n        export class EmptyFactory {\n  constructor(private emptyConstructor: EmptyConstructor) {}\n\n  getInstance(): T {\n    return new this.emptyConstructor();\n  }\n}\n\nexport interface EmptyConstructor {\n  new(): T;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/EmptyFactory.html":{"url":"classes/EmptyFactory.html","title":"class - EmptyFactory","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  EmptyFactory\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/grid/utils/empty.factory.ts\n        \n\n            \n                Description\n            \n            \n                Allows instantiation of any generic type if the type has no constructor arguments.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getInstance\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(emptyConstructor: EmptyConstructor)\n                    \n                \n                        \n                            \n                                Defined in src/grid/utils/empty.factory.ts:4\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        emptyConstructor\n                                                  \n                                                        \n                                                                        EmptyConstructor\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getInstance\n                        \n                        \n                    \n                \n            \n            \n                \ngetInstance()\n                \n            \n\n\n            \n                \n                    Defined in src/grid/utils/empty.factory.ts:7\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     T\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        export class EmptyFactory {\n  constructor(private emptyConstructor: EmptyConstructor) {}\n\n  getInstance(): T {\n    return new this.emptyConstructor();\n  }\n}\n\nexport interface EmptyConstructor {\n  new(): T;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/EventListener.html":{"url":"classes/EventListener.html","title":"class - EventListener","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  EventListener\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/grid/event/event-listener.ts\n        \n\n            \n                Description\n            \n            \n                Base class for listening to events.  This is created once such that it can have memory from event to event.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                grid\n                            \n                            \n                                gridEventService\n                            \n                            \n                                gridService\n                            \n                            \n                                stopEvent\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                setConfig\n                            \n                            \n                                setGrid\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(injector: Injector)\n                    \n                \n                        \n                            \n                                Defined in src/grid/event/event-listener.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        injector\n                                                  \n                                                        \n                                                                        Injector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            grid\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         GridComponent\n\n                        \n                    \n                        \n                            \n                                    Defined in src/grid/event/event-listener.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            gridEventService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         GridEventService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/grid/event/event-listener.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            gridService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         GridService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/grid/event/event-listener.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            stopEvent\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/grid/event/event-listener.ts:12\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setConfig\n                        \n                        \n                    \n                \n            \n            \n                \nsetConfig(config: any)\n                \n            \n\n\n            \n                \n                    Defined in src/grid/event/event-listener.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setGrid\n                        \n                        \n                    \n                \n            \n            \n                \nsetGrid(grid: GridComponent)\n                \n            \n\n\n            \n                \n                    Defined in src/grid/event/event-listener.ts:41\n                \n            \n\n\n            \n                \n                    Manually set the grid reference.  With creating new instance dynamically, was not able to inject services.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    grid\n                                    \n                                                GridComponent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {Injector, isDevMode} from \"@angular/core\";\n\nimport {GridComponent} from \"../grid.component\";\nimport {GridService} from \"../services/grid.service\";\nimport {GridEventService} from \"../services/grid-event.service\";\n\n/**\n * Base class for listening to events.  This is created once such that it can have memory from event to event.\n */\nexport class EventListener {\n\n  stopEvent: boolean = true;\n  grid: GridComponent;\n  gridService: GridService;\n  gridEventService: GridEventService;\n\n  constructor(injector: Injector) {\n    this.gridService = injector.get(GridService);\n    this.gridEventService = injector.get(GridEventService);\n\n    if (isDevMode()) {\n      console.debug(\"EventListener: constructor: \" + this.gridService.id);\n    }\n  }\n\n  setConfig(config: any) {\n    if (!config) {\n      return;\n    }\n\n    if (config.stopEvent !== undefined) {\n      this.stopEvent = config.stopEvent;\n    }\n  }\n\n  /**\n   * Manually set the grid reference.  With creating new instance dynamically, was not able to inject services.\n   *\n   * @param {GridComponent} grid\n   */\n  setGrid(grid: GridComponent) {\n    this.grid = grid;\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/EventListenerArg.html":{"url":"interfaces/EventListenerArg.html","title":"interface - EventListenerArg","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  EventListenerArg\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/grid/event/event-listener-arg.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        config\n                                \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        config\n                                    \n                                \n                                \n                                    \n                                        config:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     Type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {Type} from \"@angular/core\";\n\nexport interface EventListenerArg {\n  type: Type;\n  config?: any;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/EventMeta.html":{"url":"classes/EventMeta.html","title":"class - EventMeta","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  EventMeta\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/grid/utils/event-meta.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _alt\n                            \n                            \n                                    Private\n                                _ctrl\n                            \n                            \n                                    Private\n                                _shift\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                isNull\n                            \n                            \n                                toString\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    alt\n                                \n                                \n                                    ctrl\n                                \n                                \n                                    shift\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(alt: boolean, ctrl: boolean, shift: boolean)\n                    \n                \n                        \n                            \n                                Defined in src/grid/utils/event-meta.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        alt\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        ctrl\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        shift\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _alt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/grid/utils/event-meta.ts:3\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _ctrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/grid/utils/event-meta.ts:4\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _shift\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/grid/utils/event-meta.ts:5\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isNull\n                        \n                        \n                    \n                \n            \n            \n                \nisNull()\n                \n            \n\n\n            \n                \n                    Defined in src/grid/utils/event-meta.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            toString\n                        \n                        \n                    \n                \n            \n            \n                \ntoString()\n                \n            \n\n\n            \n                \n                    Defined in src/grid/utils/event-meta.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        alt\n                    \n                \n\n                \n                    \n                        getalt()\n                    \n                \n                            \n                                \n                                    Defined in src/grid/utils/event-meta.ts:21\n                                \n                            \n\n                \n                    \n                        setalt(alt: boolean)\n                    \n                \n                            \n                                \n                                    Defined in src/grid/utils/event-meta.ts:25\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            alt\n                                                    \n                                                            \n                                                                            boolean\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        ctrl\n                    \n                \n\n                \n                    \n                        getctrl()\n                    \n                \n                            \n                                \n                                    Defined in src/grid/utils/event-meta.ts:29\n                                \n                            \n\n                \n                    \n                        setctrl(ctrl: boolean)\n                    \n                \n                            \n                                \n                                    Defined in src/grid/utils/event-meta.ts:33\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            ctrl\n                                                    \n                                                            \n                                                                            boolean\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        shift\n                    \n                \n\n                \n                    \n                        getshift()\n                    \n                \n                            \n                                \n                                    Defined in src/grid/utils/event-meta.ts:37\n                                \n                            \n\n                \n                    \n                        setshift(shift: boolean)\n                    \n                \n                            \n                                \n                                    Defined in src/grid/utils/event-meta.ts:41\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            shift\n                                                    \n                                                            \n                                                                            boolean\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n    \n\n\n    \n        export class EventMeta {\n\n  private _alt: boolean = false;\n  private _ctrl: boolean = false;\n  private _shift: boolean = false;\n\n  constructor(alt: boolean, ctrl: boolean, shift: boolean) {\n    this._alt = alt;\n    this._ctrl = ctrl;\n    this._shift = shift;\n  }\n\n  isNull(): boolean {\n    return !this._alt && !this._ctrl && !this._shift;\n  }\n\n  toString(): string {\n    return \"EventMeta: { alt: \" + this._alt + \", ctrl: \" + this._ctrl + \", shift: \" + this._shift + \"}\";\n  }\n\n  get alt(): boolean {\n    return this._alt;\n  }\n\n  set alt(alt: boolean) {\n    this._alt = alt;\n  }\n\n  get ctrl(): boolean {\n    return this._ctrl;\n  }\n\n  set ctrl(ctrl: boolean) {\n    this._ctrl = ctrl;\n  }\n\n  get shift(): boolean {\n    return this._shift;\n  }\n\n  set shift(shift: boolean) {\n    this._shift = shift;\n  }\n\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FilterRenderer.html":{"url":"classes/FilterRenderer.html","title":"class - FilterRenderer","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FilterRenderer\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/grid/column/filterRenderers/filter-renderer.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                changeDetectorRef\n                            \n                            \n                                config\n                            \n                            \n                                elementRef\n                            \n                            \n                                filters\n                            \n                            \n                                gridService\n                            \n                            \n                                shared\n                            \n                            \n                                width\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                filter\n                            \n                            \n                                filtersSubscribe\n                            \n                            \n                                getConfig\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                reset\n                            \n                            \n                                setConfig\n                            \n                            \n                                stop\n                            \n                            \n                                toggleShared\n                            \n                            \n                                valueClear\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                column\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                close\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(gridService: GridService, elementRef: ElementRef, changeDetectorRef: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Defined in src/grid/column/filterRenderers/filter-renderer.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        gridService\n                                                  \n                                                        \n                                                                        GridService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        elementRef\n                                                  \n                                                        \n                                                                        ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        changeDetectorRef\n                                                  \n                                                        \n                                                                        ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            changeDetectorRef\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ChangeDetectorRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/grid/column/filterRenderers/filter-renderer.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            config\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in src/grid/column/filterRenderers/filter-renderer.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            elementRef\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ElementRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/grid/column/filterRenderers/filter-renderer.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            filters\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     HciFilterDto[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/grid/column/filterRenderers/filter-renderer.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            gridService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         GridService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/grid/column/filterRenderers/filter-renderer.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            shared\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/grid/column/filterRenderers/filter-renderer.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            width\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 250\n                        \n                    \n                        \n                            \n                                    Defined in src/grid/column/filterRenderers/filter-renderer.ts:16\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            filter\n                        \n                        \n                    \n                \n            \n            \n                \nfilter()\n                \n            \n\n\n            \n                \n                    Defined in src/grid/column/filterRenderers/filter-renderer.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            filtersSubscribe\n                        \n                        \n                    \n                \n            \n            \n                \nfiltersSubscribe()\n                \n            \n\n\n            \n                \n                    Defined in src/grid/column/filterRenderers/filter-renderer.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getConfig\n                        \n                        \n                    \n                \n            \n            \n                \ngetConfig()\n                \n            \n\n\n            \n                \n                    Defined in src/grid/column/filterRenderers/filter-renderer.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngAfterViewInit\n                        \n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in src/grid/column/filterRenderers/filter-renderer.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/grid/column/filterRenderers/filter-renderer.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            reset\n                        \n                        \n                    \n                \n            \n            \n                \nreset()\n                \n            \n\n\n            \n                \n                    Defined in src/grid/column/filterRenderers/filter-renderer.ts:62\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setConfig\n                        \n                        \n                    \n                \n            \n            \n                \nsetConfig(config: any)\n                \n            \n\n\n            \n                \n                    Defined in src/grid/column/filterRenderers/filter-renderer.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            stop\n                        \n                        \n                    \n                \n            \n            \n                \nstop(event: MouseEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/grid/column/filterRenderers/filter-renderer.ts:68\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                            MouseEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            toggleShared\n                        \n                        \n                    \n                \n            \n            \n                \ntoggleShared()\n                \n            \n\n\n            \n                \n                    Defined in src/grid/column/filterRenderers/filter-renderer.ts:72\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            valueClear\n                        \n                        \n                    \n                \n            \n            \n                \nvalueClear()\n                \n            \n\n\n            \n                \n                    Defined in src/grid/column/filterRenderers/filter-renderer.ts:77\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        column\n                    \n                \n                \n                    \n                        Type :         Column\n\n                    \n                \n                        \n                            \n                                    Defined in src/grid/column/filterRenderers/filter-renderer.ts:10\n                            \n                        \n            \n        \n\n            \n    Outputs\n        \n            \n                \n                    \n                        \n                        close\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/grid/column/filterRenderers/filter-renderer.ts:11\n                            \n                        \n            \n        \n\n\n\n    \n\n\n    \n        import {ChangeDetectorRef, ElementRef, EventEmitter, Input, Output} from \"@angular/core\";\n\nimport {HciFilterDto} from \"hci-ng-grid-dto\";\n\nimport {Column} from \"../column\";\nimport {GridService} from \"../../services/grid.service\";\n\nexport class FilterRenderer {\n\n  @Input() column: Column;\n  @Output() close: EventEmitter = new EventEmitter();\n\n  filters: HciFilterDto[];\n  config: any = {};\n  shared = false;\n  width: number = 250;\n  gridService: GridService;\n  elementRef: ElementRef;\n  changeDetectorRef: ChangeDetectorRef;\n\n  constructor(gridService: GridService, elementRef: ElementRef, changeDetectorRef: ChangeDetectorRef) {\n    this.gridService = gridService;\n    this.elementRef = elementRef;\n    this.changeDetectorRef = changeDetectorRef;\n  }\n\n  ngOnInit() {\n    this.filtersSubscribe();\n  }\n\n  ngAfterViewInit() {\n    this.changeDetectorRef.detectChanges();\n  }\n\n  filtersSubscribe() {\n    this.gridService.getFilterMapSubject().subscribe((filterMap: Map) => {\n      if (this.column) {\n        if (filterMap.has(this.column.field)) {\n          this.filters = filterMap.get(this.column.field);\n        } else {\n          this.reset();\n          this.gridService.addFilters(this.column.field, this.filters);\n        }\n      }\n    });\n  }\n\n  filter() {\n    // To Override\n  }\n\n  getConfig(): any {\n    return this.config;\n  }\n\n  setConfig(config: any) {\n    if (config) {\n      this.config = config;\n    }\n  }\n\n  reset() {\n    if (!this.filters) {\n      this.filters = [];\n    }\n  }\n\n  stop(event: MouseEvent) {\n    event.stopPropagation();\n  }\n\n  toggleShared() {\n    this.shared = !this.shared;\n    this.filter();\n  }\n\n  valueClear() {\n    this.close.emit(true);\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FormatterParser.html":{"url":"classes/FormatterParser.html","title":"class - FormatterParser","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FormatterParser\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/grid/column/formatters/formatter-parser.ts\n        \n\n            \n                Description\n            \n            \n                Most simple formatter parser which just returns the value without modification.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                config\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                formatValue\n                            \n                            \n                                parseValue\n                            \n                            \n                                setConfig\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            config\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in src/grid/column/formatters/formatter-parser.ts:6\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            formatValue\n                        \n                        \n                    \n                \n            \n            \n                \nformatValue(value: any)\n                \n            \n\n\n            \n                \n                    Defined in src/grid/column/formatters/formatter-parser.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            parseValue\n                        \n                        \n                    \n                \n            \n            \n                \nparseValue(value: any)\n                \n            \n\n\n            \n                \n                    Defined in src/grid/column/formatters/formatter-parser.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setConfig\n                        \n                        \n                    \n                \n            \n            \n                \nsetConfig(config: any)\n                \n            \n\n\n            \n                \n                    Defined in src/grid/column/formatters/formatter-parser.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        export class FormatterParser {\n\n  config: any = {};\n\n  setConfig(config: any) {\n    this.config = config;\n  }\n\n  formatValue(value: any): any {\n    return value;\n  }\n\n  parseValue(value: any): any {\n    return value;\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GridEventService.html":{"url":"injectables/GridEventService.html","title":"injectable - GridEventService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  GridEventService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/grid/services/grid-event.service.ts\n        \n\n            \n                Description\n            \n            \n                This service specifically handles events such as key strokes and clicks when such events change what cell or cells\nare selected.  It also then emits the new selected cell or range of cells so the grid can update rendering.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                currentRange\n                            \n                            \n                                    Private\n                                lastDx\n                            \n                            \n                                    Private\n                                lastDy\n                            \n                            \n                                    Private\n                                lastEvent\n                            \n                            \n                                    Private\n                                nColumns\n                            \n                            \n                                    Private\n                                newRow\n                            \n                            \n                                    Private\n                                selectedLocation\n                            \n                            \n                                    Private\n                                selectedLocationSubject\n                            \n                            \n                                    Private\n                                selectedRange\n                            \n                            \n                                    Private\n                                unselectSubject\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                arrowFrom\n                            \n                            \n                                arrowFromLocation\n                            \n                            \n                                clearSelectedLocation\n                            \n                            \n                                getCurrentRange\n                            \n                            \n                                getLastDx\n                            \n                            \n                                getLastDy\n                            \n                            \n                                getSelectedLocation\n                            \n                            \n                                getSelectedLocationSubject\n                            \n                            \n                                getSelectedRange\n                            \n                            \n                                getUnselectSubject\n                            \n                            \n                                isLastEventArrow\n                            \n                            \n                                isLastEventClick\n                            \n                            \n                                isLastEventTab\n                            \n                            \n                                repeatLastEvent\n                            \n                            \n                                setCurrentLocation\n                            \n                            \n                                setMouseDragSelected\n                            \n                            \n                                setNColumns\n                            \n                            \n                                setSelectedLocation\n                            \n                            \n                                setSelectedRange\n                            \n                            \n                                tabFrom\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(gridService: GridService)\n                    \n                \n                        \n                            \n                                Defined in src/grid/services/grid-event.service.ts:36\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        gridService\n                                                  \n                                                        \n                                                                        GridService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            arrowFrom\n                        \n                        \n                    \n                \n            \n            \n                \narrowFrom(location: Point, dx: number, dy: number, eventMeta: EventMeta)\n                \n            \n\n\n            \n                \n                    Defined in src/grid/services/grid-event.service.ts:151\n                \n            \n\n\n            \n                \n                    Changes the current location based on the location passed to it plus the direction of the arrow key.  For example,\ndx=-1 and dy=0 in the case of a left arrow click.  If the new location is greater than the number of columns, then\nmove to the next row down.  If the column is NOT visible, then keep iterating dx+1 until there is a visible one.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    location\n                                    \n                                                Point\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    dx\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    dy\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    eventMeta\n                                    \n                                                EventMeta\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            arrowFromLocation\n                        \n                        \n                    \n                \n            \n            \n                \narrowFromLocation(i: number, j: number, keyCode: number)\n                \n            \n\n\n            \n                \n                    Defined in src/grid/services/grid-event.service.ts:130\n                \n            \n\n\n            \n                \n                    Called when an arrow key is pressed from the cell at i and j.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    i\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    j\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    keyCode\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            clearSelectedLocation\n                        \n                        \n                    \n                \n            \n            \n                \nclearSelectedLocation()\n                \n            \n\n\n            \n                \n                    Defined in src/grid/services/grid-event.service.ts:69\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getCurrentRange\n                        \n                        \n                    \n                \n            \n            \n                \ngetCurrentRange()\n                \n            \n\n\n            \n                \n                    Defined in src/grid/services/grid-event.service.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Range\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getLastDx\n                        \n                        \n                    \n                \n            \n            \n                \ngetLastDx()\n                \n            \n\n\n            \n                \n                    Defined in src/grid/services/grid-event.service.ts:234\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         number\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getLastDy\n                        \n                        \n                    \n                \n            \n            \n                \ngetLastDy()\n                \n            \n\n\n            \n                \n                    Defined in src/grid/services/grid-event.service.ts:238\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         number\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getSelectedLocation\n                        \n                        \n                    \n                \n            \n            \n                \ngetSelectedLocation()\n                \n            \n\n\n            \n                \n                    Defined in src/grid/services/grid-event.service.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Point\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getSelectedLocationSubject\n                        \n                        \n                    \n                \n            \n            \n                \ngetSelectedLocationSubject()\n                \n            \n\n\n            \n                \n                    Defined in src/grid/services/grid-event.service.ts:246\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Subject\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getSelectedRange\n                        \n                        \n                    \n                \n            \n            \n                \ngetSelectedRange()\n                \n            \n\n\n            \n                \n                    Defined in src/grid/services/grid-event.service.ts:250\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Subject\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getUnselectSubject\n                        \n                        \n                    \n                \n            \n            \n                \ngetUnselectSubject()\n                \n            \n\n\n            \n                \n                    Defined in src/grid/services/grid-event.service.ts:242\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Subject\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isLastEventArrow\n                        \n                        \n                    \n                \n            \n            \n                \nisLastEventArrow()\n                \n            \n\n\n            \n                \n                    Defined in src/grid/services/grid-event.service.ts:254\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isLastEventClick\n                        \n                        \n                    \n                \n            \n            \n                \nisLastEventClick()\n                \n            \n\n\n            \n                \n                    Defined in src/grid/services/grid-event.service.ts:258\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isLastEventTab\n                        \n                        \n                    \n                \n            \n            \n                \nisLastEventTab()\n                \n            \n\n\n            \n                \n                    Defined in src/grid/services/grid-event.service.ts:262\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            repeatLastEvent\n                        \n                        \n                    \n                \n            \n            \n                \nrepeatLastEvent()\n                \n            \n\n\n            \n                \n                    Defined in src/grid/services/grid-event.service.ts:218\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setCurrentLocation\n                        \n                        \n                    \n                \n            \n            \n                \nsetCurrentLocation(location: Point)\n                \n            \n\n\n            \n                \n                    Defined in src/grid/services/grid-event.service.ts:60\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    location\n                                    \n                                                Point\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setMouseDragSelected\n                        \n                        \n                    \n                \n            \n            \n                \nsetMouseDragSelected(location: Point)\n                \n            \n\n\n            \n                \n                    Defined in src/grid/services/grid-event.service.ts:75\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    location\n                                    \n                                                Point\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setNColumns\n                        \n                        \n                    \n                \n            \n            \n                \nsetNColumns(nColumns: number)\n                \n            \n\n\n            \n                \n                    Defined in src/grid/services/grid-event.service.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    nColumns\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setSelectedLocation\n                        \n                        \n                    \n                \n            \n            \n                \nsetSelectedLocation(location: Point, eventMeta: EventMeta)\n                \n            \n\n\n            \n                \n                    Defined in src/grid/services/grid-event.service.ts:92\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    location\n                                    \n                                                Point\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    eventMeta\n                                    \n                                                EventMeta\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setSelectedRange\n                        \n                        \n                    \n                \n            \n            \n                \nsetSelectedRange(location: Point, eventMeta: EventMeta)\n                \n            \n\n\n            \n                \n                    Defined in src/grid/services/grid-event.service.ts:108\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    location\n                                    \n                                                Point\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    eventMeta\n                                    \n                                                EventMeta\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            tabFrom\n                        \n                        \n                    \n                \n            \n            \n                \ntabFrom(location: Point, eventMeta: EventMeta)\n                \n            \n\n\n            \n                \n                    Defined in src/grid/services/grid-event.service.ts:208\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    location\n                                    \n                                                Point\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    eventMeta\n                                    \n                                                EventMeta\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            currentRange\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Range\n\n                        \n                    \n                        \n                            \n                                    Defined in src/grid/services/grid-event.service.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            lastDx\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/grid/services/grid-event.service.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            lastDy\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/grid/services/grid-event.service.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            lastEvent\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/grid/services/grid-event.service.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            nColumns\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/grid/services/grid-event.service.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            newRow\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Row\n\n                        \n                    \n                        \n                            \n                                    Defined in src/grid/services/grid-event.service.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            selectedLocation\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Point\n\n                        \n                    \n                    \n                        \n                            Default value : new Point(-1, -1)\n                        \n                    \n                        \n                            \n                                    Defined in src/grid/services/grid-event.service.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            selectedLocationSubject\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in src/grid/services/grid-event.service.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            selectedRange\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in src/grid/services/grid-event.service.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            unselectSubject\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in src/grid/services/grid-event.service.ts:27\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import {Injectable, isDevMode} from \"@angular/core\";\n\nimport {Subject} from \"rxjs\";\n\nimport {GridService} from \"./grid.service\";\nimport {Point} from \"../utils/point\";\nimport {Range} from \"../utils/range\";\nimport {EventMeta} from \"../utils/event-meta\";\nimport {RowChange} from \"../utils/row-change\";\nimport {Row} from \"../row/row\";\n\nexport const CLICK = 0;\nexport const TAB = 1;\nexport const ARROW = 2;\n\n/**\n * This service specifically handles events such as key strokes and clicks when such events change what cell or cells\n * are selected.  It also then emits the new selected cell or range of cells so the grid can update rendering.\n */\n@Injectable()\nexport class GridEventService {\n\n  private nColumns: number = 0;\n  private selectedLocation: Point = new Point(-1, -1);\n  private selectedLocationSubject = new Subject();\n\n  private unselectSubject = new Subject();\n\n  private currentRange: Range;\n  private selectedRange = new Subject();\n\n  private lastDx: number = 0;\n  private lastDy: number = 0;\n  private lastEvent: number;\n\n  private newRow: Row;\n\n  constructor(private gridService: GridService) {\n    if (isDevMode()) {\n      console.debug(\"hci-grid: \" + this.gridService.id + \": GridEventService constructor\");\n    }\n\n    this.gridService.getNewRowSubject().subscribe((newRow: Row) => {\n      this.newRow = newRow;\n    });\n  }\n\n  getCurrentRange(): Range {\n    return this.currentRange;\n  }\n\n  getSelectedLocation(): Point {\n    return this.selectedLocation;\n  }\n\n  setNColumns(nColumns: number) {\n    this.nColumns = nColumns;\n  }\n\n  setCurrentLocation(location: Point) {\n    if (isDevMode()) {\n      console.debug(\"hci-grid: \" + this.gridService.id + \": GridEvent.setCurrentLocation: \" + (location ? location.toString() : \"undefined\"));\n    }\n\n    this.selectedLocation = location;\n    this.selectedLocationSubject.next(this.selectedLocation);\n  }\n\n  clearSelectedLocation() {\n    this.setSelectedLocation(new Point(-1, -1), undefined);\n    this.currentRange = undefined;\n    this.selectedRange.next(this.currentRange);\n  }\n\n  setMouseDragSelected(location: Point) {\n    if (isDevMode()) {\n      console.debug(\"hci-grid: \" + this.gridService.id + \": setMouseOnDownSelected: \" + ((location) ? location.toString() : \"undefined\"));\n    }\n\n    if (!location) {\n      return;\n    }\n\n    if (this.currentRange) {\n      this.currentRange.update(location);\n    } else {\n      this.currentRange = new Range(location, location);\n    }\n    this.selectedRange.next(this.currentRange);\n  }\n\n  setSelectedLocation(location: Point, eventMeta: EventMeta) {\n    if (isDevMode()) {\n      console.debug(\"hci-grid: \" + this.gridService.id + \": GridEvent.setSelectedLocation\");\n    }\n\n    if (!location) {\n      return;\n    } else if (location.isNegative()) {\n      this.setCurrentLocation(location);\n    } else if (!this.gridService.isColumnSelectable(location.j)) {\n      return;\n    } else if (!eventMeta) {\n      this.setCurrentLocation(location);\n    }\n  }\n\n  setSelectedRange(location: Point, eventMeta: EventMeta) {\n    this.selectedLocation = location;\n\n    if (!this.currentRange) {\n      this.currentRange = new Range(location, location);\n      this.selectedRange.next(this.currentRange);\n    } else if (!eventMeta || eventMeta.isNull()) {\n      this.currentRange.setInitial(location);\n      this.selectedRange.next(this.currentRange);\n    } else if (eventMeta.ctrl) {\n      this.currentRange.update(location);\n      this.selectedRange.next(this.currentRange);\n    }\n  }\n\n  /**\n   * Called when an arrow key is pressed from the cell at i and j.\n   *\n   * @param {number} i\n   * @param {number} j\n   * @param {number} keyCode\n   */\n  arrowFromLocation(i: number, j: number, keyCode: number) {\n    if (keyCode === 37) {\n      this.arrowFrom(new Point(i, j), -1, 0, undefined);\n    } else if (keyCode === 39) {\n      this.arrowFrom(new Point(i, j), 1, 0, undefined);\n    } else if (keyCode === 38) {\n      this.arrowFrom(new Point(i, j), 0, -1, undefined);\n    } else if (keyCode === 40) {\n      this.arrowFrom(new Point(i, j), 0, 1, undefined);\n    }\n  }\n\n  /**\n   * Changes the current location based on the location passed to it plus the direction of the arrow key.  For example,\n   * dx=-1 and dy=0 in the case of a left arrow click.  If the new location is greater than the number of columns, then\n   * move to the next row down.  If the column is NOT visible, then keep iterating dx+1 until there is a visible one.\n   *\n   * @param location\n   * @param dx\n   * @param dy\n   */\n  arrowFrom(location: Point, dx: number, dy: number, eventMeta: EventMeta) {\n    this.lastEvent = ARROW;\n\n    if (location) {\n      this.selectedLocation = location;\n    } else if ((!this.newRow && this.selectedLocation.isNegative()) || (this.newRow && this.selectedLocation.isNegative(true))) {\n      this.selectedLocation = new Point(0, 0);\n      this.selectedLocationSubject.next(this.selectedLocation);\n      return;\n    }\n\n    let oldRowNum: number = this.selectedLocation.i;\n\n    this.lastDx = dx;\n    this.lastDy = dy;\n\n    if (dx !== 0) {\n      do {\n        this.selectedLocation.j = this.selectedLocation.j + dx;\n        if (this.selectedLocation.j >= this.gridService.getNVisibleColumns()) {\n          if (this.selectedLocation.i >= 0) {\n            this.selectedLocation.i = this.selectedLocation.i + 1;\n          }\n          this.selectedLocation.j = 0;\n        }\n        if (this.selectedLocation.j  {\n    return this.unselectSubject;\n  }\n\n  getSelectedLocationSubject(): Subject {\n    return this.selectedLocationSubject;\n  }\n\n  getSelectedRange(): Subject {\n    return this.selectedRange;\n  }\n\n  isLastEventArrow(): boolean {\n    return this.lastEvent && this.lastEvent === ARROW;\n  }\n\n  isLastEventClick(): boolean {\n    return this.lastEvent && this.lastEvent === CLICK;\n  }\n\n  isLastEventTab(): boolean {\n    return this.lastEvent && this.lastEvent === TAB;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GridGlobalService.html":{"url":"injectables/GridGlobalService.html","title":"injectable - GridGlobalService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  GridGlobalService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/grid/services/grid-global.service.ts\n        \n\n            \n                Description\n            \n            \n                A singleton service that allows default configuration for all grids, grouping grids together, and referencing a grid\nfrom another grid.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                groupServiceMap\n                            \n                            \n                                tempId\n                            \n                            \n                                themeChoices\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                clearPushFilter\n                            \n                            \n                                getGlobalConfig\n                            \n                            \n                                pushConfigEvent\n                            \n                            \n                                pushGlobalConfig\n                            \n                            \n                                register\n                            \n                            \n                                registerGroup\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(globalConfig: any)\n                    \n                \n                        \n                            \n                                Defined in src/grid/services/grid-global.service.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        globalConfig\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            clearPushFilter\n                        \n                        \n                    \n                \n            \n            \n                \nclearPushFilter(group: string, id: string, field: string, filters: HciFilterDto[])\n                \n            \n\n\n            \n                \n                    Defined in src/grid/services/grid-global.service.ts:83\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    group\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    field\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    filters\n                                    \n                                            HciFilterDto[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getGlobalConfig\n                        \n                        \n                    \n                \n            \n            \n                \ngetGlobalConfig()\n                \n            \n\n\n            \n                \n                    Defined in src/grid/services/grid-global.service.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            pushConfigEvent\n                        \n                        \n                    \n                \n            \n            \n                \npushConfigEvent(group: string, id: string, config: any)\n                \n            \n\n\n            \n                \n                    Defined in src/grid/services/grid-global.service.ts:75\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    group\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    config\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            pushGlobalConfig\n                        \n                        \n                    \n                \n            \n            \n                \npushGlobalConfig(key: string, value: any)\n                \n            \n\n\n            \n                \n                    Defined in src/grid/services/grid-global.service.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            register\n                        \n                        \n                    \n                \n            \n            \n                \nregister(gridService: GridService)\n                \n            \n\n\n            \n                \n                    Defined in src/grid/services/grid-global.service.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    gridService\n                                    \n                                                GridService\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            registerGroup\n                        \n                        \n                    \n                \n            \n            \n                \nregisterGroup(group: string, gridService: GridService)\n                \n            \n\n\n            \n                \n                    Defined in src/grid/services/grid-global.service.ts:57\n                \n            \n\n\n            \n                \n                    When a grid is created, register itself with this service.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    group\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    gridService\n                                    \n                                                GridService\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            groupServiceMap\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Map\n\n                        \n                    \n                    \n                        \n                            Default value : new Map()\n                        \n                    \n                        \n                            \n                                    Defined in src/grid/services/grid-global.service.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            tempId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/grid/services/grid-global.service.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            themeChoices\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Dictionary[]\n\n                        \n                    \n                    \n                        \n                            Default value : [\n    {value: \"report\", display: \"Report\"},\n    {value: \"spreadsheet\", display: \"Spreadsheet\"}\n  ]\n                        \n                    \n                        \n                            \n                                    Defined in src/grid/services/grid-global.service.ts:18\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import {Inject, Injectable, isDevMode} from \"@angular/core\";\n\nimport {HciFilterDto} from \"hci-ng-grid-dto\";\n\nimport {Dictionary} from \"../model/dictionary.interface\";\nimport {GridService} from \"./grid.service\";\n\n/**\n * A singleton service that allows default configuration for all grids, grouping grids together, and referencing a grid\n * from another grid.\n */\n@Injectable()\nexport class GridGlobalService {\n\n  tempId: number = 0;\n  groupServiceMap: Map = new Map();\n\n  themeChoices: Dictionary[] = [\n    {value: \"report\", display: \"Report\"},\n    {value: \"spreadsheet\", display: \"Spreadsheet\"}\n  ];\n\n  constructor(@Inject(\"globalConfig\") private globalConfig: any) {\n    if (isDevMode()) {\n      console.debug(\"GridGlobalService: \" + JSON.stringify(globalConfig));\n    }\n\n    if (globalConfig.themeChoices) {\n      this.themeChoices = globalConfig.themeChoices;\n    }\n  }\n\n  getGlobalConfig(): any {\n    return this.globalConfig;\n  }\n\n  pushGlobalConfig(key: string, value: any) {\n    this.globalConfig[key] = value;\n  }\n\n  register(gridService: GridService) {\n    if (!gridService.id) {\n      gridService.id = \"hci-grid-\" + this.tempId++;\n    }\n\n    if (isDevMode()) {\n      console.debug(\"GridGlobalService.register: \" + gridService.id);\n    }\n  }\n\n  /**\n   * When a grid is created, register itself with this service.\n   *\n   * @param {string} group\n   * @param {GridService} gridService\n   */\n  registerGroup(group: string, gridService: GridService) {\n    if (!group) {\n      return;\n    }\n\n    if (isDevMode()) {\n      console.debug(\"GridGlobalService.registerGroup: group: \" + group + \", grid: \" + gridService.id);\n    }\n\n    if (this.groupServiceMap.has(group)) {\n      this.groupServiceMap.get(group).push(gridService);\n    } else {\n      let gridArray: GridService[] = [];\n      gridArray.push(gridService);\n      this.groupServiceMap.set(group, gridArray);\n    }\n  }\n\n  pushConfigEvent(group: string, id: string, config: any) {\n    for (let grid of this.groupServiceMap.get(group)) {\n      if (grid.id !== id) {\n        grid.updateConfig(config);\n      }\n    }\n  }\n\n  clearPushFilter(group: string, id: string, field: string, filters: HciFilterDto[]) {\n    for (let grid of this.groupServiceMap.get(group)) {\n      if (grid.id !== id) {\n        grid.addFilters(field, filters);\n        grid.filter();\n      }\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GridMessageService.html":{"url":"injectables/GridMessageService.html","title":"injectable - GridMessageService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  GridMessageService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/grid/services/grid-message.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _level\n                            \n                            \n                                    Private\n                                _message\n                            \n                            \n                                    Private\n                                _messageObservable\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                error\n                            \n                            \n                                warn\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    messageObservable\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            error\n                        \n                        \n                    \n                \n            \n            \n                \nerror(message: string)\n                \n            \n\n\n            \n                \n                    Defined in src/grid/services/grid-message.service.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            warn\n                        \n                        \n                    \n                \n            \n            \n                \nwarn(message: string)\n                \n            \n\n\n            \n                \n                    Defined in src/grid/services/grid-message.service.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _level\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 2\n                        \n                    \n                        \n                            \n                                    Defined in src/grid/services/grid-message.service.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _message\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subject\n\n                        \n                    \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in src/grid/services/grid-message.service.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _messageObservable\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this._message.asObservable()\n                        \n                    \n                        \n                            \n                                    Defined in src/grid/services/grid-message.service.ts:9\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        messageObservable\n                    \n                \n\n                \n                    \n                        getmessageObservable()\n                    \n                \n                            \n                                \n                                    Defined in src/grid/services/grid-message.service.ts:20\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import {Injectable} from \"@angular/core\";\n\nimport {Observable, Subject} from \"rxjs\";\n\n@Injectable()\nexport class GridMessageService {\n\n  private _message: Subject = new Subject();\n  private _messageObservable: Observable = this._message.asObservable();\n  private _level: number = 2;\n\n  error(message: string) {\n    this._message.next(\"ERROR: \" + message);\n  }\n\n  warn(message: string) {\n    this._message.next(\"WARN: \" + message);\n  }\n\n  get messageObservable(): Observable {\n    return this._messageObservable;\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/GridModule.html":{"url":"modules/GridModule.html","title":"module - GridModule","body":"\n                   \n\n\n\n\n    Modules\n    GridModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_GridModule\n\n\n\ncluster_GridModule_declarations\n\n\n\ncluster_GridModule_GridComponent_providers\n\n\n\ncluster_GridModule_exports\n\n\n\n\nBigTextPopup\n\nBigTextPopup\n\n\n\nGridModule\n\nGridModule\n\nGridModule -->\n\nBigTextPopup->GridModule\n\n\n\n\n\nChoiceEditRenderer\n\nChoiceEditRenderer\n\nGridModule -->\n\nChoiceEditRenderer->GridModule\n\n\n\n\n\nColumnHeaderComponent\n\nColumnHeaderComponent\n\nGridModule -->\n\nColumnHeaderComponent->GridModule\n\n\n\n\n\nCompareFilterRenderer\n\nCompareFilterRenderer\n\nGridModule -->\n\nCompareFilterRenderer->GridModule\n\n\n\n\n\nConfigMenuComponent\n\nConfigMenuComponent\n\nGridModule -->\n\nConfigMenuComponent->GridModule\n\n\n\n\n\nConfigMultiChoiceComponent\n\nConfigMultiChoiceComponent\n\nGridModule -->\n\nConfigMultiChoiceComponent->GridModule\n\n\n\n\n\nGridComponent\n\nGridComponent\n\nGridModule -->\n\nGridComponent->GridModule\n\n\n\n\n\nIsFixedPipe\n\nIsFixedPipe\n\nGridModule -->\n\nIsFixedPipe->GridModule\n\n\n\n\n\nIsGroupPipe\n\nIsGroupPipe\n\nGridModule -->\n\nIsGroupPipe->GridModule\n\n\n\n\n\nIsRowVisiblePipe\n\nIsRowVisiblePipe\n\nGridModule -->\n\nIsRowVisiblePipe->GridModule\n\n\n\n\n\nIsVisiblePipe\n\nIsVisiblePipe\n\nGridModule -->\n\nIsVisiblePipe->GridModule\n\n\n\n\n\nSelectFilterRenderer\n\nSelectFilterRenderer\n\nGridModule -->\n\nSelectFilterRenderer->GridModule\n\n\n\n\n\nTextEditRenderer\n\nTextEditRenderer\n\nGridModule -->\n\nTextEditRenderer->GridModule\n\n\n\n\n\nTextFilterRenderer\n\nTextFilterRenderer\n\nGridModule -->\n\nTextFilterRenderer->GridModule\n\n\n\n\n\nGridComponent \n\nGridComponent \n\nGridComponent  -->\n\nGridModule->GridComponent \n\n\n\n\n\nGridService\n\nGridService\n\nGridComponent -->\n\nGridService->GridComponent\n\n\n\n\n\nGridEventService\n\nGridEventService\n\nGridComponent -->\n\nGridEventService->GridComponent\n\n\n\n\n\nGridMessageService\n\nGridMessageService\n\nGridComponent -->\n\nGridMessageService->GridComponent\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/grid/grid.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            BigTextPopup\n                        \n                        \n                            ChoiceEditRenderer\n                        \n                        \n                            ColumnHeaderComponent\n                        \n                        \n                            CompareFilterRenderer\n                        \n                        \n                            ConfigMenuComponent\n                        \n                        \n                            ConfigMultiChoiceComponent\n                        \n                        \n                            GridComponent\n                        \n                        \n                            IsFixedPipe\n                        \n                        \n                            IsGroupPipe\n                        \n                        \n                            IsRowVisiblePipe\n                        \n                        \n                            IsVisiblePipe\n                        \n                        \n                            SelectFilterRenderer\n                        \n                        \n                            TextEditRenderer\n                        \n                        \n                            TextFilterRenderer\n                        \n                    \n                \n                \n                    EntryComponents\n                    \n                        \n                            BigTextPopup\n                        \n                        \n                            ChoiceEditRenderer\n                        \n                        \n                            CompareFilterRenderer\n                        \n                        \n                            SelectFilterRenderer\n                        \n                        \n                            TextEditRenderer\n                        \n                        \n                            TextFilterRenderer\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            GridComponent\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            forRoot\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    forRoot(globalConfig?: any, components?: any[])\n                \n            \n\n\n            \n                \n                    Defined in src/grid/grid.module.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    globalConfig\n                                    \n                                                any\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    components\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ModuleWithProviders\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            withComponents\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    withComponents(components: any[])\n                \n            \n\n\n            \n                \n                    Defined in src/grid/grid.module.ts:76\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    components\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ModuleWithProviders\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        /*\n * Copyright (c) 2016 Huntsman Cancer Institute at the University of Utah, Confidential and Proprietary\n */\nimport {ANALYZE_FOR_ENTRY_COMPONENTS, ModuleWithProviders, NgModule} from \"@angular/core\";\nimport {CommonModule} from \"@angular/common\";\nimport {FormsModule} from \"@angular/forms\";\nimport {MatMenuModule} from \"@angular/material/menu\";\n\nimport {GridComponent} from \"./grid.component\";\nimport {ColumnHeaderComponent} from \"./column/column-header.component\";\nimport {IsVisiblePipe} from \"./utils/is-visible.pipe\";\nimport {IsGroupPipe} from \"./utils/is-group.pipe\";\nimport {IsFixedPipe} from \"./utils/is-fixed.pipe\";\nimport {IsRowVisiblePipe} from \"./utils/is-row-visible.pipe\";\nimport {TextEditRenderer} from \"./cell/editRenderers/text-edit-renderer.component\";\nimport {TextFilterRenderer} from \"./column/filterRenderers/text-filter-renderer.component\";\nimport {CompareFilterRenderer} from \"./column/filterRenderers/compare-filter-renderer.component\";\nimport {ChoiceEditRenderer} from \"./cell/editRenderers/choice-edit-renderer.component\";\nimport {SelectFilterRenderer} from \"./column/filterRenderers/select-filter-renderer.component\";\nimport {BigTextPopup} from \"./cell/viewPopupRenderer/bigtext-popup.component\";\nimport {ConfigMenuComponent} from \"./config/config-menu.component\";\nimport {GridGlobalService} from \"./services/grid-global.service\";\nimport {ConfigMultiChoiceComponent} from \"./config/config-multi-choice.component\";\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    MatMenuModule\n  ],\n  declarations: [\n    GridComponent,\n    ColumnHeaderComponent,\n    IsVisiblePipe,\n    IsGroupPipe,\n    IsFixedPipe,\n    IsRowVisiblePipe,\n    TextEditRenderer,\n    ChoiceEditRenderer,\n    TextFilterRenderer,\n    SelectFilterRenderer,\n    CompareFilterRenderer,\n    BigTextPopup,\n    ConfigMenuComponent,\n    ConfigMultiChoiceComponent\n  ],\n  entryComponents: [\n    TextEditRenderer,\n    ChoiceEditRenderer,\n    TextFilterRenderer,\n    SelectFilterRenderer,\n    CompareFilterRenderer,\n    BigTextPopup\n  ],\n  exports: [\n    GridComponent\n  ]\n})\nexport class GridModule {\n\n  static forRoot(globalConfig?: any, components?: any[]): ModuleWithProviders {\n    return {\n      providers: [\n        GridGlobalService,\n        {provide: \"globalConfig\", useValue: (globalConfig) ? globalConfig : {}},\n        {\n          provide: ANALYZE_FOR_ENTRY_COMPONENTS,\n          useValue: components,\n          multi: true\n        }\n      ],\n      ngModule: GridModule\n    };\n  }\n\n  static withComponents(components: any[]): ModuleWithProviders {\n    return {\n      ngModule: GridModule,\n      providers: [\n        {\n          provide: ANALYZE_FOR_ENTRY_COMPONENTS,\n          useValue: components,\n          multi: true\n        }\n      ]\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GroupKeyListener.html":{"url":"classes/GroupKeyListener.html","title":"class - GroupKeyListener","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GroupKeyListener\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/grid/event/listeners/group-key.listener.ts\n        \n\n\n            \n                Extends\n            \n            \n                        EventListener\n            \n\n            \n                Implements\n            \n            \n                            ClickListener\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                multiSelect\n                            \n                            \n                                grid\n                            \n                            \n                                gridEventService\n                            \n                            \n                                gridService\n                            \n                            \n                                stopEvent\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                click\n                            \n                            \n                                setConfig\n                            \n                            \n                                setConfig\n                            \n                            \n                                setGrid\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            multiSelect\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/grid/event/listeners/group-key.listener.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            grid\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         GridComponent\n\n                        \n                    \n                            \n                                \n                                    Inherited from         EventListener\n\n                                \n                            \n                        \n                            \n                                    Defined in         EventListener:13\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            gridEventService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         GridEventService\n\n                        \n                    \n                            \n                                \n                                    Inherited from         EventListener\n\n                                \n                            \n                        \n                            \n                                    Defined in         EventListener:15\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            gridService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         GridService\n\n                        \n                    \n                            \n                                \n                                    Inherited from         EventListener\n\n                                \n                            \n                        \n                            \n                                    Defined in         EventListener:14\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            stopEvent\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : true\n                        \n                    \n                            \n                                \n                                    Inherited from         EventListener\n\n                                \n                            \n                        \n                            \n                                    Defined in         EventListener:12\n\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            click\n                        \n                        \n                    \n                \n            \n            \n                \nclick(event: MouseEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/grid/event/listeners/group-key.listener.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                            MouseEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setConfig\n                        \n                        \n                    \n                \n            \n            \n                \nsetConfig(config: any)\n                \n            \n\n\n            \n                \n                    Defined in src/grid/event/listeners/group-key.listener.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setConfig\n                        \n                        \n                    \n                \n            \n            \n                \nsetConfig(config: any)\n                \n            \n\n\n            \n                \n                    Inherited from         EventListener\n\n                \n            \n            \n                \n                        Defined in         EventListener:26\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setGrid\n                        \n                        \n                    \n                \n            \n            \n                \nsetGrid(grid: GridComponent)\n                \n            \n\n\n            \n                \n                    Inherited from         EventListener\n\n                \n            \n            \n                \n                        Defined in         EventListener:41\n\n                \n            \n\n\n            \n                \n                    Manually set the grid reference.  With creating new instance dynamically, was not able to inject services.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    grid\n                                    \n                                                GridComponent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {isDevMode} from \"@angular/core\";\n\nimport {ClickListener} from \"../click.interface\";\nimport {EventListener} from \"../event-listener\";\nimport {HtmlUtil} from \"../../utils/html-util\";\n\nexport class GroupKeyListener extends EventListener implements ClickListener {\n\n  multiSelect: boolean = false;\n\n  click(event: MouseEvent): boolean {\n    if (isDevMode()) {\n      console.debug(\"hci-grid: \" + this.grid.id + \": GroupKeyListener.click\");\n    }\n\n    let idElement: HTMLElement = HtmlUtil.getIdElement(event.target);\n    if (idElement !== null && idElement.classList.contains(\"group-key\")) {\n      event.stopPropagation();\n\n      let groupKey: string;\n      for (let className of idElement.classList.values()) {\n        if (className.startsWith(\"group-key-\")) {\n          groupKey = className.replace(\"group-key-\", \"\");\n          break;\n        }\n      }\n      this.gridService.expandCollapseRowGroup(groupKey);\n\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  setConfig(config: any) {\n    super.setConfig(config);\n\n    if (config.multiSelect !== undefined && config.multiSelect) {\n      this.multiSelect = config.multiSelect;\n    }\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/HtmlUtil.html":{"url":"classes/HtmlUtil.html","title":"class - HtmlUtil","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  HtmlUtil\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/grid/utils/html-util.ts\n        \n\n            \n                Description\n            \n            \n                Convenience class for pulling things such as id from an element.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                getId\n                            \n                            \n                                    Static\n                                getIdElement\n                            \n                            \n                                    Static\n                                getLocation\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            getId\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getId(e: HTMLElement, id?: string)\n                \n            \n\n\n            \n                \n                    Defined in src/grid/utils/html-util.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    e\n                                    \n                                            HTMLElement\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            getIdElement\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getIdElement(e: HTMLElement)\n                \n            \n\n\n            \n                \n                    Defined in src/grid/utils/html-util.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    e\n                                    \n                                            HTMLElement\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     HTMLElement\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            getLocation\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getLocation(e: HTMLElement)\n                \n            \n\n\n            \n                \n                    Defined in src/grid/utils/html-util.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    e\n                                    \n                                            HTMLElement\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Point\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {Point} from \"./point\";\n\n/**\n * Convenience class for pulling things such as id from an element.\n */\nexport class HtmlUtil {\n\n  static getId(e: HTMLElement, id?: string): string {\n    if (!e) {\n      return \"\";\n    }\n    while ((!id && e.id === \"\") || (id && !e.id.startsWith(id))) {\n      if (e.parentElement) {\n        e = e.parentElement;\n      } else {\n        break;\n      }\n    }\n\n    return e.id;\n  }\n\n  static getIdElement(e: HTMLElement): HTMLElement {\n    if (!e) {\n      return null;\n    }\n    while (e.id === \"\") {\n      if (e.parentElement) {\n        e = e.parentElement;\n      } else {\n        break;\n      }\n    }\n\n    return e;\n  }\n\n  static getLocation(e: HTMLElement): Point {\n    return Point.getPoint(this.getId(e));\n  }\n\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/InjectableConstructor.html":{"url":"interfaces/InjectableConstructor.html","title":"interface - InjectableConstructor","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  InjectableConstructor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/grid/utils/injectable.factory.ts\n        \n\n\n\n\n\n\n    \n\n\n    \n        import {Injector} from \"@angular/core\";\n\n/**\n * Allows instantiation of any generic type if the type expects an injector argument.  See the implementation of\n * the EventListener.\n */\nexport class InjectableFactory {\n  constructor(private ic: InjectableConstructor, private injector: Injector) {}\n\n  getInstance(): T {\n    return new this.ic(this.injector);\n  }\n}\n\nexport interface InjectableConstructor {\n  new(injector: Injector): T;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/InjectableFactory.html":{"url":"classes/InjectableFactory.html","title":"class - InjectableFactory","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  InjectableFactory\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/grid/utils/injectable.factory.ts\n        \n\n            \n                Description\n            \n            \n                Allows instantiation of any generic type if the type expects an injector argument.  See the implementation of\nthe EventListener.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getInstance\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(ic: InjectableConstructor, injector: Injector)\n                    \n                \n                        \n                            \n                                Defined in src/grid/utils/injectable.factory.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        ic\n                                                  \n                                                        \n                                                                        InjectableConstructor\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        injector\n                                                  \n                                                        \n                                                                        Injector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getInstance\n                        \n                        \n                    \n                \n            \n            \n                \ngetInstance()\n                \n            \n\n\n            \n                \n                    Defined in src/grid/utils/injectable.factory.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     T\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {Injector} from \"@angular/core\";\n\n/**\n * Allows instantiation of any generic type if the type expects an injector argument.  See the implementation of\n * the EventListener.\n */\nexport class InjectableFactory {\n  constructor(private ic: InjectableConstructor, private injector: Injector) {}\n\n  getInstance(): T {\n    return new this.ic(this.injector);\n  }\n}\n\nexport interface InjectableConstructor {\n  new(injector: Injector): T;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/IsFixedPipe.html":{"url":"pipes/IsFixedPipe.html","title":"pipe - IsFixedPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  IsFixedPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/grid/utils/is-fixed.pipe.ts\n        \n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        isFixed\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            transform\n                        \n                        \n                    \n                \n            \n            \n                \ntransform(list: Array, fixed: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/grid/utils/is-fixed.pipe.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    list\n                                    \n                                                Array\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    fixed\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from \"@angular/core\";\n\nimport { Column } from \"../column/column\";\n\n@Pipe({\n  name: \"isFixed\",\n  pure: false\n})\nexport class IsFixedPipe implements PipeTransform {\n  transform(list: Array, fixed: boolean) {\n    if (list === undefined) {\n      return list;\n    } else {\n      return list.filter((o: Column) => o.isFixed === fixed);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/IsGroupPipe.html":{"url":"pipes/IsGroupPipe.html","title":"pipe - IsGroupPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  IsGroupPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/grid/utils/is-group.pipe.ts\n        \n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        isGroup\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            transform\n                        \n                        \n                    \n                \n            \n            \n                \ntransform(list)\n                \n            \n\n\n            \n                \n                    Defined in src/grid/utils/is-group.pipe.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    list\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from \"@angular/core\";\n\nimport { Column } from \"../column/column\";\n\n@Pipe({\n  name: \"isGroup\"\n})\nexport class IsGroupPipe implements PipeTransform {\n  transform(list) {\n    if (list === undefined) {\n      return list;\n    } else {\n      return list.filter((o: Column) => o.isGroup || o.isUtility);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/IsRowVisiblePipe.html":{"url":"pipes/IsRowVisiblePipe.html","title":"pipe - IsRowVisiblePipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  IsRowVisiblePipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/grid/utils/is-row-visible.pipe.ts\n        \n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        isRowVisible\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            transform\n                        \n                        \n                    \n                \n            \n            \n                \ntransform(list)\n                \n            \n\n\n            \n                \n                    Defined in src/grid/utils/is-row-visible.pipe.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    list\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from \"@angular/core\";\n\nimport { Row } from \"../row/row\";\n\n@Pipe({\n  name: \"isRowVisible\"\n})\nexport class IsRowVisiblePipe implements PipeTransform {\n  transform(list) {\n    if (list === undefined) {\n      return list;\n    } else {\n      return list.filter((o: Row) => o.visible);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/IsVisiblePipe.html":{"url":"pipes/IsVisiblePipe.html","title":"pipe - IsVisiblePipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  IsVisiblePipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/grid/utils/is-visible.pipe.ts\n        \n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        isVisible\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            transform\n                        \n                        \n                    \n                \n            \n            \n                \ntransform(list)\n                \n            \n\n\n            \n                \n                    Defined in src/grid/utils/is-visible.pipe.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    list\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from \"@angular/core\";\n\nimport { Column } from \"../column/column\";\n\n@Pipe({\n  name: \"isVisible\"\n})\nexport class IsVisiblePipe implements PipeTransform {\n  transform(list) {\n    if (list === undefined) {\n      return list;\n    } else {\n      return list.filter((o: Column) => o.visible);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MouseDownListener.html":{"url":"interfaces/MouseDownListener.html","title":"interface - MouseDownListener","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  MouseDownListener\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/grid/event/mouse-down.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    mouseDown\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            mouseDown\n                        \n                        \n                    \n                \n            \n            \n                \nmouseDown(event: MouseEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/grid/event/mouse-down.interface.ts:3\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                            MouseEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        export interface MouseDownListener {\n\n  mouseDown(event: MouseEvent): boolean;\n\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MouseDragListener.html":{"url":"interfaces/MouseDragListener.html","title":"interface - MouseDragListener","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  MouseDragListener\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/grid/event/mouse-drag.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    mouseDrag\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            mouseDrag\n                        \n                        \n                    \n                \n            \n            \n                \nmouseDrag(event: MouseEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/grid/event/mouse-drag.interface.ts:3\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                            MouseEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        export interface MouseDragListener {\n\n  mouseDrag(event: MouseEvent): boolean;\n\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MouseOutListener.html":{"url":"interfaces/MouseOutListener.html","title":"interface - MouseOutListener","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  MouseOutListener\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/grid/event/mouse-out.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    mouseOut\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            mouseOut\n                        \n                        \n                    \n                \n            \n            \n                \nmouseOut(event: MouseEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/grid/event/mouse-out.interface.ts:3\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                            MouseEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        export interface MouseOutListener {\n\n  mouseOut(event: MouseEvent): boolean;\n\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MouseOverListener.html":{"url":"interfaces/MouseOverListener.html","title":"interface - MouseOverListener","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  MouseOverListener\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/grid/event/mouse-over.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    mouseOver\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            mouseOver\n                        \n                        \n                    \n                \n            \n            \n                \nmouseOver(event: MouseEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/grid/event/mouse-over.interface.ts:3\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                            MouseEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        export interface MouseOverListener {\n\n  mouseOver(event: MouseEvent): boolean;\n\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MouseUpListener.html":{"url":"interfaces/MouseUpListener.html","title":"interface - MouseUpListener","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  MouseUpListener\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/grid/event/mouse-up.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    mouseUp\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            mouseUp\n                        \n                        \n                    \n                \n            \n            \n                \nmouseUp(event: MouseEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/grid/event/mouse-up.interface.ts:3\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                            MouseEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        export interface MouseUpListener {\n\n  mouseUp(event: MouseEvent): boolean;\n\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/NumberFormatter.html":{"url":"classes/NumberFormatter.html","title":"class - NumberFormatter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  NumberFormatter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/grid/column/formatters/number.formatter.ts\n        \n\n            \n                Description\n            \n            \n                Most simple formatter parser which just returns the value without modification.\n\n            \n\n            \n                Extends\n            \n            \n                        FormatterParser\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                config\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                format\n                            \n                            \n                                parse\n                            \n                            \n                                setConfig\n                            \n                            \n                                formatValue\n                            \n                            \n                                parseValue\n                            \n                            \n                                setConfig\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            config\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                            \n                                \n                                    Inherited from         FormatterParser\n\n                                \n                            \n                        \n                            \n                                    Defined in         FormatterParser:6\n\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            format\n                        \n                        \n                    \n                \n            \n            \n                \nformat(value: any)\n                \n            \n\n\n            \n                \n                    Defined in src/grid/column/formatters/number.formatter.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            parse\n                        \n                        \n                    \n                \n            \n            \n                \nparse(value: any)\n                \n            \n\n\n            \n                \n                    Defined in src/grid/column/formatters/number.formatter.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setConfig\n                        \n                        \n                    \n                \n            \n            \n                \nsetConfig(config: any)\n                \n            \n\n\n            \n                \n                    Defined in src/grid/column/formatters/number.formatter.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            formatValue\n                        \n                        \n                    \n                \n            \n            \n                \nformatValue(value: any)\n                \n            \n\n\n            \n                \n                    Inherited from         FormatterParser\n\n                \n            \n            \n                \n                        Defined in         FormatterParser:12\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            parseValue\n                        \n                        \n                    \n                \n            \n            \n                \nparseValue(value: any)\n                \n            \n\n\n            \n                \n                    Inherited from         FormatterParser\n\n                \n            \n            \n                \n                        Defined in         FormatterParser:16\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setConfig\n                        \n                        \n                    \n                \n            \n            \n                \nsetConfig(config: any)\n                \n            \n\n\n            \n                \n                    Inherited from         FormatterParser\n\n                \n            \n            \n                \n                        Defined in         FormatterParser:8\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {FormatterParser} from \"./formatter-parser\";\n\n/**\n * Most simple formatter parser which just returns the value without modification.\n */\nexport class NumberFormatter extends FormatterParser {\n\n  setConfig(config: any) {}\n\n  format(value: any): any {\n    if (value !== undefined) {\n      return value;\n    } else {\n      return undefined;\n    }\n  }\n\n  parse(value: any): any {\n    if (value !== undefined) {\n      return +value;\n    } else {\n      return value;\n    }\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Point.html":{"url":"classes/Point.html","title":"class - Point","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Point\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/grid/utils/point.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _i\n                            \n                            \n                                    Private\n                                _j\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                equals\n                            \n                            \n                                equalsIJ\n                            \n                            \n                                    Static\n                                getPoint\n                            \n                            \n                                greaterThan\n                            \n                            \n                                greaterThanOrEqual\n                            \n                            \n                                isNegative\n                            \n                            \n                                isNew\n                            \n                            \n                                isNotNegative\n                            \n                            \n                                lessThan\n                            \n                            \n                                lessThanOrEqual\n                            \n                            \n                                    Public\n                                toString\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    i\n                                \n                                \n                                    j\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(i: number, j: number)\n                    \n                \n                        \n                            \n                                Defined in src/grid/utils/point.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        i\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        j\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _i\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/grid/utils/point.ts:2\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _j\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/grid/utils/point.ts:3\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            equals\n                        \n                        \n                    \n                \n            \n            \n                \nequals(other: Point)\n                \n            \n\n\n            \n                \n                    Defined in src/grid/utils/point.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    other\n                                    \n                                                Point\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            equalsIJ\n                        \n                        \n                    \n                \n            \n            \n                \nequalsIJ(i: number, j: number)\n                \n            \n\n\n            \n                \n                    Defined in src/grid/utils/point.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    i\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    j\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            getPoint\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getPoint(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/grid/utils/point.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Point\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            greaterThan\n                        \n                        \n                    \n                \n            \n            \n                \ngreaterThan(other: Point)\n                \n            \n\n\n            \n                \n                    Defined in src/grid/utils/point.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    other\n                                    \n                                                Point\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            greaterThanOrEqual\n                        \n                        \n                    \n                \n            \n            \n                \ngreaterThanOrEqual(other: Point)\n                \n            \n\n\n            \n                \n                    Defined in src/grid/utils/point.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    other\n                                    \n                                                Point\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isNegative\n                        \n                        \n                    \n                \n            \n            \n                \nisNegative(allowNegativeI?: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/grid/utils/point.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    allowNegativeI\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isNew\n                        \n                        \n                    \n                \n            \n            \n                \nisNew()\n                \n            \n\n\n            \n                \n                    Defined in src/grid/utils/point.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isNotNegative\n                        \n                        \n                    \n                \n            \n            \n                \nisNotNegative()\n                \n            \n\n\n            \n                \n                    Defined in src/grid/utils/point.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            lessThan\n                        \n                        \n                    \n                \n            \n            \n                \nlessThan(other: Point)\n                \n            \n\n\n            \n                \n                    Defined in src/grid/utils/point.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    other\n                                    \n                                                Point\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            lessThanOrEqual\n                        \n                        \n                    \n                \n            \n            \n                \nlessThanOrEqual(other: Point)\n                \n            \n\n\n            \n                \n                    Defined in src/grid/utils/point.ts:73\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    other\n                                    \n                                                Point\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            toString\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    toString()\n                \n            \n\n\n            \n                \n                    Defined in src/grid/utils/point.ts:93\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        i\n                    \n                \n\n                \n                    \n                        geti()\n                    \n                \n                            \n                                \n                                    Defined in src/grid/utils/point.ts:77\n                                \n                            \n\n                \n                    \n                        seti(i: number)\n                    \n                \n                            \n                                \n                                    Defined in src/grid/utils/point.ts:81\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            i\n                                                    \n                                                            \n                                                                            number\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        j\n                    \n                \n\n                \n                    \n                        getj()\n                    \n                \n                            \n                                \n                                    Defined in src/grid/utils/point.ts:85\n                                \n                            \n\n                \n                    \n                        setj(j: number)\n                    \n                \n                            \n                                \n                                    Defined in src/grid/utils/point.ts:89\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            j\n                                                    \n                                                            \n                                                                            number\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n    \n\n\n    \n        export class Point {\n  private _i: number;\n  private _j: number;\n\n  static getPoint(id: string): Point {\n    try {\n      let regex: RegExp = new RegExp(\"[a-z]+-(-?[0-9]+)-(-?[0-9]+)\");\n      let groups = regex.exec(id);\n\n      return new Point(+groups[1], +groups[2]);\n    } catch (e) {\n      return undefined;\n    }\n  }\n\n  constructor(i: number, j: number) {\n    this._i = i;\n    this._j = j;\n  }\n\n  isNegative(allowNegativeI?: boolean) {\n    if (allowNegativeI) {\n      return this._i = 0;\n  }\n\n  isNotNegative() {\n    return this._i >= 0 && this._j >= 0;\n  }\n\n  equals(other: Point): boolean {\n    if (other === null) {\n      return false;\n    } else {\n      return this._i === other.i && this._j === other.j;\n    }\n  }\n\n  equalsIJ(i: number, j: number): boolean {\n    return this._i === i && this._j === j;\n  }\n\n  greaterThan(other: Point) {\n    if (this._j > other.j) {\n      return this._i >= other.i;\n    } else if (this._i > other.i) {\n      return this._j >= other.j;\n    } else {\n      return false;\n    }\n  }\n\n  greaterThanOrEqual(other: Point) {\n    return this.greaterThan(other) || this.equals(other);\n  }\n\n  lessThan(other: Point) {\n    if (this._j \n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Range.html":{"url":"classes/Range.html","title":"class - Range","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Range\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/grid/utils/range.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _max\n                            \n                            \n                                    Private\n                                _min\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                contains\n                            \n                            \n                                setInitial\n                            \n                            \n                                toString\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    min\n                                \n                                \n                                    max\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(min: Point, max: Point)\n                    \n                \n                        \n                            \n                                Defined in src/grid/utils/range.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        min\n                                                  \n                                                        \n                                                                        Point\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        max\n                                                  \n                                                        \n                                                                        Point\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _max\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Point\n\n                        \n                    \n                        \n                            \n                                    Defined in src/grid/utils/range.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _min\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Point\n\n                        \n                    \n                        \n                            \n                                    Defined in src/grid/utils/range.ts:4\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            contains\n                        \n                        \n                    \n                \n            \n            \n                \ncontains(point: Point)\n                \n            \n\n\n            \n                \n                    Defined in src/grid/utils/range.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    point\n                                    \n                                                Point\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setInitial\n                        \n                        \n                    \n                \n            \n            \n                \nsetInitial(point: Point)\n                \n            \n\n\n            \n                \n                    Defined in src/grid/utils/range.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    point\n                                    \n                                                Point\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            toString\n                        \n                        \n                    \n                \n            \n            \n                \ntoString()\n                \n            \n\n\n            \n                \n                    Defined in src/grid/utils/range.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            update\n                        \n                        \n                    \n                \n            \n            \n                \nupdate(point: Point)\n                \n            \n\n\n            \n                \n                    Defined in src/grid/utils/range.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    point\n                                    \n                                                Point\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        min\n                    \n                \n\n                \n                    \n                        getmin()\n                    \n                \n                            \n                                \n                                    Defined in src/grid/utils/range.ts:38\n                                \n                            \n\n                \n                    \n                        setmin(min)\n                    \n                \n                            \n                                \n                                    Defined in src/grid/utils/range.ts:42\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            min\n                                                    \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        max\n                    \n                \n\n                \n                    \n                        getmax()\n                    \n                \n                            \n                                \n                                    Defined in src/grid/utils/range.ts:46\n                                \n                            \n\n                \n                    \n                        setmax(max)\n                    \n                \n                            \n                                \n                                    Defined in src/grid/utils/range.ts:50\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            max\n                                                    \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n    \n\n\n    \n        import {Point} from \"./point\";\n\nexport class Range {\n  private _min: Point;\n  private _max: Point;\n\n  constructor(min: Point, max: Point) {\n    this._min = min;\n    this._max = new Point(max.i, max.j);\n  }\n\n  contains(point: Point): boolean {\n    return this._min.lessThanOrEqual(point) && this._max.greaterThanOrEqual(point);\n  }\n\n  setInitial(point: Point) {\n    this._min = new Point(point.i, point.j);\n    this._max = new Point(point.i, point.j);\n  }\n\n  toString(): string {\n    return \"Min.\" + this._min + \", Max.\" + this._max;\n  }\n\n  update(point: Point) {\n    if (point.i  this._max.i) {\n      this._max.i = point.i;\n    }\n    if (point.j  this._max.j) {\n      this._max.j = point.j;\n    }\n  }\n\n  get min(): Point {\n    return this._min;\n  }\n\n  set min(min: Point) {\n    this._min = min;\n  }\n\n  get max(): Point {\n    return this._max;\n  }\n\n  set max(max: Point) {\n    this._max = max;\n  }\n\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RangeSelectListener.html":{"url":"classes/RangeSelectListener.html","title":"class - RangeSelectListener","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RangeSelectListener\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/grid/event/listeners/range-select.listener.ts\n        \n\n            \n                Description\n            \n            \n                Click and drag to select a range of cells.  Therefore this listens for mouse down, mouse up and mouse drag events.\nUpon mouse down and while dragging, this detects the range of cells selected and updates those cells as selected.\n\n            \n\n            \n                Extends\n            \n            \n                        EventListener\n            \n\n            \n                Implements\n            \n            \n                            MouseDownListener\n                            MouseDragListener\n                            MouseUpListener\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                dragging\n                            \n                            \n                                lastEventId\n                            \n                            \n                                grid\n                            \n                            \n                                gridEventService\n                            \n                            \n                                gridService\n                            \n                            \n                                stopEvent\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                mouseDown\n                            \n                            \n                                mouseDrag\n                            \n                            \n                                mouseUp\n                            \n                            \n                                setConfig\n                            \n                            \n                                setGrid\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dragging\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/grid/event/listeners/range-select.listener.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            lastEventId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"\"\n                        \n                    \n                        \n                            \n                                    Defined in src/grid/event/listeners/range-select.listener.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            grid\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         GridComponent\n\n                        \n                    \n                            \n                                \n                                    Inherited from         EventListener\n\n                                \n                            \n                        \n                            \n                                    Defined in         EventListener:13\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            gridEventService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         GridEventService\n\n                        \n                    \n                            \n                                \n                                    Inherited from         EventListener\n\n                                \n                            \n                        \n                            \n                                    Defined in         EventListener:15\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            gridService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         GridService\n\n                        \n                    \n                            \n                                \n                                    Inherited from         EventListener\n\n                                \n                            \n                        \n                            \n                                    Defined in         EventListener:14\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            stopEvent\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : true\n                        \n                    \n                            \n                                \n                                    Inherited from         EventListener\n\n                                \n                            \n                        \n                            \n                                    Defined in         EventListener:12\n\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            mouseDown\n                        \n                        \n                    \n                \n            \n            \n                \nmouseDown(event: MouseEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/grid/event/listeners/range-select.listener.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                            MouseEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            mouseDrag\n                        \n                        \n                    \n                \n            \n            \n                \nmouseDrag(event: MouseEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/grid/event/listeners/range-select.listener.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                            MouseEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            mouseUp\n                        \n                        \n                    \n                \n            \n            \n                \nmouseUp(event: MouseEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/grid/event/listeners/range-select.listener.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                            MouseEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setConfig\n                        \n                        \n                    \n                \n            \n            \n                \nsetConfig(config: any)\n                \n            \n\n\n            \n                \n                    Inherited from         EventListener\n\n                \n            \n            \n                \n                        Defined in         EventListener:26\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setGrid\n                        \n                        \n                    \n                \n            \n            \n                \nsetGrid(grid: GridComponent)\n                \n            \n\n\n            \n                \n                    Inherited from         EventListener\n\n                \n            \n            \n                \n                        Defined in         EventListener:41\n\n                \n            \n\n\n            \n                \n                    Manually set the grid reference.  With creating new instance dynamically, was not able to inject services.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    grid\n                                    \n                                                GridComponent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {isDevMode} from \"@angular/core\";\n\nimport {EventListener} from \"../event-listener\";\nimport {HtmlUtil} from \"../../utils/html-util\";\nimport {MouseDownListener} from \"../mouse-down.interface\";\nimport {MouseDragListener} from \"../mouse-drag.interface\";\nimport {MouseUpListener} from \"../mouse-up.interface\";\n\n/**\n * Click and drag to select a range of cells.  Therefore this listens for mouse down, mouse up and mouse drag events.\n * Upon mouse down and while dragging, this detects the range of cells selected and updates those cells as selected.\n */\nexport class RangeSelectListener extends EventListener implements MouseDownListener, MouseDragListener, MouseUpListener {\n\n  dragging: boolean = false;\n  lastEventId: string = \"\";\n\n  mouseDown(event: MouseEvent): boolean {\n    if (isDevMode()) {\n      console.debug(\"RangeSelectListener.mouseDown\");\n    }\n\n    this.lastEventId = HtmlUtil.getId(event.target);\n    if (this.lastEventId.startsWith(\"cell-\")) {\n      this.dragging = true;\n      event.stopPropagation();\n      event.preventDefault();\n\n      this.gridEventService.clearSelectedLocation();\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  mouseUp(event: MouseEvent): boolean {\n    if (isDevMode()) {\n      console.debug(\"mouseUp \" + (event.target).id);\n    }\n\n    event.stopPropagation();\n    event.preventDefault();\n\n    this.dragging = false;\n    this.lastEventId = (event.target).id;\n    this.grid.focuser1.nativeElement.focus();\n\n    return true;\n  }\n\n  mouseDrag(event: MouseEvent): boolean {\n    if (this.dragging) {\n      if (isDevMode()) {\n        console.debug(\"mouseDrag \" + (event.target).id);\n      }\n      event.stopPropagation();\n      event.preventDefault();\n      this.lastEventId = (event.target).id;\n\n      this.gridEventService.setMouseDragSelected(HtmlUtil.getLocation(event.target));\n      return true;\n    }\n    return false;\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Row.html":{"url":"classes/Row.html","title":"class - Row","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Row\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/grid/row/row.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _groupKey\n                            \n                            \n                                    Private\n                                _key\n                            \n                            \n                                    Private\n                                _rowNum\n                            \n                            \n                                    Private\n                                _selected\n                            \n                            \n                                    Private\n                                _visible\n                            \n                            \n                                cells\n                            \n                            \n                                data\n                            \n                            \n                                i\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                add\n                            \n                            \n                                createGroupKey\n                            \n                            \n                                equals\n                            \n                            \n                                get\n                            \n                            \n                                getConcatenatedCells\n                            \n                            \n                                getHeader\n                            \n                            \n                                isDirty\n                            \n                            \n                                length\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    groupKey\n                                \n                                \n                                    visible\n                                \n                                \n                                    key\n                                \n                                \n                                    rowNum\n                                \n                                \n                                    selected\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _groupKey\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/grid/row/row.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _key\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/grid/row/row.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _rowNum\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/grid/row/row.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _selected\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/grid/row/row.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _visible\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/grid/row/row.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            cells\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Cell[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/grid/row/row.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            data\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Object\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in src/grid/row/row.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            i\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/grid/row/row.ts:12\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            add\n                        \n                        \n                    \n                \n            \n            \n                \nadd(cell: Cell)\n                \n            \n\n\n            \n                \n                    Defined in src/grid/row/row.ts:75\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    cell\n                                    \n                                                Cell\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createGroupKey\n                        \n                        \n                    \n                \n            \n            \n                \ncreateGroupKey(headerColumns: number[])\n                \n            \n\n\n            \n                \n                    Defined in src/grid/row/row.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    headerColumns\n                                    \n                                            number[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            equals\n                        \n                        \n                    \n                \n            \n            \n                \nequals(row: Row, compareIndexes: number[])\n                \n            \n\n\n            \n                \n                    Defined in src/grid/row/row.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    row\n                                    \n                                                Row\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    compareIndexes\n                                    \n                                            number[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            get\n                        \n                        \n                    \n                \n            \n            \n                \nget(i: number)\n                \n            \n\n\n            \n                \n                    Defined in src/grid/row/row.ts:79\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    i\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Cell\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getConcatenatedCells\n                        \n                        \n                    \n                \n            \n            \n                \ngetConcatenatedCells()\n                \n            \n\n\n            \n                \n                    Defined in src/grid/row/row.ts:67\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getHeader\n                        \n                        \n                    \n                \n            \n            \n                \ngetHeader(headerColumns: number[])\n                \n            \n\n\n            \n                \n                    Defined in src/grid/row/row.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    headerColumns\n                                    \n                                            number[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isDirty\n                        \n                        \n                    \n                \n            \n            \n                \nisDirty()\n                \n            \n\n\n            \n                \n                    Defined in src/grid/row/row.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            length\n                        \n                        \n                    \n                \n            \n            \n                \nlength()\n                \n            \n\n\n            \n                \n                    Defined in src/grid/row/row.ts:83\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         number\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        groupKey\n                    \n                \n\n                \n                    \n                        getgroupKey()\n                    \n                \n                            \n                                \n                                    Defined in src/grid/row/row.ts:87\n                                \n                            \n\n                \n                    \n                        setgroupKey(groupKey: string)\n                    \n                \n                            \n                                \n                                    Defined in src/grid/row/row.ts:91\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            groupKey\n                                                    \n                                                            \n                                                                            string\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        visible\n                    \n                \n\n                \n                    \n                        getvisible()\n                    \n                \n                            \n                                \n                                    Defined in src/grid/row/row.ts:95\n                                \n                            \n\n                \n                    \n                        setvisible(visible: boolean)\n                    \n                \n                            \n                                \n                                    Defined in src/grid/row/row.ts:99\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            visible\n                                                    \n                                                            \n                                                                            boolean\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        key\n                    \n                \n\n                \n                    \n                        getkey()\n                    \n                \n                            \n                                \n                                    Defined in src/grid/row/row.ts:103\n                                \n                            \n\n                \n                    \n                        setkey(key: any)\n                    \n                \n                            \n                                \n                                    Defined in src/grid/row/row.ts:107\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            key\n                                                    \n                                                            \n                                                                            any\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        rowNum\n                    \n                \n\n                \n                    \n                        getrowNum()\n                    \n                \n                            \n                                \n                                    Defined in src/grid/row/row.ts:111\n                                \n                            \n\n                \n                    \n                        setrowNum(rowNum: any)\n                    \n                \n                            \n                                \n                                    Defined in src/grid/row/row.ts:115\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            rowNum\n                                                    \n                                                            \n                                                                            any\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        selected\n                    \n                \n\n                \n                    \n                        getselected()\n                    \n                \n                            \n                                \n                                    Defined in src/grid/row/row.ts:119\n                                \n                            \n\n                \n                    \n                        setselected(selected: any)\n                    \n                \n                            \n                                \n                                    Defined in src/grid/row/row.ts:123\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            selected\n                                                    \n                                                            \n                                                                            any\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n    \n\n\n    \n        import {Cell} from \"../cell/cell\";\n\n/**\n *\n */\nexport class Row {\n\n  cells: Cell[] = [];\n  data: Object = {};\n  //size: number = 1;\n\n  i: number;\n  private _key: any;\n  private _rowNum: number;\n  private _groupKey: string;\n  private _selected: boolean = false;\n  private _visible: boolean = true;\n\n  equals(row: Row, compareIndexes: number[]): boolean {\n    if (this.length() !== row.length()) {\n      return false;\n    }\n    let v: number = 0;\n    for (var i = 0; i  row.get(compareIndexes[i]).value) {\n          v = 1;\n        }\n      }\n      if (v !== 0) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  isDirty(): boolean {\n    for (let cell of this.cells) {\n      if (cell.dirty) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  createGroupKey(headerColumns: number[]): string {\n    this._groupKey = undefined;\n    for (var i = 0; i \n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RowChange.html":{"url":"classes/RowChange.html","title":"class - RowChange","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RowChange\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/grid/utils/row-change.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                newRowNum\n                            \n                            \n                                oldRowNum\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(oldRowNum: number, newRowNum: number)\n                    \n                \n                        \n                            \n                                Defined in src/grid/utils/row-change.ts:4\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        oldRowNum\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        newRowNum\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            newRowNum\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/grid/utils/row-change.ts:4\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            oldRowNum\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/grid/utils/row-change.ts:3\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class RowChange {\n\n  oldRowNum: number;\n  newRowNum: number;\n\n  constructor(oldRowNum: number, newRowNum: number) {\n    this.oldRowNum = oldRowNum;\n    this.newRowNum = newRowNum;\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RowDblClickListener.html":{"url":"classes/RowDblClickListener.html","title":"class - RowDblClickListener","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RowDblClickListener\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/grid/event/listeners/row-dbl-click.listener.ts\n        \n\n\n            \n                Extends\n            \n            \n                        EventListener\n            \n\n            \n                Implements\n            \n            \n                            DblClickListener\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                grid\n                            \n                            \n                                gridEventService\n                            \n                            \n                                gridService\n                            \n                            \n                                stopEvent\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                dblclick\n                            \n                            \n                                setConfig\n                            \n                            \n                                setGrid\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            grid\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         GridComponent\n\n                        \n                    \n                            \n                                \n                                    Inherited from         EventListener\n\n                                \n                            \n                        \n                            \n                                    Defined in         EventListener:13\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            gridEventService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         GridEventService\n\n                        \n                    \n                            \n                                \n                                    Inherited from         EventListener\n\n                                \n                            \n                        \n                            \n                                    Defined in         EventListener:15\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            gridService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         GridService\n\n                        \n                    \n                            \n                                \n                                    Inherited from         EventListener\n\n                                \n                            \n                        \n                            \n                                    Defined in         EventListener:14\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            stopEvent\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : true\n                        \n                    \n                            \n                                \n                                    Inherited from         EventListener\n\n                                \n                            \n                        \n                            \n                                    Defined in         EventListener:12\n\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            dblclick\n                        \n                        \n                    \n                \n            \n            \n                \ndblclick(event: MouseEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/grid/event/listeners/row-dbl-click.listener.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                            MouseEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setConfig\n                        \n                        \n                    \n                \n            \n            \n                \nsetConfig(config: any)\n                \n            \n\n\n            \n                \n                    Inherited from         EventListener\n\n                \n            \n            \n                \n                        Defined in         EventListener:26\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setGrid\n                        \n                        \n                    \n                \n            \n            \n                \nsetGrid(grid: GridComponent)\n                \n            \n\n\n            \n                \n                    Inherited from         EventListener\n\n                \n            \n            \n                \n                        Defined in         EventListener:41\n\n                \n            \n\n\n            \n                \n                    Manually set the grid reference.  With creating new instance dynamically, was not able to inject services.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    grid\n                                    \n                                                GridComponent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {isDevMode} from \"@angular/core\";\n\nimport {DblClickListener} from \"../dbl-click.interface\";\nimport {EventListener} from \"../event-listener\";\nimport {HtmlUtil} from \"../../utils/html-util\";\n\nexport class RowDblClickListener extends EventListener implements DblClickListener {\n\n  dblclick(event: MouseEvent): boolean {\n    if (isDevMode()) {\n      console.debug(\"RowDblClickListener.dblclick\");\n    }\n\n    let id: string = HtmlUtil.getId(event.target, \"row-\");\n    if (id) {\n      event.stopPropagation();\n\n      id = id.substr(id.lastIndexOf(\"-\") + 1);\n      this.grid.outputRowDblClick.emit(this.gridService.getRow(+id).key);\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RowGroup.html":{"url":"classes/RowGroup.html","title":"class - RowGroup","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RowGroup\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/grid/row/row-group.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                count\n                            \n                            \n                                data\n                            \n                            \n                                expanded\n                            \n                            \n                                groupKey\n                            \n                            \n                                paging\n                            \n                            \n                                rendered\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                incrementCount\n                            \n                            \n                                setPaging\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(groupKey: string, count: number)\n                    \n                \n                        \n                            \n                                Defined in src/grid/row/row-group.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        groupKey\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        count\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            count\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/grid/row/row-group.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            data\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/grid/row/row-group.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            expanded\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/grid/row/row-group.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            groupKey\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/grid/row/row-group.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            paging\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     HciPagingDto\n\n                        \n                    \n                    \n                        \n                            Default value : new HciPagingDto()\n                        \n                    \n                        \n                            \n                                    Defined in src/grid/row/row-group.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            rendered\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/grid/row/row-group.ts:9\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            incrementCount\n                        \n                        \n                    \n                \n            \n            \n                \nincrementCount()\n                \n            \n\n\n            \n                \n                    Defined in src/grid/row/row-group.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setPaging\n                        \n                        \n                    \n                \n            \n            \n                \nsetPaging(paging: HciPagingDto)\n                \n            \n\n\n            \n                \n                    Defined in src/grid/row/row-group.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    paging\n                                    \n                                            HciPagingDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {HciPagingDto} from \"hci-ng-grid-dto\";\n\nexport class RowGroup {\n\n  data: {};\n  groupKey: string;\n  count: number;\n  expanded: boolean = false;\n  rendered: boolean = false;\n  paging: HciPagingDto = new HciPagingDto();\n\n  constructor(groupKey: string, count: number = 0) {\n    this.groupKey = groupKey;\n    this.count = count;\n  }\n\n  incrementCount(): void {\n    this.count += 1;\n  }\n\n  setPaging(paging: HciPagingDto): void {\n    this.paging = paging;\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RowGroupView.html":{"url":"classes/RowGroupView.html","title":"class - RowGroupView","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RowGroupView\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/grid/cell/viewRenderers/row-group-view.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            CellViewRenderer\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                column\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createElement\n                            \n                            \n                                getChoice\n                            \n                            \n                                setConfig\n                            \n                            \n                                updateColumn\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            column\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Column\n\n                        \n                    \n                        \n                            \n                                    Defined in src/grid/cell/viewRenderers/row-group-view.ts:9\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createElement\n                        \n                        \n                    \n                \n            \n            \n                \ncreateElement(renderer: Renderer2, column: Column, value: any, i: number, j: number, rowGroup?: RowGroup)\n                \n            \n\n\n            \n                \n                    Defined in src/grid/cell/viewRenderers/row-group-view.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    renderer\n                                    \n                                                Renderer2\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    column\n                                    \n                                                Column\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    i\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    j\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    rowGroup\n                                    \n                                                RowGroup\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     HTMLElement\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getChoice\n                        \n                        \n                    \n                \n            \n            \n                \ngetChoice(value: any)\n                \n            \n\n\n            \n                \n                    Defined in src/grid/cell/viewRenderers/row-group-view.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setConfig\n                        \n                        \n                    \n                \n            \n            \n                \nsetConfig(config: any)\n                \n            \n\n\n            \n                \n                    Defined in src/grid/cell/viewRenderers/row-group-view.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateColumn\n                        \n                        \n                    \n                \n            \n            \n                \nupdateColumn(column: Column)\n                \n            \n\n\n            \n                \n                    Defined in src/grid/cell/viewRenderers/row-group-view.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    column\n                                    \n                                                Column\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {Renderer2} from \"@angular/core\";\n\nimport {CellViewRenderer} from \"./cell-view-renderer.interface\";\nimport {Column} from \"../../column/column\";\nimport {RowGroup} from \"../../row/row-group\";\n\nexport class RowGroupView implements CellViewRenderer {\n\n  column: Column;\n\n  updateColumn(column: Column) {\n    this.column = column;\n  }\n\n  setConfig(config: any) {}\n\n  createElement(renderer: Renderer2, column: Column, value: any, i: number, j: number, rowGroup?: RowGroup): HTMLElement {\n    let div = renderer.createElement(\"div\");\n    renderer.setStyle(div, \"display\", \"flex\");\n    renderer.setStyle(div, \"flex-grow\", \"1\");\n    renderer.setStyle(div, \"align-items\", \"center\");\n    renderer.setStyle(div, \"width\", \"inherit\");\n\n    if (rowGroup) {\n      let spanCount = renderer.createElement(\"span\");\n      renderer.setStyle(spanCount, \"margin-left\", \"0.5rem\");\n      renderer.setStyle(spanCount, \"margin-right\", \"0.5rem\");\n      renderer.setStyle(spanCount, \"flex-grow\", \"1\");\n\n      let icon = renderer.createElement(\"i\");\n      renderer.addClass(icon, \"mr-1\");\n      renderer.appendChild(spanCount, icon);\n      if (rowGroup.expanded) {\n        renderer.addClass(icon, \"fas\");\n        renderer.addClass(icon, \"fa-level-up-alt\");\n        renderer.addClass(icon, \"fa-flip-horizontal\");\n        renderer.appendChild(spanCount, renderer.createText(\"(\" + rowGroup.count + \")\"));\n      } else {\n        renderer.addClass(icon, \"fas\");\n        renderer.addClass(icon, \"fa-expand-arrows-alt\");\n        renderer.appendChild(spanCount, renderer.createText(\"(\" + rowGroup.count + \")\"));\n      }\n\n      renderer.appendChild(div, spanCount);\n    }\n\n    let span = renderer.createElement(\"span\");\n    renderer.setStyle(span, \"margin-left\", \"auto\");\n    renderer.setStyle(span, \"margin-right\", \"0.5rem\");\n    renderer.setStyle(span, \"overflow-x\", \"hidden\");\n    renderer.setStyle(span, \"text-overflow\", \"ellipsis\");\n\n    renderer.appendChild(span, renderer.createText(value));\n    renderer.appendChild(div, span);\n\n    return div;\n  }\n\n  getChoice(value: any): any {\n    let display: any = this.column.choiceMap.get(value);\n\n    return (display) ? display : \"\";\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SelectFilterRenderer.html":{"url":"components/SelectFilterRenderer.html","title":"component - SelectFilterRenderer","body":"\n                   \n\n\n\n\n\n  Components\n  SelectFilterRenderer\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/grid/column/filterRenderers/select-filter-renderer.component.ts\n\n\n    \n        Description\n    \n    \n        Offers comparison with a few different data types such as numbers and dates.\n\n    \n\n    \n        Extends\n    \n    \n                FilterRenderer\n    \n\n\n    \n        Example\n    \n    \n    \n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                hci-grid-select-filter\n            \n\n\n            \n                styles\n                \n  \n    .choice-list {\n      max-height: 200px;\n      overflow-y: auto;\n      border-top: black 2px solid;\n    }\n  \n    .btn {\n      padding: 1px 8px;\n    }\n    \n    .form-group {\n      flex: 1 0 100%;\n    }\n    \n    .input-group {\n      align-items: center;\n      padding: 5px;\n    }\n    \n    .form-control {\n      flex: 0 1 10%;\n      margin-right: 5px;\n    }\n    \n    .form-check-label {\n      flex: 1 0 90%;\n    }\n    \n    .parent {\n      flex: 1 1 100%;\n      align-items: center;\n      padding-left: 5px;\n      flex-wrap: wrap;\n      display: flex;\n    }\n    \n    .l-gap {\n      margin-left: 5px;\n    }\n\n    .fade-in-out {\n      opacity: 1.0;\n      animation: fade 2.0s linear infinite;\n    }\n\n    @keyframes fade {\n      0%, 100% { opacity: 1.0 }\n      50% { opacity: 0.0 }\n    }\n  \n            \n\n            \n                template\n                \n  \n    \n      Select All\n      Deselect All\n      \n        \n          \n        \n        \n          \n        \n        \n          \n        \n      \n    \n\n    \n      \n        \n        {{choice[column.choiceDisplay]}}\n      \n    \n  \n\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                changed\n                            \n                            \n                                init\n                            \n                            \n                                width\n                            \n                            \n                                changeDetectorRef\n                            \n                            \n                                config\n                            \n                            \n                                elementRef\n                            \n                            \n                                filters\n                            \n                            \n                                gridService\n                            \n                            \n                                shared\n                            \n                            \n                                width\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                deselectAll\n                            \n                            \n                                filter\n                            \n                            \n                                reset\n                            \n                            \n                                selectAll\n                            \n                            \n                                valueChange\n                            \n                            \n                                valueClear\n                            \n                            \n                                filter\n                            \n                            \n                                filtersSubscribe\n                            \n                            \n                                getConfig\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                reset\n                            \n                            \n                                setConfig\n                            \n                            \n                                stop\n                            \n                            \n                                toggleShared\n                            \n                            \n                                valueClear\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                column\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                close\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        column\n                    \n                \n                \n                    \n                        Type :         Column\n\n                    \n                \n                            \n                                \n                                    Inherited from         FilterRenderer\n\n                                \n                            \n                        \n                            \n                                    Defined in         FilterRenderer:10\n\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        close\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                            \n                                \n                                    Inherited from         FilterRenderer\n\n                                \n                            \n                        \n                            \n                                    Defined in         FilterRenderer:11\n\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deselectAll\n                        \n                        \n                    \n                \n            \n            \n                \ndeselectAll()\n                \n            \n\n\n            \n                \n                    Defined in src/grid/column/filterRenderers/select-filter-renderer.component.ts:134\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            filter\n                        \n                        \n                    \n                \n            \n            \n                \nfilter()\n                \n            \n\n\n            \n                \n                    Defined in src/grid/column/filterRenderers/select-filter-renderer.component.ts:115\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            reset\n                        \n                        \n                    \n                \n            \n            \n                \nreset()\n                \n            \n\n\n            \n                \n                    Defined in src/grid/column/filterRenderers/select-filter-renderer.component.ts:110\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            selectAll\n                        \n                        \n                    \n                \n            \n            \n                \nselectAll()\n                \n            \n\n\n            \n                \n                    Defined in src/grid/column/filterRenderers/select-filter-renderer.component.ts:143\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            valueChange\n                        \n                        \n                    \n                \n            \n            \n                \nvalueChange(id: any)\n                \n            \n\n\n            \n                \n                    Defined in src/grid/column/filterRenderers/select-filter-renderer.component.ts:157\n                \n            \n\n\n            \n                \n                    Negates the current selection.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The value of the choice.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            valueClear\n                        \n                        \n                    \n                \n            \n            \n                \nvalueClear()\n                \n            \n\n\n            \n                \n                    Defined in src/grid/column/filterRenderers/select-filter-renderer.component.ts:173\n                \n            \n\n\n            \n                \n                    Removes all filters on this column.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            filter\n                        \n                        \n                    \n                \n            \n            \n                \nfilter()\n                \n            \n\n\n            \n                \n                    Inherited from         FilterRenderer\n\n                \n            \n            \n                \n                        Defined in         FilterRenderer:48\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            filtersSubscribe\n                        \n                        \n                    \n                \n            \n            \n                \nfiltersSubscribe()\n                \n            \n\n\n            \n                \n                    Inherited from         FilterRenderer\n\n                \n            \n            \n                \n                        Defined in         FilterRenderer:35\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getConfig\n                        \n                        \n                    \n                \n            \n            \n                \ngetConfig()\n                \n            \n\n\n            \n                \n                    Inherited from         FilterRenderer\n\n                \n            \n            \n                \n                        Defined in         FilterRenderer:52\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngAfterViewInit\n                        \n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Inherited from         FilterRenderer\n\n                \n            \n            \n                \n                        Defined in         FilterRenderer:31\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Inherited from         FilterRenderer\n\n                \n            \n            \n                \n                        Defined in         FilterRenderer:27\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            reset\n                        \n                        \n                    \n                \n            \n            \n                \nreset()\n                \n            \n\n\n            \n                \n                    Inherited from         FilterRenderer\n\n                \n            \n            \n                \n                        Defined in         FilterRenderer:62\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setConfig\n                        \n                        \n                    \n                \n            \n            \n                \nsetConfig(config: any)\n                \n            \n\n\n            \n                \n                    Inherited from         FilterRenderer\n\n                \n            \n            \n                \n                        Defined in         FilterRenderer:56\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            stop\n                        \n                        \n                    \n                \n            \n            \n                \nstop(event: MouseEvent)\n                \n            \n\n\n            \n                \n                    Inherited from         FilterRenderer\n\n                \n            \n            \n                \n                        Defined in         FilterRenderer:68\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                            MouseEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            toggleShared\n                        \n                        \n                    \n                \n            \n            \n                \ntoggleShared()\n                \n            \n\n\n            \n                \n                    Inherited from         FilterRenderer\n\n                \n            \n            \n                \n                        Defined in         FilterRenderer:72\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            valueClear\n                        \n                        \n                    \n                \n            \n            \n                \nvalueClear()\n                \n            \n\n\n            \n                \n                    Inherited from         FilterRenderer\n\n                \n            \n            \n                \n                        Defined in         FilterRenderer:77\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            changed\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/grid/column/filterRenderers/select-filter-renderer.component.ts:108\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            init\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/grid/column/filterRenderers/select-filter-renderer.component.ts:107\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            width\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 300\n                        \n                    \n                        \n                            \n                                    Defined in src/grid/column/filterRenderers/select-filter-renderer.component.ts:106\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            changeDetectorRef\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ChangeDetectorRef\n\n                        \n                    \n                            \n                                \n                                    Inherited from         FilterRenderer\n\n                                \n                            \n                        \n                            \n                                    Defined in         FilterRenderer:19\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            config\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                            \n                                \n                                    Inherited from         FilterRenderer\n\n                                \n                            \n                        \n                            \n                                    Defined in         FilterRenderer:14\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            elementRef\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ElementRef\n\n                        \n                    \n                            \n                                \n                                    Inherited from         FilterRenderer\n\n                                \n                            \n                        \n                            \n                                    Defined in         FilterRenderer:18\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            filters\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     HciFilterDto[]\n\n                        \n                    \n                            \n                                \n                                    Inherited from         FilterRenderer\n\n                                \n                            \n                        \n                            \n                                    Defined in         FilterRenderer:13\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            gridService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         GridService\n\n                        \n                    \n                            \n                                \n                                    Inherited from         FilterRenderer\n\n                                \n                            \n                        \n                            \n                                    Defined in         FilterRenderer:17\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            shared\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                            \n                                \n                                    Inherited from         FilterRenderer\n\n                                \n                            \n                        \n                            \n                                    Defined in         FilterRenderer:15\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            width\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 250\n                        \n                    \n                            \n                                \n                                    Inherited from         FilterRenderer\n\n                                \n                            \n                        \n                            \n                                    Defined in         FilterRenderer:16\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {Component} from \"@angular/core\";\n\nimport {HciFilterDto} from \"hci-ng-grid-dto\";\n\nimport {FilterRenderer} from \"./filter-renderer\";\n\n/**\n * Offers comparison with a few different data types such as numbers and dates.\n *\n * @since 1.0.0\n */\n@Component({\n  selector: \"hci-grid-select-filter\",\n  template: `\n    \n      \n        \n          Select All\n          Deselect All\n          \n            \n              \n            \n            \n              \n            \n            \n              \n            \n          \n        \n        \n        \n          \n            \n            {{choice[column.choiceDisplay]}}\n          \n        \n      \n    \n  `,\n  styles: [`\n  \n    .choice-list {\n      max-height: 200px;\n      overflow-y: auto;\n      border-top: black 2px solid;\n    }\n  \n    .btn {\n      padding: 1px 8px;\n    }\n    \n    .form-group {\n      flex: 1 0 100%;\n    }\n    \n    .input-group {\n      align-items: center;\n      padding: 5px;\n    }\n    \n    .form-control {\n      flex: 0 1 10%;\n      margin-right: 5px;\n    }\n    \n    .form-check-label {\n      flex: 1 0 90%;\n    }\n    \n    .parent {\n      flex: 1 1 100%;\n      align-items: center;\n      padding-left: 5px;\n      flex-wrap: wrap;\n      display: flex;\n    }\n    \n    .l-gap {\n      margin-left: 5px;\n    }\n\n    .fade-in-out {\n      opacity: 1.0;\n      animation: fade 2.0s linear infinite;\n    }\n\n    @keyframes fade {\n      0%, 100% { opacity: 1.0 }\n      50% { opacity: 0.0 }\n    }\n  `]\n})\nexport class SelectFilterRenderer extends FilterRenderer {\n\n  width: number = 300;\n  init: boolean = false;\n  changed: boolean = false;\n\n  reset() {\n    super.reset();\n    this.changeDetectorRef.detectChanges();\n  }\n\n  filter() {\n    this.filters = [];\n    for (let choice of this.column.choices) {\n      if (choice.selected) {\n        this.filters.push(new HciFilterDto(this.column.field, this.column.dataType, choice[this.column.choiceValue], undefined, \"E\", true));\n      }\n    }\n\n    this.gridService.addFilters(this.column.field, this.filters);\n    this.gridService.filter();\n    this.changed = false;\n\n    if (this.shared) {\n      this.gridService.globalClearPushFilter(this.column.field, this.filters);\n    }\n\n    this.changeDetectorRef.detectChanges();\n  }\n\n  deselectAll() {\n    for (let choice of this.column.choices) {\n      choice.selected = false;\n    }\n    this.changed = true;\n\n    this.changeDetectorRef.detectChanges();\n  }\n\n  selectAll() {\n    for (let choice of this.column.choices) {\n      choice.selected = true;\n    }\n    this.changed = true;\n\n    this.changeDetectorRef.detectChanges();\n  }\n\n  /**\n   * Negates the current selection.\n   *\n   * @param id The value of the choice.\n   */\n  valueChange(id: any) {\n    this.changed = true;\n\n    for (let choice of this.column.choices) {\n      if (choice[this.column.choiceValue] === id) {\n        choice.selected = !choice.selected;\n        break;\n      }\n    }\n\n    this.changeDetectorRef.detectChanges();\n  }\n\n  /**\n   * Removes all filters on this column.\n   */\n  valueClear() {\n    super.valueClear();\n\n    this.changed = false;\n    this.deselectAll();\n    this.gridService.addFilters(this.column.field, []);\n    this.gridService.filter();\n\n    if (this.shared) {\n      this.gridService.globalClearPushFilter(this.column.field, this.filters);\n    }\n\n    this.changeDetectorRef.detectChanges();\n  }\n\n}\n\n    \n\n\n    \n            \n  \n    .choice-list {\n      max-height: 200px;\n      overflow-y: auto;\n      border-top: black 2px solid;\n    }\n  \n    .btn {\n      padding: 1px 8px;\n    }\n    \n    .form-group {\n      flex: 1 0 100%;\n    }\n    \n    .input-group {\n      align-items: center;\n      padding: 5px;\n    }\n    \n    .form-control {\n      flex: 0 1 10%;\n      margin-right: 5px;\n    }\n    \n    .form-check-label {\n      flex: 1 0 90%;\n    }\n    \n    .parent {\n      flex: 1 1 100%;\n      align-items: center;\n      padding-left: 5px;\n      flex-wrap: wrap;\n      display: flex;\n    }\n    \n    .l-gap {\n      margin-left: 5px;\n    }\n\n    .fade-in-out {\n      opacity: 1.0;\n      animation: fade 2.0s linear infinite;\n    }\n\n    @keyframes fade {\n      0%, 100% { opacity: 1.0 }\n      50% { opacity: 0.0 }\n    }\n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Select All      Deselect All                                                                                                                        {{choice[column.choiceDisplay]}}            '\n    var COMPONENTS = [{'name': 'BigTextPopup', 'selector': 'hci-bigtext-popup'},{'name': 'ChoiceEditRenderer', 'selector': 'hci-grid-choice-edit'},{'name': 'ColumnHeaderComponent', 'selector': 'hci-column-header'},{'name': 'CompareFilterRenderer', 'selector': 'hci-grid-compare-filter'},{'name': 'ConfigMenuComponent', 'selector': 'hci-grid-config-menu'},{'name': 'ConfigMultiChoiceComponent', 'selector': 'hci-grid-multi-choice'},{'name': 'GridComponent', 'selector': 'hci-grid'},{'name': 'SelectFilterRenderer', 'selector': 'hci-grid-select-filter'},{'name': 'TextEditRenderer', 'selector': 'hci-grid-text-edit'},{'name': 'TextFilterRenderer', 'selector': 'hci-grid-text-filter'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SelectFilterRenderer'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TextFilterRenderer.html":{"url":"components/TextFilterRenderer.html","title":"component - TextFilterRenderer","body":"\n                   \n\n\n\n\n\n  Components\n  TextFilterRenderer\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/grid/column/filterRenderers/text-filter-renderer.component.ts\n\n\n\n    \n        Extends\n    \n    \n                FilterRenderer\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                hci-grid-text-filter\n            \n\n\n\n            \n                template\n                \n  \n  \n    \n  \n  \n    \n  \n\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                input\n                            \n                            \n                                value\n                            \n                            \n                                width\n                            \n                            \n                                changeDetectorRef\n                            \n                            \n                                config\n                            \n                            \n                                elementRef\n                            \n                            \n                                filters\n                            \n                            \n                                gridService\n                            \n                            \n                                shared\n                            \n                            \n                                width\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                filter\n                            \n                            \n                                inputClick\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                reset\n                            \n                            \n                                setConfig\n                            \n                            \n                                valueChange\n                            \n                            \n                                valueClear\n                            \n                            \n                                filter\n                            \n                            \n                                filtersSubscribe\n                            \n                            \n                                getConfig\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                reset\n                            \n                            \n                                setConfig\n                            \n                            \n                                stop\n                            \n                            \n                                toggleShared\n                            \n                            \n                                valueClear\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                column\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                close\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        column\n                    \n                \n                \n                    \n                        Type :         Column\n\n                    \n                \n                            \n                                \n                                    Inherited from         FilterRenderer\n\n                                \n                            \n                        \n                            \n                                    Defined in         FilterRenderer:10\n\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        close\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                            \n                                \n                                    Inherited from         FilterRenderer\n\n                                \n                            \n                        \n                            \n                                    Defined in         FilterRenderer:11\n\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            filter\n                        \n                        \n                    \n                \n            \n            \n                \nfilter()\n                \n            \n\n\n            \n                \n                    Defined in src/grid/column/filterRenderers/text-filter-renderer.component.ts:82\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            inputClick\n                        \n                        \n                    \n                \n            \n            \n                \ninputClick(event: MouseEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/grid/column/filterRenderers/text-filter-renderer.component.ts:108\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                            MouseEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngAfterViewInit\n                        \n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in src/grid/column/filterRenderers/text-filter-renderer.component.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            reset\n                        \n                        \n                    \n                \n            \n            \n                \nreset()\n                \n            \n\n\n            \n                \n                    Defined in src/grid/column/filterRenderers/text-filter-renderer.component.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setConfig\n                        \n                        \n                    \n                \n            \n            \n                \nsetConfig(config: any)\n                \n            \n\n\n            \n                \n                    Defined in src/grid/column/filterRenderers/text-filter-renderer.component.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            valueChange\n                        \n                        \n                    \n                \n            \n            \n                \nvalueChange(value: string)\n                \n            \n\n\n            \n                \n                    Defined in src/grid/column/filterRenderers/text-filter-renderer.component.ts:73\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            valueClear\n                        \n                        \n                    \n                \n            \n            \n                \nvalueClear()\n                \n            \n\n\n            \n                \n                    Defined in src/grid/column/filterRenderers/text-filter-renderer.component.ts:100\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            filter\n                        \n                        \n                    \n                \n            \n            \n                \nfilter()\n                \n            \n\n\n            \n                \n                    Inherited from         FilterRenderer\n\n                \n            \n            \n                \n                        Defined in         FilterRenderer:48\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            filtersSubscribe\n                        \n                        \n                    \n                \n            \n            \n                \nfiltersSubscribe()\n                \n            \n\n\n            \n                \n                    Inherited from         FilterRenderer\n\n                \n            \n            \n                \n                        Defined in         FilterRenderer:35\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getConfig\n                        \n                        \n                    \n                \n            \n            \n                \ngetConfig()\n                \n            \n\n\n            \n                \n                    Inherited from         FilterRenderer\n\n                \n            \n            \n                \n                        Defined in         FilterRenderer:52\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngAfterViewInit\n                        \n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Inherited from         FilterRenderer\n\n                \n            \n            \n                \n                        Defined in         FilterRenderer:31\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Inherited from         FilterRenderer\n\n                \n            \n            \n                \n                        Defined in         FilterRenderer:27\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            reset\n                        \n                        \n                    \n                \n            \n            \n                \nreset()\n                \n            \n\n\n            \n                \n                    Inherited from         FilterRenderer\n\n                \n            \n            \n                \n                        Defined in         FilterRenderer:62\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setConfig\n                        \n                        \n                    \n                \n            \n            \n                \nsetConfig(config: any)\n                \n            \n\n\n            \n                \n                    Inherited from         FilterRenderer\n\n                \n            \n            \n                \n                        Defined in         FilterRenderer:56\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            stop\n                        \n                        \n                    \n                \n            \n            \n                \nstop(event: MouseEvent)\n                \n            \n\n\n            \n                \n                    Inherited from         FilterRenderer\n\n                \n            \n            \n                \n                        Defined in         FilterRenderer:68\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                            MouseEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            toggleShared\n                        \n                        \n                    \n                \n            \n            \n                \ntoggleShared()\n                \n            \n\n\n            \n                \n                    Inherited from         FilterRenderer\n\n                \n            \n            \n                \n                        Defined in         FilterRenderer:72\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            valueClear\n                        \n                        \n                    \n                \n            \n            \n                \nvalueClear()\n                \n            \n\n\n            \n                \n                    Inherited from         FilterRenderer\n\n                \n            \n            \n                \n                        Defined in         FilterRenderer:77\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            input\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('input', {static: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/grid/column/filterRenderers/text-filter-renderer.component.ts:41\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            value\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/grid/column/filterRenderers/text-filter-renderer.component.ts:43\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            width\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 200\n                        \n                    \n                        \n                            \n                                    Defined in src/grid/column/filterRenderers/text-filter-renderer.component.ts:44\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            changeDetectorRef\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ChangeDetectorRef\n\n                        \n                    \n                            \n                                \n                                    Inherited from         FilterRenderer\n\n                                \n                            \n                        \n                            \n                                    Defined in         FilterRenderer:19\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            config\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                            \n                                \n                                    Inherited from         FilterRenderer\n\n                                \n                            \n                        \n                            \n                                    Defined in         FilterRenderer:14\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            elementRef\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ElementRef\n\n                        \n                    \n                            \n                                \n                                    Inherited from         FilterRenderer\n\n                                \n                            \n                        \n                            \n                                    Defined in         FilterRenderer:18\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            filters\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     HciFilterDto[]\n\n                        \n                    \n                            \n                                \n                                    Inherited from         FilterRenderer\n\n                                \n                            \n                        \n                            \n                                    Defined in         FilterRenderer:13\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            gridService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         GridService\n\n                        \n                    \n                            \n                                \n                                    Inherited from         FilterRenderer\n\n                                \n                            \n                        \n                            \n                                    Defined in         FilterRenderer:17\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            shared\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                            \n                                \n                                    Inherited from         FilterRenderer\n\n                                \n                            \n                        \n                            \n                                    Defined in         FilterRenderer:15\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            width\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 250\n                        \n                    \n                            \n                                \n                                    Inherited from         FilterRenderer\n\n                                \n                            \n                        \n                            \n                                    Defined in         FilterRenderer:16\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {Component, ElementRef, ViewChild} from \"@angular/core\";\n\nimport {HciFilterDto} from \"hci-ng-grid-dto\";\n\nimport {FilterRenderer} from \"./filter-renderer\";\n\n@Component({\n  selector: \"hci-grid-text-filter\",\n  template: `\n    \n      \n      \n        \n      \n      \n        \n      \n    \n  `\n})\nexport class TextFilterRenderer extends FilterRenderer {\n\n  @ViewChild(\"input\", {static: true}) input: ElementRef;\n\n  value: any;\n  width: number = 200;\n\n  ngAfterViewInit() {\n    this.input.nativeElement.focus();\n\n    super.ngAfterViewInit();\n  }\n\n  setConfig(config: any) {\n    super.setConfig(config);\n    this.reset();\n  }\n\n  reset() {\n    super.reset();\n\n    if (this.filters.length === 0) {\n      this.filters.push(new HciFilterDto(this.column.field, this.column.dataType, \"\", undefined, \"LIKE\", false));\n    } else {\n      this.filters[0] = new HciFilterDto(this.column.field, this.column.dataType, \"\", undefined, \"LIKE\", false);\n    }\n\n    if (this.shared) {\n      this.gridService.globalClearPushFilter(this.column.field, this.filters);\n    }\n\n    this.changeDetectorRef.detectChanges();\n  }\n\n  valueChange(value: string) {\n    if (!this.filters) {\n      this.setConfig({});\n    }\n\n    this.value = value;\n    this.filter();\n  }\n\n  filter () {\n    if (this.filters.length === 0) {\n      this.reset();\n    }\n    this.filters[0].value = this.value;\n\n    this.filters[0].valid = (!this.value || this.value === \"\") ? false : true;\n\n    this.gridService.addFilters(this.column.field, this.filters);\n    this.gridService.filter();\n\n    if (this.shared) {\n      this.gridService.globalClearPushFilter(this.column.field, this.filters);\n    }\n\n    this.changeDetectorRef.detectChanges();\n  }\n\n  valueClear() {\n    super.valueClear();\n\n    this.reset();\n    this.gridService.addFilters(this.column.field, this.filters);\n    this.gridService.filter();\n  }\n\n  inputClick(event: MouseEvent) {\n    event.stopPropagation();\n  }\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                  '\n    var COMPONENTS = [{'name': 'BigTextPopup', 'selector': 'hci-bigtext-popup'},{'name': 'ChoiceEditRenderer', 'selector': 'hci-grid-choice-edit'},{'name': 'ColumnHeaderComponent', 'selector': 'hci-column-header'},{'name': 'CompareFilterRenderer', 'selector': 'hci-grid-compare-filter'},{'name': 'ConfigMenuComponent', 'selector': 'hci-grid-config-menu'},{'name': 'ConfigMultiChoiceComponent', 'selector': 'hci-grid-multi-choice'},{'name': 'GridComponent', 'selector': 'hci-grid'},{'name': 'SelectFilterRenderer', 'selector': 'hci-grid-select-filter'},{'name': 'TextEditRenderer', 'selector': 'hci-grid-text-edit'},{'name': 'TextFilterRenderer', 'selector': 'hci-grid-text-filter'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TextFilterRenderer'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"changelog.html":{"url":"changelog.html","title":"getting-started - changelog","body":"\n                   \n\nChange Log\n5.0.0\n- To Angular 8, rxjs 6, ng-bootstrap 5.\n- Handle row grouping, refactor grid DTO usage and external data calls.\n- Grid DTO to separate project.4.0.0\n- Add new rows of data.\n- Visualize invalid fields.\n- Some rearrange of grid/service organization.3.1.6\n- Fix choice filter undefined check.3.1.5\n- Fix reverse right coloring when left columns are odd.3.1.4\n- Fix filter value column name.3.1.3\n- Fix date filtering and date-ms compare.3.1.2\n- Fix dealing with undefined in default sorting.3.1.1\n- Stop propagation on filter button.3.1.0\n- Filter to customizable function.\n- Sort to customizable function.\n- Emitters for filter and sort events.\n- Column drag n drop.\n- Fix: Empty choice array on http error.3.0.0\n- Generalize column wait configuration.  Changes public api.\n- Fixes to popup behavior.\n- Column allows externalConfig storage.\n- Default format/parser more generic.2.1.1\n- Fix syntax in README.2.1.0\n- Removed allowing auto column generation when no columns configured.\n- Added wait listeners to pause configuration while waiting on any requests.\n- Add spinner for loading and prevent data display if no columns.\n- Bump height if view has scrollbar.\n- Fix column width calculation.2.0.2\n- Fix keywords and add .npmignore.2.0.1\n- Fix readme and license in artifact.2.0.0\n- Refactor of rendering and how data/config/events are listened to.\n- Listeners for saving cells and rows.\n- Customization of busy, and view renderers.\n- Validation support and improved formatting/parsing especially for dates.\n- User configuration added.\n- Global grid service for referencing and connecting grids.\n- Row selection improved.\n- External data calls from Promise to Observable.\n- Numerous fixes.1.0.0\n- Initial Release.  See README.md for features.\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/grid/cell/cell.ts\n            \n            class\n            Cell\n            \n                20 %\n                (1/5)\n            \n        \n        \n            \n                \n                src/grid/cell/editRenderers/cell-edit-renderer.ts\n            \n            class\n            CellEditRenderer\n            \n                18 %\n                (6/33)\n            \n        \n        \n            \n                \n                src/grid/cell/editRenderers/choice-edit-renderer.component.ts\n            \n            component\n            ChoiceEditRenderer\n            \n                13 %\n                (5/38)\n            \n        \n        \n            \n                \n                src/grid/cell/editRenderers/text-edit-renderer.component.ts\n            \n            component\n            TextEditRenderer\n            \n                11 %\n                (5/44)\n            \n        \n        \n            \n                \n                src/grid/cell/viewPopupRenderer/bigtext-popup.component.ts\n            \n            component\n            BigTextPopup\n            \n                7 %\n                (1/14)\n            \n        \n        \n            \n                \n                src/grid/cell/viewPopupRenderer/cell-popup-renderer.ts\n            \n            class\n            CellPopupRenderer\n            \n                15 %\n                (2/13)\n            \n        \n        \n            \n                \n                src/grid/cell/viewRenderers/cell-number-range-view.ts\n            \n            class\n            CellNumberRangeView\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/grid/cell/viewRenderers/cell-text-view.ts\n            \n            class\n            CellTextView\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/grid/cell/viewRenderers/cell-view-renderer.interface.ts\n            \n            interface\n            CellViewRenderer\n            \n                50 %\n                (2/4)\n            \n        \n        \n            \n                \n                src/grid/cell/viewRenderers/check-row-select-view.ts\n            \n            class\n            CheckRowSelectView\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/grid/cell/viewRenderers/click-view.ts\n            \n            class\n            ClickView\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/grid/cell/viewRenderers/row-group-view.ts\n            \n            class\n            RowGroupView\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/grid/column/column-header.component.ts\n            \n            component\n            ColumnHeaderComponent\n            \n                5 %\n                (1/19)\n            \n        \n        \n            \n                \n                src/grid/column/column.ts\n            \n            class\n            Column\n            \n                4 %\n                (3/62)\n            \n        \n        \n            \n                \n                src/grid/column/filterRenderers/compare-filter-renderer.component.ts\n            \n            component\n            CompareFilterRenderer\n            \n                5 %\n                (2/36)\n            \n        \n        \n            \n                \n                src/grid/column/filterRenderers/filter-renderer.ts\n            \n            class\n            FilterRenderer\n            \n                0 %\n                (0/19)\n            \n        \n        \n            \n                \n                src/grid/column/filterRenderers/select-filter-renderer.component.ts\n            \n            component\n            SelectFilterRenderer\n            \n                10 %\n                (3/29)\n            \n        \n        \n            \n                \n                src/grid/column/filterRenderers/text-filter-renderer.component.ts\n            \n            component\n            TextFilterRenderer\n            \n                0 %\n                (0/30)\n            \n        \n        \n            \n                \n                src/grid/column/formatters/date-iso8601.formatter.ts\n            \n            class\n            DateIso8601Formatter\n            \n                11 %\n                (1/9)\n            \n        \n        \n            \n                \n                src/grid/column/formatters/date-ms.formatter.ts\n            \n            class\n            DateMsFormatter\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/grid/column/formatters/formatter-parser.ts\n            \n            class\n            FormatterParser\n            \n                20 %\n                (1/5)\n            \n        \n        \n            \n                \n                src/grid/column/formatters/number.formatter.ts\n            \n            class\n            NumberFormatter\n            \n                12 %\n                (1/8)\n            \n        \n        \n            \n                \n                src/grid/config/config-menu.component.ts\n            \n            component\n            ConfigMenuComponent\n            \n                0 %\n                (0/18)\n            \n        \n        \n            \n                \n                src/grid/config/config-multi-choice.component.ts\n            \n            component\n            ConfigMultiChoiceComponent\n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                src/grid/event/click-view.listener.ts\n            \n            class\n            ClickViewListener\n            \n                12 %\n                (1/8)\n            \n        \n        \n            \n                \n                src/grid/event/click.interface.ts\n            \n            interface\n            ClickListener\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/grid/event/dbl-click.interface.ts\n            \n            interface\n            DblClickListener\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/grid/event/event-listener-arg.interface.ts\n            \n            interface\n            EventListenerArg\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/grid/event/event-listener.ts\n            \n            class\n            EventListener\n            \n                25 %\n                (2/8)\n            \n        \n        \n            \n                \n                src/grid/event/listeners/cell-hover-popup.listener.ts\n            \n            class\n            CellHoverPopupListener\n            \n                12 %\n                (1/8)\n            \n        \n        \n            \n                \n                src/grid/event/listeners/click-cell-edit.listener.ts\n            \n            class\n            ClickCellEditListener\n            \n                12 %\n                (1/8)\n            \n        \n        \n            \n                \n                src/grid/event/listeners/click-row-select.listener.ts\n            \n            class\n            ClickRowSelectListener\n            \n                10 %\n                (1/10)\n            \n        \n        \n            \n                \n                src/grid/event/listeners/column-dnd.listener.ts\n            \n            class\n            ColumnDndListener\n            \n                11 %\n                (2/17)\n            \n        \n        \n            \n                \n                src/grid/event/listeners/group-key.listener.ts\n            \n            class\n            GroupKeyListener\n            \n                10 %\n                (1/10)\n            \n        \n        \n            \n                \n                src/grid/event/listeners/range-select.listener.ts\n            \n            class\n            RangeSelectListener\n            \n                16 %\n                (2/12)\n            \n        \n        \n            \n                \n                src/grid/event/listeners/row-dbl-click.listener.ts\n            \n            class\n            RowDblClickListener\n            \n                12 %\n                (1/8)\n            \n        \n        \n            \n                \n                src/grid/event/mouse-down.interface.ts\n            \n            interface\n            MouseDownListener\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/grid/event/mouse-drag.interface.ts\n            \n            interface\n            MouseDragListener\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/grid/event/mouse-out.interface.ts\n            \n            interface\n            MouseOutListener\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/grid/event/mouse-over.interface.ts\n            \n            interface\n            MouseOverListener\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/grid/event/mouse-up.interface.ts\n            \n            interface\n            MouseUpListener\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/grid/grid.component.ts\n            \n            component\n            GridComponent\n            \n                20 %\n                (31/149)\n            \n        \n        \n            \n                \n                src/grid/grid.component.ts\n            \n            variable\n            NO_EVENT\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/grid/grid.component.ts\n            \n            variable\n            RESIZE\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/grid/grid.component.ts\n            \n            variable\n            SCROLL\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/grid/model/dictionary.interface.ts\n            \n            interface\n            Dictionary\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/grid/row/row-group.ts\n            \n            class\n            RowGroup\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/grid/row/row.ts\n            \n            class\n            Row\n            \n                0 %\n                (0/17)\n            \n        \n        \n            \n                \n                src/grid/services/grid-event.service.ts\n            \n            injectable\n            GridEventService\n            \n                9 %\n                (3/32)\n            \n        \n        \n            \n                \n                src/grid/services/grid-event.service.ts\n            \n            variable\n            ARROW\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/grid/services/grid-event.service.ts\n            \n            variable\n            CLICK\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/grid/services/grid-event.service.ts\n            \n            variable\n            TAB\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/grid/services/grid-global.service.ts\n            \n            injectable\n            GridGlobalService\n            \n                18 %\n                (2/11)\n            \n        \n        \n            \n                \n                src/grid/services/grid-message.service.ts\n            \n            injectable\n            GridMessageService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/grid/services/grid.service.ts\n            \n            injectable\n            GridService\n            \n                18 %\n                (30/166)\n            \n        \n        \n            \n                \n                src/grid/utils/empty.factory.ts\n            \n            class\n            EmptyFactory\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/grid/utils/empty.factory.ts\n            \n            interface\n            EmptyConstructor\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/grid/utils/event-meta.ts\n            \n            class\n            EventMeta\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/grid/utils/html-util.ts\n            \n            class\n            HtmlUtil\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                src/grid/utils/injectable.factory.ts\n            \n            class\n            InjectableFactory\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/grid/utils/injectable.factory.ts\n            \n            interface\n            InjectableConstructor\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/grid/utils/is-fixed.pipe.ts\n            \n            pipe\n            IsFixedPipe\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/grid/utils/is-group.pipe.ts\n            \n            pipe\n            IsGroupPipe\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/grid/utils/is-row-visible.pipe.ts\n            \n            pipe\n            IsRowVisiblePipe\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/grid/utils/is-visible.pipe.ts\n            \n            pipe\n            IsVisiblePipe\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/grid/utils/point.ts\n            \n            class\n            Point\n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                src/grid/utils/range.ts\n            \n            class\n            Range\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/grid/utils/row-change.ts\n            \n            class\n            RowChange\n            \n                0 %\n                (0/4)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            hci-ng-grid-dto : 1.0.x\n        \n            moment : >=2.19.3\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nHuntsman Cancer Institute's Angular Grid Library\nhci-ng-grid Demo on Github\nIntro\nThis grid is designed to be a full featured grid that can handle nearly anything that complex data tables may\nbe expected to support.  By default, the grid is simple and basic, but becomes full featured through\nconfiguration.Install\n\"dependencies\": {\n    \"hci-ng-grid\": \"5.0.x\"\n}import {GridModule} from \"hci-ng-grid\";@NgModule({\n    imports: [\n        GridModule.forRoot()\n    ]\n})Publishing\nCompiled code gets moved to the dist folder with a copy of the package.json.  Custom commands are required for\npackaging and publishing.  Use npmPack and npmPublish instead of the usual pack and publish.Basic Features\n\nSorting: Change sorting by clicking on column header.\nFiltering: String, select, range filtering with the possibility for custom filters.\nPaging: Paging with various page sizes, first, last, previous and next.\nRow Grouping: Rows can be grouped by one or more columns.\nExternal Data Call: Callback to retrieve data from external source.\nCustom Events: Listeners can be added to work for specific events and custom actions can be taken.\n\nUsage\nNote, there are so many features to this grid that not all are currently listed here.  See the demo for full examples.\nThe basic syntax for data provided by the implementing component.\n\nThe basic syntax for an external data call.\n\nAnd a function using mocked external data call.\ndataRequest: (externalInfo: ExternalInfo) => {};\n\nngOnInit() {\n  this.dataRequest = (externalInfo: ExternalInfo) => {\n    return Observable.of(new ExternalData(this.dataGeneratorService.getData(250), externalInfo)).delay(500);\n  };\n}Inputs\ndata\ntype: Object[]\ndefault: undefined\nProvide the grid with an array of rows as objects.  Two way binding to this data.dataCall\ntype: Function\ndefault: undefined\nA function that is called to retrieve data.  The function is passed filtering, sorting and paging info.id\ntype: string\ndefault: undefined\nThe html id for the grid and the id that can be used to get the grid from the global grid service.config\ntype: any\ndefault: {}\nA json object that contains configuration options for the grid.linkedGroups\ntype: string[]\ndefault: undefined\nThe group names that this grid should be linked to.configurable\ntype: boolean\ndefault: false\nFlag if the user should be allowed to modify the grid's configuration (e.g. what colums are visible and how big).title\ntype: string\ndefault: undefined\nShows this title in a title bar above the grid.theme\ntype: string\ndefault: \"spreadsheet\"\noptions: \"spreadsheet\", \"report\", or your own\nThe name of the theme to use.  columns\ntype: Column[]\ndefault: undefined\nAn array of column configuration objects.fixedColumns\ntype: string[]\ndefault: undefined\nA list of column names that should be fixed to the left side of the grid.groupBy\ntype: string[]\ndefault: undefined\nA list of column names that should be used to group rows together.* Currently disabled *\ngroupByCollapsed\ntype: boolean\ndefault: true\nThe state for grouped rows if those rows in a group should be hidden or shown by default.externalGrouping\ntype: boolean\ndefault: false\nTrue if grouping should be handled by the external data call.  This forces filtering, sorting and paging to also be external.externalFiltering\ntype: boolean\ndefault: false\nTrue if filtering should be handled by the external data call.externalSorting\ntype: boolean\ndefault: false\nTrue if sorting should be handled by the external data call.externalPaging\ntype: boolean\ndefault: false\nTrue if paging should be handled by the external data call.  This forces filtering, sorting and paging to be external.pageSize\ntype: number\ndefault: undefined\nThe number of rows per page.  If not specified it will show all of them.pageSizes\ntype: number[]\ndefault: [10, 25, 50]\nAn array of possible page sizes that the user can choose from.nVisibleRows\ntype: number\ndefault: -1\nThe number of visible rows.  A page might have 100 rows, but you can limit the size of the grid to 10 rows which would be scrolling for the user.  The default is -1 which is the same as the page size.saveOnDirtyRowChange\ntype: boolean\ndefault: false\nIf true, will emit a (onRowSave) event if you navigate to a new row and the previous row has dirty values.busyTemplate\ntype: TemplateRef\ndefault: undefined\nA custom template shown when data is loaded.  If you don't like the default spinner.eventListeners\ntype: EventListenerArg[]\ndefault: []\nAn array of listeners that can perform actions on any sort of click or key events.mode\ntype: string\ndefault: undefined\nA shortcut for creating listeners.  Rather than passing in your own listeners, specify a mode and the required listeners will be created for you.logWarnings\ntype: boolean\ndefault: true\nTrue if you want warnings to show in the console.display\ntype: string\ndefault: flow-root\nSets the display on the root component.  Although you could also do this with style on the grid.addNewRowButtonLocation\ntype: string\ndefault: undefined\nCan be \"title-bar\" or \"footer\" depending where you want the add new row button to appear.newRowPostCall\ntype: (data: newRow) => Observable\ndefault: undefined\nImplement your own call to handle creating a new row.  For example, persisting it so the new gets an id created in the database.newRowPostCallSuccess\ntype: (newRow: any) => void\ndefault: undefined\nCustom command upon successful newRowPostCall().newRowPostCallError\ntype: (error: any) => void\ndefault: undefined\nCustom error command upon error from newRowPostCall().newRowPostCallFinally\ntype: () => void\ndefault: undefined\nCustom finally command when newRowPostCall() success or error completes.Outputs\nonCellSave\ntype: any\n$event: { key: rows[i].key,\n          i: i,\n          j: j,\n          field: columns[j].field,\n          oldValue: oldValue,\n          newValue: newValue }\nThe row key, location, field, old and new value of the cell.onRowSave\ntype: any\n$event: { key: rows[i].key,\n          rowNum: i,\n          row: originalRowData }\nEmits the key, row number and the data for the row in the format originally passed in.onConfigChange\ntype: any\n$event: config\nEmits the current configuration for the grid.cellClick\ntype: any\n$event: any\nDetermined by the event listener which can emit any type of data.cellDblClick\ntype: any\n$event: any\nDetermined by the event listener which can emit any type of data.rowClick\ntype: any\n$event: any\nDetermined by the event listener which can emit any type of data.rowDblClick\ntype: any\n$event: any\nDetermined by the event listener which can emit any type of data.warning\ntype: string\n$event: warning message as a string\nListen to this to handle warnings from the grid as you wish (e.g. as a toast popup).selectedRows\ntype: any[]\n$event: [key1, key2, ...]\nThis is an array of any instead of number because the row key could be anything.filterEvent\ntype: FilterInfo[]\n$event: FilterInfo[]\nThis is the array of filters used when a column's filters are applied.  In the case of a select where there are multiple\nFilterInfos, this includes the full list and not the one that changed.  This event is fired upon click.  It will take\nsome delay for data to come back at which point the filterEvent would be fired.dataFiltered\ntype: any\n$event: {type, status, nData}\nThis is emitted when a filter event returns data.  It will provide the number of rows returning.sortEvent\ntype: SortInfo\n$event: SortInfo\nThis is the sortInfo emitted when a column header is clicked.  It will take\nsome delay for data to come back at which point the sortEvent would be fired.dataSorted\ntype: any\n$event: {type, status, field}\nThis is emitted when a sort event returns data.  It will provide the field being sorted.Global Config\nThe root module can take configuration json that can be used to set defaults for every grid.\nFor example, if you want every grid in your application to use the same theme and you don't want\nto specify that theme in every instance of the grid, you can do the following:\nGridModule.forRoot({\n  theme: \"report\"\n})Advanced Features\nRendering Cells\nEvery refresh of data and every vertical scroll will re-render the visible rows and cells.  To speed things\nup, each cell is limited to rendering pure HTML.  However, there are several options of how to render and\nthe option of custom rendering.\nEvery cell is rendering with a class that implements the CellViewRenderer interface.  The two methods\nrequired to implement are\nsetConfig(config: any);\n\ncreateElement(renderer: Renderer2, column: Column, value: any, i: number, j: number): HTMLElement;As an example, the following is an example of a number range renderer.\n{\n    field: \"nLabs\",\n    name: \"# Labs\",\n    viewRenderer: CellNumberRangeView,\n    viewConfig: { low: 15, high: 85, showIcon: true }\n}The class is passed in as the viewRenderer and any config is passed in through the viewConfig.\nFiltering\nLike view rendering, built in and custom components can be used to render the filter.  The difference\nis rather than pure HTML, a filter is a component that extends a base class FilterRenderer.  The\nfollowing are examples of built in filters.\n{\n    field: \"firstName\",\n    name: \"First Name\",\n    filterRenderer: TextFilterRenderer\n},\n{\n    field: \"dob\",\n    name: \"Date of Birth\",\n    dataType: \"date\",\n    format: \"MM/DD/YYYY\",\n    editRenderer: DateEditRenderer,\n    filterRenderer: CompareFilterRenderer\n},\n{\n    field: \"gender\",\n    name: \"Gender\",\n    editRenderer: ChoiceEditRenderer,\n    choices: [ {value: \"Female\", display: \"Female\"}, {value: \"Male\", display: \"Male\"} ],\n    filterRenderer: SelectFilterRenderer\n}TODOs\n\nThere are only left fixed colums, but some have requested right fixed columns.\n\nBuilding and Demo\nTo run the demo for the first time, run the following commands:\nnpm install\nnpm run install-demo\nnpm run run-demoIf package.json doesn't change, after making a change to the grid run:\nnpm run build\nnpm run run-demoThe grid build automatically copies the transpiled files to the demo/node_modules/hci-ng-grid which mimics pulling\nthe dependency from npm.\nTo mimic a production build and be able to run the demo anywhere, use \"npm run run-demo-prod\".\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nCopyright (c) 2018 Huntsman Cancer Institute at the University of Utah\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        GridModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_GridModule\n\n\n\ncluster_GridModule_declarations\n\n\n\ncluster_GridModule_GridComponent_providers\n\n\n\ncluster_GridModule_exports\n\n\n\n\nBigTextPopup\n\nBigTextPopup\n\n\n\nGridModule\n\nGridModule\n\nGridModule -->\n\nBigTextPopup->GridModule\n\n\n\n\n\nChoiceEditRenderer\n\nChoiceEditRenderer\n\nGridModule -->\n\nChoiceEditRenderer->GridModule\n\n\n\n\n\nColumnHeaderComponent\n\nColumnHeaderComponent\n\nGridModule -->\n\nColumnHeaderComponent->GridModule\n\n\n\n\n\nCompareFilterRenderer\n\nCompareFilterRenderer\n\nGridModule -->\n\nCompareFilterRenderer->GridModule\n\n\n\n\n\nConfigMenuComponent\n\nConfigMenuComponent\n\nGridModule -->\n\nConfigMenuComponent->GridModule\n\n\n\n\n\nConfigMultiChoiceComponent\n\nConfigMultiChoiceComponent\n\nGridModule -->\n\nConfigMultiChoiceComponent->GridModule\n\n\n\n\n\nGridComponent\n\nGridComponent\n\nGridModule -->\n\nGridComponent->GridModule\n\n\n\n\n\nIsFixedPipe\n\nIsFixedPipe\n\nGridModule -->\n\nIsFixedPipe->GridModule\n\n\n\n\n\nIsGroupPipe\n\nIsGroupPipe\n\nGridModule -->\n\nIsGroupPipe->GridModule\n\n\n\n\n\nIsRowVisiblePipe\n\nIsRowVisiblePipe\n\nGridModule -->\n\nIsRowVisiblePipe->GridModule\n\n\n\n\n\nIsVisiblePipe\n\nIsVisiblePipe\n\nGridModule -->\n\nIsVisiblePipe->GridModule\n\n\n\n\n\nSelectFilterRenderer\n\nSelectFilterRenderer\n\nGridModule -->\n\nSelectFilterRenderer->GridModule\n\n\n\n\n\nTextEditRenderer\n\nTextEditRenderer\n\nGridModule -->\n\nTextEditRenderer->GridModule\n\n\n\n\n\nTextFilterRenderer\n\nTextFilterRenderer\n\nGridModule -->\n\nTextFilterRenderer->GridModule\n\n\n\n\n\nGridComponent \n\nGridComponent \n\nGridComponent  -->\n\nGridModule->GridComponent \n\n\n\n\n\nGridService\n\nGridService\n\nGridComponent -->\n\nGridService->GridComponent\n\n\n\n\n\nGridEventService\n\nGridEventService\n\nGridComponent -->\n\nGridEventService->GridComponent\n\n\n\n\n\nGridMessageService\n\nGridMessageService\n\nGridComponent -->\n\nGridMessageService->GridComponent\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        1 Module\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    10 Components\n                \n            \n        \n        \n            \n                \n                    \n                    4 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    4 Pipes\n                \n            \n        \n        \n            \n                \n                    \n                    32 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    12 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ARROW   (src/.../grid-event.service.ts)\n                        \n                        \n                            CLICK   (src/.../grid-event.service.ts)\n                        \n                        \n                            NO_EVENT   (src/.../grid.component.ts)\n                        \n                        \n                            RESIZE   (src/.../grid.component.ts)\n                        \n                        \n                            SCROLL   (src/.../grid.component.ts)\n                        \n                        \n                            TAB   (src/.../grid-event.service.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/grid/services/grid-event.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            ARROW\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 2\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            CLICK\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            TAB\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 1\n                        \n                    \n\n\n            \n        \n\n    src/grid/grid.component.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            NO_EVENT\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : -1\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            RESIZE\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            SCROLL\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 1\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
