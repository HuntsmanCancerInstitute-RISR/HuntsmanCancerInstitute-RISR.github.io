var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.1.6","fields":["title","body"],"fieldVectors":[["title/dependencies.html",[0,2.175,1,2.146]],["body/dependencies.html",[1,2.673,2,3.372,3,3.892,4,3.372,5,0.032,6,4.682,7,4.682,8,4.682,9,0.03,10,0.03]],["title/index.html",[11,1.668,12,1.885,13,0.446]],["body/index.html",[0,0.678,1,0.466,2,1.415,5,0.029,9,0.008,10,0.008,11,0.52,14,0.587,15,0.587,16,0.815,17,0.815,18,3.896,19,0.815,20,1.965,21,1.453,22,0.815,23,0.815,24,0.815,25,2.386,26,2.275,27,2.737,28,0.815,29,0.815,30,0.815,31,3.432,32,0.815,33,0.587,34,0.587,35,2.485,36,0.678,37,1.965,38,0.815,39,1.453,40,0.815,41,0.815,42,0.815,43,0.476,44,0.466,45,0.815,46,1.453,47,1.208,48,0.815,49,0.815,50,0.815,51,0.815,52,0.815,53,0.678,54,0.815,55,2.736,56,0.815,57,1.965,58,3.083,59,0.815,60,0.815,61,1.453,62,0.815,63,0.815,64,0.815,65,3.035,66,1.208,67,1.718,68,2.303,69,1.453,70,3.57,71,2.303,72,1.208,73,1.453,74,1.453,75,3.708,76,0.815,77,1.965,78,1.453,79,0.815,80,1.453,81,0.815,82,3.125,83,3.291,84,1.453,85,0.678,86,2.736,87,1.983,88,0.815,89,1.453,90,0.063,91,2.17,92,2.795,93,0.678,94,1.453,95,0.815,96,1.208,97,0.815,98,0.815,99,0.815,100,0.815,101,1.965,102,1.362,103,0.815,104,0.52,105,2.737,106,1.208,107,1.52,108,0.921,109,1.718,110,2.386,111,0.815,112,0.815,113,2.386,114,0.815,115,0.815,116,0.268,117,0.815,118,0.815,119,0.815,120,0.815,121,0.78,122,1.634,123,2.303,124,2.523,125,1.453,126,0.815,127,0.815,128,0.815,129,2.737,130,0.815,131,1.965,132,1.208,133,0.678,134,0.815,135,1.453,136,0.815,137,2.275,138,0.326,139,0.815,140,0.568,141,0.815,142,0.815,143,1.176,144,1.971,145,0.815,146,1.634,147,0.466,148,0.678,149,0.815,150,1.453,151,1.453,152,1.965,153,0.815,154,1.965,155,1.453,156,0.815,157,0.678,158,0.815,159,1.453,160,1.453,161,2.386,162,0.815,163,1.415,164,1.453,165,0.815,166,0.815,167,0.815,168,0.815,169,0.815,170,2.53,171,0.815,172,0.815,173,0.815,174,1.453,175,0.815,176,0.815,177,0.815,178,0.815,179,2.303,180,0.815,181,1.965,182,0.815,183,1.453,184,0.815,185,0.815,186,0.815,187,0.815,188,1.046,189,0.815,190,1.208,191,1.208,192,1.453,193,0.815,194,3.88,195,0.815,196,0.815,197,0.749,198,0.678,199,0.815,200,0.815,201,0.815,202,1.208,203,1.453,204,0.815,205,0.587,206,0.815,207,2.523,208,0.815,209,0.815,210,1.453,211,0.815,212,0.815,213,1.965,214,1.634,215,0.815,216,0.815,217,1.965,218,1.453,219,1.415,220,0.815,221,0.815,222,0.815,223,0.815,224,1.453,225,1.965,226,2.921,227,0.815,228,1.453,229,1.453,230,0.815,231,0.815,232,1.118,233,0.815,234,0.815,235,0.815,236,1.453,237,0.815,238,0.815,239,1.415,240,0.815,241,2.386,242,0.815,243,0.815,244,0.815,245,0.815,246,0.678,247,0.815,248,0.815,249,0.815,250,0.815,251,0.815,252,0.815,253,1.965,254,0.815,255,0.815,256,0.815,257,0.815,258,0.678,259,0.815,260,1.453,261,1.965,262,1.453,263,1.453,264,1.453,265,1.208,266,0.815,267,0.815,268,1.453,269,0.815,270,0.815,271,1.415,272,0.815,273,0.815,274,0.815,275,0.815,276,0.421,277,0.815,278,0.815,279,1.634,280,0.815,281,2.671,282,1.52,283,0.815,284,0.815,285,0.815,286,0.815,287,0.678,288,0.815,289,0.815,290,1.208,291,0.815,292,0.153,293,0.815,294,0.063,295,0.154,296,0.678,297,0.815,298,0.815,299,0.815,300,0.815,301,0.815,302,1.453,303,0.815,304,1.453,305,0.815,306,0.815,307,0.815,308,0.815,309,0.815,310,0.678,311,1.453,312,0.815,313,0.815,314,0.815,315,2.386,316,0.815,317,0.587,318,0.815,319,1.208,320,0.815,321,0.815,322,0.815,323,1.453,324,0.587,325,0.587,326,1.453,327,0.587,328,0.815,329,1.453,330,1.453,331,0.587,332,0.815,333,0.815,334,0.678,335,0.815,336,0.815,337,0.678,338,0.678]],["title/overview.html",[339,3.538]],["body/overview.html",[1,1.503,4,1.896,5,0.033,9,0.02,10,0.02,44,3.636,107,1.677,109,1.896,188,1.896,276,1.946,292,0.205,294,0.205,317,3.177,324,3.177,325,3.177,327,3.177,331,3.177,339,2.188,340,2.188,341,2.188,342,0.205,343,2.188,344,2.188,345,2.188,346,2.188,347,4.955,348,3.667,349,2.811,350,2.811,351,2.811,352,2.811,353,3.667,354,3.667,355,3.667,356,3.667,357,3.667,358,3.667,359,2.811,360,3.137,361,2.188,362,1.896,363,3.773,364,3.773,365,1.896,366,1.028,367,2.632]],["title/changelog.html",[11,1.668,12,1.885,368,2.617]],["body/changelog.html",[5,0.022,9,0.022,10,0.022,18,3.467,26,2.524,31,3.004,34,2.186,35,1.422,55,2.524,66,3.467,68,3.173,72,2.524,82,2.658,85,2.524,86,2.524,87,2.524,92,3.432,93,3.467,104,1.934,106,2.524,133,2.524,137,4.265,146,2.524,147,2.382,163,3.873,202,2.524,219,2.186,281,3.004,282,1.934,310,3.467,319,2.524,337,2.524,369,3.036,370,3.036,371,2.658,372,4.765,373,2.524,374,3.036,375,3.036,376,3.036,377,3.036,378,3.036,379,3.036,380,3.036,381,3.036,382,3.036,383,3.036,384,3.036,385,4.171,386,3.036,387,3.036,388,3.036,389,3.036,390,3.036,391,3.036,392,3.036,393,3.036,394,3.036,395,3.036,396,2.524,397,3.036,398,3.036,399,3.036,400,3.036,401,3.036,402,3.036,403,4.171,404,3.036,405,3.036,406,3.036,407,3.036,408,2.524,409,3.036,410,2.524,411,3.036,412,3.036,413,3.036,414,3.036,415,3.036]],["title/license.html",[11,1.668,12,1.885,396,2.175]],["body/license.html",[5,0.023,9,0.023,10,0.023,14,2.263,15,2.263,47,2.612,53,4.327,58,3.55,91,1.342,96,2.612,107,2.002,148,2.612,157,2.612,190,3.55,258,4.032,279,2.612,338,2.612,362,2.263,408,2.612,416,4.032,417,2.612,418,3.141,419,2.612,420,2.612,421,2.612,422,4.27,423,3.141,424,3.141,425,3.141,426,3.141,427,4.27,428,3.141,429,5.925,430,3.141,431,3.141,432,0.244,433,4.27,434,4.032,435,3.141,436,3.141,437,3.141,438,3.141,439,3.141,440,3.141,441,3.141,442,3.141,443,2.612,444,3.141,445,4.27,446,4.27,447,3.141,448,3.141,449,4.27,450,3.141,451,3.141,452,3.141,453,3.141,454,3.141,455,3.141,456,3.141,457,3.141,458,3.141,459,2.612,460,3.141,461,3.141,462,3.141,463,3.141,464,3.141,465,3.141,466,3.141,467,3.141,468,3.141]],["title/modules.html",[276,2.196]],["body/modules.html",[5,0.03,9,0.03,10,0.03,34,3.431,44,2.72,276,2.457,469,4.764,470,4.764,471,4.764]],["title/modules/GridModule.html",[44,1.785,276,1.613]],["body/modules/GridModule.html",[1,0.884,2,1.115,3,1.287,4,1.809,5,0.034,9,0.013,10,0.013,14,1.115,15,1.115,43,1.885,44,3.492,70,2.636,82,0.986,90,0.12,107,2.738,109,2.283,116,0.343,170,1.809,276,1.296,292,0.12,317,3.396,324,3.396,325,3.396,327,3.396,331,3.396,340,1.287,341,2.636,342,0.283,343,1.287,344,1.287,345,1.287,346,1.287,347,4.68,348,3.572,349,2.738,350,2.738,351,2.738,352,2.738,353,3.92,354,3.92,355,3.572,356,3.572,357,2.636,358,2.636,359,2.02,360,2.088,361,1.287,362,1.115,416,1.287,417,1.287,419,1.287,420,1.287,421,1.287,432,0.12,472,0.142,473,1.548,474,2.512,475,1.548,476,1.548,477,1.548,478,3.17,479,3.17,480,3.649,481,0.604,482,2.512,483,1.548,484,2.512,485,1.548,486,1.548,487,1.548,488,0.986,489,1.548,490,3.649,491,2.512,492,1.548,493,1.548,494,1.548,495,3.17,496,4.296,497,1.548,498,1.548,499,1.548,500,1.548,501,1.548,502,1.548,503,1.548,504,2.512,505,1.548,506,2.512,507,1.548,508,1.548,509,3.17,510,1.548,511,1.548,512,2.088,513,1.548,514,3.17,515,3.17,516,1.548]],["title/injectables/GridMessageService.html",[359,1.993,365,2.252]],["body/injectables/GridMessageService.html",[5,0.034,9,0.02,10,0.02,13,0.435,35,2.03,43,1.207,71,2.998,90,0.198,116,0.592,121,0.688,138,0.504,140,0.564,179,2.474,197,1.902,214,3.066,232,2.03,246,3.947,292,0.198,295,0.696,342,0.198,359,2.35,365,3.12,410,4.188,432,0.198,443,4.365,472,0.233,481,0.996,517,4.501,518,2.549,519,1.728,520,4.069,521,4.748,522,4.748,523,4.748,524,3.688,525,3.688,526,4.333,527,3.688,528,0.717,529,2.549,530,0.629,531,2.656,532,3.688,533,2.549,534,3.066,535,2.549,536,2.549,537,3.688,538,2.549,539,2.549,540,2.549,541,2.549,542,2.549,543,2.549,544,2.549]],["title/pipes/IsFixedPipe.html",[351,1.993,366,1.221]],["body/pipes/IsFixedPipe.html",[5,0.034,9,0.024,10,0.024,43,1.468,68,2.559,90,0.262,102,2.873,108,1.582,116,0.687,121,0.461,123,1.928,124,4.182,138,0.461,140,0.77,143,1.798,144,2.432,163,3.86,290,2.807,292,0.262,295,0.638,342,0.262,351,2.856,366,1.965,432,0.262,472,0.309,481,1.319,488,2.152,528,0.461,530,0.576,545,2.856,546,3.377,547,1.928,548,4.482,549,2.152,550,2.856,551,3.377,552,2.856,553,2.152,554,3.377]],["title/pipes/IsGroupPipe.html",[350,1.993,366,1.221]],["body/pipes/IsGroupPipe.html",[5,0.034,9,0.025,10,0.025,43,1.514,68,2.639,90,0.275,102,2.939,108,1.658,116,0.703,123,2.021,138,0.483,140,0.788,292,0.275,295,0.668,342,0.275,350,2.946,366,2.01,432,0.275,472,0.324,481,1.382,488,2.255,528,0.483,530,0.603,545,2.946,547,2.021,549,2.255,550,2.946,552,2.946,553,2.255,555,3.539,556,4.622,557,3.539,558,3.539,559,3.539]],["title/pipes/IsRowVisiblePipe.html",[352,1.993,366,1.221]],["body/pipes/IsRowVisiblePipe.html",[5,0.034,9,0.025,10,0.025,43,1.514,82,3.478,90,0.275,102,2.939,108,1.658,116,0.703,123,2.021,138,0.483,140,0.788,292,0.275,295,0.668,342,0.275,352,2.946,366,2.01,432,0.275,472,0.324,481,1.382,528,0.483,530,0.603,545,2.946,547,2.021,549,2.255,550,2.946,552,2.946,553,2.255,560,2.942,561,4.622,562,2.942,563,3.539,564,2.942]],["title/pipes/IsVisiblePipe.html",[349,1.993,366,1.221]],["body/pipes/IsVisiblePipe.html",[5,0.034,9,0.025,10,0.025,43,1.522,68,2.654,90,0.277,102,2.952,108,1.673,116,0.706,123,2.038,138,0.487,140,0.791,292,0.277,295,0.674,342,0.277,349,2.962,366,2.019,432,0.277,472,0.326,481,1.394,488,2.275,528,0.487,530,0.608,545,2.962,547,2.038,549,2.275,550,2.962,552,2.962,553,2.275,560,2.968,562,2.968,564,2.968,565,4.649]],["title/classes/Cell.html",[282,1.993,292,0.243]],["body/classes/Cell.html",[5,0.033,9,0.024,10,0.024,13,0.573,31,3.219,35,1.576,90,0.261,121,0.731,122,4.174,138,0.459,140,0.515,143,1.795,144,3.219,179,2.867,198,4.448,207,4.448,232,2.61,281,2.422,282,2.848,292,0.347,342,0.261,432,0.261,459,2.796,472,0.308,519,2.094,528,0.731,530,0.573,547,1.92,566,3.363,567,1.92,568,3.363,569,3.363,570,3.363,571,2.143,572,4.47,573,4.47,574,4.47,575,3.363,576,3.363,577,3.363]],["title/classes/EmptyFactory.html",[292,0.243,578,2.252]],["body/classes/EmptyFactory.html",[5,0.033,9,0.025,10,0.025,13,0.617,90,0.281,116,0.64,121,0.71,138,0.494,140,0.554,147,2.066,197,2.419,292,0.364,294,0.281,295,0.885,342,0.364,371,2.305,432,0.281,472,0.331,528,0.64,530,0.617,567,2.066,571,2.988,578,3.377,579,3.007,580,2.605,581,2.605,582,3.508,583,3.618,584,4.208,585,3.618,586,3.618,587,3.315,588,2.305,589,3.007]],["title/classes/FormatterParser.html",[292,0.243,590,2.599]],["body/classes/FormatterParser.html",[5,0.034,9,0.023,10,0.023,13,0.525,35,1.444,36,2.562,90,0.239,116,0.762,121,0.705,138,0.656,140,0.735,232,2.615,239,4.02,292,0.327,295,0.796,296,3.503,342,0.239,432,0.239,434,2.562,472,0.282,519,1.975,528,0.705,530,0.819,531,2.22,567,1.76,590,3.503,591,5.406,592,3.082,593,3.082,594,3.082,595,3.082,596,4.214,597,4.214,598,4.214,599,4.214,600,3.082,601,4.214,602,3.082,603,3.082,604,3.082,605,3.082]],["title/classes/HtmlUtil.html",[292,0.243,606,2.599]],["body/classes/HtmlUtil.html",[5,0.034,9,0.019,10,0.019,13,0.416,43,0.8,71,2.827,90,0.19,116,0.748,121,0.577,132,4.442,138,0.577,140,0.647,265,3.868,287,2.971,292,0.361,295,0.675,334,2.971,342,0.19,432,0.19,472,0.223,512,4.647,528,0.577,530,0.721,567,1.394,606,2.971,607,4.652,608,2.442,609,3.574,610,3.574,611,3.574,612,3.574,613,3.574,614,3.574,615,3.574,616,3.574,617,5.758,618,2.442,619,5.479,620,2.442,621,3.574,622,2.442,623,3.574,624,2.442,625,4.227,626,2.442,627,4.652,628,2.03,629,2.442]],["title/classes/InjectableFactory.html",[292,0.243,630,2.252]],["body/classes/InjectableFactory.html",[5,0.033,9,0.023,10,0.023,13,0.544,33,3.108,43,1.045,90,0.248,104,2.75,108,2.022,116,0.589,121,0.747,138,0.436,140,0.488,147,2.464,197,1.646,292,0.335,294,0.248,295,0.815,342,0.335,371,2.75,432,0.248,472,0.292,481,1.246,520,2.298,528,0.589,530,0.544,567,1.822,571,2.033,580,3.108,581,3.108,582,3.338,587,3.116,588,2.033,630,3.108,631,2.653,632,4.995,633,3.587,634,3.191,635,3.772,636,3.191,637,3.587,638,3.191,639,2.653,640,2.653]],["title/classes/RowChange.html",[292,0.243,641,2.599]],["body/classes/RowChange.html",[5,0.033,9,0.025,10,0.025,13,0.595,90,0.271,121,0.699,138,0.477,140,0.535,179,3.537,292,0.356,342,0.271,432,0.271,472,0.319,519,2.148,528,0.699,530,0.595,571,2.226,641,3.81,642,5.431,643,3.493,644,5.984,645,5.787,646,4.583,647,4.583,648,3.493,649,3.493,650,3.493]],["title/classes/SortInfo.html",[271,2.252,292,0.243]],["body/classes/SortInfo.html",[5,0.034,9,0.021,10,0.021,13,0.459,35,1.797,71,3.212,90,0.209,116,0.73,121,0.665,138,0.524,140,0.587,143,2.011,170,2.763,226,4.447,232,1.797,271,2.763,292,0.298,295,0.724,342,0.209,373,4.447,432,0.209,472,0.246,519,1.797,528,0.73,530,0.654,531,2.763,628,3.189,651,5.504,652,2.693,653,5.349,654,4.869,655,4.869,656,3.836,657,3.836,658,2.693,659,2.693,660,3.836,661,2.693,662,3.836,663,2.693,664,2.693,665,2.693,666,3.836,667,3.836]],["title/interfaces/ClickListener.html",[294,0.243,668,2.599]],["body/interfaces/ClickListener.html",[5,0.032,9,0.027,10,0.027,13,0.701,67,3.663,90,0.32,91,1.757,116,0.562,121,0.562,138,0.562,140,0.629,143,1.818,294,0.395,295,0.96,342,0.32,432,0.32,472,0.376,528,0.562,530,0.701,668,4.228,669,4.112,670,5.086,671,2.848,672,4.112]],["title/interfaces/DblClickListener.html",[294,0.243,673,2.599]],["body/interfaces/DblClickListener.html",[5,0.032,9,0.027,10,0.027,13,0.694,90,0.316,91,1.739,116,0.556,121,0.556,138,0.556,140,0.623,143,1.807,294,0.393,295,0.954,342,0.316,432,0.316,472,0.372,528,0.556,530,0.694,671,2.835,673,4.202,674,5.054,675,4.071,676,5.054,677,5.054,678,4.071]],["title/interfaces/Dictionary.html",[294,0.243,679,2.599]],["body/interfaces/Dictionary.html",[5,0.032,9,0.027,10,0.027,13,0.69,71,3.435,90,0.315,121,0.688,219,4.133,232,2.689,294,0.391,342,0.315,432,0.315,472,0.37,519,2.361,528,0.688,679,4.189,680,4.051,681,4.051,682,4.051]],["title/interfaces/EmptyConstructor.html",[294,0.243,584,2.252]],["body/interfaces/EmptyConstructor.html",[5,0.034,9,0.028,10,0.028,90,0.326,116,0.573,197,2.657,292,0.326,294,0.4,342,0.4,432,0.326,472,0.384,578,3.023,579,3.489,582,2.675,584,4.184,587,3.282,588,2.675,589,3.489]],["title/interfaces/EventListenerArg.html",[205,2.252,294,0.243]],["body/interfaces/EventListenerArg.html",[5,0.032,9,0.026,10,0.026,13,0.664,43,1.275,90,0.303,92,3.88,121,0.849,138,0.671,205,3.541,239,4.075,294,0.382,342,0.303,432,0.303,472,0.356,481,1.521,519,2.304,528,0.671,683,5.387,684,3.895,685,3.895,686,3.895]],["title/interfaces/InjectableConstructor.html",[294,0.243,635,2.252]],["body/interfaces/InjectableConstructor.html",[5,0.034,9,0.026,10,0.026,33,2.714,43,1.234,90,0.293,104,2.402,108,1.766,116,0.515,121,0.657,147,2.152,197,1.944,292,0.293,294,0.374,342,0.374,371,2.402,432,0.293,472,0.345,481,1.472,520,2.714,580,2.714,581,2.714,582,2.402,587,3.068,588,2.402,630,2.714,631,3.133,632,4.801,633,3.133,635,3.821,637,3.133,639,3.133,640,3.133]],["title/interfaces/MouseDownListener.html",[294,0.243,687,2.599]],["body/interfaces/MouseDownListener.html",[5,0.032,9,0.027,10,0.027,13,0.694,90,0.316,91,1.739,116,0.556,121,0.556,138,0.556,140,0.623,143,1.807,294,0.393,295,0.954,342,0.316,432,0.316,472,0.372,528,0.556,530,0.694,671,2.835,687,4.202,688,3.221,689,4.071,690,5.054,691,5.054,692,4.071]],["title/interfaces/MouseDragListener.html",[294,0.243,693,2.599]],["body/interfaces/MouseDragListener.html",[5,0.032,9,0.027,10,0.027,13,0.694,90,0.316,91,1.739,116,0.556,121,0.556,138,0.556,140,0.623,143,1.807,294,0.393,295,0.954,342,0.316,432,0.316,472,0.372,528,0.556,530,0.694,671,2.835,688,3.221,693,4.202,694,4.071,695,5.054,696,5.054,697,4.071]],["title/interfaces/MouseOverListener.html",[294,0.243,698,2.599]],["body/interfaces/MouseOverListener.html",[5,0.032,9,0.027,10,0.027,13,0.694,90,0.316,91,1.739,116,0.556,121,0.556,138,0.556,140,0.623,143,1.807,294,0.393,295,0.954,342,0.316,432,0.316,472,0.372,528,0.556,530,0.694,671,2.835,688,3.221,698,4.202,699,4.071,700,5.054,701,5.054,702,4.071]],["title/interfaces/MouseUpListener.html",[294,0.243,703,2.599]],["body/interfaces/MouseUpListener.html",[5,0.032,9,0.027,10,0.027,13,0.694,90,0.316,91,1.739,116,0.556,121,0.556,138,0.556,140,0.623,143,1.807,294,0.393,295,0.954,342,0.316,432,0.316,472,0.372,528,0.556,530,0.694,671,2.835,688,3.221,703,4.202,704,4.071,705,5.054,706,5.054,707,4.071]],["title/miscellaneous/variables.html",[708,2.175,709,3.124]],["body/miscellaneous/variables.html",[5,0.034,9,0.024,10,0.024,13,0.585,35,2.699,67,3.654,121,0.787,179,3.528,188,3.654,191,4.217,232,2.699,517,2.855,534,2.855,708,2.855,709,2.855,710,5.073,711,5.073,712,5.073,713,5.073,714,3.434,715,4.532,716,3.434]]],"invertedIndex":[["",{"_index":5,"title":{},"body":{"dependencies.html":{},"index.html":{},"overview.html":{},"changelog.html":{},"license.html":{},"modules.html":{},"modules/GridModule.html":{},"injectables/GridMessageService.html":{},"pipes/IsFixedPipe.html":{},"pipes/IsGroupPipe.html":{},"pipes/IsRowVisiblePipe.html":{},"pipes/IsVisiblePipe.html":{},"classes/Cell.html":{},"classes/EmptyFactory.html":{},"classes/FormatterParser.html":{},"classes/HtmlUtil.html":{},"classes/InjectableFactory.html":{},"classes/RowChange.html":{},"classes/SortInfo.html":{},"interfaces/ClickListener.html":{},"interfaces/DblClickListener.html":{},"interfaces/Dictionary.html":{},"interfaces/EmptyConstructor.html":{},"interfaces/EventListenerArg.html":{},"interfaces/InjectableConstructor.html":{},"interfaces/MouseDownListener.html":{},"interfaces/MouseDragListener.html":{},"interfaces/MouseOverListener.html":{},"interfaces/MouseUpListener.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":715,"title":{},"body":{"miscellaneous/variables.html":{}}}],["1",{"_index":188,"title":{},"body":{"index.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["1.1.x",{"_index":6,"title":{},"body":{"dependencies.html":{}}}],["10",{"_index":183,"title":{},"body":{"index.html":{}}}],["100",{"_index":189,"title":{},"body":{"index.html":{}}}],["11",{"_index":363,"title":{},"body":{"overview.html":{}}}],["15",{"_index":306,"title":{},"body":{"index.html":{}}}],["2",{"_index":534,"title":{},"body":{"injectables/GridMessageService.html":{},"miscellaneous/variables.html":{}}}],["2.19.3",{"_index":8,"title":{},"body":{"dependencies.html":{}}}],["2016",{"_index":475,"title":{},"body":{"modules/GridModule.html":{}}}],["2018",{"_index":418,"title":{},"body":{"license.html":{}}}],["25",{"_index":184,"title":{},"body":{"index.html":{}}}],["3.0.0",{"_index":370,"title":{},"body":{"changelog.html":{}}}],["3.1.0",{"_index":41,"title":{},"body":{"index.html":{}}}],["33",{"_index":367,"title":{},"body":{"overview.html":{}}}],["4",{"_index":364,"title":{},"body":{"overview.html":{}}}],["50",{"_index":185,"title":{},"body":{"index.html":{}}}],["85",{"_index":308,"title":{},"body":{"index.html":{}}}],["_level",{"_index":521,"title":{},"body":{"injectables/GridMessageService.html":{}}}],["_messag",{"_index":522,"title":{},"body":{"injectables/GridMessageService.html":{}}}],["_messageobserv",{"_index":523,"title":{},"body":{"injectables/GridMessageService.html":{}}}],["abov",{"_index":157,"title":{},"body":{"index.html":{},"license.html":{}}}],["accessor",{"_index":525,"title":{},"body":{"injectables/GridMessageService.html":{}}}],["action",{"_index":96,"title":{},"body":{"index.html":{},"license.html":{}}}],["ad",{"_index":93,"title":{},"body":{"index.html":{},"changelog.html":{}}}],["add",{"_index":385,"title":{},"body":{"changelog.html":{}}}],["advanc",{"_index":280,"title":{},"body":{"index.html":{}}}],["allow",{"_index":147,"title":{},"body":{"index.html":{},"changelog.html":{},"classes/EmptyFactory.html":{},"classes/InjectableFactory.html":{},"interfaces/InjectableConstructor.html":{}}}],["although",{"_index":220,"title":{},"body":{"index.html":{}}}],["analyze_for_entry_compon",{"_index":478,"title":{},"body":{"modules/GridModule.html":{}}}],["and/or",{"_index":439,"title":{},"body":{"license.html":{}}}],["angular",{"_index":17,"title":{},"body":{"index.html":{}}}],["angular/common",{"_index":483,"title":{},"body":{"modules/GridModule.html":{}}}],["angular/cor",{"_index":481,"title":{},"body":{"modules/GridModule.html":{},"injectables/GridMessageService.html":{},"pipes/IsFixedPipe.html":{},"pipes/IsGroupPipe.html":{},"pipes/IsRowVisiblePipe.html":{},"pipes/IsVisiblePipe.html":{},"classes/InjectableFactory.html":{},"interfaces/EventListenerArg.html":{},"interfaces/InjectableConstructor.html":{}}}],["angular/form",{"_index":485,"title":{},"body":{"modules/GridModule.html":{}}}],["anyth",{"_index":29,"title":{},"body":{"index.html":{}}}],["anything.filterev",{"_index":252,"title":{},"body":{"index.html":{}}}],["api",{"_index":374,"title":{},"body":{"changelog.html":{}}}],["appli",{"_index":255,"title":{},"body":{"index.html":{}}}],["applic",{"_index":277,"title":{},"body":{"index.html":{}}}],["arg.interface.t",{"_index":684,"title":{},"body":{"interfaces/EventListenerArg.html":{}}}],["arg.interface.ts:4",{"_index":686,"title":{},"body":{"interfaces/EventListenerArg.html":{}}}],["arg.interface.ts:5",{"_index":685,"title":{},"body":{"interfaces/EventListenerArg.html":{}}}],["argument",{"_index":581,"title":{},"body":{"classes/EmptyFactory.html":{},"classes/InjectableFactory.html":{},"interfaces/InjectableConstructor.html":{}}}],["aris",{"_index":468,"title":{},"body":{"license.html":{}}}],["array",{"_index":124,"title":{},"body":{"index.html":{},"pipes/IsFixedPipe.html":{}}}],["arrow",{"_index":710,"title":{},"body":{"miscellaneous/variables.html":{}}}],["artifact.2.0.0",{"_index":397,"title":{},"body":{"changelog.html":{}}}],["asc",{"_index":653,"title":{},"body":{"classes/SortInfo.html":{}}}],["associ",{"_index":430,"title":{},"body":{"license.html":{}}}],["author",{"_index":458,"title":{},"body":{"license.html":{}}}],["auto",{"_index":383,"title":{},"body":{"changelog.html":{}}}],["back",{"_index":264,"title":{},"body":{"index.html":{}}}],["bar",{"_index":156,"title":{},"body":{"index.html":{}}}],["base",{"_index":314,"title":{},"body":{"index.html":{}}}],["basic",{"_index":37,"title":{},"body":{"index.html":{}}}],["be",{"_index":274,"title":{},"body":{"index.html":{}}}],["becom",{"_index":38,"title":{},"body":{"index.html":{}}}],["behavior",{"_index":376,"title":{},"body":{"changelog.html":{}}}],["beta.2",{"_index":42,"title":{},"body":{"index.html":{}}}],["big).titl",{"_index":153,"title":{},"body":{"index.html":{}}}],["bigtextpopup",{"_index":354,"title":{},"body":{"overview.html":{},"modules/GridModule.html":{}}}],["bind",{"_index":127,"title":{},"body":{"index.html":{}}}],["birth",{"_index":320,"title":{},"body":{"index.html":{}}}],["boolean",{"_index":143,"title":{},"body":{"index.html":{},"pipes/IsFixedPipe.html":{},"classes/Cell.html":{},"classes/SortInfo.html":{},"interfaces/ClickListener.html":{},"interfaces/DblClickListener.html":{},"interfaces/MouseDownListener.html":{},"interfaces/MouseDragListener.html":{},"interfaces/MouseOverListener.html":{},"interfaces/MouseUpListener.html":{}}}],["bootstrap",{"_index":4,"title":{},"body":{"dependencies.html":{},"overview.html":{},"modules/GridModule.html":{}}}],["bootstrap/ng",{"_index":3,"title":{},"body":{"dependencies.html":{},"modules/GridModule.html":{}}}],["break",{"_index":334,"title":{},"body":{"index.html":{},"classes/HtmlUtil.html":{}}}],["brows",{"_index":471,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":469,"title":{},"body":{"modules.html":{}}}],["built",{"_index":311,"title":{},"body":{"index.html":{}}}],["bump",{"_index":388,"title":{},"body":{"changelog.html":{}}}],["busi",{"_index":401,"title":{},"body":{"changelog.html":{}}}],["c",{"_index":417,"title":{},"body":{"license.html":{},"modules/GridModule.html":{}}}],["calculation.2.0.2",{"_index":392,"title":{},"body":{"changelog.html":{}}}],["call",{"_index":87,"title":{},"body":{"index.html":{},"changelog.html":{}}}],["call.externalpag",{"_index":177,"title":{},"body":{"index.html":{}}}],["call.externalsort",{"_index":176,"title":{},"body":{"index.html":{}}}],["call.pages",{"_index":178,"title":{},"body":{"index.html":{}}}],["callback",{"_index":88,"title":{},"body":{"index.html":{}}}],["cancer",{"_index":15,"title":{},"body":{"index.html":{},"license.html":{},"modules/GridModule.html":{}}}],["case",{"_index":256,"title":{},"body":{"index.html":{}}}],["cell",{"_index":282,"title":{"classes/Cell.html":{}},"body":{"index.html":{},"changelog.html":{},"classes/Cell.html":{}}}],["cell'",{"_index":568,"title":{},"body":{"classes/Cell.html":{}}}],["cell.onrowsav",{"_index":233,"title":{},"body":{"index.html":{}}}],["cell/editrenderers/choic",{"_index":499,"title":{},"body":{"modules/GridModule.html":{}}}],["cell/editrenderers/d",{"_index":500,"title":{},"body":{"modules/GridModule.html":{}}}],["cell/editrenderers/text",{"_index":494,"title":{},"body":{"modules/GridModule.html":{}}}],["cell/viewpopuprenderer/bigtext",{"_index":502,"title":{},"body":{"modules/GridModule.html":{}}}],["cellnumberrangeview",{"_index":303,"title":{},"body":{"index.html":{}}}],["cellviewrender",{"_index":293,"title":{},"body":{"index.html":{}}}],["chang",{"_index":66,"title":{},"body":{"index.html":{},"changelog.html":{}}}],["change.t",{"_index":643,"title":{},"body":{"classes/RowChange.html":{}}}],["change.ts:3",{"_index":648,"title":{},"body":{"classes/RowChange.html":{}}}],["change.ts:4",{"_index":647,"title":{},"body":{"classes/RowChange.html":{}}}],["changelog",{"_index":368,"title":{"changelog.html":{}},"body":{}}],["charg",{"_index":426,"title":{},"body":{"license.html":{}}}],["choic",{"_index":328,"title":{},"body":{"index.html":{}}}],["choice.compon",{"_index":510,"title":{},"body":{"modules/GridModule.html":{}}}],["choiceeditrender",{"_index":327,"title":{},"body":{"index.html":{},"overview.html":{},"modules/GridModule.html":{}}}],["choos",{"_index":186,"title":{},"body":{"index.html":{}}}],["claim",{"_index":461,"title":{},"body":{"license.html":{}}}],["class",{"_index":292,"title":{"classes/Cell.html":{},"classes/EmptyFactory.html":{},"classes/FormatterParser.html":{},"classes/HtmlUtil.html":{},"classes/InjectableFactory.html":{},"classes/RowChange.html":{},"classes/SortInfo.html":{}},"body":{"index.html":{},"overview.html":{},"modules/GridModule.html":{},"injectables/GridMessageService.html":{},"pipes/IsFixedPipe.html":{},"pipes/IsGroupPipe.html":{},"pipes/IsRowVisiblePipe.html":{},"pipes/IsVisiblePipe.html":{},"classes/Cell.html":{},"classes/EmptyFactory.html":{},"classes/FormatterParser.html":{},"classes/HtmlUtil.html":{},"classes/InjectableFactory.html":{},"classes/RowChange.html":{},"classes/SortInfo.html":{},"interfaces/EmptyConstructor.html":{},"interfaces/InjectableConstructor.html":{}}}],["click",{"_index":67,"title":{},"body":{"index.html":{},"interfaces/ClickListener.html":{},"miscellaneous/variables.html":{}}}],["click(ev",{"_index":670,"title":{},"body":{"interfaces/ClickListener.html":{}}}],["click.interface.t",{"_index":675,"title":{},"body":{"interfaces/DblClickListener.html":{}}}],["click.interface.ts:3",{"_index":678,"title":{},"body":{"interfaces/DblClickListener.html":{}}}],["clicklisten",{"_index":668,"title":{"interfaces/ClickListener.html":{}},"body":{"interfaces/ClickListener.html":{}}}],["cluster_gridmodul",{"_index":343,"title":{},"body":{"overview.html":{},"modules/GridModule.html":{}}}],["cluster_gridmodule_declar",{"_index":344,"title":{},"body":{"overview.html":{},"modules/GridModule.html":{}}}],["cluster_gridmodule_export",{"_index":346,"title":{},"body":{"overview.html":{},"modules/GridModule.html":{}}}],["cluster_gridmodule_gridcomponent_provid",{"_index":345,"title":{},"body":{"overview.html":{},"modules/GridModule.html":{}}}],["code",{"_index":49,"title":{},"body":{"index.html":{}}}],["colum",{"_index":151,"title":{},"body":{"index.html":{}}}],["column",{"_index":68,"title":{},"body":{"index.html":{},"changelog.html":{},"pipes/IsFixedPipe.html":{},"pipes/IsGroupPipe.html":{},"pipes/IsVisiblePipe.html":{}}}],["column'",{"_index":254,"title":{},"body":{"index.html":{}}}],["column/column",{"_index":488,"title":{},"body":{"modules/GridModule.html":{},"pipes/IsFixedPipe.html":{},"pipes/IsGroupPipe.html":{},"pipes/IsVisiblePipe.html":{}}}],["column/filterrenderers/compar",{"_index":498,"title":{},"body":{"modules/GridModule.html":{}}}],["column/filterrenderers/select",{"_index":501,"title":{},"body":{"modules/GridModule.html":{}}}],["column/filterrenderers/text",{"_index":497,"title":{},"body":{"modules/GridModule.html":{}}}],["columnheadercompon",{"_index":348,"title":{},"body":{"overview.html":{},"modules/GridModule.html":{}}}],["columns[j].field",{"_index":227,"title":{},"body":{"index.html":{}}}],["come",{"_index":263,"title":{},"body":{"index.html":{}}}],["command",{"_index":56,"title":{},"body":{"index.html":{}}}],["commonmodul",{"_index":482,"title":{},"body":{"modules/GridModule.html":{}}}],["comparefilterrender",{"_index":325,"title":{},"body":{"index.html":{},"overview.html":{},"modules/GridModule.html":{}}}],["compil",{"_index":48,"title":{},"body":{"index.html":{}}}],["complex",{"_index":30,"title":{},"body":{"index.html":{}}}],["compon",{"_index":109,"title":{},"body":{"index.html":{},"overview.html":{},"modules/GridModule.html":{}}}],["condit",{"_index":444,"title":{},"body":{"license.html":{}}}],["confidenti",{"_index":476,"title":{},"body":{"modules/GridModule.html":{}}}],["config",{"_index":239,"title":{},"body":{"index.html":{},"classes/FormatterParser.html":{},"interfaces/EventListenerArg.html":{}}}],["config/config",{"_index":504,"title":{},"body":{"modules/GridModule.html":{}}}],["configmenucompon",{"_index":355,"title":{},"body":{"overview.html":{},"modules/GridModule.html":{}}}],["configmultichoicecompon",{"_index":356,"title":{},"body":{"overview.html":{},"modules/GridModule.html":{}}}],["configur",{"_index":137,"title":{},"body":{"index.html":{},"changelog.html":{}}}],["configuration.instal",{"_index":40,"title":{},"body":{"index.html":{}}}],["connect",{"_index":408,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["console.display",{"_index":215,"title":{},"body":{"index.html":{}}}],["constructor",{"_index":571,"title":{},"body":{"classes/Cell.html":{},"classes/EmptyFactory.html":{},"classes/InjectableFactory.html":{},"classes/RowChange.html":{}}}],["constructor(",{"_index":634,"title":{},"body":{"classes/InjectableFactory.html":{}}}],["constructor(emptyconstructor",{"_index":583,"title":{},"body":{"classes/EmptyFactory.html":{}}}],["constructor(o",{"_index":572,"title":{},"body":{"classes/Cell.html":{}}}],["constructor(oldrownum",{"_index":646,"title":{},"body":{"classes/RowChange.html":{}}}],["constructor(priv",{"_index":588,"title":{},"body":{"classes/EmptyFactory.html":{},"classes/InjectableFactory.html":{},"interfaces/EmptyConstructor.html":{},"interfaces/InjectableConstructor.html":{}}}],["contain",{"_index":136,"title":{},"body":{"index.html":{}}}],["contract",{"_index":465,"title":{},"body":{"license.html":{}}}],["conveni",{"_index":609,"title":{},"body":{"classes/HtmlUtil.html":{}}}],["copi",{"_index":53,"title":{},"body":{"index.html":{},"license.html":{}}}],["copyright",{"_index":416,"title":{},"body":{"license.html":{},"modules/GridModule.html":{}}}],["creat",{"_index":210,"title":{},"body":{"index.html":{}}}],["createelement(render",{"_index":297,"title":{},"body":{"index.html":{}}}],["current",{"_index":101,"title":{},"body":{"index.html":{}}}],["custom",{"_index":55,"title":{},"body":{"index.html":{},"changelog.html":{}}}],["damag",{"_index":462,"title":{},"body":{"license.html":{}}}],["data",{"_index":31,"title":{},"body":{"index.html":{},"changelog.html":{},"classes/Cell.html":{}}}],["data.celldblclick",{"_index":242,"title":{},"body":{"index.html":{}}}],["data.datacal",{"_index":128,"title":{},"body":{"index.html":{}}}],["data.rowclick",{"_index":243,"title":{},"body":{"index.html":{}}}],["data.rowdblclick",{"_index":244,"title":{},"body":{"index.html":{}}}],["data.warn",{"_index":245,"title":{},"body":{"index.html":{}}}],["data/config/ev",{"_index":399,"title":{},"body":{"changelog.html":{}}}],["datarequest",{"_index":112,"title":{},"body":{"index.html":{}}}],["datatyp",{"_index":321,"title":{},"body":{"index.html":{}}}],["date",{"_index":319,"title":{},"body":{"index.html":{},"changelog.html":{}}}],["dateeditrender",{"_index":324,"title":{},"body":{"index.html":{},"overview.html":{},"modules/GridModule.html":{}}}],["dblclick",{"_index":676,"title":{},"body":{"interfaces/DblClickListener.html":{}}}],["dblclick(ev",{"_index":677,"title":{},"body":{"interfaces/DblClickListener.html":{}}}],["dblclicklisten",{"_index":673,"title":{"interfaces/DblClickListener.html":{}},"body":{"interfaces/DblClickListener.html":{}}}],["deal",{"_index":433,"title":{},"body":{"license.html":{}}}],["declar",{"_index":341,"title":{},"body":{"overview.html":{},"modules/GridModule.html":{}}}],["default",{"_index":35,"title":{},"body":{"index.html":{},"changelog.html":{},"injectables/GridMessageService.html":{},"classes/Cell.html":{},"classes/FormatterParser.html":{},"classes/SortInfo.html":{},"miscellaneous/variables.html":{}}}],["default.externalfilt",{"_index":175,"title":{},"body":{"index.html":{}}}],["defin",{"_index":528,"title":{},"body":{"injectables/GridMessageService.html":{},"pipes/IsFixedPipe.html":{},"pipes/IsGroupPipe.html":{},"pipes/IsRowVisiblePipe.html":{},"pipes/IsVisiblePipe.html":{},"classes/Cell.html":{},"classes/EmptyFactory.html":{},"classes/FormatterParser.html":{},"classes/HtmlUtil.html":{},"classes/InjectableFactory.html":{},"classes/RowChange.html":{},"classes/SortInfo.html":{},"interfaces/ClickListener.html":{},"interfaces/DblClickListener.html":{},"interfaces/Dictionary.html":{},"interfaces/EventListenerArg.html":{},"interfaces/MouseDownListener.html":{},"interfaces/MouseDragListener.html":{},"interfaces/MouseOverListener.html":{},"interfaces/MouseUpListener.html":{}}}],["delay",{"_index":262,"title":{},"body":{"index.html":{}}}],["demo",{"_index":21,"title":{},"body":{"index.html":{}}}],["depend",{"_index":1,"title":{"dependencies.html":{}},"body":{"dependencies.html":{},"index.html":{},"overview.html":{},"modules/GridModule.html":{}}}],["descript",{"_index":567,"title":{},"body":{"classes/Cell.html":{},"classes/EmptyFactory.html":{},"classes/FormatterParser.html":{},"classes/HtmlUtil.html":{},"classes/InjectableFactory.html":{}}}],["design",{"_index":24,"title":{},"body":{"index.html":{}}}],["determin",{"_index":241,"title":{},"body":{"index.html":{}}}],["dictionari",{"_index":679,"title":{"interfaces/Dictionary.html":{}},"body":{"interfaces/Dictionary.html":{}}}],["differ",{"_index":312,"title":{},"body":{"index.html":{}}}],["dirti",{"_index":198,"title":{},"body":{"index.html":{},"classes/Cell.html":{}}}],["disabl",{"_index":168,"title":{},"body":{"index.html":{}}}],["display",{"_index":219,"title":{},"body":{"index.html":{},"changelog.html":{},"interfaces/Dictionary.html":{}}}],["dist",{"_index":51,"title":{},"body":{"index.html":{}}}],["distribut",{"_index":437,"title":{},"body":{"license.html":{}}}],["dob",{"_index":318,"title":{},"body":{"index.html":{}}}],["document",{"_index":431,"title":{},"body":{"license.html":{}}}],["don't",{"_index":203,"title":{},"body":{"index.html":{}}}],["down.interface.t",{"_index":689,"title":{},"body":{"interfaces/MouseDownListener.html":{}}}],["down.interface.ts:3",{"_index":692,"title":{},"body":{"interfaces/MouseDownListener.html":{}}}],["drag.interface.t",{"_index":694,"title":{},"body":{"interfaces/MouseDragListener.html":{}}}],["drag.interface.ts:3",{"_index":697,"title":{},"body":{"interfaces/MouseDragListener.html":{}}}],["e",{"_index":619,"title":{},"body":{"classes/HtmlUtil.html":{}}}],["e.g",{"_index":150,"title":{},"body":{"index.html":{}}}],["e.id",{"_index":625,"title":{},"body":{"classes/HtmlUtil.html":{}}}],["e.id.startswith(id",{"_index":626,"title":{},"body":{"classes/HtmlUtil.html":{}}}],["e.parentel",{"_index":627,"title":{},"body":{"classes/HtmlUtil.html":{}}}],["each",{"_index":289,"title":{},"body":{"index.html":{}}}],["edit",{"_index":495,"title":{},"body":{"modules/GridModule.html":{}}}],["editrender",{"_index":323,"title":{},"body":{"index.html":{}}}],["element",{"_index":612,"title":{},"body":{"classes/HtmlUtil.html":{}}}],["emit",{"_index":194,"title":{},"body":{"index.html":{}}}],["emptyconstructor",{"_index":584,"title":{"interfaces/EmptyConstructor.html":{}},"body":{"classes/EmptyFactory.html":{},"interfaces/EmptyConstructor.html":{}}}],["emptyfactori",{"_index":578,"title":{"classes/EmptyFactory.html":{}},"body":{"classes/EmptyFactory.html":{},"interfaces/EmptyConstructor.html":{}}}],["entrycompon",{"_index":474,"title":{},"body":{"modules/GridModule.html":{}}}],["error",{"_index":524,"title":{},"body":{"injectables/GridMessageService.html":{}}}],["error(messag",{"_index":527,"title":{},"body":{"injectables/GridMessageService.html":{}}}],["especi",{"_index":405,"title":{},"body":{"changelog.html":{}}}],["event",{"_index":91,"title":{},"body":{"index.html":{},"license.html":{},"interfaces/ClickListener.html":{},"interfaces/DblClickListener.html":{},"interfaces/MouseDownListener.html":{},"interfaces/MouseDragListener.html":{},"interfaces/MouseOverListener.html":{},"interfaces/MouseUpListener.html":{}}}],["event.service.t",{"_index":714,"title":{},"body":{"miscellaneous/variables.html":{}}}],["eventlisten",{"_index":633,"title":{},"body":{"classes/InjectableFactory.html":{},"interfaces/InjectableConstructor.html":{}}}],["eventlistenerarg",{"_index":205,"title":{"interfaces/EventListenerArg.html":{}},"body":{"index.html":{},"interfaces/EventListenerArg.html":{}}}],["events.mod",{"_index":208,"title":{},"body":{"index.html":{}}}],["exampl",{"_index":105,"title":{},"body":{"index.html":{}}}],["expect",{"_index":33,"title":{},"body":{"index.html":{},"classes/InjectableFactory.html":{},"interfaces/InjectableConstructor.html":{}}}],["export",{"_index":342,"title":{},"body":{"overview.html":{},"modules/GridModule.html":{},"injectables/GridMessageService.html":{},"pipes/IsFixedPipe.html":{},"pipes/IsGroupPipe.html":{},"pipes/IsRowVisiblePipe.html":{},"pipes/IsVisiblePipe.html":{},"classes/Cell.html":{},"classes/EmptyFactory.html":{},"classes/FormatterParser.html":{},"classes/HtmlUtil.html":{},"classes/InjectableFactory.html":{},"classes/RowChange.html":{},"classes/SortInfo.html":{},"interfaces/ClickListener.html":{},"interfaces/DblClickListener.html":{},"interfaces/Dictionary.html":{},"interfaces/EmptyConstructor.html":{},"interfaces/EventListenerArg.html":{},"interfaces/InjectableConstructor.html":{},"interfaces/MouseDownListener.html":{},"interfaces/MouseDragListener.html":{},"interfaces/MouseOverListener.html":{},"interfaces/MouseUpListener.html":{}}}],["express",{"_index":451,"title":{},"body":{"license.html":{}}}],["extend",{"_index":313,"title":{},"body":{"index.html":{}}}],["extern",{"_index":86,"title":{},"body":{"index.html":{},"changelog.html":{}}}],["externalconfig",{"_index":377,"title":{},"body":{"changelog.html":{}}}],["externaldata(this.datageneratorservice.getdata(250",{"_index":118,"title":{},"body":{"index.html":{}}}],["externalinfo",{"_index":113,"title":{},"body":{"index.html":{}}}],["externalinfo)).delay(500",{"_index":119,"title":{},"body":{"index.html":{}}}],["fals",{"_index":144,"title":{},"body":{"index.html":{},"pipes/IsFixedPipe.html":{},"classes/Cell.html":{}}}],["featur",{"_index":26,"title":{},"body":{"index.html":{},"changelog.html":{}}}],["femal",{"_index":329,"title":{},"body":{"index.html":{}}}],["field",{"_index":226,"title":{},"body":{"index.html":{},"classes/SortInfo.html":{}}}],["file",{"_index":432,"title":{},"body":{"license.html":{},"modules/GridModule.html":{},"injectables/GridMessageService.html":{},"pipes/IsFixedPipe.html":{},"pipes/IsGroupPipe.html":{},"pipes/IsRowVisiblePipe.html":{},"pipes/IsVisiblePipe.html":{},"classes/Cell.html":{},"classes/EmptyFactory.html":{},"classes/FormatterParser.html":{},"classes/HtmlUtil.html":{},"classes/InjectableFactory.html":{},"classes/RowChange.html":{},"classes/SortInfo.html":{},"interfaces/ClickListener.html":{},"interfaces/DblClickListener.html":{},"interfaces/Dictionary.html":{},"interfaces/EmptyConstructor.html":{},"interfaces/EventListenerArg.html":{},"interfaces/InjectableConstructor.html":{},"interfaces/MouseDownListener.html":{},"interfaces/MouseDragListener.html":{},"interfaces/MouseOverListener.html":{},"interfaces/MouseUpListener.html":{}}}],["filter",{"_index":70,"title":{},"body":{"index.html":{},"modules/GridModule.html":{}}}],["filterev",{"_index":266,"title":{},"body":{"index.html":{}}}],["filterinfo",{"_index":253,"title":{},"body":{"index.html":{}}}],["filterrender",{"_index":315,"title":{},"body":{"index.html":{}}}],["fire",{"_index":259,"title":{},"body":{"index.html":{}}}],["fired.datafilt",{"_index":267,"title":{},"body":{"index.html":{}}}],["fired.datasort",{"_index":273,"title":{},"body":{"index.html":{}}}],["first",{"_index":78,"title":{},"body":{"index.html":{}}}],["firstnam",{"_index":316,"title":{},"body":{"index.html":{}}}],["fit",{"_index":454,"title":{},"body":{"license.html":{}}}],["fix",{"_index":163,"title":{},"body":{"index.html":{},"changelog.html":{},"pipes/IsFixedPipe.html":{}}}],["fixed.pip",{"_index":493,"title":{},"body":{"modules/GridModule.html":{}}}],["fixed.pipe.t",{"_index":546,"title":{},"body":{"pipes/IsFixedPipe.html":{}}}],["fixed.pipe.ts:10",{"_index":551,"title":{},"body":{"pipes/IsFixedPipe.html":{}}}],["fixes.1.0.0",{"_index":412,"title":{},"body":{"changelog.html":{}}}],["flag",{"_index":145,"title":{},"body":{"index.html":{}}}],["flow",{"_index":216,"title":{},"body":{"index.html":{}}}],["folder",{"_index":52,"title":{},"body":{"index.html":{}}}],["follow",{"_index":279,"title":{},"body":{"index.html":{},"license.html":{}}}],["format",{"_index":236,"title":{},"body":{"index.html":{}}}],["format/pars",{"_index":379,"title":{},"body":{"changelog.html":{}}}],["formatt",{"_index":593,"title":{},"body":{"classes/FormatterParser.html":{}}}],["formatterpars",{"_index":590,"title":{"classes/FormatterParser.html":{}},"body":{"classes/FormatterParser.html":{}}}],["formatting/pars",{"_index":404,"title":{},"body":{"changelog.html":{}}}],["formatvalu",{"_index":596,"title":{},"body":{"classes/FormatterParser.html":{}}}],["formatvalue(valu",{"_index":599,"title":{},"body":{"classes/FormatterParser.html":{}}}],["formsmodul",{"_index":484,"title":{},"body":{"modules/GridModule.html":{}}}],["forroot(globalconfig",{"_index":513,"title":{},"body":{"modules/GridModule.html":{}}}],["free",{"_index":425,"title":{},"body":{"license.html":{}}}],["from.nvisiblerow",{"_index":187,"title":{},"body":{"index.html":{}}}],["full",{"_index":25,"title":{},"body":{"index.html":{}}}],["function",{"_index":110,"title":{},"body":{"index.html":{}}}],["furnish",{"_index":442,"title":{},"body":{"license.html":{}}}],["gender",{"_index":326,"title":{},"body":{"index.html":{}}}],["gener",{"_index":371,"title":{},"body":{"changelog.html":{},"classes/EmptyFactory.html":{},"classes/InjectableFactory.html":{},"interfaces/InjectableConstructor.html":{}}}],["generic.2.1.1",{"_index":380,"title":{},"body":{"changelog.html":{}}}],["get",{"_index":11,"title":{"index.html":{},"changelog.html":{},"license.html":{}},"body":{"index.html":{}}}],["getasc",{"_index":654,"title":{},"body":{"classes/SortInfo.html":{}}}],["getfield",{"_index":655,"title":{},"body":{"classes/SortInfo.html":{}}}],["getid",{"_index":613,"title":{},"body":{"classes/HtmlUtil.html":{}}}],["getid(",{"_index":616,"title":{},"body":{"classes/HtmlUtil.html":{}}}],["getidel",{"_index":614,"title":{},"body":{"classes/HtmlUtil.html":{}}}],["getidelement(",{"_index":621,"title":{},"body":{"classes/HtmlUtil.html":{}}}],["getinst",{"_index":582,"title":{},"body":{"classes/EmptyFactory.html":{},"classes/InjectableFactory.html":{},"interfaces/EmptyConstructor.html":{},"interfaces/InjectableConstructor.html":{}}}],["getloc",{"_index":615,"title":{},"body":{"classes/HtmlUtil.html":{}}}],["getlocation(",{"_index":623,"title":{},"body":{"classes/HtmlUtil.html":{}}}],["getmessageobserv",{"_index":539,"title":{},"body":{"injectables/GridMessageService.html":{}}}],["github",{"_index":22,"title":{},"body":{"index.html":{}}}],["global",{"_index":133,"title":{},"body":{"index.html":{},"changelog.html":{}}}],["global.servic",{"_index":508,"title":{},"body":{"modules/GridModule.html":{}}}],["globalconfig",{"_index":514,"title":{},"body":{"modules/GridModule.html":{}}}],["grant",{"_index":424,"title":{},"body":{"license.html":{}}}],["grid",{"_index":18,"title":{},"body":{"index.html":{},"changelog.html":{}}}],["grid\";@ngmodul",{"_index":45,"title":{},"body":{"index.html":{}}}],["grid'",{"_index":149,"title":{},"body":{"index.html":{}}}],["grid.cellclick",{"_index":240,"title":{},"body":{"index.html":{}}}],["grid.compon",{"_index":487,"title":{},"body":{"modules/GridModule.html":{}}}],["grid.groupbi",{"_index":166,"title":{},"body":{"index.html":{}}}],["grid.linkedgroup",{"_index":139,"title":{},"body":{"index.html":{}}}],["grid.output",{"_index":222,"title":{},"body":{"index.html":{}}}],["grid.them",{"_index":158,"title":{},"body":{"index.html":{}}}],["gridcompon",{"_index":347,"title":{},"body":{"overview.html":{},"modules/GridModule.html":{}}}],["grideventservic",{"_index":358,"title":{},"body":{"overview.html":{},"modules/GridModule.html":{}}}],["gridglobalservic",{"_index":506,"title":{},"body":{"modules/GridModule.html":{}}}],["gridmessageservic",{"_index":359,"title":{"injectables/GridMessageService.html":{}},"body":{"overview.html":{},"modules/GridModule.html":{},"injectables/GridMessageService.html":{}}}],["gridmodul",{"_index":44,"title":{"modules/GridModule.html":{}},"body":{"index.html":{},"overview.html":{},"modules.html":{},"modules/GridModule.html":{}}}],["gridmodule.forroot",{"_index":46,"title":{},"body":{"index.html":{}}}],["gridservic",{"_index":357,"title":{},"body":{"overview.html":{},"modules/GridModule.html":{}}}],["group",{"_index":83,"title":{},"body":{"index.html":{}}}],["group.pip",{"_index":492,"title":{},"body":{"modules/GridModule.html":{}}}],["group.pipe.t",{"_index":555,"title":{},"body":{"pipes/IsGroupPipe.html":{}}}],["group.pipe.ts:9",{"_index":557,"title":{},"body":{"pipes/IsGroupPipe.html":{}}}],["groupbycollaps",{"_index":169,"title":{},"body":{"index.html":{}}}],["handl",{"_index":27,"title":{},"body":{"index.html":{}}}],["hci",{"_index":20,"title":{},"body":{"index.html":{}}}],["header",{"_index":69,"title":{},"body":{"index.html":{}}}],["header.compon",{"_index":489,"title":{},"body":{"modules/GridModule.html":{}}}],["height",{"_index":389,"title":{},"body":{"changelog.html":{}}}],["here",{"_index":103,"title":{},"body":{"index.html":{}}}],["herebi",{"_index":423,"title":{},"body":{"license.html":{}}}],["hidden",{"_index":173,"title":{},"body":{"index.html":{}}}],["high",{"_index":307,"title":{},"body":{"index.html":{}}}],["holder",{"_index":459,"title":{},"body":{"license.html":{},"classes/Cell.html":{}}}],["html",{"_index":131,"title":{},"body":{"index.html":{}}}],["htmlelement",{"_index":617,"title":{},"body":{"classes/HtmlUtil.html":{}}}],["htmlelement;a",{"_index":299,"title":{},"body":{"index.html":{}}}],["htmlutil",{"_index":606,"title":{"classes/HtmlUtil.html":{}},"body":{"classes/HtmlUtil.html":{}}}],["huntsman",{"_index":14,"title":{},"body":{"index.html":{},"license.html":{},"modules/GridModule.html":{}}}],["ic",{"_index":637,"title":{},"body":{"classes/InjectableFactory.html":{},"interfaces/InjectableConstructor.html":{}}}],["id",{"_index":132,"title":{},"body":{"index.html":{},"classes/HtmlUtil.html":{}}}],["implement",{"_index":108,"title":{},"body":{"index.html":{},"pipes/IsFixedPipe.html":{},"pipes/IsGroupPipe.html":{},"pipes/IsRowVisiblePipe.html":{},"pipes/IsVisiblePipe.html":{},"classes/InjectableFactory.html":{},"interfaces/InjectableConstructor.html":{}}}],["impli",{"_index":452,"title":{},"body":{"license.html":{}}}],["import",{"_index":43,"title":{},"body":{"index.html":{},"modules/GridModule.html":{},"injectables/GridMessageService.html":{},"pipes/IsFixedPipe.html":{},"pipes/IsGroupPipe.html":{},"pipes/IsRowVisiblePipe.html":{},"pipes/IsVisiblePipe.html":{},"classes/HtmlUtil.html":{},"classes/InjectableFactory.html":{},"interfaces/EventListenerArg.html":{},"interfaces/InjectableConstructor.html":{}}}],["improv",{"_index":403,"title":{},"body":{"changelog.html":{}}}],["in.onconfigchang",{"_index":238,"title":{},"body":{"index.html":{}}}],["includ",{"_index":258,"title":{},"body":{"index.html":{},"license.html":{}}}],["index",{"_index":13,"title":{"index.html":{}},"body":{"injectables/GridMessageService.html":{},"classes/Cell.html":{},"classes/EmptyFactory.html":{},"classes/FormatterParser.html":{},"classes/HtmlUtil.html":{},"classes/InjectableFactory.html":{},"classes/RowChange.html":{},"classes/SortInfo.html":{},"interfaces/ClickListener.html":{},"interfaces/DblClickListener.html":{},"interfaces/Dictionary.html":{},"interfaces/EventListenerArg.html":{},"interfaces/MouseDownListener.html":{},"interfaces/MouseDragListener.html":{},"interfaces/MouseOverListener.html":{},"interfaces/MouseUpListener.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":472,"title":{},"body":{"modules/GridModule.html":{},"injectables/GridMessageService.html":{},"pipes/IsFixedPipe.html":{},"pipes/IsGroupPipe.html":{},"pipes/IsRowVisiblePipe.html":{},"pipes/IsVisiblePipe.html":{},"classes/Cell.html":{},"classes/EmptyFactory.html":{},"classes/FormatterParser.html":{},"classes/HtmlUtil.html":{},"classes/InjectableFactory.html":{},"classes/RowChange.html":{},"classes/SortInfo.html":{},"interfaces/ClickListener.html":{},"interfaces/DblClickListener.html":{},"interfaces/Dictionary.html":{},"interfaces/EmptyConstructor.html":{},"interfaces/EventListenerArg.html":{},"interfaces/InjectableConstructor.html":{},"interfaces/MouseDownListener.html":{},"interfaces/MouseDragListener.html":{},"interfaces/MouseOverListener.html":{},"interfaces/MouseUpListener.html":{}}}],["info.id",{"_index":130,"title":{},"body":{"index.html":{}}}],["info.t",{"_index":652,"title":{},"body":{"classes/SortInfo.html":{}}}],["info.ts:13",{"_index":659,"title":{},"body":{"classes/SortInfo.html":{}}}],["info.ts:17",{"_index":663,"title":{},"body":{"classes/SortInfo.html":{}}}],["info.ts:2",{"_index":664,"title":{},"body":{"classes/SortInfo.html":{}}}],["info.ts:3",{"_index":665,"title":{},"body":{"classes/SortInfo.html":{}}}],["info.ts:5",{"_index":658,"title":{},"body":{"classes/SortInfo.html":{}}}],["info.ts:9",{"_index":661,"title":{},"body":{"classes/SortInfo.html":{}}}],["initi",{"_index":413,"title":{},"body":{"changelog.html":{}}}],["inject",{"_index":365,"title":{"injectables/GridMessageService.html":{}},"body":{"overview.html":{},"injectables/GridMessageService.html":{}}}],["injectableconstructor",{"_index":635,"title":{"interfaces/InjectableConstructor.html":{}},"body":{"classes/InjectableFactory.html":{},"interfaces/InjectableConstructor.html":{}}}],["injectablefactori",{"_index":630,"title":{"classes/InjectableFactory.html":{}},"body":{"classes/InjectableFactory.html":{},"interfaces/InjectableConstructor.html":{}}}],["injector",{"_index":632,"title":{},"body":{"classes/InjectableFactory.html":{},"interfaces/InjectableConstructor.html":{}}}],["input",{"_index":120,"title":{},"body":{"index.html":{}}}],["instanc",{"_index":278,"title":{},"body":{"index.html":{}}}],["instanti",{"_index":580,"title":{},"body":{"classes/EmptyFactory.html":{},"classes/InjectableFactory.html":{},"interfaces/InjectableConstructor.html":{}}}],["instead",{"_index":61,"title":{},"body":{"index.html":{}}}],["institut",{"_index":419,"title":{},"body":{"license.html":{},"modules/GridModule.html":{}}}],["institute'",{"_index":16,"title":{},"body":{"index.html":{}}}],["interfac",{"_index":294,"title":{"interfaces/ClickListener.html":{},"interfaces/DblClickListener.html":{},"interfaces/Dictionary.html":{},"interfaces/EmptyConstructor.html":{},"interfaces/EventListenerArg.html":{},"interfaces/InjectableConstructor.html":{},"interfaces/MouseDownListener.html":{},"interfaces/MouseDragListener.html":{},"interfaces/MouseOverListener.html":{},"interfaces/MouseUpListener.html":{}},"body":{"index.html":{},"overview.html":{},"classes/EmptyFactory.html":{},"classes/InjectableFactory.html":{},"interfaces/ClickListener.html":{},"interfaces/DblClickListener.html":{},"interfaces/Dictionary.html":{},"interfaces/EmptyConstructor.html":{},"interfaces/EventListenerArg.html":{},"interfaces/InjectableConstructor.html":{},"interfaces/MouseDownListener.html":{},"interfaces/MouseDragListener.html":{},"interfaces/MouseOverListener.html":{},"interfaces/MouseUpListener.html":{}}}],["intro",{"_index":23,"title":{},"body":{"index.html":{}}}],["introduc",{"_index":335,"title":{},"body":{"index.html":{}}}],["isfix",{"_index":548,"title":{},"body":{"pipes/IsFixedPipe.html":{}}}],["isfixedpip",{"_index":351,"title":{"pipes/IsFixedPipe.html":{}},"body":{"overview.html":{},"modules/GridModule.html":{},"pipes/IsFixedPipe.html":{}}}],["isgroup",{"_index":556,"title":{},"body":{"pipes/IsGroupPipe.html":{}}}],["isgrouppip",{"_index":350,"title":{"pipes/IsGroupPipe.html":{}},"body":{"overview.html":{},"modules/GridModule.html":{},"pipes/IsGroupPipe.html":{}}}],["isrowvis",{"_index":561,"title":{},"body":{"pipes/IsRowVisiblePipe.html":{}}}],["isrowvisiblepip",{"_index":352,"title":{"pipes/IsRowVisiblePipe.html":{}},"body":{"overview.html":{},"modules/GridModule.html":{},"pipes/IsRowVisiblePipe.html":{}}}],["issu",{"_index":333,"title":{},"body":{"index.html":{}}}],["isvis",{"_index":565,"title":{},"body":{"pipes/IsVisiblePipe.html":{}}}],["isvisiblepip",{"_index":349,"title":{"pipes/IsVisiblePipe.html":{}},"body":{"overview.html":{},"modules/GridModule.html":{},"pipes/IsVisiblePipe.html":{}}}],["j",{"_index":225,"title":{},"body":{"index.html":{}}}],["json",{"_index":135,"title":{},"body":{"index.html":{}}}],["key",{"_index":207,"title":{},"body":{"index.html":{},"classes/Cell.html":{}}}],["key1",{"_index":250,"title":{},"body":{"index.html":{}}}],["key2",{"_index":251,"title":{},"body":{"index.html":{}}}],["keyword",{"_index":393,"title":{},"body":{"changelog.html":{}}}],["kind",{"_index":450,"title":{},"body":{"license.html":{}}}],["known",{"_index":332,"title":{},"body":{"index.html":{}}}],["lab",{"_index":301,"title":{},"body":{"index.html":{}}}],["last",{"_index":79,"title":{},"body":{"index.html":{}}}],["left",{"_index":164,"title":{},"body":{"index.html":{}}}],["legend",{"_index":340,"title":{},"body":{"overview.html":{},"modules/GridModule.html":{}}}],["liabil",{"_index":463,"title":{},"body":{"license.html":{}}}],["liabl",{"_index":460,"title":{},"body":{"license.html":{}}}],["librari",{"_index":19,"title":{},"body":{"index.html":{}}}],["licens",{"_index":396,"title":{"license.html":{}},"body":{"changelog.html":{}}}],["limit",{"_index":190,"title":{},"body":{"index.html":{},"license.html":{}}}],["link",{"_index":141,"title":{},"body":{"index.html":{}}}],["list",{"_index":102,"title":{},"body":{"index.html":{},"pipes/IsFixedPipe.html":{},"pipes/IsGroupPipe.html":{},"pipes/IsRowVisiblePipe.html":{},"pipes/IsVisiblePipe.html":{}}}],["list.filter((o",{"_index":553,"title":{},"body":{"pipes/IsFixedPipe.html":{},"pipes/IsGroupPipe.html":{},"pipes/IsRowVisiblePipe.html":{},"pipes/IsVisiblePipe.html":{}}}],["listen",{"_index":92,"title":{},"body":{"index.html":{},"changelog.html":{},"interfaces/EventListenerArg.html":{}}}],["load",{"_index":202,"title":{},"body":{"index.html":{},"changelog.html":{}}}],["locat",{"_index":230,"title":{},"body":{"index.html":{}}}],["log",{"_index":369,"title":{},"body":{"changelog.html":{}}}],["low",{"_index":305,"title":{},"body":{"index.html":{}}}],["male",{"_index":330,"title":{},"body":{"index.html":{}}}],["manag",{"_index":570,"title":{},"body":{"classes/Cell.html":{}}}],["mani",{"_index":100,"title":{},"body":{"index.html":{}}}],["match",{"_index":10,"title":{},"body":{"dependencies.html":{},"index.html":{},"overview.html":{},"changelog.html":{},"license.html":{},"modules.html":{},"modules/GridModule.html":{},"injectables/GridMessageService.html":{},"pipes/IsFixedPipe.html":{},"pipes/IsGroupPipe.html":{},"pipes/IsRowVisiblePipe.html":{},"pipes/IsVisiblePipe.html":{},"classes/Cell.html":{},"classes/EmptyFactory.html":{},"classes/FormatterParser.html":{},"classes/HtmlUtil.html":{},"classes/InjectableFactory.html":{},"classes/RowChange.html":{},"classes/SortInfo.html":{},"interfaces/ClickListener.html":{},"interfaces/DblClickListener.html":{},"interfaces/Dictionary.html":{},"interfaces/EmptyConstructor.html":{},"interfaces/EventListenerArg.html":{},"interfaces/InjectableConstructor.html":{},"interfaces/MouseDownListener.html":{},"interfaces/MouseDragListener.html":{},"interfaces/MouseOverListener.html":{},"interfaces/MouseUpListener.html":{},"miscellaneous/variables.html":{}}}],["menu.compon",{"_index":505,"title":{},"body":{"modules/GridModule.html":{}}}],["merchant",{"_index":453,"title":{},"body":{"license.html":{}}}],["merg",{"_index":436,"title":{},"body":{"license.html":{}}}],["messag",{"_index":246,"title":{},"body":{"index.html":{},"injectables/GridMessageService.html":{}}}],["message.service.t",{"_index":518,"title":{},"body":{"injectables/GridMessageService.html":{}}}],["message.service.ts:10",{"_index":535,"title":{},"body":{"injectables/GridMessageService.html":{}}}],["message.service.ts:12",{"_index":529,"title":{},"body":{"injectables/GridMessageService.html":{}}}],["message.service.ts:16",{"_index":533,"title":{},"body":{"injectables/GridMessageService.html":{}}}],["message.service.ts:20",{"_index":540,"title":{},"body":{"injectables/GridMessageService.html":{}}}],["message.service.ts:8",{"_index":536,"title":{},"body":{"injectables/GridMessageService.html":{}}}],["message.service.ts:9",{"_index":538,"title":{},"body":{"injectables/GridMessageService.html":{}}}],["messageobserv",{"_index":526,"title":{},"body":{"injectables/GridMessageService.html":{}}}],["metadata",{"_index":547,"title":{},"body":{"pipes/IsFixedPipe.html":{},"pipes/IsGroupPipe.html":{},"pipes/IsRowVisiblePipe.html":{},"pipes/IsVisiblePipe.html":{},"classes/Cell.html":{}}}],["method",{"_index":295,"title":{},"body":{"index.html":{},"injectables/GridMessageService.html":{},"pipes/IsFixedPipe.html":{},"pipes/IsGroupPipe.html":{},"pipes/IsRowVisiblePipe.html":{},"pipes/IsVisiblePipe.html":{},"classes/EmptyFactory.html":{},"classes/FormatterParser.html":{},"classes/HtmlUtil.html":{},"classes/InjectableFactory.html":{},"classes/SortInfo.html":{},"interfaces/ClickListener.html":{},"interfaces/DblClickListener.html":{},"interfaces/MouseDownListener.html":{},"interfaces/MouseDragListener.html":{},"interfaces/MouseOverListener.html":{},"interfaces/MouseUpListener.html":{}}}],["miscellan",{"_index":708,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["mm/dd/yyyi",{"_index":322,"title":{},"body":{"index.html":{}}}],["mock",{"_index":111,"title":{},"body":{"index.html":{}}}],["mode",{"_index":211,"title":{},"body":{"index.html":{}}}],["modif",{"_index":595,"title":{},"body":{"classes/FormatterParser.html":{}}}],["modifi",{"_index":148,"title":{},"body":{"index.html":{},"license.html":{}}}],["modul",{"_index":276,"title":{"modules.html":{},"modules/GridModule.html":{}},"body":{"index.html":{},"overview.html":{},"modules.html":{},"modules/GridModule.html":{}}}],["modulewithprovid",{"_index":479,"title":{},"body":{"modules/GridModule.html":{}}}],["moment",{"_index":7,"title":{},"body":{"dependencies.html":{}}}],["more",{"_index":85,"title":{},"body":{"index.html":{},"changelog.html":{}}}],["mousedown",{"_index":690,"title":{},"body":{"interfaces/MouseDownListener.html":{}}}],["mousedown(ev",{"_index":691,"title":{},"body":{"interfaces/MouseDownListener.html":{}}}],["mousedownlisten",{"_index":687,"title":{"interfaces/MouseDownListener.html":{}},"body":{"interfaces/MouseDownListener.html":{}}}],["mousedrag",{"_index":695,"title":{},"body":{"interfaces/MouseDragListener.html":{}}}],["mousedrag(ev",{"_index":696,"title":{},"body":{"interfaces/MouseDragListener.html":{}}}],["mousedraglisten",{"_index":693,"title":{"interfaces/MouseDragListener.html":{}},"body":{"interfaces/MouseDragListener.html":{}}}],["mouseev",{"_index":671,"title":{},"body":{"interfaces/ClickListener.html":{},"interfaces/DblClickListener.html":{},"interfaces/MouseDownListener.html":{},"interfaces/MouseDragListener.html":{},"interfaces/MouseOverListener.html":{},"interfaces/MouseUpListener.html":{}}}],["mouseov",{"_index":700,"title":{},"body":{"interfaces/MouseOverListener.html":{}}}],["mouseover(ev",{"_index":701,"title":{},"body":{"interfaces/MouseOverListener.html":{}}}],["mouseoverlisten",{"_index":698,"title":{"interfaces/MouseOverListener.html":{}},"body":{"interfaces/MouseOverListener.html":{}}}],["mouseup",{"_index":705,"title":{},"body":{"interfaces/MouseUpListener.html":{}}}],["mouseup(ev",{"_index":706,"title":{},"body":{"interfaces/MouseUpListener.html":{}}}],["mouseuplisten",{"_index":703,"title":{"interfaces/MouseUpListener.html":{}},"body":{"interfaces/MouseUpListener.html":{}}}],["move",{"_index":50,"title":{},"body":{"index.html":{}}}],["multi",{"_index":509,"title":{},"body":{"modules/GridModule.html":{}}}],["multipl",{"_index":257,"title":{},"body":{"index.html":{}}}],["name",{"_index":140,"title":{},"body":{"index.html":{},"injectables/GridMessageService.html":{},"pipes/IsFixedPipe.html":{},"pipes/IsGroupPipe.html":{},"pipes/IsRowVisiblePipe.html":{},"pipes/IsVisiblePipe.html":{},"classes/Cell.html":{},"classes/EmptyFactory.html":{},"classes/FormatterParser.html":{},"classes/HtmlUtil.html":{},"classes/InjectableFactory.html":{},"classes/RowChange.html":{},"classes/SortInfo.html":{},"interfaces/ClickListener.html":{},"interfaces/DblClickListener.html":{},"interfaces/MouseDownListener.html":{},"interfaces/MouseDragListener.html":{},"interfaces/MouseOverListener.html":{},"interfaces/MouseUpListener.html":{}}}],["navig",{"_index":196,"title":{},"body":{"index.html":{}}}],["ndata",{"_index":269,"title":{},"body":{"index.html":{}}}],["nearli",{"_index":28,"title":{},"body":{"index.html":{}}}],["need",{"_index":569,"title":{},"body":{"classes/Cell.html":{}}}],["new",{"_index":197,"title":{},"body":{"index.html":{},"injectables/GridMessageService.html":{},"classes/EmptyFactory.html":{},"classes/InjectableFactory.html":{},"interfaces/EmptyConstructor.html":{},"interfaces/InjectableConstructor.html":{}}}],["new(injector",{"_index":640,"title":{},"body":{"classes/InjectableFactory.html":{},"interfaces/InjectableConstructor.html":{}}}],["newrownum",{"_index":644,"title":{},"body":{"classes/RowChange.html":{}}}],["newvalu",{"_index":229,"title":{},"body":{"index.html":{}}}],["next",{"_index":81,"title":{},"body":{"index.html":{}}}],["ng",{"_index":2,"title":{},"body":{"dependencies.html":{},"index.html":{},"modules/GridModule.html":{}}}],["ngbmodul",{"_index":486,"title":{},"body":{"modules/GridModule.html":{}}}],["ngbmodule.forroot",{"_index":511,"title":{},"body":{"modules/GridModule.html":{}}}],["ngmodul",{"_index":480,"title":{},"body":{"modules/GridModule.html":{}}}],["ngoninit",{"_index":114,"title":{},"body":{"index.html":{}}}],["nlab",{"_index":300,"title":{},"body":{"index.html":{}}}],["no_ev",{"_index":711,"title":{},"body":{"miscellaneous/variables.html":{}}}],["noninfring",{"_index":457,"title":{},"body":{"license.html":{}}}],["note",{"_index":99,"title":{},"body":{"index.html":{}}}],["notic",{"_index":445,"title":{},"body":{"license.html":{}}}],["npmignore.2.0.1",{"_index":394,"title":{},"body":{"changelog.html":{}}}],["npmpack",{"_index":59,"title":{},"body":{"index.html":{}}}],["npmpublish",{"_index":60,"title":{},"body":{"index.html":{}}}],["null",{"_index":628,"title":{},"body":{"classes/HtmlUtil.html":{},"classes/SortInfo.html":{}}}],["number",{"_index":179,"title":{},"body":{"index.html":{},"injectables/GridMessageService.html":{},"classes/Cell.html":{},"classes/RowChange.html":{},"miscellaneous/variables.html":{}}}],["numer",{"_index":411,"title":{},"body":{"changelog.html":{}}}],["o",{"_index":574,"title":{},"body":{"classes/Cell.html":{}}}],["o.isfix",{"_index":554,"title":{},"body":{"pipes/IsFixedPipe.html":{}}}],["o.isgroup",{"_index":558,"title":{},"body":{"pipes/IsGroupPipe.html":{}}}],["o.isutil",{"_index":559,"title":{},"body":{"pipes/IsGroupPipe.html":{}}}],["o.vis",{"_index":564,"title":{},"body":{"pipes/IsRowVisiblePipe.html":{},"pipes/IsVisiblePipe.html":{}}}],["object",{"_index":122,"title":{},"body":{"index.html":{},"classes/Cell.html":{}}}],["object.assign(thi",{"_index":577,"title":{},"body":{"classes/Cell.html":{}}}],["objects.fixedcolumn",{"_index":162,"title":{},"body":{"index.html":{}}}],["observ",{"_index":410,"title":{},"body":{"changelog.html":{},"injectables/GridMessageService.html":{}}}],["observable.of(new",{"_index":117,"title":{},"body":{"index.html":{}}}],["obtain",{"_index":428,"title":{},"body":{"license.html":{}}}],["old",{"_index":231,"title":{},"body":{"index.html":{}}}],["oldrownum",{"_index":645,"title":{},"body":{"classes/RowChange.html":{}}}],["oldvalu",{"_index":228,"title":{},"body":{"index.html":{}}}],["on",{"_index":84,"title":{},"body":{"index.html":{}}}],["oncellsav",{"_index":223,"title":{},"body":{"index.html":{}}}],["onrowsav",{"_index":195,"title":{},"body":{"index.html":{}}}],["option",{"_index":138,"title":{},"body":{"index.html":{},"injectables/GridMessageService.html":{},"pipes/IsFixedPipe.html":{},"pipes/IsGroupPipe.html":{},"pipes/IsRowVisiblePipe.html":{},"pipes/IsVisiblePipe.html":{},"classes/Cell.html":{},"classes/EmptyFactory.html":{},"classes/FormatterParser.html":{},"classes/HtmlUtil.html":{},"classes/InjectableFactory.html":{},"classes/RowChange.html":{},"classes/SortInfo.html":{},"interfaces/ClickListener.html":{},"interfaces/DblClickListener.html":{},"interfaces/EventListenerArg.html":{},"interfaces/MouseDownListener.html":{},"interfaces/MouseDragListener.html":{},"interfaces/MouseOverListener.html":{},"interfaces/MouseUpListener.html":{}}}],["origin",{"_index":237,"title":{},"body":{"index.html":{}}}],["originalrowdata",{"_index":235,"title":{},"body":{"index.html":{}}}],["otherwis",{"_index":467,"title":{},"body":{"license.html":{}}}],["out",{"_index":362,"title":{},"body":{"overview.html":{},"license.html":{},"modules/GridModule.html":{}}}],["over.interface.t",{"_index":699,"title":{},"body":{"interfaces/MouseOverListener.html":{}}}],["over.interface.ts:3",{"_index":702,"title":{},"body":{"interfaces/MouseOverListener.html":{}}}],["overview",{"_index":339,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["pack",{"_index":63,"title":{},"body":{"index.html":{}}}],["packag",{"_index":0,"title":{"dependencies.html":{}},"body":{"index.html":{}}}],["package.json",{"_index":54,"title":{},"body":{"index.html":{}}}],["page",{"_index":75,"title":{},"body":{"index.html":{}}}],["paramet",{"_index":530,"title":{},"body":{"injectables/GridMessageService.html":{},"pipes/IsFixedPipe.html":{},"pipes/IsGroupPipe.html":{},"pipes/IsRowVisiblePipe.html":{},"pipes/IsVisiblePipe.html":{},"classes/Cell.html":{},"classes/EmptyFactory.html":{},"classes/FormatterParser.html":{},"classes/HtmlUtil.html":{},"classes/InjectableFactory.html":{},"classes/RowChange.html":{},"classes/SortInfo.html":{},"interfaces/ClickListener.html":{},"interfaces/DblClickListener.html":{},"interfaces/MouseDownListener.html":{},"interfaces/MouseDragListener.html":{},"interfaces/MouseOverListener.html":{},"interfaces/MouseUpListener.html":{}}}],["parser",{"_index":594,"title":{},"body":{"classes/FormatterParser.html":{}}}],["parser.t",{"_index":592,"title":{},"body":{"classes/FormatterParser.html":{}}}],["parser.ts:12",{"_index":600,"title":{},"body":{"classes/FormatterParser.html":{}}}],["parser.ts:16",{"_index":602,"title":{},"body":{"classes/FormatterParser.html":{}}}],["parser.ts:6",{"_index":604,"title":{},"body":{"classes/FormatterParser.html":{}}}],["parser.ts:8",{"_index":603,"title":{},"body":{"classes/FormatterParser.html":{}}}],["parsevalu",{"_index":597,"title":{},"body":{"classes/FormatterParser.html":{}}}],["parsevalue(valu",{"_index":601,"title":{},"body":{"classes/FormatterParser.html":{}}}],["particular",{"_index":455,"title":{},"body":{"license.html":{}}}],["pass",{"_index":129,"title":{},"body":{"index.html":{}}}],["paus",{"_index":384,"title":{},"body":{"changelog.html":{}}}],["per",{"_index":180,"title":{},"body":{"index.html":{}}}],["perform",{"_index":206,"title":{},"body":{"index.html":{}}}],["permiss",{"_index":422,"title":{},"body":{"license.html":{}}}],["permit",{"_index":441,"title":{},"body":{"license.html":{}}}],["person",{"_index":427,"title":{},"body":{"license.html":{}}}],["pipe",{"_index":366,"title":{"pipes/IsFixedPipe.html":{},"pipes/IsGroupPipe.html":{},"pipes/IsRowVisiblePipe.html":{},"pipes/IsVisiblePipe.html":{}},"body":{"overview.html":{},"pipes/IsFixedPipe.html":{},"pipes/IsGroupPipe.html":{},"pipes/IsRowVisiblePipe.html":{},"pipes/IsVisiblePipe.html":{}}}],["pipetransform",{"_index":552,"title":{},"body":{"pipes/IsFixedPipe.html":{},"pipes/IsGroupPipe.html":{},"pipes/IsRowVisiblePipe.html":{},"pipes/IsVisiblePipe.html":{}}}],["point",{"_index":265,"title":{},"body":{"index.html":{},"classes/HtmlUtil.html":{}}}],["point.getpoint(this.getid(",{"_index":629,"title":{},"body":{"classes/HtmlUtil.html":{}}}],["popup",{"_index":375,"title":{},"body":{"changelog.html":{}}}],["popup).selectedrow",{"_index":249,"title":{},"body":{"index.html":{}}}],["popup.compon",{"_index":503,"title":{},"body":{"modules/GridModule.html":{}}}],["portion",{"_index":448,"title":{},"body":{"license.html":{}}}],["possibl",{"_index":74,"title":{},"body":{"index.html":{}}}],["prevent",{"_index":387,"title":{},"body":{"changelog.html":{}}}],["previou",{"_index":80,"title":{},"body":{"index.html":{}}}],["privat",{"_index":520,"title":{},"body":{"injectables/GridMessageService.html":{},"classes/InjectableFactory.html":{},"interfaces/InjectableConstructor.html":{}}}],["promis",{"_index":409,"title":{},"body":{"changelog.html":{}}}],["properti",{"_index":519,"title":{},"body":{"injectables/GridMessageService.html":{},"classes/Cell.html":{},"classes/FormatterParser.html":{},"classes/RowChange.html":{},"classes/SortInfo.html":{},"interfaces/Dictionary.html":{},"interfaces/EventListenerArg.html":{}}}],["proprietari",{"_index":477,"title":{},"body":{"modules/GridModule.html":{}}}],["provid",{"_index":107,"title":{},"body":{"index.html":{},"overview.html":{},"license.html":{},"modules/GridModule.html":{}}}],["public",{"_index":373,"title":{},"body":{"changelog.html":{},"classes/SortInfo.html":{}}}],["publish",{"_index":47,"title":{},"body":{"index.html":{},"license.html":{}}}],["publish.bas",{"_index":64,"title":{},"body":{"index.html":{}}}],["pull",{"_index":610,"title":{},"body":{"classes/HtmlUtil.html":{}}}],["pure",{"_index":290,"title":{},"body":{"index.html":{},"pipes/IsFixedPipe.html":{}}}],["purpos",{"_index":456,"title":{},"body":{"license.html":{}}}],["rang",{"_index":73,"title":{},"body":{"index.html":{}}}],["re",{"_index":285,"title":{},"body":{"index.html":{}}}],["readm",{"_index":395,"title":{},"body":{"changelog.html":{}}}],["readme.2.1.0",{"_index":381,"title":{},"body":{"changelog.html":{}}}],["readme.md",{"_index":415,"title":{},"body":{"changelog.html":{}}}],["refactor",{"_index":398,"title":{},"body":{"changelog.html":{}}}],["referenc",{"_index":407,"title":{},"body":{"changelog.html":{}}}],["refresh",{"_index":283,"title":{},"body":{"index.html":{}}}],["releas",{"_index":414,"title":{},"body":{"changelog.html":{}}}],["remov",{"_index":382,"title":{},"body":{"changelog.html":{}}}],["render",{"_index":281,"title":{},"body":{"index.html":{},"changelog.html":{},"classes/Cell.html":{}}}],["renderer.compon",{"_index":496,"title":{},"body":{"modules/GridModule.html":{}}}],["renderer2",{"_index":298,"title":{},"body":{"index.html":{}}}],["report",{"_index":160,"title":{},"body":{"index.html":{}}}],["request",{"_index":337,"title":{},"body":{"index.html":{},"changelog.html":{}}}],["requir",{"_index":57,"title":{},"body":{"index.html":{}}}],["reset",{"_index":361,"title":{},"body":{"overview.html":{},"modules/GridModule.html":{}}}],["resiz",{"_index":712,"title":{},"body":{"miscellaneous/variables.html":{}}}],["restrict",{"_index":435,"title":{},"body":{"license.html":{}}}],["result",{"_index":9,"title":{},"body":{"dependencies.html":{},"index.html":{},"overview.html":{},"changelog.html":{},"license.html":{},"modules.html":{},"modules/GridModule.html":{},"injectables/GridMessageService.html":{},"pipes/IsFixedPipe.html":{},"pipes/IsGroupPipe.html":{},"pipes/IsRowVisiblePipe.html":{},"pipes/IsVisiblePipe.html":{},"classes/Cell.html":{},"classes/EmptyFactory.html":{},"classes/FormatterParser.html":{},"classes/HtmlUtil.html":{},"classes/InjectableFactory.html":{},"classes/RowChange.html":{},"classes/SortInfo.html":{},"interfaces/ClickListener.html":{},"interfaces/DblClickListener.html":{},"interfaces/Dictionary.html":{},"interfaces/EmptyConstructor.html":{},"interfaces/EventListenerArg.html":{},"interfaces/InjectableConstructor.html":{},"interfaces/MouseDownListener.html":{},"interfaces/MouseDragListener.html":{},"interfaces/MouseOverListener.html":{},"interfaces/MouseUpListener.html":{},"miscellaneous/variables.html":{}}}],["retriev",{"_index":89,"title":{},"body":{"index.html":{}}}],["return",{"_index":116,"title":{},"body":{"index.html":{},"modules/GridModule.html":{},"injectables/GridMessageService.html":{},"pipes/IsFixedPipe.html":{},"pipes/IsGroupPipe.html":{},"pipes/IsRowVisiblePipe.html":{},"pipes/IsVisiblePipe.html":{},"classes/EmptyFactory.html":{},"classes/FormatterParser.html":{},"classes/HtmlUtil.html":{},"classes/InjectableFactory.html":{},"classes/SortInfo.html":{},"interfaces/ClickListener.html":{},"interfaces/DblClickListener.html":{},"interfaces/EmptyConstructor.html":{},"interfaces/InjectableConstructor.html":{},"interfaces/MouseDownListener.html":{},"interfaces/MouseDragListener.html":{},"interfaces/MouseOverListener.html":{},"interfaces/MouseUpListener.html":{}}}],["returning.sortev",{"_index":270,"title":{},"body":{"index.html":{}}}],["right",{"_index":338,"title":{},"body":{"index.html":{},"license.html":{}}}],["root",{"_index":217,"title":{},"body":{"index.html":{}}}],["row",{"_index":82,"title":{},"body":{"index.html":{},"changelog.html":{},"modules/GridModule.html":{},"pipes/IsRowVisiblePipe.html":{}}}],["row/row",{"_index":563,"title":{},"body":{"pipes/IsRowVisiblePipe.html":{}}}],["rowchang",{"_index":641,"title":{"classes/RowChange.html":{}},"body":{"classes/RowChange.html":{}}}],["rownum",{"_index":234,"title":{},"body":{"index.html":{}}}],["rows[i].key",{"_index":224,"title":{},"body":{"index.html":{}}}],["rxjs/rx",{"_index":541,"title":{},"body":{"injectables/GridMessageService.html":{}}}],["same",{"_index":192,"title":{},"body":{"index.html":{}}}],["save",{"_index":400,"title":{},"body":{"changelog.html":{}}}],["scroll",{"_index":191,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["scrollbar",{"_index":390,"title":{},"body":{"changelog.html":{}}}],["see",{"_index":104,"title":{},"body":{"index.html":{},"changelog.html":{},"classes/InjectableFactory.html":{},"interfaces/InjectableConstructor.html":{}}}],["select",{"_index":72,"title":{},"body":{"index.html":{},"changelog.html":{}}}],["selectfilterrender",{"_index":331,"title":{},"body":{"index.html":{},"overview.html":{},"modules/GridModule.html":{}}}],["sell",{"_index":440,"title":{},"body":{"license.html":{}}}],["servic",{"_index":406,"title":{},"body":{"changelog.html":{}}}],["service.config",{"_index":134,"title":{},"body":{"index.html":{}}}],["services/grid",{"_index":507,"title":{},"body":{"modules/GridModule.html":{}}}],["set",{"_index":218,"title":{},"body":{"index.html":{}}}],["setasc",{"_index":656,"title":{},"body":{"classes/SortInfo.html":{}}}],["setasc(asc",{"_index":660,"title":{},"body":{"classes/SortInfo.html":{}}}],["setconfig",{"_index":598,"title":{},"body":{"classes/FormatterParser.html":{}}}],["setconfig(config",{"_index":296,"title":{},"body":{"index.html":{},"classes/FormatterParser.html":{}}}],["setfield",{"_index":657,"title":{},"body":{"classes/SortInfo.html":{}}}],["setfield(field",{"_index":662,"title":{},"body":{"classes/SortInfo.html":{}}}],["sever",{"_index":291,"title":{},"body":{"index.html":{}}}],["shall",{"_index":446,"title":{},"body":{"license.html":{}}}],["shortcut",{"_index":209,"title":{},"body":{"index.html":{}}}],["show",{"_index":154,"title":{},"body":{"index.html":{}}}],["showicon",{"_index":309,"title":{},"body":{"index.html":{}}}],["shown",{"_index":174,"title":{},"body":{"index.html":{}}}],["side",{"_index":165,"title":{},"body":{"index.html":{}}}],["simpl",{"_index":36,"title":{},"body":{"index.html":{},"classes/FormatterParser.html":{}}}],["size",{"_index":77,"title":{},"body":{"index.html":{}}}],["size.saveondirtyrowchang",{"_index":193,"title":{},"body":{"index.html":{}}}],["softwar",{"_index":429,"title":{},"body":{"license.html":{}}}],["sort",{"_index":65,"title":{},"body":{"index.html":{}}}],["sorted.glob",{"_index":275,"title":{},"body":{"index.html":{}}}],["sortev",{"_index":272,"title":{},"body":{"index.html":{}}}],["sortinfo",{"_index":271,"title":{"classes/SortInfo.html":{}},"body":{"index.html":{},"classes/SortInfo.html":{}}}],["sourc",{"_index":90,"title":{},"body":{"index.html":{},"modules/GridModule.html":{},"injectables/GridMessageService.html":{},"pipes/IsFixedPipe.html":{},"pipes/IsGroupPipe.html":{},"pipes/IsRowVisiblePipe.html":{},"pipes/IsVisiblePipe.html":{},"classes/Cell.html":{},"classes/EmptyFactory.html":{},"classes/FormatterParser.html":{},"classes/HtmlUtil.html":{},"classes/InjectableFactory.html":{},"classes/RowChange.html":{},"classes/SortInfo.html":{},"interfaces/ClickListener.html":{},"interfaces/DblClickListener.html":{},"interfaces/Dictionary.html":{},"interfaces/EmptyConstructor.html":{},"interfaces/EventListenerArg.html":{},"interfaces/InjectableConstructor.html":{},"interfaces/MouseDownListener.html":{},"interfaces/MouseDragListener.html":{},"interfaces/MouseOverListener.html":{},"interfaces/MouseUpListener.html":{}}}],["specif",{"_index":95,"title":{},"body":{"index.html":{}}}],["specifi",{"_index":181,"title":{},"body":{"index.html":{}}}],["speed",{"_index":286,"title":{},"body":{"index.html":{}}}],["spinner",{"_index":386,"title":{},"body":{"changelog.html":{}}}],["spinner.eventlisten",{"_index":204,"title":{},"body":{"index.html":{}}}],["spreadsheet",{"_index":159,"title":{},"body":{"index.html":{}}}],["src/grid/cell/cell.t",{"_index":566,"title":{},"body":{"classes/Cell.html":{}}}],["src/grid/cell/cell.ts:5",{"_index":576,"title":{},"body":{"classes/Cell.html":{}}}],["src/grid/cell/cell.ts:6",{"_index":575,"title":{},"body":{"classes/Cell.html":{}}}],["src/grid/cell/cell.ts:7",{"_index":573,"title":{},"body":{"classes/Cell.html":{}}}],["src/grid/column/formatters/formatt",{"_index":591,"title":{},"body":{"classes/FormatterParser.html":{}}}],["src/grid/event/click.interface.t",{"_index":669,"title":{},"body":{"interfaces/ClickListener.html":{}}}],["src/grid/event/click.interface.ts:3",{"_index":672,"title":{},"body":{"interfaces/ClickListener.html":{}}}],["src/grid/event/dbl",{"_index":674,"title":{},"body":{"interfaces/DblClickListener.html":{}}}],["src/grid/event/ev",{"_index":683,"title":{},"body":{"interfaces/EventListenerArg.html":{}}}],["src/grid/event/mous",{"_index":688,"title":{},"body":{"interfaces/MouseDownListener.html":{},"interfaces/MouseDragListener.html":{},"interfaces/MouseOverListener.html":{},"interfaces/MouseUpListener.html":{}}}],["src/grid/grid.component.t",{"_index":716,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/grid/grid.module.t",{"_index":473,"title":{},"body":{"modules/GridModule.html":{}}}],["src/grid/model/dictionary.interface.t",{"_index":680,"title":{},"body":{"interfaces/Dictionary.html":{}}}],["src/grid/model/dictionary.interface.ts:2",{"_index":682,"title":{},"body":{"interfaces/Dictionary.html":{}}}],["src/grid/model/dictionary.interface.ts:3",{"_index":681,"title":{},"body":{"interfaces/Dictionary.html":{}}}],["src/grid/services/grid",{"_index":517,"title":{},"body":{"injectables/GridMessageService.html":{},"miscellaneous/variables.html":{}}}],["src/grid/utils/empty.factory.t",{"_index":579,"title":{},"body":{"classes/EmptyFactory.html":{},"interfaces/EmptyConstructor.html":{}}}],["src/grid/utils/empty.factory.ts:4",{"_index":585,"title":{},"body":{"classes/EmptyFactory.html":{}}}],["src/grid/utils/empty.factory.ts:7",{"_index":586,"title":{},"body":{"classes/EmptyFactory.html":{}}}],["src/grid/utils/html",{"_index":607,"title":{},"body":{"classes/HtmlUtil.html":{}}}],["src/grid/utils/i",{"_index":545,"title":{},"body":{"pipes/IsFixedPipe.html":{},"pipes/IsGroupPipe.html":{},"pipes/IsRowVisiblePipe.html":{},"pipes/IsVisiblePipe.html":{}}}],["src/grid/utils/injectable.factory.t",{"_index":631,"title":{},"body":{"classes/InjectableFactory.html":{},"interfaces/InjectableConstructor.html":{}}}],["src/grid/utils/injectable.factory.ts:10",{"_index":638,"title":{},"body":{"classes/InjectableFactory.html":{}}}],["src/grid/utils/injectable.factory.ts:7",{"_index":636,"title":{},"body":{"classes/InjectableFactory.html":{}}}],["src/grid/utils/row",{"_index":642,"title":{},"body":{"classes/RowChange.html":{}}}],["src/grid/utils/sort",{"_index":651,"title":{},"body":{"classes/SortInfo.html":{}}}],["start",{"_index":12,"title":{"index.html":{},"changelog.html":{},"license.html":{}},"body":{}}],["state",{"_index":171,"title":{},"body":{"index.html":{}}}],["static",{"_index":512,"title":{},"body":{"modules/GridModule.html":{},"classes/HtmlUtil.html":{}}}],["statu",{"_index":268,"title":{},"body":{"index.html":{}}}],["storag",{"_index":378,"title":{},"body":{"changelog.html":{}}}],["string",{"_index":71,"title":{},"body":{"index.html":{},"injectables/GridMessageService.html":{},"classes/HtmlUtil.html":{},"classes/SortInfo.html":{},"interfaces/Dictionary.html":{}}}],["style",{"_index":221,"title":{},"body":{"index.html":{}}}],["subject",{"_index":443,"title":{},"body":{"license.html":{},"injectables/GridMessageService.html":{}}}],["sublicens",{"_index":438,"title":{},"body":{"license.html":{}}}],["substanti",{"_index":447,"title":{},"body":{"license.html":{}}}],["such",{"_index":611,"title":{},"body":{"classes/HtmlUtil.html":{}}}],["support",{"_index":34,"title":{},"body":{"index.html":{},"changelog.html":{},"modules.html":{}}}],["svg",{"_index":470,"title":{},"body":{"modules.html":{}}}],["syntax",{"_index":106,"title":{},"body":{"index.html":{},"changelog.html":{}}}],["t",{"_index":587,"title":{},"body":{"classes/EmptyFactory.html":{},"classes/InjectableFactory.html":{},"interfaces/EmptyConstructor.html":{},"interfaces/InjectableConstructor.html":{}}}],["tab",{"_index":713,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tabl",{"_index":32,"title":{},"body":{"index.html":{}}}],["take",{"_index":261,"title":{},"body":{"index.html":{}}}],["taken",{"_index":97,"title":{},"body":{"index.html":{}}}],["templat",{"_index":201,"title":{},"body":{"index.html":{}}}],["templateref",{"_index":200,"title":{},"body":{"index.html":{}}}],["texteditrender",{"_index":353,"title":{},"body":{"overview.html":{},"modules/GridModule.html":{}}}],["textfilterrender",{"_index":317,"title":{},"body":{"index.html":{},"overview.html":{},"modules/GridModule.html":{}}}],["them.pages",{"_index":182,"title":{},"body":{"index.html":{}}}],["theme",{"_index":161,"title":{},"body":{"index.html":{}}}],["thing",{"_index":287,"title":{},"body":{"index.html":{},"classes/HtmlUtil.html":{}}}],["this._message.asobserv",{"_index":537,"title":{},"body":{"injectables/GridMessageService.html":{}}}],["this._message.next(\"error",{"_index":542,"title":{},"body":{"injectables/GridMessageService.html":{}}}],["this._message.next(\"warn",{"_index":543,"title":{},"body":{"injectables/GridMessageService.html":{}}}],["this._messageobserv",{"_index":544,"title":{},"body":{"injectables/GridMessageService.html":{}}}],["this.asc",{"_index":666,"title":{},"body":{"classes/SortInfo.html":{}}}],["this.config",{"_index":605,"title":{},"body":{"classes/FormatterParser.html":{}}}],["this.datarequest",{"_index":115,"title":{},"body":{"index.html":{}}}],["this.emptyconstructor",{"_index":589,"title":{},"body":{"classes/EmptyFactory.html":{},"interfaces/EmptyConstructor.html":{}}}],["this.field",{"_index":667,"title":{},"body":{"classes/SortInfo.html":{}}}],["this.ic(this.injector",{"_index":639,"title":{},"body":{"classes/InjectableFactory.html":{},"interfaces/InjectableConstructor.html":{}}}],["this.newrownum",{"_index":650,"title":{},"body":{"classes/RowChange.html":{}}}],["this.oldrownum",{"_index":649,"title":{},"body":{"classes/RowChange.html":{}}}],["those",{"_index":172,"title":{},"body":{"index.html":{}}}],["through",{"_index":39,"title":{},"body":{"index.html":{}}}],["titl",{"_index":155,"title":{},"body":{"index.html":{}}}],["to.configur",{"_index":142,"title":{},"body":{"index.html":{}}}],["toast",{"_index":248,"title":{},"body":{"index.html":{}}}],["todo",{"_index":336,"title":{},"body":{"index.html":{}}}],["togeth",{"_index":167,"title":{},"body":{"index.html":{}}}],["tort",{"_index":466,"title":{},"body":{"license.html":{}}}],["transform",{"_index":549,"title":{},"body":{"pipes/IsFixedPipe.html":{},"pipes/IsGroupPipe.html":{},"pipes/IsRowVisiblePipe.html":{},"pipes/IsVisiblePipe.html":{}}}],["transform(list",{"_index":550,"title":{},"body":{"pipes/IsFixedPipe.html":{},"pipes/IsGroupPipe.html":{},"pipes/IsRowVisiblePipe.html":{},"pipes/IsVisiblePipe.html":{}}}],["true",{"_index":170,"title":{},"body":{"index.html":{},"modules/GridModule.html":{},"classes/SortInfo.html":{}}}],["two",{"_index":125,"title":{},"body":{"index.html":{}}}],["type",{"_index":121,"title":{},"body":{"index.html":{},"injectables/GridMessageService.html":{},"pipes/IsFixedPipe.html":{},"classes/Cell.html":{},"classes/EmptyFactory.html":{},"classes/FormatterParser.html":{},"classes/HtmlUtil.html":{},"classes/InjectableFactory.html":{},"classes/RowChange.html":{},"classes/SortInfo.html":{},"interfaces/ClickListener.html":{},"interfaces/DblClickListener.html":{},"interfaces/Dictionary.html":{},"interfaces/EventListenerArg.html":{},"interfaces/InjectableConstructor.html":{},"interfaces/MouseDownListener.html":{},"interfaces/MouseDragListener.html":{},"interfaces/MouseOverListener.html":{},"interfaces/MouseUpListener.html":{},"miscellaneous/variables.html":{}}}],["undefin",{"_index":123,"title":{},"body":{"index.html":{},"pipes/IsFixedPipe.html":{},"pipes/IsGroupPipe.html":{},"pipes/IsRowVisiblePipe.html":{},"pipes/IsVisiblePipe.html":{}}}],["univers",{"_index":420,"title":{},"body":{"license.html":{},"modules/GridModule.html":{}}}],["up",{"_index":288,"title":{},"body":{"index.html":{}}}],["up.interface.t",{"_index":704,"title":{},"body":{"interfaces/MouseUpListener.html":{}}}],["up.interface.ts:3",{"_index":707,"title":{},"body":{"interfaces/MouseUpListener.html":{}}}],["upon",{"_index":260,"title":{},"body":{"index.html":{}}}],["us",{"_index":58,"title":{},"body":{"index.html":{},"license.html":{}}}],["usag",{"_index":98,"title":{},"body":{"index.html":{}}}],["user",{"_index":146,"title":{},"body":{"index.html":{},"changelog.html":{}}}],["usevalu",{"_index":515,"title":{},"body":{"modules/GridModule.html":{}}}],["usual",{"_index":62,"title":{},"body":{"index.html":{}}}],["utah",{"_index":421,"title":{},"body":{"license.html":{},"modules/GridModule.html":{}}}],["util.t",{"_index":608,"title":{},"body":{"classes/HtmlUtil.html":{}}}],["util.ts:23",{"_index":622,"title":{},"body":{"classes/HtmlUtil.html":{}}}],["util.ts:38",{"_index":624,"title":{},"body":{"classes/HtmlUtil.html":{}}}],["util.ts:8",{"_index":618,"title":{},"body":{"classes/HtmlUtil.html":{}}}],["utils/i",{"_index":490,"title":{},"body":{"modules/GridModule.html":{}}}],["valid",{"_index":402,"title":{},"body":{"changelog.html":{}}}],["valu",{"_index":232,"title":{},"body":{"index.html":{},"injectables/GridMessageService.html":{},"classes/Cell.html":{},"classes/FormatterParser.html":{},"classes/SortInfo.html":{},"interfaces/Dictionary.html":{},"miscellaneous/variables.html":{}}}],["values.busytempl",{"_index":199,"title":{},"body":{"index.html":{}}}],["variabl",{"_index":709,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["variou",{"_index":76,"title":{},"body":{"index.html":{}}}],["vertic",{"_index":284,"title":{},"body":{"index.html":{}}}],["view",{"_index":310,"title":{},"body":{"index.html":{},"changelog.html":{}}}],["viewconfig",{"_index":304,"title":{},"body":{"index.html":{}}}],["viewrender",{"_index":302,"title":{},"body":{"index.html":{}}}],["visibl",{"_index":152,"title":{},"body":{"index.html":{}}}],["visible.pip",{"_index":491,"title":{},"body":{"modules/GridModule.html":{}}}],["visible.pipe.t",{"_index":560,"title":{},"body":{"pipes/IsRowVisiblePipe.html":{},"pipes/IsVisiblePipe.html":{}}}],["visible.pipe.ts:9",{"_index":562,"title":{},"body":{"pipes/IsRowVisiblePipe.html":{},"pipes/IsVisiblePipe.html":{}}}],["void",{"_index":531,"title":{},"body":{"injectables/GridMessageService.html":{},"classes/FormatterParser.html":{},"classes/SortInfo.html":{}}}],["wait",{"_index":372,"title":{},"body":{"changelog.html":{}}}],["want",{"_index":213,"title":{},"body":{"index.html":{}}}],["warn",{"_index":214,"title":{},"body":{"index.html":{},"injectables/GridMessageService.html":{}}}],["warn(messag",{"_index":532,"title":{},"body":{"injectables/GridMessageService.html":{}}}],["warranti",{"_index":449,"title":{},"body":{"license.html":{}}}],["way",{"_index":126,"title":{},"body":{"index.html":{}}}],["whether",{"_index":464,"title":{},"body":{"license.html":{}}}],["width",{"_index":391,"title":{},"body":{"changelog.html":{}}}],["wish",{"_index":247,"title":{},"body":{"index.html":{}}}],["withcomponents(compon",{"_index":516,"title":{},"body":{"modules/GridModule.html":{}}}],["without",{"_index":434,"title":{},"body":{"license.html":{},"classes/FormatterParser.html":{}}}],["work",{"_index":94,"title":{},"body":{"index.html":{}}}],["ye",{"_index":620,"title":{},"body":{"classes/HtmlUtil.html":{}}}],["you.logwarn",{"_index":212,"title":{},"body":{"index.html":{}}}],["zoom",{"_index":360,"title":{},"body":{"overview.html":{},"modules/GridModule.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n    Dependencies\n\n\n    \n        @ng-bootstrap/ng-bootstrap : 1.1.x\n    \n        moment : >=2.19.3\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nHuntsman Cancer Institute's Angular Grid Library\nhci-ng-grid Demo on Github\nIntro\nThis grid is designed to be a full featured grid that can handle nearly anything that complex data tables may\nbe expected to support.  By default, the grid is simple and basic, but becomes full featured through\nconfiguration.Install\n\"dependencies\": {\n    \"hci-ng-grid\": \"3.1.0-beta.2\"\n}import {GridModule} from \"hci-ng-grid\";@NgModule({\n    imports: [\n        GridModule.forRoot()\n    ]\n})Publishing\nCompiled code gets moved to the dist folder with a copy of the package.json.  Custom commands are required for\npackaging and publishing.  Use npmPack and npmPublish instead of the usual pack and publish.Basic Features\n\nSorting: Change sorting by clicking on column header.\nFiltering: String, select, range filtering with the possibility for custom filters.\nPaging: Paging with various page sizes, first, last, previous and next.\nRow Grouping: Rows can be grouped by one or more columns.\nExternal Data Call: Callback to retrieve data from external source.\nCustom Events: Listeners can be added to work for specific events and custom actions can be taken.\n\nUsage\nNote, there are so many features to this grid that not all are currently listed here.  See the demo for full examples.\nThe basic syntax for data provided by the implementing component.\n\nThe basic syntax for an external data call.\n\nAnd a function using mocked external data call.\ndataRequest: (externalInfo: ExternalInfo) => {};\n\nngOnInit() {\n  this.dataRequest = (externalInfo: ExternalInfo) => {\n    return Observable.of(new ExternalData(this.dataGeneratorService.getData(250), externalInfo)).delay(500);\n  };\n}Inputs\ndata\ntype: Object[]\ndefault: undefined\nProvide the grid with an array of rows as objects.  Two way binding to this data.dataCall\ntype: Function\ndefault: undefined\nA function that is called to retrieve data.  The function is passed filtering, sorting and paging info.id\ntype: string\ndefault: undefined\nThe html id for the grid and the id that can be used to get the grid from the global grid service.config\ntype: any\ndefault: {}\nA json object that contains configuration options for the grid.linkedGroups\ntype: string[]\ndefault: undefined\nThe group names that this grid should be linked to.configurable\ntype: boolean\ndefault: false\nFlag if the user should be allowed to modify the grid's configuration (e.g. what colums are visible and how big).title\ntype: string\ndefault: undefined\nShows this title in a title bar above the grid.theme\ntype: string\ndefault: \"spreadsheet\"\noptions: \"spreadsheet\", \"report\", or your own\nThe name of the theme to use.  columns\ntype: Column[]\ndefault: undefined\nAn array of column configuration objects.fixedColumns\ntype: string[]\ndefault: undefined\nA list of column names that should be fixed to the left side of the grid.groupBy\ntype: string[]\ndefault: undefined\nA list of column names that should be used to group rows together.* Currently disabled *\ngroupByCollapsed\ntype: boolean\ndefault: true\nThe state for grouped rows if those rows in a group should be hidden or shown by default.externalFiltering\ntype: boolean\ndefault: false\nTrue if filtering should be handled by the external data call.externalSorting\ntype: boolean\ndefault: false\nTrue if sorting should be handled by the external data call.externalPaging\ntype: boolean\ndefault: false\nTrue if paging should be handled by the external data call.pageSize\ntype: number\ndefault: undefined\nThe number of rows per page.  If not specified it will show all of them.pageSizes\ntype: number[]\ndefault: [10, 25, 50]\nAn array of possible page sizes that the user can choose from.nVisibleRows\ntype: number\ndefault: -1\nThe number of visible rows.  A page might have 100 rows, but you can limit the size of the grid to 10 rows which would be scrolling for the user.  The default is -1 which is the same as the page size.saveOnDirtyRowChange\ntype: boolean\ndefault: false\nIf true, will emit a (onRowSave) event if you navigate to a new row and the previous row has dirty values.busyTemplate\ntype: TemplateRef\ndefault: undefined\nA custom template shown when data is loaded.  If you don't like the default spinner.eventListeners\ntype: EventListenerArg[]\ndefault: []\nAn array of listeners that can perform actions on any sort of click or key events.mode\ntype: string\ndefault: undefined\nA shortcut for creating listeners.  Rather than passing in your own listeners, specify a mode and the required listeners will be created for you.logWarnings\ntype: boolean\ndefault: true\nTrue if you want warnings to show in the console.display\ntype: string\ndefault: flow-root\nSets the display on the root component.  Although you could also do this with style on the grid.Outputs\nonCellSave\ntype: any\n$event: { key: rows[i].key,\n          i: i,\n          j: j,\n          field: columns[j].field,\n          oldValue: oldValue,\n          newValue: newValue }\nThe row key, location, field, old and new value of the cell.onRowSave\ntype: any\n$event: { key: rows[i].key,\n          rowNum: i,\n          row: originalRowData }\nEmits the key, row number and the data for the row in the format originally passed in.onConfigChange\ntype: any\n$event: config\nEmits the current configuration for the grid.cellClick\ntype: any\n$event: any\nDetermined by the event listener which can emit any type of data.cellDblClick\ntype: any\n$event: any\nDetermined by the event listener which can emit any type of data.rowClick\ntype: any\n$event: any\nDetermined by the event listener which can emit any type of data.rowDblClick\ntype: any\n$event: any\nDetermined by the event listener which can emit any type of data.warning\ntype: string\n$event: warning message as a string\nListen to this to handle warnings from the grid as you wish (e.g. as a toast popup).selectedRows\ntype: any[]\n$event: [key1, key2, ...]\nThis is an array of any instead of number because the row key could be anything.filterEvent\ntype: FilterInfo[]\n$event: FilterInfo[]\nThis is the array of filters used when a column's filters are applied.  In the case of a select where there are multiple\nFilterInfos, this includes the full list and not the one that changed.  This event is fired upon click.  It will take\nsome delay for data to come back at which point the filterEvent would be fired.dataFiltered\ntype: any\n$event: {type, status, nData}\nThis is emitted when a filter event returns data.  It will provide the number of rows returning.sortEvent\ntype: SortInfo\n$event: SortInfo\nThis is the sortInfo emitted when a column header is clicked.  It will take\nsome delay for data to come back at which point the sortEvent would be fired.dataSorted\ntype: any\n$event: {type, status, field}\nThis is emitted when a sort event returns data.  It will provide the field being sorted.Global Config\nThe root module can take configuration json that can be used to set defaults for every grid.\nFor example, if you want every grid in your application to use the same theme and you don't want\nto specify that theme in every instance of the grid, you can do the following:\nGridModule.forRoot({\n  theme: \"report\"\n})Advanced Features\nRendering Cells\nEvery refresh of data and every vertical scroll will re-render the visible rows and cells.  To speed things\nup, each cell is limited to rendering pure HTML.  However, there are several options of how to render and\nthe option of custom rendering.\nEvery cell is rendering with a class that implements the CellViewRenderer interface.  The two methods\nrequired to implement are\nsetConfig(config: any);\n\ncreateElement(renderer: Renderer2, column: Column, value: any, i: number, j: number): HTMLElement;As an example, the following is an example of a number range renderer.\n{\n    field: \"nLabs\",\n    name: \"# Labs\",\n    viewRenderer: CellNumberRangeView,\n    viewConfig: { low: 15, high: 85, showIcon: true }\n}The class is passed in as the viewRenderer and any config is passed in through the viewConfig.\nFiltering\nLike view rendering, built in and custom components can be used to render the filter.  The difference\nis rather than pure HTML, a filter is a component that extends a base class FilterRenderer.  The\nfollowing are examples of built in filters.\n{\n    field: \"firstName\",\n    name: \"First Name\",\n    filterRenderer: TextFilterRenderer\n},\n{\n    field: \"dob\",\n    name: \"Date of Birth\",\n    dataType: \"date\",\n    format: \"MM/DD/YYYY\",\n    editRenderer: DateEditRenderer,\n    filterRenderer: CompareFilterRenderer\n},\n{\n    field: \"gender\",\n    name: \"Gender\",\n    editRenderer: ChoiceEditRenderer,\n    choices: [ {value: \"Female\", display: \"Female\"}, {value: \"Male\", display: \"Male\"} ],\n    filterRenderer: SelectFilterRenderer\n}Known Issues\n\nRow Groups works upon load, but breaks when filtering is introduced.\n\nTODOs\n\nThere are only left fixed colums, but some have requested right fixed columns.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n            \n                \n                    \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_GridModule\n\n\n\ncluster_GridModule_declarations\n\n\n\ncluster_GridModule_GridComponent_providers\n\n\n\ncluster_GridModule_exports\n\n\n\n\nGridComponent\n\nGridComponent\n\n\n\nGridModule\n\nGridModule\n\nGridModule -->\n\nGridComponent->GridModule\n\n\n\n\n\nColumnHeaderComponent\n\nColumnHeaderComponent\n\nGridModule -->\n\nColumnHeaderComponent->GridModule\n\n\n\n\n\nIsVisiblePipe\n\nIsVisiblePipe\n\nGridModule -->\n\nIsVisiblePipe->GridModule\n\n\n\n\n\nIsGroupPipe\n\nIsGroupPipe\n\nGridModule -->\n\nIsGroupPipe->GridModule\n\n\n\n\n\nIsFixedPipe\n\nIsFixedPipe\n\nGridModule -->\n\nIsFixedPipe->GridModule\n\n\n\n\n\nIsRowVisiblePipe\n\nIsRowVisiblePipe\n\nGridModule -->\n\nIsRowVisiblePipe->GridModule\n\n\n\n\n\nTextEditRenderer\n\nTextEditRenderer\n\nGridModule -->\n\nTextEditRenderer->GridModule\n\n\n\n\n\nDateEditRenderer\n\nDateEditRenderer\n\nGridModule -->\n\nDateEditRenderer->GridModule\n\n\n\n\n\nChoiceEditRenderer\n\nChoiceEditRenderer\n\nGridModule -->\n\nChoiceEditRenderer->GridModule\n\n\n\n\n\nTextFilterRenderer\n\nTextFilterRenderer\n\nGridModule -->\n\nTextFilterRenderer->GridModule\n\n\n\n\n\nSelectFilterRenderer\n\nSelectFilterRenderer\n\nGridModule -->\n\nSelectFilterRenderer->GridModule\n\n\n\n\n\nCompareFilterRenderer\n\nCompareFilterRenderer\n\nGridModule -->\n\nCompareFilterRenderer->GridModule\n\n\n\n\n\nBigTextPopup\n\nBigTextPopup\n\nGridModule -->\n\nBigTextPopup->GridModule\n\n\n\n\n\nConfigMenuComponent\n\nConfigMenuComponent\n\nGridModule -->\n\nConfigMenuComponent->GridModule\n\n\n\n\n\nConfigMultiChoiceComponent\n\nConfigMultiChoiceComponent\n\nGridModule -->\n\nConfigMultiChoiceComponent->GridModule\n\n\n\n\n\nGridComponent \n\nGridComponent \n\nGridComponent  -->\n\nGridModule->GridComponent \n\n\n\n\n\nGridService\n\nGridService\n\nGridComponent -->\n\nGridService->GridComponent\n\n\n\n\n\nGridEventService\n\nGridEventService\n\nGridComponent -->\n\nGridEventService->GridComponent\n\n\n\n\n\nGridMessageService\n\nGridMessageService\n\nGridComponent -->\n\nGridMessageService->GridComponent\n\n\n\n\n\n\n                \n                \n                \n                    Zoom in\n                    Reset\n                    Zoom out\n                \n            \n\n    \n            \n                \n                    \n                        \n                        \n                            1 module\n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                        11 components\n                    \n                \n            \n            \n                \n                    \n                        \n                        4 injectables\n                    \n                \n            \n            \n                \n                    \n                        \n                        4 pipes\n                    \n                \n            \n            \n                \n                    \n                        \n                        33 classes\n                    \n                \n            \n            \n                \n                    \n                        \n                        11 interfaces\n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"changelog.html":{"url":"changelog.html","title":"getting-started - changelog","body":"\n                   \n\nChange Log\n3.0.0\n- Generalize column wait configuration.  Changes public api.\n- Fixes to popup behavior.\n- Column allows externalConfig storage.\n- Default format/parser more generic.2.1.1\n- Fix syntax in README.2.1.0\n- Removed allowing auto column generation when no columns configured.\n- Added wait listeners to pause configuration while waiting on any requests.\n- Add spinner for loading and prevent data display if no columns.\n- Bump height if view has scrollbar.\n- Fix column width calculation.2.0.2\n- Fix keywords and add .npmignore.2.0.1\n- Fix readme and license in artifact.2.0.0\n- Refactor of rendering and how data/config/events are listened to.\n- Listeners for saving cells and rows.\n- Customization of busy, and view renderers.\n- Validation support and improved formatting/parsing especially for dates.\n- User configuration added.\n- Global grid service for referencing and connecting grids.\n- Row selection improved.\n- External data calls from Promise to Observable.\n- Numerous fixes.1.0.0\n- Initial Release.  See README.md for features.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nCopyright (c) 2018 Huntsman Cancer Institute at the University of Utah\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        GridModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/GridModule.html":{"url":"modules/GridModule.html","title":"module - GridModule","body":"\n                   \n\n\n\n\n  Modules\n  GridModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_GridModule\n\n\n\ncluster_GridModule_declarations\n\n\n\ncluster_GridModule_GridComponent_providers\n\n\n\ncluster_GridModule_exports\n\n\n\n\nGridComponent\n\nGridComponent\n\n\n\nGridModule\n\nGridModule\n\nGridModule -->\n\nGridComponent->GridModule\n\n\n\n\n\nColumnHeaderComponent\n\nColumnHeaderComponent\n\nGridModule -->\n\nColumnHeaderComponent->GridModule\n\n\n\n\n\nIsVisiblePipe\n\nIsVisiblePipe\n\nGridModule -->\n\nIsVisiblePipe->GridModule\n\n\n\n\n\nIsGroupPipe\n\nIsGroupPipe\n\nGridModule -->\n\nIsGroupPipe->GridModule\n\n\n\n\n\nIsFixedPipe\n\nIsFixedPipe\n\nGridModule -->\n\nIsFixedPipe->GridModule\n\n\n\n\n\nIsRowVisiblePipe\n\nIsRowVisiblePipe\n\nGridModule -->\n\nIsRowVisiblePipe->GridModule\n\n\n\n\n\nTextEditRenderer\n\nTextEditRenderer\n\nGridModule -->\n\nTextEditRenderer->GridModule\n\n\n\n\n\nDateEditRenderer\n\nDateEditRenderer\n\nGridModule -->\n\nDateEditRenderer->GridModule\n\n\n\n\n\nChoiceEditRenderer\n\nChoiceEditRenderer\n\nGridModule -->\n\nChoiceEditRenderer->GridModule\n\n\n\n\n\nTextFilterRenderer\n\nTextFilterRenderer\n\nGridModule -->\n\nTextFilterRenderer->GridModule\n\n\n\n\n\nSelectFilterRenderer\n\nSelectFilterRenderer\n\nGridModule -->\n\nSelectFilterRenderer->GridModule\n\n\n\n\n\nCompareFilterRenderer\n\nCompareFilterRenderer\n\nGridModule -->\n\nCompareFilterRenderer->GridModule\n\n\n\n\n\nBigTextPopup\n\nBigTextPopup\n\nGridModule -->\n\nBigTextPopup->GridModule\n\n\n\n\n\nConfigMenuComponent\n\nConfigMenuComponent\n\nGridModule -->\n\nConfigMenuComponent->GridModule\n\n\n\n\n\nConfigMultiChoiceComponent\n\nConfigMultiChoiceComponent\n\nGridModule -->\n\nConfigMultiChoiceComponent->GridModule\n\n\n\n\n\nGridComponent \n\nGridComponent \n\nGridComponent  -->\n\nGridModule->GridComponent \n\n\n\n\n\nGridService\n\nGridService\n\nGridComponent -->\n\nGridService->GridComponent\n\n\n\n\n\nGridEventService\n\nGridEventService\n\nGridComponent -->\n\nGridEventService->GridComponent\n\n\n\n\n\nGridMessageService\n\nGridMessageService\n\nGridComponent -->\n\nGridMessageService->GridComponent\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/grid/grid.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                GridComponent\n                            \n                            \n                                ColumnHeaderComponent\n                            \n                            \n                                IsVisiblePipe\n                            \n                            \n                                IsGroupPipe\n                            \n                            \n                                IsFixedPipe\n                            \n                            \n                                IsRowVisiblePipe\n                            \n                            \n                                TextEditRenderer\n                            \n                            \n                                DateEditRenderer\n                            \n                            \n                                ChoiceEditRenderer\n                            \n                            \n                                TextFilterRenderer\n                            \n                            \n                                SelectFilterRenderer\n                            \n                            \n                                CompareFilterRenderer\n                            \n                            \n                                BigTextPopup\n                            \n                            \n                                ConfigMenuComponent\n                            \n                            \n                                ConfigMultiChoiceComponent\n                            \n                    \n                \n                \n                    EntryComponents\n                    \n                            \n                                TextEditRenderer\n                            \n                            \n                                DateEditRenderer\n                            \n                            \n                                ChoiceEditRenderer\n                            \n                            \n                                TextFilterRenderer\n                            \n                            \n                                SelectFilterRenderer\n                            \n                            \n                                CompareFilterRenderer\n                            \n                            \n                                BigTextPopup\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    GridComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        /*\n * Copyright (c) 2016 Huntsman Cancer Institute at the University of Utah, Confidential and Proprietary\n */\nimport {ANALYZE_FOR_ENTRY_COMPONENTS, ModuleWithProviders, NgModule} from \"@angular/core\";\nimport {CommonModule} from \"@angular/common\";\nimport {FormsModule} from \"@angular/forms\";\n\nimport {NgbModule} from \"@ng-bootstrap/ng-bootstrap\";\n\nimport {GridComponent} from \"./grid.component\";\nimport {ColumnHeaderComponent} from \"./column/column-header.component\";\nimport {IsVisiblePipe} from \"./utils/is-visible.pipe\";\nimport {IsGroupPipe} from \"./utils/is-group.pipe\";\nimport {IsFixedPipe} from \"./utils/is-fixed.pipe\";\nimport {IsRowVisiblePipe} from \"./utils/is-row-visible.pipe\";\nimport {TextEditRenderer} from \"./cell/editRenderers/text-edit-renderer.component\";\nimport {TextFilterRenderer} from \"./column/filterRenderers/text-filter-renderer.component\";\nimport {CompareFilterRenderer} from \"./column/filterRenderers/compare-filter-renderer.component\";\nimport {ChoiceEditRenderer} from \"./cell/editRenderers/choice-edit-renderer.component\";\nimport {DateEditRenderer} from \"./cell/editRenderers/date-edit-renderer.component\";\nimport {SelectFilterRenderer} from \"./column/filterRenderers/select-filter-renderer.component\";\nimport {BigTextPopup} from \"./cell/viewPopupRenderer/bigtext-popup.component\";\nimport {ConfigMenuComponent} from \"./config/config-menu.component\";\nimport {GridGlobalService} from \"./services/grid-global.service\";\nimport {ConfigMultiChoiceComponent} from \"./config/config-multi-choice.component\";\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    NgbModule.forRoot()\n  ],\n  declarations: [\n    GridComponent,\n    ColumnHeaderComponent,\n    IsVisiblePipe,\n    IsGroupPipe,\n    IsFixedPipe,\n    IsRowVisiblePipe,\n    TextEditRenderer,\n    DateEditRenderer,\n    ChoiceEditRenderer,\n    TextFilterRenderer,\n    SelectFilterRenderer,\n    CompareFilterRenderer,\n    BigTextPopup,\n    ConfigMenuComponent,\n    ConfigMultiChoiceComponent\n  ],\n  entryComponents: [\n    TextEditRenderer,\n    DateEditRenderer,\n    ChoiceEditRenderer,\n    TextFilterRenderer,\n    SelectFilterRenderer,\n    CompareFilterRenderer,\n    BigTextPopup\n  ],\n  exports: [\n    GridComponent\n  ]\n})\nexport class GridModule {\n\n  static forRoot(globalConfig?: any, components?: any[]): ModuleWithProviders {\n    return {\n      providers: [\n        GridGlobalService,\n        {provide: \"globalConfig\", useValue: (globalConfig) ? globalConfig : {}},\n        {\n          provide: ANALYZE_FOR_ENTRY_COMPONENTS,\n          useValue: components,\n          multi: true\n        }\n      ],\n      ngModule: GridModule\n    };\n  }\n\n  static withComponents(components: any[]): ModuleWithProviders {\n    return {\n      ngModule: GridModule,\n      providers: [\n        {\n          provide: ANALYZE_FOR_ENTRY_COMPONENTS,\n          useValue: components,\n          multi: true\n        }\n      ]\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GridMessageService.html":{"url":"injectables/GridMessageService.html","title":"injectable - GridMessageService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  GridMessageService\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/grid/services/grid-message.service.ts\n        \n\n\n\n            \n                Index\n                \n                    \n                        \n                            \n                                Properties\n                            \n                        \n                        \n                            \n                                \n                                    \n                                            Private\n                                        _level\n                                    \n                                    \n                                            Private\n                                        _message\n                                    \n                                    \n                                            Private\n                                        _messageObservable\n                                    \n                                \n                            \n                        \n                        \n                            \n                                Methods\n                            \n                        \n                        \n                            \n                                \n                                    \n                                        error\n                                    \n                                    \n                                        warn\n                                    \n                                \n                            \n                        \n                        \n                            \n                                Accessors\n                            \n                        \n                        \n                            \n                                \n                                    \n                                        messageObservable\n                                    \n                                \n                            \n                        \n                    \n                \n            \n\n\n            \n                \n                    \n                        Methods\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        error\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            error(message: string)\n                                \n                            \n            \n            \n                                    \n                                        \n                                                Defined in src/grid/services/grid-message.service.ts:12\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                                Type\n                                                            Optional\n                                                        \n                                                    \n                                                    \n                                                            \n                                                                message\n                                                                \n                                                                    \n                                                                                string\n                                                                    \n                                                                \n                                                                \n                                                                        no\n                                                                \n                                                                \n            \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     void\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        warn\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            warn(message: string)\n                                \n                            \n            \n            \n                                    \n                                        \n                                                Defined in src/grid/services/grid-message.service.ts:16\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                                Type\n                                                            Optional\n                                                        \n                                                    \n                                                    \n                                                            \n                                                                message\n                                                                \n                                                                    \n                                                                                string\n                                                                    \n                                                                \n                                                                \n                                                                        no\n                                                                \n                                                                \n            \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     void\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n            \n\n            \n                \n                    \n                        Properties\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                            Private\n                                        _level\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                    _level:     number\n            \n                                \n                            \n                                \n                                    \n                                        Type :     number\n            \n                                    \n                                \n                                \n                                    \n                                        Default value : 2\n                                    \n                                \n                                    \n                                        \n                                                Defined in src/grid/services/grid-message.service.ts:10\n                                        \n                                    \n            \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                            Private\n                                        _message\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                    _message:     Subject\n            \n                                \n                            \n                                \n                                    \n                                        Type :     Subject\n            \n                                    \n                                \n                                \n                                    \n                                        Default value : new Subject()\n                                    \n                                \n                                    \n                                        \n                                                Defined in src/grid/services/grid-message.service.ts:8\n                                        \n                                    \n            \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                            Private\n                                        _messageObservable\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                    _messageObservable:     Observable\n            \n                                \n                            \n                                \n                                    \n                                        Type :     Observable\n            \n                                    \n                                \n                                \n                                    \n                                        Default value : this._message.asObservable()\n                                    \n                                \n                                    \n                                        \n                                                Defined in src/grid/services/grid-message.service.ts:9\n                                        \n                                    \n            \n            \n                        \n                    \n            \n\n            \n                \n                    Accessors\n                \n                    \n                        \n                            \n                                \n                                    \n                                    messageObservable\n                                \n                            \n            \n                            \n                                \n                                    getmessageObservable()\n                                \n                            \n                                        \n                                            \n                                                Defined in src/grid/services/grid-message.service.ts:20\n                                            \n                                        \n            \n                        \n                    \n            \n    \n\n\n    \n        import {Injectable} from \"@angular/core\";\n\nimport {Subject, Observable} from \"rxjs/Rx\";\n\n@Injectable()\nexport class GridMessageService {\n\n  private _message: Subject = new Subject();\n  private _messageObservable: Observable = this._message.asObservable();\n  private _level: number = 2;\n\n  error(message: string) {\n    this._message.next(\"ERROR: \" + message);\n  }\n\n  warn(message: string) {\n    this._message.next(\"WARN: \" + message);\n  }\n\n  get messageObservable(): Observable {\n    return this._messageObservable;\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/IsFixedPipe.html":{"url":"pipes/IsFixedPipe.html","title":"pipe - IsFixedPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Pipes\n  IsFixedPipe\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n\n    \n\n        \n            File\n        \n        \n            src/grid/utils/is-fixed.pipe.ts\n        \n\n\n\n        \n            Metadata\n            \n                \n                    \n                        name\n                        isFixed\n                    \n                \n            \n        \n\n            \n                \n                    \n                        Methods\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        transform\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            transform(list: Array, fixed: boolean)\n                                \n                            \n            \n            \n                                    \n                                        \n                                                Defined in src/grid/utils/is-fixed.pipe.ts:10\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                                Type\n                                                            Optional\n                                                        \n                                                    \n                                                    \n                                                            \n                                                                list\n                                                                \n                                                                    \n                                                                                Array\n                                                                    \n                                                                \n                                                                \n                                                                        no\n                                                                \n                                                                \n            \n                                                            \n                                                            \n                                                                fixed\n                                                                \n                                                                    \n                                                                                boolean\n                                                                    \n                                                                \n                                                                \n                                                                        no\n                                                                \n                                                                \n            \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     any\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n            \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from \"@angular/core\";\n\nimport { Column } from \"../column/column\";\n\n@Pipe({\n  name: \"isFixed\",\n  pure: false\n})\nexport class IsFixedPipe implements PipeTransform {\n  transform(list: Array, fixed: boolean) {\n    if (list === undefined) {\n      return list;\n    } else {\n      return list.filter((o: Column) => o.isFixed === fixed);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/IsGroupPipe.html":{"url":"pipes/IsGroupPipe.html","title":"pipe - IsGroupPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Pipes\n  IsGroupPipe\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n\n    \n\n        \n            File\n        \n        \n            src/grid/utils/is-group.pipe.ts\n        \n\n\n\n        \n            Metadata\n            \n                \n                    \n                        name\n                        isGroup\n                    \n                \n            \n        \n\n            \n                \n                    \n                        Methods\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        transform\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            transform(list: )\n                                \n                            \n            \n            \n                                    \n                                        \n                                                Defined in src/grid/utils/is-group.pipe.ts:9\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Optional\n                                                        \n                                                    \n                                                    \n                                                            \n                                                                list\n                                                                \n                                                                \n                                                                \n                                                                        no\n                                                                \n                                                                \n            \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     any\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n            \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from \"@angular/core\";\n\nimport { Column } from \"../column/column\";\n\n@Pipe({\n  name: \"isGroup\"\n})\nexport class IsGroupPipe implements PipeTransform {\n  transform(list) {\n    if (list === undefined) {\n      return list;\n    } else {\n      return list.filter((o: Column) => o.isGroup || o.isUtility);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/IsRowVisiblePipe.html":{"url":"pipes/IsRowVisiblePipe.html","title":"pipe - IsRowVisiblePipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Pipes\n  IsRowVisiblePipe\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n\n    \n\n        \n            File\n        \n        \n            src/grid/utils/is-row-visible.pipe.ts\n        \n\n\n\n        \n            Metadata\n            \n                \n                    \n                        name\n                        isRowVisible\n                    \n                \n            \n        \n\n            \n                \n                    \n                        Methods\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        transform\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            transform(list: )\n                                \n                            \n            \n            \n                                    \n                                        \n                                                Defined in src/grid/utils/is-row-visible.pipe.ts:9\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Optional\n                                                        \n                                                    \n                                                    \n                                                            \n                                                                list\n                                                                \n                                                                \n                                                                \n                                                                        no\n                                                                \n                                                                \n            \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     any\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n            \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from \"@angular/core\";\n\nimport { Row } from \"../row/row\";\n\n@Pipe({\n  name: \"isRowVisible\"\n})\nexport class IsRowVisiblePipe implements PipeTransform {\n  transform(list) {\n    if (list === undefined) {\n      return list;\n    } else {\n      return list.filter((o: Row) => o.visible);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/IsVisiblePipe.html":{"url":"pipes/IsVisiblePipe.html","title":"pipe - IsVisiblePipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Pipes\n  IsVisiblePipe\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n\n    \n\n        \n            File\n        \n        \n            src/grid/utils/is-visible.pipe.ts\n        \n\n\n\n        \n            Metadata\n            \n                \n                    \n                        name\n                        isVisible\n                    \n                \n            \n        \n\n            \n                \n                    \n                        Methods\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        transform\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            transform(list: )\n                                \n                            \n            \n            \n                                    \n                                        \n                                                Defined in src/grid/utils/is-visible.pipe.ts:9\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Optional\n                                                        \n                                                    \n                                                    \n                                                            \n                                                                list\n                                                                \n                                                                \n                                                                \n                                                                        no\n                                                                \n                                                                \n            \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     any\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n            \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from \"@angular/core\";\n\nimport { Column } from \"../column/column\";\n\n@Pipe({\n  name: \"isVisible\"\n})\nexport class IsVisiblePipe implements PipeTransform {\n  transform(list) {\n    if (list === undefined) {\n      return list;\n    } else {\n      return list.filter((o: Column) => o.visible);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Cell.html":{"url":"classes/Cell.html","title":"class - Cell","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  Cell\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/grid/cell/cell.ts\n        \n\n            \n                Description\n            \n            \n                A holder for the cell's data and other metadata needed for rendering or data management.\n\n            \n\n\n\n\n            \n                Index\n                \n                    \n                        \n                            \n                                Properties\n                            \n                        \n                        \n                            \n                                \n                                    \n                                        dirty\n                                    \n                                    \n                                        key\n                                    \n                                    \n                                        value\n                                    \n                                \n                            \n                        \n                    \n                \n            \n\n            \n                Constructor\n                    \n                        \n                            \n                                \n            constructor(o: Object)\n                                \n                            \n                                    \n                                        \n                                            Defined in src/grid/cell/cell.ts:7\n                                        \n                                    \n            \n                            \n                                \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                                Type\n                                                            Optional\n                                                        \n                                                    \n                                                    \n                                                            \n                                                                o\n                                                              \n                                                                    \n                                                                                Object\n                                                                    \n                                                              \n                                                                \n                                                                        no\n                                                                \n                                                                \n                                                            \n                                                    \n                                                \n                                        \n                                \n                            \n                        \n                    \n            \n\n\n\n            \n                \n                    \n                        Properties\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        dirty\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                    dirty:     boolean\n            \n                                \n                            \n                                \n                                    \n                                        Type :     boolean\n            \n                                    \n                                \n                                \n                                    \n                                        Default value : false\n                                    \n                                \n                                    \n                                        \n                                                Defined in src/grid/cell/cell.ts:7\n                                        \n                                    \n            \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        key\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                    key:     number\n            \n                                \n                            \n                                \n                                    \n                                        Type :     number\n            \n                                    \n                                \n                                    \n                                        \n                                                Defined in src/grid/cell/cell.ts:6\n                                        \n                                    \n            \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        value\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                    value:     any\n            \n                                \n                            \n                                \n                                    \n                                        Type :     any\n            \n                                    \n                                \n                                    \n                                        \n                                                Defined in src/grid/cell/cell.ts:5\n                                        \n                                    \n            \n            \n                        \n                    \n            \n\n    \n\n\n    \n        export class Cell {\n  value: any;\n  key: number;\n  dirty: boolean = false;\n\n  constructor(o: Object) {\n    Object.assign(this, o);\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/EmptyFactory.html":{"url":"classes/EmptyFactory.html","title":"class - EmptyFactory","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  EmptyFactory\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/grid/utils/empty.factory.ts\n        \n\n            \n                Description\n            \n            \n                Allows instantiation of any generic type if the type has no constructor arguments.\n\n            \n\n\n\n\n            \n                Index\n                \n                    \n                        \n                            \n                                Methods\n                            \n                        \n                        \n                            \n                                \n                                    \n                                        getInstance\n                                    \n                                \n                            \n                        \n                    \n                \n            \n\n            \n                Constructor\n                    \n                        \n                            \n                                \n            constructor(emptyConstructor: EmptyConstructor)\n                                \n                            \n                                    \n                                        \n                                            Defined in src/grid/utils/empty.factory.ts:4\n                                        \n                                    \n            \n                            \n                                \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                                Type\n                                                            Optional\n                                                        \n                                                    \n                                                    \n                                                            \n                                                                emptyConstructor\n                                                              \n                                                                    \n                                                                                EmptyConstructor\n                                                                    \n                                                              \n                                                                \n                                                                        no\n                                                                \n                                                                \n                                                            \n                                                    \n                                                \n                                        \n                                \n                            \n                        \n                    \n            \n\n            \n                \n                    \n                        Methods\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        getInstance\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            getInstance()\n                                \n                            \n            \n            \n                                    \n                                        \n                                                Defined in src/grid/utils/empty.factory.ts:7\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                            Returns :     T\n            \n                                        \n                                \n                            \n                        \n                    \n            \n\n\n\n    \n\n\n    \n        export class EmptyFactory {\n  constructor(private emptyConstructor: EmptyConstructor) {}\n\n  getInstance(): T {\n    return new this.emptyConstructor();\n  }\n}\n\nexport interface EmptyConstructor {\n  new(): T;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FormatterParser.html":{"url":"classes/FormatterParser.html","title":"class - FormatterParser","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  FormatterParser\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/grid/column/formatters/formatter-parser.ts\n        \n\n            \n                Description\n            \n            \n                Most simple formatter parser which just returns the value without modification.\n\n            \n\n\n\n\n            \n                Index\n                \n                    \n                        \n                            \n                                Properties\n                            \n                        \n                        \n                            \n                                \n                                    \n                                        config\n                                    \n                                \n                            \n                        \n                        \n                            \n                                Methods\n                            \n                        \n                        \n                            \n                                \n                                    \n                                        formatValue\n                                    \n                                    \n                                        parseValue\n                                    \n                                    \n                                        setConfig\n                                    \n                                \n                            \n                        \n                    \n                \n            \n\n\n            \n                \n                    \n                        Methods\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        formatValue\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            formatValue(value: any)\n                                \n                            \n            \n            \n                                    \n                                        \n                                                Defined in src/grid/column/formatters/formatter-parser.ts:12\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                                Type\n                                                            Optional\n                                                        \n                                                    \n                                                    \n                                                            \n                                                                value\n                                                                \n                                                                    \n                                                                                any\n                                                                    \n                                                                \n                                                                \n                                                                        no\n                                                                \n                                                                \n            \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     any\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        parseValue\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            parseValue(value: any)\n                                \n                            \n            \n            \n                                    \n                                        \n                                                Defined in src/grid/column/formatters/formatter-parser.ts:16\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                                Type\n                                                            Optional\n                                                        \n                                                    \n                                                    \n                                                            \n                                                                value\n                                                                \n                                                                    \n                                                                                any\n                                                                    \n                                                                \n                                                                \n                                                                        no\n                                                                \n                                                                \n            \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     any\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        setConfig\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            setConfig(config: any)\n                                \n                            \n            \n            \n                                    \n                                        \n                                                Defined in src/grid/column/formatters/formatter-parser.ts:8\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                                Type\n                                                            Optional\n                                                        \n                                                    \n                                                    \n                                                            \n                                                                config\n                                                                \n                                                                    \n                                                                                any\n                                                                    \n                                                                \n                                                                \n                                                                        no\n                                                                \n                                                                \n            \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     void\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n            \n\n\n            \n                \n                    \n                        Properties\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        config\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                    config:     any\n            \n                                \n                            \n                                \n                                    \n                                        Type :     any\n            \n                                    \n                                \n                                \n                                    \n                                        Default value : {}\n                                    \n                                \n                                    \n                                        \n                                                Defined in src/grid/column/formatters/formatter-parser.ts:6\n                                        \n                                    \n            \n            \n                        \n                    \n            \n\n    \n\n\n    \n        export class FormatterParser {\n\n  config: any = {};\n\n  setConfig(config: any) {\n    this.config = config;\n  }\n\n  formatValue(value: any): any {\n    return value;\n  }\n\n  parseValue(value: any): any {\n    return value;\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/HtmlUtil.html":{"url":"classes/HtmlUtil.html","title":"class - HtmlUtil","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  HtmlUtil\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/grid/utils/html-util.ts\n        \n\n            \n                Description\n            \n            \n                Convenience class for pulling things such as id from an element.\n\n            \n\n\n\n\n            \n                Index\n                \n                    \n                        \n                            \n                                Methods\n                            \n                        \n                        \n                            \n                                \n                                    \n                                            Static\n                                        getId\n                                    \n                                    \n                                            Static\n                                        getIdElement\n                                    \n                                    \n                                            Static\n                                        getLocation\n                                    \n                                \n                            \n                        \n                    \n                \n            \n\n\n            \n                \n                    \n                        Methods\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                            Static\n                                        getId\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                        \n                                    getId(e: HTMLElement, id?: string)\n                                \n                            \n            \n            \n                                    \n                                        \n                                                Defined in src/grid/utils/html-util.ts:8\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                                Type\n                                                            Optional\n                                                        \n                                                    \n                                                    \n                                                            \n                                                                e\n                                                                \n                                                                    \n                                                                                HTMLElement\n                                                                    \n                                                                \n                                                                \n                                                                        no\n                                                                \n                                                                \n            \n                                                            \n                                                            \n                                                                id\n                                                                \n                                                                    \n                                                                                string\n                                                                    \n                                                                \n                                                                \n                                                                        yes\n                                                                \n                                                                \n            \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     string\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                            Static\n                                        getIdElement\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                        \n                                    getIdElement(e: HTMLElement)\n                                \n                            \n            \n            \n                                    \n                                        \n                                                Defined in src/grid/utils/html-util.ts:23\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                                Type\n                                                            Optional\n                                                        \n                                                    \n                                                    \n                                                            \n                                                                e\n                                                                \n                                                                    \n                                                                                HTMLElement\n                                                                    \n                                                                \n                                                                \n                                                                        no\n                                                                \n                                                                \n            \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     HTMLElement\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                            Static\n                                        getLocation\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                        \n                                    getLocation(e: HTMLElement)\n                                \n                            \n            \n            \n                                    \n                                        \n                                                Defined in src/grid/utils/html-util.ts:38\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                                Type\n                                                            Optional\n                                                        \n                                                    \n                                                    \n                                                            \n                                                                e\n                                                                \n                                                                    \n                                                                                HTMLElement\n                                                                    \n                                                                \n                                                                \n                                                                        no\n                                                                \n                                                                \n            \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     Point\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n            \n\n\n\n    \n\n\n    \n        import {Point} from \"./point\";\n\n/**\n * Convenience class for pulling things such as id from an element.\n */\nexport class HtmlUtil {\n\n  static getId(e: HTMLElement, id?: string): string {\n    if (!e) {\n      return \"\";\n    }\n    while ((!id && e.id === \"\") || (id && !e.id.startsWith(id))) {\n      if (e.parentElement) {\n        e = e.parentElement;\n      } else {\n        break;\n      }\n    }\n\n    return e.id;\n  }\n\n  static getIdElement(e: HTMLElement): HTMLElement {\n    if (!e) {\n      return null;\n    }\n    while (e.id === \"\") {\n      if (e.parentElement) {\n        e = e.parentElement;\n      } else {\n        break;\n      }\n    }\n\n    return e;\n  }\n\n  static getLocation(e: HTMLElement): Point {\n    return Point.getPoint(this.getId(e));\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/InjectableFactory.html":{"url":"classes/InjectableFactory.html","title":"class - InjectableFactory","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  InjectableFactory\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/grid/utils/injectable.factory.ts\n        \n\n            \n                Description\n            \n            \n                Allows instantiation of any generic type if the type expects an injector argument.  See the implementation of\nthe EventListener.\n\n            \n\n\n\n\n            \n                Index\n                \n                    \n                        \n                            \n                                Methods\n                            \n                        \n                        \n                            \n                                \n                                    \n                                        getInstance\n                                    \n                                \n                            \n                        \n                    \n                \n            \n\n            \n                Constructor\n                    \n                        \n                            \n                                \n            constructor(ic: InjectableConstructor, injector: Injector)\n                                \n                            \n                                    \n                                        \n                                            Defined in src/grid/utils/injectable.factory.ts:7\n                                        \n                                    \n            \n                            \n                                \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                                Type\n                                                            Optional\n                                                        \n                                                    \n                                                    \n                                                            \n                                                                ic\n                                                              \n                                                                    \n                                                                                InjectableConstructor\n                                                                    \n                                                              \n                                                                \n                                                                        no\n                                                                \n                                                                \n                                                            \n                                                            \n                                                                injector\n                                                              \n                                                                    \n                                                                                Injector\n                                                                    \n                                                              \n                                                                \n                                                                        no\n                                                                \n                                                                \n                                                            \n                                                    \n                                                \n                                        \n                                \n                            \n                        \n                    \n            \n\n            \n                \n                    \n                        Methods\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        getInstance\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            getInstance()\n                                \n                            \n            \n            \n                                    \n                                        \n                                                Defined in src/grid/utils/injectable.factory.ts:10\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                            Returns :     T\n            \n                                        \n                                \n                            \n                        \n                    \n            \n\n\n\n    \n\n\n    \n        import {Injector} from \"@angular/core\";\n\n/**\n * Allows instantiation of any generic type if the type expects an injector argument.  See the implementation of\n * the EventListener.\n */\nexport class InjectableFactory {\n  constructor(private ic: InjectableConstructor, private injector: Injector) {}\n\n  getInstance(): T {\n    return new this.ic(this.injector);\n  }\n}\n\nexport interface InjectableConstructor {\n  new(injector: Injector): T;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RowChange.html":{"url":"classes/RowChange.html","title":"class - RowChange","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  RowChange\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/grid/utils/row-change.ts\n        \n\n\n\n\n\n            \n                Index\n                \n                    \n                        \n                            \n                                Properties\n                            \n                        \n                        \n                            \n                                \n                                    \n                                        newRowNum\n                                    \n                                    \n                                        oldRowNum\n                                    \n                                \n                            \n                        \n                    \n                \n            \n\n            \n                Constructor\n                    \n                        \n                            \n                                \n            constructor(oldRowNum: number, newRowNum: number)\n                                \n                            \n                                    \n                                        \n                                            Defined in src/grid/utils/row-change.ts:4\n                                        \n                                    \n            \n                            \n                                \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                                Type\n                                                            Optional\n                                                        \n                                                    \n                                                    \n                                                            \n                                                                oldRowNum\n                                                              \n                                                                    \n                                                                                number\n                                                                    \n                                                              \n                                                                \n                                                                        no\n                                                                \n                                                                \n                                                            \n                                                            \n                                                                newRowNum\n                                                              \n                                                                    \n                                                                                number\n                                                                    \n                                                              \n                                                                \n                                                                        no\n                                                                \n                                                                \n                                                            \n                                                    \n                                                \n                                        \n                                \n                            \n                        \n                    \n            \n\n\n\n            \n                \n                    \n                        Properties\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        newRowNum\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                    newRowNum:     number\n            \n                                \n                            \n                                \n                                    \n                                        Type :     number\n            \n                                    \n                                \n                                    \n                                        \n                                                Defined in src/grid/utils/row-change.ts:4\n                                        \n                                    \n            \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        oldRowNum\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                    oldRowNum:     number\n            \n                                \n                            \n                                \n                                    \n                                        Type :     number\n            \n                                    \n                                \n                                    \n                                        \n                                                Defined in src/grid/utils/row-change.ts:3\n                                        \n                                    \n            \n            \n                        \n                    \n            \n\n    \n\n\n    \n        export class RowChange {\n\n  oldRowNum: number;\n  newRowNum: number;\n\n  constructor(oldRowNum: number, newRowNum: number) {\n    this.oldRowNum = oldRowNum;\n    this.newRowNum = newRowNum;\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SortInfo.html":{"url":"classes/SortInfo.html","title":"class - SortInfo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  SortInfo\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/grid/utils/sort-info.ts\n        \n\n\n\n\n\n            \n                Index\n                \n                    \n                        \n                            \n                                Properties\n                            \n                        \n                        \n                            \n                                \n                                    \n                                            Public\n                                        asc\n                                    \n                                    \n                                            Public\n                                        field\n                                    \n                                \n                            \n                        \n                        \n                            \n                                Methods\n                            \n                        \n                        \n                            \n                                \n                                    \n                                        getAsc\n                                    \n                                    \n                                        getField\n                                    \n                                    \n                                        setAsc\n                                    \n                                    \n                                        setField\n                                    \n                                \n                            \n                        \n                    \n                \n            \n\n\n            \n                \n                    \n                        Methods\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        getAsc\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            getAsc()\n                                \n                            \n            \n            \n                                    \n                                        \n                                                Defined in src/grid/utils/sort-info.ts:5\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                            Returns :     boolean\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        getField\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            getField()\n                                \n                            \n            \n            \n                                    \n                                        \n                                                Defined in src/grid/utils/sort-info.ts:13\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                            Returns :     string\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        setAsc\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            setAsc(asc: boolean)\n                                \n                            \n            \n            \n                                    \n                                        \n                                                Defined in src/grid/utils/sort-info.ts:9\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                                Type\n                                                            Optional\n                                                        \n                                                    \n                                                    \n                                                            \n                                                                asc\n                                                                \n                                                                    \n                                                                                boolean\n                                                                    \n                                                                \n                                                                \n                                                                        no\n                                                                \n                                                                \n            \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     void\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        setField\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            setField(field: string)\n                                \n                            \n            \n            \n                                    \n                                        \n                                                Defined in src/grid/utils/sort-info.ts:17\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                                Type\n                                                            Optional\n                                                        \n                                                    \n                                                    \n                                                            \n                                                                field\n                                                                \n                                                                    \n                                                                                string\n                                                                    \n                                                                \n                                                                \n                                                                        no\n                                                                \n                                                                \n            \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     void\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n            \n\n\n            \n                \n                    \n                        Properties\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                            Public\n                                        asc\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                    asc:     boolean\n            \n                                \n                            \n                                \n                                    \n                                        Type :     boolean\n            \n                                    \n                                \n                                \n                                    \n                                        Default value : true\n                                    \n                                \n                                    \n                                        \n                                                Defined in src/grid/utils/sort-info.ts:2\n                                        \n                                    \n            \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                            Public\n                                        field\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                    field:     string\n            \n                                \n                            \n                                \n                                    \n                                        Type :     string\n            \n                                    \n                                \n                                \n                                    \n                                        Default value : null\n                                    \n                                \n                                    \n                                        \n                                                Defined in src/grid/utils/sort-info.ts:3\n                                        \n                                    \n            \n            \n                        \n                    \n            \n\n    \n\n\n    \n        export class SortInfo {\n  public asc: boolean = true;\n  public field: string = null;\n\n  getAsc(): boolean {\n    return this.asc;\n  }\n\n  setAsc(asc: boolean) {\n    this.asc = asc;\n  }\n\n  getField(): string {\n    return this.field;\n  }\n\n  setField(field: string) {\n    this.field = field;\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ClickListener.html":{"url":"interfaces/ClickListener.html","title":"interface - ClickListener","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ClickListener\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/grid/event/click.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    click\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n                \n                    \n                        Methods\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        click\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            click(event: MouseEvent)\n                                \n                            \n            \n            \n                                    \n                                        \n                                                Defined in src/grid/event/click.interface.ts:3\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                                Type\n                                                            Optional\n                                                        \n                                                    \n                                                    \n                                                            \n                                                                event\n                                                                \n                                                                    \n                                                                                MouseEvent\n                                                                    \n                                                                \n                                                                \n                                                                        no\n                                                                \n                                                                \n            \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     boolean\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n            \n\n\n    \n\n\n    \n        export interface ClickListener {\n\n  click(event: MouseEvent): boolean;\n\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DblClickListener.html":{"url":"interfaces/DblClickListener.html","title":"interface - DblClickListener","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  DblClickListener\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/grid/event/dbl-click.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    dblclick\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n                \n                    \n                        Methods\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        dblclick\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            dblclick(event: MouseEvent)\n                                \n                            \n            \n            \n                                    \n                                        \n                                                Defined in src/grid/event/dbl-click.interface.ts:3\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                                Type\n                                                            Optional\n                                                        \n                                                    \n                                                    \n                                                            \n                                                                event\n                                                                \n                                                                    \n                                                                                MouseEvent\n                                                                    \n                                                                \n                                                                \n                                                                        no\n                                                                \n                                                                \n            \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     boolean\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n            \n\n\n    \n\n\n    \n        export interface DblClickListener {\n\n  dblclick(event: MouseEvent): boolean;\n\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Dictionary.html":{"url":"interfaces/Dictionary.html","title":"interface - Dictionary","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Dictionary\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/grid/model/dictionary.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        display\n                                \n                                \n                                        value\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        display\n                                    \n                                \n                                \n                                    \n                                        display:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n                                    \n                                        \n                                            Defined in src/grid/model/dictionary.interface.ts:3\n                                        \n                                    \n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        value\n                                    \n                                \n                                \n                                    \n                                        value:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n                                    \n                                        \n                                            Defined in src/grid/model/dictionary.interface.ts:2\n                                        \n                                    \n\n                        \n                    \n            \n    \n\n\n    \n        export interface Dictionary {\n  value: string;\n  display: string;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/EmptyConstructor.html":{"url":"interfaces/EmptyConstructor.html","title":"interface - EmptyConstructor","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  EmptyConstructor\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/grid/utils/empty.factory.ts\n        \n\n\n\n\n\n\n    \n\n\n    \n        export class EmptyFactory {\n  constructor(private emptyConstructor: EmptyConstructor) {}\n\n  getInstance(): T {\n    return new this.emptyConstructor();\n  }\n}\n\nexport interface EmptyConstructor {\n  new(): T;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/EventListenerArg.html":{"url":"interfaces/EventListenerArg.html","title":"interface - EventListenerArg","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  EventListenerArg\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/grid/event/event-listener-arg.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        config\n                                \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        config\n                                    \n                                \n                                \n                                    \n                                        config:     any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/grid/event/event-listener-arg.interface.ts:5\n                                        \n                                    \n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     Type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Type\n\n                                        \n                                    \n\n\n\n\n                                    \n                                        \n                                            Defined in src/grid/event/event-listener-arg.interface.ts:4\n                                        \n                                    \n\n                        \n                    \n            \n    \n\n\n    \n        import {Type} from \"@angular/core\";\n\nexport interface EventListenerArg {\n  type: Type;\n  config?: any;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/InjectableConstructor.html":{"url":"interfaces/InjectableConstructor.html","title":"interface - InjectableConstructor","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  InjectableConstructor\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/grid/utils/injectable.factory.ts\n        \n\n\n\n\n\n\n    \n\n\n    \n        import {Injector} from \"@angular/core\";\n\n/**\n * Allows instantiation of any generic type if the type expects an injector argument.  See the implementation of\n * the EventListener.\n */\nexport class InjectableFactory {\n  constructor(private ic: InjectableConstructor, private injector: Injector) {}\n\n  getInstance(): T {\n    return new this.ic(this.injector);\n  }\n}\n\nexport interface InjectableConstructor {\n  new(injector: Injector): T;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MouseDownListener.html":{"url":"interfaces/MouseDownListener.html","title":"interface - MouseDownListener","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  MouseDownListener\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/grid/event/mouse-down.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    mouseDown\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n                \n                    \n                        Methods\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        mouseDown\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            mouseDown(event: MouseEvent)\n                                \n                            \n            \n            \n                                    \n                                        \n                                                Defined in src/grid/event/mouse-down.interface.ts:3\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                                Type\n                                                            Optional\n                                                        \n                                                    \n                                                    \n                                                            \n                                                                event\n                                                                \n                                                                    \n                                                                                MouseEvent\n                                                                    \n                                                                \n                                                                \n                                                                        no\n                                                                \n                                                                \n            \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     boolean\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n            \n\n\n    \n\n\n    \n        export interface MouseDownListener {\n\n  mouseDown(event: MouseEvent): boolean;\n\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MouseDragListener.html":{"url":"interfaces/MouseDragListener.html","title":"interface - MouseDragListener","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  MouseDragListener\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/grid/event/mouse-drag.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    mouseDrag\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n                \n                    \n                        Methods\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        mouseDrag\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            mouseDrag(event: MouseEvent)\n                                \n                            \n            \n            \n                                    \n                                        \n                                                Defined in src/grid/event/mouse-drag.interface.ts:3\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                                Type\n                                                            Optional\n                                                        \n                                                    \n                                                    \n                                                            \n                                                                event\n                                                                \n                                                                    \n                                                                                MouseEvent\n                                                                    \n                                                                \n                                                                \n                                                                        no\n                                                                \n                                                                \n            \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     boolean\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n            \n\n\n    \n\n\n    \n        export interface MouseDragListener {\n\n  mouseDrag(event: MouseEvent): boolean;\n\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MouseOverListener.html":{"url":"interfaces/MouseOverListener.html","title":"interface - MouseOverListener","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  MouseOverListener\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/grid/event/mouse-over.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    mouseOver\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n                \n                    \n                        Methods\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        mouseOver\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            mouseOver(event: MouseEvent)\n                                \n                            \n            \n            \n                                    \n                                        \n                                                Defined in src/grid/event/mouse-over.interface.ts:3\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                                Type\n                                                            Optional\n                                                        \n                                                    \n                                                    \n                                                            \n                                                                event\n                                                                \n                                                                    \n                                                                                MouseEvent\n                                                                    \n                                                                \n                                                                \n                                                                        no\n                                                                \n                                                                \n            \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     boolean\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n            \n\n\n    \n\n\n    \n        export interface MouseOverListener {\n\n  mouseOver(event: MouseEvent): boolean;\n\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MouseUpListener.html":{"url":"interfaces/MouseUpListener.html","title":"interface - MouseUpListener","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  MouseUpListener\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/grid/event/mouse-up.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    mouseUp\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n                \n                    \n                        Methods\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        mouseUp\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            mouseUp(event: MouseEvent)\n                                \n                            \n            \n            \n                                    \n                                        \n                                                Defined in src/grid/event/mouse-up.interface.ts:3\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                                Type\n                                                            Optional\n                                                        \n                                                    \n                                                    \n                                                            \n                                                                event\n                                                                \n                                                                    \n                                                                                MouseEvent\n                                                                    \n                                                                \n                                                                \n                                                                        no\n                                                                \n                                                                \n            \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     boolean\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n            \n\n\n    \n\n\n    \n        export interface MouseUpListener {\n\n  mouseUp(event: MouseEvent): boolean;\n\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ARROW\n                        \n                        \n                            CLICK\n                        \n                        \n                            NO_EVENT\n                        \n                        \n                            RESIZE\n                        \n                        \n                            SCROLL\n                        \n                        \n                            TAB\n                        \n                    \n                \n            \n        \n    \n\n\n    src/grid/services/grid-event.service.ts\n    \n                \n                \n                    \n                        \n                            \n                            \n                                \n                                ARROW\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n                            ARROW:     number\n    \n                        \n                    \n                        \n                            \n                                Type :     number\n    \n                            \n                        \n                        \n                            \n                                Default value : 2\n                            \n                        \n    \n    \n                \n            \n            \n                \n                    \n                        \n                            \n                            \n                                \n                                CLICK\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n                            CLICK:     number\n    \n                        \n                    \n                        \n                            \n                                Type :     number\n    \n                            \n                        \n                        \n                            \n                                Default value : 0\n                            \n                        \n    \n    \n                \n            \n            \n                \n                    \n                        \n                            \n                            \n                                \n                                TAB\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n                            TAB:     number\n    \n                        \n                    \n                        \n                            \n                                Type :     number\n    \n                            \n                        \n                        \n                            \n                                Default value : 1\n                            \n                        \n    \n    \n                \n            \n    \n    src/grid/grid.component.ts\n    \n                \n                \n                    \n                        \n                            \n                            \n                                \n                                NO_EVENT\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n                            NO_EVENT:     number\n    \n                        \n                    \n                        \n                            \n                                Type :     number\n    \n                            \n                        \n                        \n                            \n                                Default value : -1\n                            \n                        \n    \n    \n                \n            \n            \n                \n                    \n                        \n                            \n                            \n                                \n                                RESIZE\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n                            RESIZE:     number\n    \n                        \n                    \n                        \n                            \n                                Type :     number\n    \n                            \n                        \n                        \n                            \n                                Default value : 0\n                            \n                        \n    \n    \n                \n            \n            \n                \n                    \n                        \n                            \n                            \n                                \n                                SCROLL\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n                            SCROLL:     number\n    \n                        \n                    \n                        \n                            \n                                Type :     number\n    \n                            \n                        \n                        \n                            \n                                Default value : 1\n                            \n                        \n    \n    \n                \n            \n    \n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
